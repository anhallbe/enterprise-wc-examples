"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-draggable_ids-draggable_ts"],{

/***/ "./src/components/ids-draggable/get-el-translate-point.ts":
/*!****************************************************************!*\
  !*** ./src/components/ids-draggable/get-el-translate-point.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getElTranslatePoint)\n/* harmony export */ });\nfunction getElTranslatePoint(element) {\n  const style = window.getComputedStyle(element);\n  const matrix = style.transform;\n  if (matrix === \"none\" || !matrix) {\n    return { x: 0, y: 0, z: 0 };\n  }\n  const matrixType = matrix.includes(\"3d\") ? \"3d\" : \"2d\";\n  const matrixValues = matrix.match(/matrix.*\\((.+)\\)/)?.[1]?.split(\", \");\n  if (!matrixValues) {\n    return { x: 0, y: 0, z: 0 };\n  }\n  if (matrixType === \"2d\") {\n    return {\n      x: Number.parseFloat(matrixValues[4]),\n      y: Number.parseFloat(matrixValues[5]),\n      z: 0\n    };\n  }\n  return {\n    x: parseFloat(matrixValues[12]),\n    y: parseFloat(matrixValues[13]),\n    z: parseFloat(matrixValues[14])\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZHJhZ2dhYmxlL2dldC1lbC10cmFuc2xhdGUtcG9pbnQudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQWNlLFNBQVIsb0JBQXFDLFNBQW1CO0FBQzdELFFBQU0sUUFBUSxPQUFPLGlCQUFpQixPQUFPO0FBQzdDLFFBQU0sU0FBUyxNQUFNO0FBR3JCLE1BQUksV0FBVyxVQUFVLENBQUMsUUFBUTtBQUNoQyxXQUFPLEVBQUUsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLEVBQUU7QUFBQSxFQUM1QjtBQUdBLFFBQU0sYUFBYSxPQUFPLFNBQVMsSUFBSSxJQUFJLE9BQU87QUFHbEQsUUFBTSxlQUFlLE9BQU8sTUFBTSxrQkFBa0IsSUFBSSxDQUFDLEdBQUcsTUFBTSxJQUFJO0FBRXRFLE1BQUksQ0FBQyxjQUFjO0FBQ2pCLFdBQU8sRUFBRSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsRUFBRTtBQUFBLEVBQzVCO0FBS0EsTUFBSSxlQUFlLE1BQU07QUFDdkIsV0FBTztBQUFBLE1BQ0wsR0FBRyxPQUFPLFdBQVcsYUFBYSxDQUFDLENBQUM7QUFBQSxNQUNwQyxHQUFHLE9BQU8sV0FBVyxhQUFhLENBQUMsQ0FBQztBQUFBLE1BQ3BDLEdBQUc7QUFBQSxJQUNMO0FBQUEsRUFDRjtBQUlBLFNBQU87QUFBQSxJQUNMLEdBQUcsV0FBVyxhQUFhLEVBQUUsQ0FBQztBQUFBLElBQzlCLEdBQUcsV0FBVyxhQUFhLEVBQUUsQ0FBQztBQUFBLElBQzlCLEdBQUcsV0FBVyxhQUFhLEVBQUUsQ0FBQztBQUFBLEVBQ2hDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kcmFnZ2FibGUvZ2V0LWVsLXRyYW5zbGF0ZS1wb2ludC50cz8xNDA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYgVHJhbnNsYXRpb25Qb2ludFxuICogQHR5cGUge29iamVjdH1cbiAqIEBwcm9wZXJ0eSB7bnVtYmVyfSB4PyB4LW9mZnNldFxuICogQHByb3BlcnR5IHtudW1iZXJ9IHk/IHktb2Zmc2V0XG4gKiBAcHJvcGVydHkge251bWJlcn0gej8gei1vZmZzZXRcbiAqL1xuXG4vKipcbiAqIEdldHMgY29tcHV0ZWQgdHJhbnNsYXRlIHZhbHVlcyBmcm9tIHN0eWxlIHByb3A7IGFkYXB0ZWQgZnJvbTpcbiAqIGh0dHBzOi8vemVsbHdrLmNvbS9ibG9nL2Nzcy10cmFuc2xhdGUtdmFsdWVzLWluLWphdmFzY3JpcHQvXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50IGVsZW1lbnQgdG8gZ3JhYiB0cmFuc2xhdGlvbiBwb2ludCBmcm9tIGl0J3Mgc3R5bGVzIHdpdGhcbiAqIEByZXR1cm5zIHtUcmFuc2xhdGlvblBvaW50fSB0cmFuc2xhdGlvbiBwb2ludCBpZiBhdmFpbGFibGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RWxUcmFuc2xhdGVQb2ludChlbGVtZW50OiBhbnkpOiBhbnkge1xuICBjb25zdCBzdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsZW1lbnQpO1xuICBjb25zdCBtYXRyaXggPSBzdHlsZS50cmFuc2Zvcm07XG5cbiAgLy8gTm8gdHJhbnNmb3JtIHByb3BlcnR5LiBTaW1wbHkgcmV0dXJuIDAgdmFsdWVzLlxuICBpZiAobWF0cml4ID09PSAnbm9uZScgfHwgIW1hdHJpeCkge1xuICAgIHJldHVybiB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcbiAgfVxuXG4gIC8vIENhbiBlaXRoZXIgYmUgMmQgb3IgM2QgdHJhbnNmb3JtXG4gIGNvbnN0IG1hdHJpeFR5cGUgPSBtYXRyaXguaW5jbHVkZXMoJzNkJykgPyAnM2QnIDogJzJkJztcblxuICAvLyB0aGUgZm9sbG93aW5nIGNoZWNrcyBhcmUgbmVlZCBmb3Igbm9uIHN0YW5kYXJkIGVudnMgZS5nLiBKZXN0IG9yIFNTUlxuICBjb25zdCBtYXRyaXhWYWx1ZXMgPSBtYXRyaXgubWF0Y2goL21hdHJpeC4qXFwoKC4rKVxcKS8pPy5bMV0/LnNwbGl0KCcsICcpO1xuXG4gIGlmICghbWF0cml4VmFsdWVzKSB7XG4gICAgcmV0dXJuIHsgeDogMCwgeTogMCwgejogMCB9O1xuICB9XG5cbiAgLy8gMmQgbWF0cmljZXMgaGF2ZSA2IHZhbHVlc1xuICAvLyBMYXN0IDIgdmFsdWVzIGFyZSBYIGFuZCBZLlxuICAvLyAyZCBtYXRyaWNlcyBkb2VzIG5vdCBoYXZlIFogdmFsdWUuXG4gIGlmIChtYXRyaXhUeXBlID09PSAnMmQnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IE51bWJlci5wYXJzZUZsb2F0KG1hdHJpeFZhbHVlc1s0XSksXG4gICAgICB5OiBOdW1iZXIucGFyc2VGbG9hdChtYXRyaXhWYWx1ZXNbNV0pLFxuICAgICAgejogMFxuICAgIH07XG4gIH1cblxuICAvLyAzZCBtYXRyaWNlcyBoYXZlIDE2IHZhbHVlc1xuICAvLyBUaGUgMTN0aCwgMTR0aCwgYW5kIDE1dGggdmFsdWVzIGFyZSBYLCBZLCBhbmQgWlxuICByZXR1cm4ge1xuICAgIHg6IHBhcnNlRmxvYXQobWF0cml4VmFsdWVzWzEyXSksXG4gICAgeTogcGFyc2VGbG9hdChtYXRyaXhWYWx1ZXNbMTNdKSxcbiAgICB6OiBwYXJzZUZsb2F0KG1hdHJpeFZhbHVlc1sxNF0pXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-draggable/get-el-translate-point.ts\n");

/***/ }),

/***/ "./src/components/ids-draggable/ids-draggable.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-draggable/ids-draggable.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsDraggable)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _get_el_translate_point__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./get-el-translate-point */ \"./src/components/ids-draggable/get-el-translate-point.ts\");\n/* harmony import */ var _ids_draggable_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ids-draggable.scss */ \"./src/components/ids-draggable/ids-draggable.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\nconst CURSOR_EL_SIZE = 32;\nlet IdsDraggable = class extends (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_core_ids_element__WEBPACK_IMPORTED_MODULE_4__[\"default\"]) {\n  #relativeBounds = {};\n  constructor() {\n    super();\n  }\n  /**\n   * Return the properties we handle as getters/setters\n   * @returns {Array} The properties in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AXIS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_X,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_Y,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_X,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_Y,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT\n    ];\n  }\n  /**\n   * @returns {string} The template innerHTML to render\n   */\n  template() {\n    return `<slot></slot>`;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.#updateHandleElem();\n    this.#cursorEl.style.position = \"absolute\";\n    this.#cursorEl.style.opacity = 0;\n    this.#cursorEl.style.width = `${CURSOR_EL_SIZE}px`;\n    this.#cursorEl.style.height = `${CURSOR_EL_SIZE}px`;\n    this.#cursorEl.style.cursor = this.#getCursorStyle();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n  }\n  /**\n   * @param {\"x\"|\"y\"|undefined} value The axis that the draggable content will\n   * be moving along (e.g. X => horizontal, Y => vertical);\n   * By default, not defined and supports both axes.\n   */\n  set axis(value) {\n    let nextValue;\n    switch (value) {\n      case \"y\": {\n        nextValue = \"y\";\n        break;\n      }\n      case \"x\": {\n        nextValue = \"x\";\n        break;\n      }\n      default: {\n        nextValue = void 0;\n        break;\n      }\n    }\n    if (nextValue) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AXIS, nextValue);\n      this.isDragging = false;\n      this.#cursorEl.style.cursor = this.#getCursorStyle();\n    } else if (!nextValue && this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AXIS)) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AXIS);\n      this.isDragging = false;\n      this.#cursorEl.style.cursor = this.#getCursorStyle();\n    }\n  }\n  /**\n   * @returns {\"x\"|\"y\"|null} value The axis that the draggable content will\n   * be moving along (e.g. X => horizontal, Y => vertical);\n   * By default not defined and supports both axes.\n   */\n  get axis() {\n    return this.getAttribute(\"axis\");\n  }\n  /**\n   * @param {string | boolean} value Whether the draggable should be limited in range\n   * by its parent element\n   */\n  set parentContainment(value) {\n    const isTruthy = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isTruthy) {\n      if (this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT) !== \"\") {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT, \"\");\n      }\n    } else if (!isTruthy && this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT)) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT);\n    }\n  }\n  /**\n   * @returns {boolean} value Whether the draggable should be limited in range\n   * by its parent element\n   */\n  get parentContainment() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PARENT_CONTAINMENT));\n  }\n  /**\n   * @param {string | boolean} value Whether or not draggable functionality is to be disabled\n   */\n  set disabled(value) {\n    const isTruthy = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isTruthy && this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED) !== \"\") {\n      this.offEvent(\"mousemove\", window.document, this.onMouseMove);\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"\");\n    } else if (!isTruthy && this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED)) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n  }\n  /**\n   * @returns {boolean} value Whether or not draggable functionality is disabled\n   */\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED));\n  }\n  /**\n   * @param {string} value A query selector representing an optional handle that can be used to\n   * drag the content of the draggable\n   */\n  set handle(value) {\n    if (this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE) !== value) {\n      if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE) && !value) {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE);\n      } else if (value) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE, value);\n      }\n      this.#updateHandleElem();\n    }\n  }\n  /**\n   * @returns {string} value A query selector representing an optional handle that can be used to\n   * drag the content of the draggable\n   */\n  get handle() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HANDLE);\n  }\n  #updateHandleElem = () => {\n    this.offEvent(\"mousedown\", this.#handleElem);\n    this.offEvent(\"mouseup\", window.document, this.onMouseUp);\n    this.offEvent(\"mousemove\", window.document, this.onMouseMove);\n    this.#handleElem = this.handle ? document.querySelector(this.handle) || this : this;\n    if (this.#handleElem !== this) {\n      this.#handleElem.style.cursor = this.#getCursorStyle();\n    }\n    this.onEvent(\"mousedown\", this.#handleElem, (e) => {\n      if (this.disabled || e.button !== 0) {\n        return;\n      }\n      e.preventDefault();\n      this.isDragging = true;\n      this.onEvent(\"mouseup\", document, this.onMouseUp);\n      this.onEvent(\"mousemove\", document, this.onMouseMove);\n      if (this.parentContainment) {\n        this.#updateParentRect(e?.path || e?.composedPath?.());\n      }\n      this.#dragStartMousePoint = { x: e.x, y: e.y };\n      const dragOffset = (0,_get_el_translate_point__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this);\n      this.#dragStartOffset = {\n        x: this.axis !== \"y\" ? dragOffset.x : 0,\n        y: this.axis !== \"x\" ? dragOffset.y : 0\n      };\n      this.triggerEvent(\"ids-dragstart\", this, {\n        detail: {\n          mouseX: e.x,\n          mouseY: e.y,\n          translateX: this.#dragStartOffset.x,\n          transitionY: this.#dragStartOffset.y\n        }\n      });\n      const thisRect = this.getBoundingClientRect();\n      this.#dragStartRect = {\n        width: thisRect.width,\n        height: thisRect.height,\n        left: thisRect.left - this.#dragStartOffset.x,\n        right: thisRect.right - this.#dragStartOffset.x,\n        top: thisRect.top - this.#dragStartOffset.y,\n        bottom: thisRect.bottom - this.#dragStartOffset.y\n      };\n      let parentLOffset = 0;\n      let parentROffset = 0;\n      let parentTOffset = 0;\n      let parentBOffset = 0;\n      if (this.#parentRect) {\n        parentLOffset = this.#parentRect.left - this.#dragStartRect.left;\n        parentROffset = this.#parentRect.right - this.#dragStartRect.right;\n        parentTOffset = this.#parentRect.top - this.#dragStartRect.top;\n        parentBOffset = this.#parentRect.bottom - this.#dragStartRect.bottom;\n      }\n      this.#xformBounds = {\n        left: parentLOffset + (this.#relativeBounds.left || 0),\n        right: parentROffset - (this.#relativeBounds.right || 0),\n        top: parentTOffset + (this.#relativeBounds.top || 0),\n        bottom: parentBOffset - (this.#relativeBounds.bottom || 0)\n      };\n      this.#cursorEl.style.pointerEvents = \"all\";\n      (document.body.querySelector(\"ids-container\") || document.body).appendChild(this.#cursorEl);\n    });\n  };\n  /**\n   * sets an optional integer attribute for an element\n   * (may offload as general util; just need to think\n   * through this a bit more)\n   * @param {HTMLElement} elem ids element to update\n   * @param {string} attribute the attribute to update\n   * @param {any} value a value to set on the\n   */\n  #setIntAttribute(elem, attribute, value) {\n    const nextValue = parseInt(value);\n    if (nextValue !== null && !Number.isNaN(nextValue)) {\n      if (parseInt(elem.getAttribute(attribute)) !== nextValue) {\n        elem.setAttribute(attribute, nextValue);\n      }\n    } else if (value === null && elem.hasAttribute(attribute)) {\n      elem.removeAttribute(attribute);\n    }\n  }\n  set minTransformX(value) {\n    this.#setIntAttribute(this, _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_X, value);\n  }\n  get minTransformX() {\n    return parseInt(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_X) ?? \"0\");\n  }\n  set maxTransformX(value) {\n    this.#setIntAttribute(this, _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_X, value);\n  }\n  get maxTransformX() {\n    return parseInt(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_X) ?? \"0\");\n  }\n  set minTransformY(value) {\n    this.#setIntAttribute(this, _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_Y, value);\n  }\n  get minTransformY() {\n    return parseInt(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_Y) ?? \"0\");\n  }\n  get maxTransformY() {\n    return parseInt(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_Y) ?? \"0\");\n  }\n  set maxTransformY(value) {\n    this.#setIntAttribute(this, _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_Y, value);\n  }\n  /**\n   * update the transform with respect to containment\n   * and min/max transform bounds\n   * @param {number} mouseDeltaX mouse delta x\n   * @param {number} mouseDeltaY mouse delta y\n   * @returns {Array} [transformX, transformY]\n   */\n  #updateTransform = (mouseDeltaX, mouseDeltaY) => {\n    let translateX = 0;\n    let translateY = 0;\n    if (this.axis !== \"y\") {\n      translateX = this.#dragStartOffset.x + mouseDeltaX;\n    }\n    if (this.axis !== \"x\") {\n      translateY = this.#dragStartOffset.y + mouseDeltaY;\n    }\n    if (this.parentContainment) {\n      if (this.axis !== \"y\") {\n        translateX = Math.max(this.#xformBounds.left, translateX);\n        translateX = Math.min(this.#xformBounds.right, translateX);\n      }\n      if (this.axis !== \"x\") {\n        translateY = Math.max(this.#xformBounds.top, translateY);\n        translateY = Math.min(this.#xformBounds.bottom, translateY);\n      }\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_X)) {\n      translateX = Math.max(translateX, this.minTransformX);\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_X)) {\n      translateX = Math.min(translateX, this.maxTransformX);\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MIN_TRANSFORM_Y)) {\n      translateY = Math.max(translateY, this.minTransformY);\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX_TRANSFORM_Y)) {\n      translateY = Math.min(translateY, this.maxTransformY);\n    }\n    this.style.setProperty(\n      \"transform\",\n      `translate(${translateX}px, ${translateY}px)`\n    );\n    return [translateX, translateY];\n  };\n  /**\n   * called on mouse move; transforms element for\n   * transition offset and updates cursor overlay\n   * element as necessary\n   * @param {*} e mousemove event\n   */\n  onMouseMove = (e) => {\n    e.preventDefault();\n    const eventDetail = {};\n    if (this.isDragging) {\n      const dragDeltaX = e.x - this.#dragStartMousePoint.x;\n      const dragDeltaY = e.y - this.#dragStartMousePoint.y;\n      const [\n        translateX,\n        translateY\n      ] = this.#updateTransform(dragDeltaX, dragDeltaY);\n      if (this.#parentRect) {\n        eventDetail.parentRect = this.#parentRect;\n      }\n      eventDetail.mouseX = e.x;\n      eventDetail.mouseY = e.y;\n      eventDetail.dragDeltaX = dragDeltaX;\n      eventDetail.dragDeltaY = dragDeltaY;\n      eventDetail.translateX = translateX;\n      eventDetail.translateY = translateY;\n      if (this.#cursorEl) {\n        this.#cursorEl.style.left = `${e.x - CURSOR_EL_SIZE / 2}px`;\n        this.#cursorEl.style.top = `${e.y - CURSOR_EL_SIZE / 2}px`;\n      }\n    }\n    eventDetail.originalEvent = e;\n    this.triggerEvent(\"ids-drag\", this, { detail: eventDetail });\n  };\n  onMouseUp = (e) => {\n    if (this.isDragging) {\n      this.isDragging = false;\n      const translatePoint = (0,_get_el_translate_point__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this);\n      this.triggerEvent(\"ids-dragend\", this, {\n        detail: {\n          mouseX: e.x,\n          mouseY: e.y,\n          dragDeltaX: e.x - this.#dragStartMousePoint.x,\n          dragDeltaY: e.y - this.#dragStartMousePoint.y,\n          translateX: translatePoint.x,\n          translateY: translatePoint.y\n        }\n      });\n      (document.body.querySelector(\"ids-container\") || document.body)?.removeChild(this.#cursorEl);\n    }\n    this.offEvent(\"mousemove\", document, this.onMouseMove);\n    this.offEvent(\"mouseup\", document, this.onMouseUp);\n    this.#cursorEl.style.pointerEvents = \"none\";\n  };\n  /**\n   * @param {string | boolean} value Whether or not this element\n   * and content is being dragged\n   */\n  set isDragging(value) {\n    const isTruthy = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isTruthy && this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING) !== \"\") {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING, \"\");\n    } else if (!isTruthy && this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING)) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING);\n    }\n  }\n  /**\n   * @returns {boolean} value Whether or not this element\n   * and content is being dragged\n   */\n  get isDragging() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DRAGGING));\n  }\n  /**\n   * Get the \"cursor\" property of cursor element\n   * placed in front of drag\n   * @returns {string} cursor property\n   */\n  #getCursorStyle() {\n    switch (this.axis) {\n      case \"x\": {\n        return \"ew-resize\";\n      }\n      case \"y\": {\n        return \"ns-resize\";\n      }\n      default: {\n        return \"move\";\n      }\n    }\n  }\n  /**\n   * Element that is currently draggable;\n   * if \"handle\" becomes it possibly becomes the selected element.\n   *\n   * Otherwise it defaults to the overall draggable container (this)\n   */\n  #handleElem;\n  /**\n   * First measurable parent's rectangle\n   * when a drag is initiated\n   * @type {{ x: number, y: number }}\n   */\n  #parentRect;\n  /**\n   * The point where we start dragging on the mouse\n   * to delta from for current tracking.\n   * @type {{ x: number, y: number }}\n   */\n  #dragStartMousePoint;\n  /**\n   * The transform translation point applied at\n   * the time of a dragstart in order to calculate\n   * delta during drag\n   * @type {{ x: number, y: number }}\n   */\n  #dragStartOffset;\n  /**\n   * The bounding rectangle of this component at the\n   * time of a dragstart offset by translate (so\n   * its original position in the div on start of drag)\n   * @type {{ x: number, y: number }}\n   */\n  #dragStartRect;\n  /**\n   * Rectangle bounds that transform is limited to if drag\n   * is bounded by parent\n   * @type {{ top: number, bottom: number, left: number, right: number }}\n   */\n  #xformBounds;\n  /**\n   * Element which provides cursor for mouse when\n   * dragging after mousedown event since we can\n   * bind to X/Y axes and there's no way to override\n   * the behavior\n   */\n  #cursorEl = document.createElement(\"div\");\n  /**\n   * Update parent rectangle stored in this.#parentRect\n   * @param {*} path path passed by mouse/drag event\n   * to traverse through shadow and lightDOM\n   * @private\n   */\n  #updateParentRect(path) {\n    this.#parentRect = void 0;\n    let pathElemIndex = 0;\n    let pathElem = path[pathElemIndex];\n    let hasTraversedThis = false;\n    let isAtSlotEl = false;\n    let isAtShadowRoot = false;\n    while ((!this.#parentRect || !hasTraversedThis || isAtShadowRoot || isAtSlotEl) && pathElemIndex + 1 < path.length) {\n      if (pathElem === this) {\n        hasTraversedThis = true;\n      }\n      pathElemIndex++;\n      pathElem = path[pathElemIndex];\n      isAtSlotEl = pathElem.tagName === \"SLOT\";\n      isAtShadowRoot = pathElem instanceof ShadowRoot;\n      if (isAtShadowRoot || isAtSlotEl) {\n        continue;\n      }\n      const rect = pathElem?.getBoundingClientRect?.();\n      if (rect?.height !== 0 && rect?.width !== 0) {\n        this.#parentRect = rect;\n      }\n    }\n  }\n  /**\n   * @param {string | number} value The max coordinates relative\n   * to the overall div; e.g. \"left: -20; right: -20\" would extend\n   * the minimum x and maximum x from current container\n   * bounds, or \"top: 10; bottom: 20\" would make the top (upwards\n   * bounds) 10 below the top or 20 below the bottom).\n   */\n  set relativeBounds(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RELATIVE_BOUNDS, String(value));\n      this.#updateRelativeBounds();\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RELATIVE_BOUNDS);\n  }\n  get relativeBounds() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RELATIVE_BOUNDS);\n  }\n  /**\n   * @param {{\n   *  left: number,\n   *  top: number,\n   *  right: number,\n   *  bottom: number\n   * }} bounds rectangle bounds to hash\n   * @returns {string} a hash for bounds in a predictable\n   * order that can be diffed for attribute changes\n   */\n  getBoundsHash(bounds) {\n    return `${bounds?.left || 0}_${bounds?.right || 0}_${bounds?.top || 0}_${bounds?.bottom || 0}`;\n  }\n  #updateRelativeBounds() {\n    const relativeBoundsAttr = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RELATIVE_BOUNDS);\n    const newBounds = Object.fromEntries(relativeBoundsAttr?.split(\";\").map((str) => {\n      const [kStr, vStr] = str?.split?.(\":\");\n      return [kStr, !Number.isNaN(parseInt(vStr)) ? parseInt(vStr) : 0];\n    }) ?? []);\n    if (this.getBoundsHash(newBounds) !== this.getBoundsHash(this.#relativeBounds)) {\n      this.#relativeBounds = newBounds;\n    }\n  }\n};\nIdsDraggable = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-draggable\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_draggable_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n], IdsDraggable);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-draggable/ids-draggable.ts\n");

/***/ }),

/***/ "./src/components/ids-draggable/ids-draggable.scss":
/*!*********************************************************!*\
  !*** ./src/components/ids-draggable/ids-draggable.scss ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `:host(ids-draggable) {\n  height: fit-content;\n  width: fit-content;\n}\n\n:host(ids-draggable:not([handle])) {\n  cursor: move;\n  touch-action: none;\n}\n\n:host(ids-draggable[disabled]:not([handle])) {\n  cursor: inherit;\n}\n\n:host(ids-draggable[axis=x]:not([disabled])) {\n  cursor: ew-resize;\n}\n\n:host(ids-draggable[axis=y]:not([disabled])) {\n  cursor: ns-resize;\n}\n\nids-draggable[is-dragging]:not([handle]) {\n  cursor: grabbing;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZHJhZ2dhYmxlL2lkcy1kcmFnZ2FibGUuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7RUFDRTtFQUNBOzs7QUFHRjtFQUNFO0VBQ0E7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0U7OztBQUdGO0VBQ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kcmFnZ2FibGUvaWRzLWRyYWdnYWJsZS5zY3NzP2Y5MmQiXSwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QoaWRzLWRyYWdnYWJsZSkge1xuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG59XG5cbjpob3N0KGlkcy1kcmFnZ2FibGU6bm90KFtoYW5kbGVdKSkge1xuICBjdXJzb3I6IG1vdmU7XG4gIHRvdWNoLWFjdGlvbjogbm9uZTtcbn1cblxuOmhvc3QoaWRzLWRyYWdnYWJsZVtkaXNhYmxlZF06bm90KFtoYW5kbGVdKSkge1xuICBjdXJzb3I6IGluaGVyaXQ7XG59XG5cbjpob3N0KGlkcy1kcmFnZ2FibGVbYXhpcz0neCddOm5vdChbZGlzYWJsZWRdKSkge1xuICBjdXJzb3I6IGV3LXJlc2l6ZTtcbn1cblxuOmhvc3QoaWRzLWRyYWdnYWJsZVtheGlzPSd5J106bm90KFtkaXNhYmxlZF0pKSB7XG4gIGN1cnNvcjogbnMtcmVzaXplO1xufVxuXG5pZHMtZHJhZ2dhYmxlW2lzLWRyYWdnaW5nXTpub3QoW2hhbmRsZV0pIHtcbiAgY3Vyc29yOiBncmFiYmluZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/ids-draggable/ids-draggable.scss\n");

/***/ })

}]);