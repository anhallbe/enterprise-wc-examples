"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040"],{

/***/ "./src/mixins/ids-attachment-mixin/ids-attachment-mixin.ts":
/*!*****************************************************************!*\
  !*** ./src/mixins/ids-attachment-mixin/ids-attachment-mixin.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_attachment_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n\n\nconst IdsAttachmentMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT\n    ];\n  }\n  /**\n   * Original parent element reference\n   */\n  originalParentElement;\n  /**\n   * Attachment behavior's target element reference\n   */\n  attachmentParentElement;\n  /**\n   * @param {string | null} val CSS selector string representing a target element\n   */\n  set attachment(val) {\n    if (val && val.length) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT, val);\n      this.#setAttachmentParent(val);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT);\n      this.attachmentParentElement = null;\n    }\n  }\n  /**\n   * @returns {string | null} CSS selector string representing a target element\n   */\n  get attachment() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT);\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.originalParentElement = this.parentElement;\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT))\n      this.#setAttachmentParent(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ATTACHMENT));\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.originalParentElement = null;\n    this.attachmentParentElement = null;\n  }\n  #setAttachmentParent(val) {\n    const containerNode = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_1__.getClosestContainerNode)(this);\n    const parentElem = containerNode.querySelector(`${val}`);\n    this.attachmentParentElement = parentElem;\n  }\n  /**\n   * Appends this component to the specified target\n   * @returns {void}\n   */\n  appendToTargetParent() {\n    if (!this.attachmentParentElement)\n      return;\n    this.attachmentParentElement.append(this);\n  }\n  /**\n   * Appends this component to the its original parent element\n   * @returns {void}\n   */\n  appendToOriginalParent() {\n    if (!this.originalParentElement)\n      return;\n    this.originalParentElement.append(this);\n  }\n};\nvar ids_attachment_mixin_default = IdsAttachmentMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1hdHRhY2htZW50LW1peGluL2lkcy1hdHRhY2htZW50LW1peGluLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUUyQjtBQUNhO0FBUXhDLE1BQU0scUJBQXFCLENBQStCLGVBQWtCLGNBQWMsV0FBVztBQUFBLEVBQ25HLGVBQWUsTUFBYTtBQUMxQixVQUFNLEdBQUcsSUFBSTtBQUFBLEVBQ2Y7QUFBQSxFQUVBLFdBQVcsYUFBYTtBQUN0QixXQUFPO0FBQUEsTUFDTCxHQUFJLFdBQW1CO0FBQUEsTUFDdkIsdUVBQXFCO0FBQVYsSUFDYjtBQUFBLEVBQ0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS0EsSUFBSSxXQUFXLEtBQW9CO0FBQ2pDLFFBQUksT0FBTyxJQUFJLFFBQVE7QUFDckIsV0FBSyxhQUFhLHVFQUFxQixFQUFFLEdBQUc7QUFDNUMsV0FBSyxxQkFBcUIsR0FBRztBQUFBLElBQy9CLE9BQU87QUFDTCxXQUFLLGdCQUFnQix1RUFBcUI7QUFDMUMsV0FBSywwQkFBMEI7QUFBQSxJQUNqQztBQUFBLEVBQ0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLElBQUksYUFBNEI7QUFDOUIsV0FBTyxLQUFLLGFBQWEsdUVBQXFCO0FBQUEsRUFDaEQ7QUFBQSxFQUVBLG9CQUFvQjtBQUNsQixVQUFNLG9CQUFvQjtBQUMxQixTQUFLLHdCQUF3QixLQUFLO0FBQ2xDLFFBQUksS0FBSyxhQUFhLHVFQUFxQjtBQUFHLFdBQUsscUJBQXFCLEtBQUssYUFBYSx1RUFBcUIsQ0FBQztBQUFBLEVBQ2xIO0FBQUEsRUFFQSx1QkFBdUI7QUFDckIsVUFBTSx1QkFBdUI7QUFDN0IsU0FBSyx3QkFBd0I7QUFDN0IsU0FBSywwQkFBMEI7QUFBQSxFQUNqQztBQUFBLEVBRUEscUJBQXFCLEtBQTBCO0FBQzdDLFVBQU0sZ0JBQWdCLDJGQUF1QixDQUFDLElBQUk7QUFDbEQsVUFBTSxhQUFhLGNBQWMsY0FBd0MsR0FBRyxLQUFLO0FBQ2pGLFNBQUssMEJBQTBCO0FBQUEsRUFDakM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsdUJBQTZCO0FBQzNCLFFBQUksQ0FBQyxLQUFLO0FBQXlCO0FBQ25DLFNBQUssd0JBQXdCLE9BQU8sSUFBSTtBQUFBLEVBQzFDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLHlCQUErQjtBQUM3QixRQUFJLENBQUMsS0FBSztBQUF1QjtBQUNqQyxTQUFLLHNCQUFzQixPQUFPLElBQUk7QUFBQSxFQUN4QztBQUNGO0FBRUEsSUFBTywrQkFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL21peGlucy9pZHMtYXR0YWNobWVudC1taXhpbi9pZHMtYXR0YWNobWVudC1taXhpbi50cz83ZTA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElkc0Jhc2VDb25zdHJ1Y3RvciB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWVsZW1lbnQnO1xuaW1wb3J0IHsgSWRzUG9wdXBFbGVtZW50UmVmIH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9pZHMtcG9wdXAvaWRzLXBvcHVwLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgZ2V0Q2xvc2VzdENvbnRhaW5lck5vZGUgfSBmcm9tICcuLi8uLi91dGlscy9pZHMtZG9tLXV0aWxzL2lkcy1kb20tdXRpbHMnO1xuXG4vKipcbiAqIEEgbWl4aW4gdGhhdCBhbGxvd3MgZm9yIGl0cyBjb21wb25lbnQgdG8gYXR0YWNoIGl0c2VsZiB0byBhbm90aGVyIERPTSBub2RlIHdoZW4gYSBzcGVjaWZpZWQgY29uZGl0aW9uIG9jY3Vycy5cbiAqIFRoaXMgbWl4aW4gcHJvdmlkZXMgbWV0aG9kcyBmb3IgYXR0YWNoaW5nIHRvIHRoZSBuZXcgbm9kZSwgYW5kIHJlYXR0YWNoaW5nIHRvIHRoZSBvcmlnaW5hbCBub2RlLlxuICogQHBhcmFtIHthbnl9IHN1cGVyY2xhc3MgQWNjZXB0cyBhIHN1cGVyY2xhc3MgYW5kIGNyZWF0ZXMgYSBuZXcgc3ViY2xhc3MgZnJvbSBpdFxuICogQHJldHVybnMge2FueX0gVGhlIGV4dGVuZGVkIG9iamVjdFxuICovXG5jb25zdCBJZHNBdHRhY2htZW50TWl4aW4gPSA8VCBleHRlbmRzIElkc0Jhc2VDb25zdHJ1Y3Rvcj4oc3VwZXJjbGFzczogVCkgPT4gY2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgY29uc3RydWN0b3IoLi4uYXJnczogYW55W10pIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgLi4uKHN1cGVyY2xhc3MgYXMgYW55KS5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5BVFRBQ0hNRU5ULFxuICAgIF07XG4gIH1cblxuICAvKipcbiAgICogT3JpZ2luYWwgcGFyZW50IGVsZW1lbnQgcmVmZXJlbmNlXG4gICAqL1xuICBvcmlnaW5hbFBhcmVudEVsZW1lbnQ/OiBJZHNQb3B1cEVsZW1lbnRSZWY7XG5cbiAgLyoqXG4gICAqIEF0dGFjaG1lbnQgYmVoYXZpb3IncyB0YXJnZXQgZWxlbWVudCByZWZlcmVuY2VcbiAgICovXG4gIGF0dGFjaG1lbnRQYXJlbnRFbGVtZW50PzogSWRzUG9wdXBFbGVtZW50UmVmIHwgbnVsbDtcblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmcgfCBudWxsfSB2YWwgQ1NTIHNlbGVjdG9yIHN0cmluZyByZXByZXNlbnRpbmcgYSB0YXJnZXQgZWxlbWVudFxuICAgKi9cbiAgc2V0IGF0dGFjaG1lbnQodmFsOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgaWYgKHZhbCAmJiB2YWwubGVuZ3RoKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFUVEFDSE1FTlQsIHZhbCk7XG4gICAgICB0aGlzLiNzZXRBdHRhY2htZW50UGFyZW50KHZhbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuQVRUQUNITUVOVCk7XG4gICAgICB0aGlzLmF0dGFjaG1lbnRQYXJlbnRFbGVtZW50ID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge3N0cmluZyB8IG51bGx9IENTUyBzZWxlY3RvciBzdHJpbmcgcmVwcmVzZW50aW5nIGEgdGFyZ2V0IGVsZW1lbnRcbiAgICovXG4gIGdldCBhdHRhY2htZW50KCk6IHN0cmluZyB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFUVEFDSE1FTlQpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMub3JpZ2luYWxQYXJlbnRFbGVtZW50ID0gdGhpcy5wYXJlbnRFbGVtZW50O1xuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGVzLkFUVEFDSE1FTlQpKSB0aGlzLiNzZXRBdHRhY2htZW50UGFyZW50KHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQVRUQUNITUVOVCkpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMub3JpZ2luYWxQYXJlbnRFbGVtZW50ID0gbnVsbDtcbiAgICB0aGlzLmF0dGFjaG1lbnRQYXJlbnRFbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gICNzZXRBdHRhY2htZW50UGFyZW50KHZhbDogc3RyaW5nIHwgbnVsbCk6IHZvaWQge1xuICAgIGNvbnN0IGNvbnRhaW5lck5vZGUgPSBnZXRDbG9zZXN0Q29udGFpbmVyTm9kZSh0aGlzKTtcbiAgICBjb25zdCBwYXJlbnRFbGVtID0gY29udGFpbmVyTm9kZS5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50IHwgU1ZHRWxlbWVudD4oYCR7dmFsfWApO1xuICAgIHRoaXMuYXR0YWNobWVudFBhcmVudEVsZW1lbnQgPSBwYXJlbnRFbGVtO1xuICB9XG5cbiAgLyoqXG4gICAqIEFwcGVuZHMgdGhpcyBjb21wb25lbnQgdG8gdGhlIHNwZWNpZmllZCB0YXJnZXRcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBhcHBlbmRUb1RhcmdldFBhcmVudCgpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMuYXR0YWNobWVudFBhcmVudEVsZW1lbnQpIHJldHVybjtcbiAgICB0aGlzLmF0dGFjaG1lbnRQYXJlbnRFbGVtZW50LmFwcGVuZCh0aGlzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBcHBlbmRzIHRoaXMgY29tcG9uZW50IHRvIHRoZSBpdHMgb3JpZ2luYWwgcGFyZW50IGVsZW1lbnRcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBhcHBlbmRUb09yaWdpbmFsUGFyZW50KCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5vcmlnaW5hbFBhcmVudEVsZW1lbnQpIHJldHVybjtcbiAgICB0aGlzLm9yaWdpbmFsUGFyZW50RWxlbWVudC5hcHBlbmQodGhpcyk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0F0dGFjaG1lbnRNaXhpbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/mixins/ids-attachment-mixin/ids-attachment-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-popup-interactions-mixin/ids-popup-interactions-mixin.ts":
/*!*********************************************************************************!*\
  !*** ./src/mixins/ids-popup-interactions-mixin/ids-popup-interactions-mixin.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_popup_interactions_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n\nconst POPUP_TRIGGER_TYPES = [\n  \"contextmenu\",\n  \"click\",\n  \"custom\",\n  \"hover\",\n  \"immediate\"\n];\nconst POPUP_INTERACTION_EVENT_NAMES = [\n  \"click.trigger\",\n  \"contextmenu.trigger\",\n  \"hoverend.trigger\",\n  \"mouseenter.trigger\",\n  \"mouseleave.trigger\",\n  \"sloped-mouseleave.trigger\"\n];\nconst IdsPopupInteractionsMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n    if (!this.state) {\n      this.state = {};\n    }\n    this.state.triggerType = POPUP_TRIGGER_TYPES[0];\n    this.state.triggerElem = null;\n    this.state.currentTriggerElem = null;\n  }\n  /**\n   * Return the properties we handle as getters/setters\n   * @returns {Array} The properties in an array\n   */\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TARGET,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TRIGGER_TYPE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TRIGGER_ELEM\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.#setInitialState();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.removeTriggerEvents();\n  }\n  #setInitialState() {\n    const targetSelector = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TARGET);\n    const initTarget = targetSelector ? this.parentNode?.querySelector(targetSelector) : null;\n    if (this.popup && initTarget && !this.target) {\n      this.popup.alignTarget = initTarget;\n    }\n    if (this.triggerElem || initTarget) {\n      this.removeTriggerEvents();\n      this.refreshTriggerEvents();\n    }\n  }\n  /**\n   * @property {boolean} hasTriggerEvents true if \"trigger\" events\n   * are currently applied to this component\n   */\n  hasTriggerEvents = false;\n  /**\n   * @property {number} popupDelay duration in miliseconds to delay a `mouseenter` event.\n   *  Used in Popups configured to use the `hover` interaction.\n   */\n  popupDelay = 500;\n  /**\n   * @readonly\n   * @returns {any} reference to the inner Popup component\n   */\n  get popup() {\n    return this.shadowRoot?.querySelector(\"ids-popup\");\n  }\n  /**\n   * @returns {IdsPopupElementRef} reference to a target element, if applicable\n   */\n  get target() {\n    return this.popup?.alignTarget ?? null;\n  }\n  /**\n   * @param {IdsPopupElementRef} val reference to an element, or a string that will be used\n   * as a CSS Selector referencing an element, that the Popupmenu will align against.\n   */\n  set target(val) {\n    if (this.popup && val !== this.popup.alignTarget) {\n      const previousTarget = this.popup.alignTarget;\n      this.removeTriggerEvents();\n      if (typeof val === \"string\") {\n        val = this.parentNode?.querySelector(val) || this.parentNode;\n      }\n      this.popup.alignTarget = val;\n      this.refreshTriggerEvents();\n      if (typeof this.onTargetChange === \"function\")\n        this.onTargetChange(previousTarget, val);\n    }\n  }\n  /**\n   * @returns {string} the type of action that will trigger this Popupmenu\n   */\n  get triggerType() {\n    return this.state.triggerType;\n  }\n  /**\n   * @param {string} val a valid trigger type\n   */\n  set triggerType(val) {\n    const current = this.state.triggerType;\n    let trueTriggerType = val;\n    if (!POPUP_TRIGGER_TYPES.includes(val)) {\n      trueTriggerType = POPUP_TRIGGER_TYPES[0];\n    }\n    if (current !== trueTriggerType) {\n      this.removeTriggerEvents();\n      this.state.triggerType = trueTriggerType;\n      this.refreshTriggerEvents();\n    }\n  }\n  /**\n   * Gets the alternatively-defined triggering element, if applicable\n   * @returns {IdsPopupElementRef} reference to an optional trigger element, if one is set\n   */\n  get triggerElem() {\n    return this.state.triggerElem;\n  }\n  /**\n   * @param {string} val a valid trigger type\n   */\n  set triggerElem(val) {\n    if (typeof val === \"string\") {\n      const trueTriggerElem = this.parentNode?.querySelector(val);\n      if (trueTriggerElem) {\n        this.removeTriggerEvents();\n        this.state.triggerElem = trueTriggerElem;\n        this.refreshTriggerEvents();\n      }\n    }\n  }\n  /**\n   * Causes events related to the Popupmenu's \"trigger\" style to be unbound/rebound\n   */\n  refreshTriggerEvents() {\n    if (this.hasTriggerEvents || !this.popup) {\n      return;\n    }\n    const targetElem = this.triggerElem || this.target || window;\n    this.state.currentTriggerElem = targetElem;\n    switch (this.state.triggerType) {\n      case \"click\":\n        if (targetElem.id && !(targetElem instanceof Window)) {\n          targetElem.setAttribute(\"aria-controls\", `${this.id}`);\n        }\n        this.offEvent(\"click.trigger\");\n        this.onEvent(\"click.trigger\", targetElem, (e) => {\n          if (typeof this.onTriggerClick === \"function\") {\n            return this.onTriggerClick(e);\n          }\n          return true;\n        });\n        break;\n      case \"contextmenu\":\n        if (this.parentMenu) {\n          break;\n        }\n        this.onEvent(\"contextmenu.trigger\", targetElem, (e) => {\n          if (typeof this.onContextMenu === \"function\") {\n            this.onContextMenu(e);\n          }\n        });\n        break;\n      case \"hover\":\n        this.onEvent(\"hoverend.trigger\", targetElem, (e) => {\n          if (typeof this.onTriggerHover === \"function\") {\n            this.onTriggerHover(e);\n          }\n        }, { delay: this.popupDelay });\n        this.onEvent(\"sloped-mouseleave.trigger\", targetElem, (e) => {\n          if (typeof this.onCancelTriggerHover === \"function\") {\n            this.onCancelTriggerHover(e);\n          }\n        }, { delay: this.popupDelay });\n        this.onEvent(\"click.trigger\", targetElem, (e) => {\n          if (typeof this.onTriggerHoverClick === \"function\") {\n            this.onTriggerHoverClick(e);\n          }\n        });\n        break;\n      case \"immediate\":\n        if (typeof this.onTriggerImmediate === \"function\") {\n          this.onTriggerImmediate();\n        }\n        break;\n      case \"custom\":\n        break;\n      default:\n        break;\n    }\n    this.hasTriggerEvents = true;\n  }\n  /**\n   * Removes any pre-existing trigger events\n   * @returns {void}\n   */\n  removeTriggerEvents() {\n    this.currentTargetElem?.removeAttribute(\"aria-controls\");\n    POPUP_INTERACTION_EVENT_NAMES.forEach((eventName) => {\n      this.detachEventsByName(eventName);\n    });\n    this.hasTriggerEvents = false;\n  }\n};\nvar ids_popup_interactions_mixin_default = IdsPopupInteractionsMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1wb3B1cC1pbnRlcmFjdGlvbnMtbWl4aW4vaWRzLXBvcHVwLWludGVyYWN0aW9ucy1taXhpbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQjtBQU0zQixNQUFNLHNCQUFzQjtBQUFBLEVBQzFCO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNGO0FBRUEsTUFBTSxnQ0FBZ0M7QUFBQSxFQUNwQztBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQ0Y7QUEyQkEsTUFBTSw0QkFBNEIsQ0FBd0IsZUFBa0IsY0FBYyxXQUFXO0FBQUEsRUFDbkcsZUFBZSxNQUFhO0FBQzFCLFVBQU0sR0FBRyxJQUFJO0FBRWIsUUFBSSxDQUFDLEtBQUssT0FBTztBQUNmLFdBQUssUUFBUSxDQUFDO0FBQUEsSUFDaEI7QUFDQSxTQUFLLE1BQU0sY0FBYyxvQkFBb0IsQ0FBQztBQUM5QyxTQUFLLE1BQU0sY0FBYztBQUN6QixTQUFLLE1BQU0scUJBQXFCO0FBQUEsRUFDbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUksV0FBbUI7QUFBQSxNQUN2QixtRUFBaUI7QUFBTixNQUNYLHlFQUF1QjtBQUFaLE1BQ1gseUVBQXVCO0FBQVosSUFDYjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLG9CQUFvQjtBQUNsQixVQUFNLG9CQUFvQjtBQUMxQixTQUFLLGlCQUFpQjtBQUFBLEVBQ3hCO0FBQUEsRUFFQSx1QkFBdUI7QUFDckIsVUFBTSx1QkFBdUI7QUFDN0IsU0FBSyxvQkFBb0I7QUFBQSxFQUMzQjtBQUFBLEVBRUEsbUJBQW1CO0FBQ2pCLFVBQU0saUJBQWlCLEtBQUssYUFBYSxtRUFBaUI7QUFDMUQsVUFBTSxhQUFhLGlCQUFpQixLQUFLLFlBQVksY0FBMkIsY0FBYyxJQUFJO0FBRWxHLFFBQUksS0FBSyxTQUFTLGNB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Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9taXhpbnMvaWRzLXBvcHVwLWludGVyYWN0aW9ucy1taXhpbi9pZHMtcG9wdXAtaW50ZXJhY3Rpb25zLW1peGluLnRzPzM2NGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHR5cGUgeyBJZHNQb3B1cEVsZW1lbnRSZWYgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2lkcy1wb3B1cC9pZHMtcG9wdXAtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNDb25zdHJ1Y3RvciB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWVsZW1lbnQnO1xuaW1wb3J0IHsgRXZlbnRzTWl4aW5JbnRlcmZhY2UgfSBmcm9tICcuLi9pZHMtZXZlbnRzLW1peGluL2lkcy1ldmVudHMtbWl4aW4nO1xuaW1wb3J0IElkc1BvcHVwIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvaWRzLXBvcHVwL2lkcy1wb3B1cCc7XG5cbmNvbnN0IFBPUFVQX1RSSUdHRVJfVFlQRVMgPSBbXG4gICdjb250ZXh0bWVudScsXG4gICdjbGljaycsXG4gICdjdXN0b20nLFxuICAnaG92ZXInLFxuICAnaW1tZWRpYXRlJ1xuXTtcblxuY29uc3QgUE9QVVBfSU5URVJBQ1RJT05fRVZFTlRfTkFNRVMgPSBbXG4gICdjbGljay50cmlnZ2VyJyxcbiAgJ2NvbnRleHRtZW51LnRyaWdnZXInLFxuICAnaG92ZXJlbmQudHJpZ2dlcicsXG4gICdtb3VzZWVudGVyLnRyaWdnZXInLFxuICAnbW91c2VsZWF2ZS50cmlnZ2VyJyxcbiAgJ3Nsb3BlZC1tb3VzZWxlYXZlLnRyaWdnZXInXG5dO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBvcHVwSW50ZXJhY3Rpb25zQ2FsbGJhY2tzIHtcbiAgb25UYXJnZXRDaGFuZ2U/KG9sZFRhcmdldDogSWRzUG9wdXBFbGVtZW50UmVmLCBuZXdUYXJnZXQ6IElkc1BvcHVwRWxlbWVudFJlZik6IHZvaWQ7XG4gIG9uVHJpZ2dlckNsaWNrPyhlOiBFdmVudCk6IHZvaWQ7XG4gIG9uQ29udGV4dE1lbnU/KGU6IEV2ZW50KTogdm9pZDtcbiAgb25UcmlnZ2VySG92ZXI/KGU6IEV2ZW50KTogdm9pZDtcbiAgb25DYW5jZWxUcmlnZ2VySG92ZXI/KGU6IEV2ZW50KTogdm9pZDtcbiAgb25UcmlnZ2VySG92ZXJDbGljaz8oZTogRXZlbnQpOiB2b2lkO1xuICBvblRyaWdnZXJJbW1lZGlhdGU/KCk6IHZvaWQ7XG59XG4vKlxuZXhwb3J0IGludGVyZmFjZSBQb3B1cEludGVyYWN0aW9uc1Byb3BzIHtcbiAgcG9wdXA/OiBJZHNQb3B1cCB8IHVuZGVmaW5lZCB8IG51bGw7XG4gIHRhcmdldD86IElkc1BvcHVwRWxlbWVudFJlZjtcbn1cbiovXG5cbnR5cGUgQ29uc3RyYWludHMgPSBJZHNDb25zdHJ1Y3RvcjxFdmVudHNNaXhpbkludGVyZmFjZSAmIFBvcHVwSW50ZXJhY3Rpb25zQ2FsbGJhY2tzPjtcblxuLyoqXG4gKiBUaGlzIG1peGluIGNhbiBiZSB1c2VkIGluIGNvbXBvbmVudHMgdGhhdCB3cmFwIGFuIGlubmVyIElkc1BvcHVwIGNvbXBvbmVudCB0byBwcm92aWRlOlxuICogLSBFdmVudCBoYW5kbGluZyBmb3IuXG4gKiBAbWl4aW4gSWRzUG9wdXBJbnRlcmFjdGlvbnNNaXhpblxuICogQHBhcmFtIHthbnl9IHN1cGVyY2xhc3MgQWNjZXB0cyBhIHN1cGVyY2xhc3MgYW5kIGNyZWF0ZXMgYSBuZXcgc3ViY2xhc3MgZnJvbSBpdFxuICogQHJldHVybnMge2FueX0gVGhlIGV4dGVuZGVkIG9iamVjdFxuICovXG5jb25zdCBJZHNQb3B1cEludGVyYWN0aW9uc01peGluID0gPFQgZXh0ZW5kcyBDb25zdHJhaW50cz4oc3VwZXJjbGFzczogVCkgPT4gY2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgY29uc3RydWN0b3IoLi4uYXJnczogYW55W10pIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIGlmICghdGhpcy5zdGF0ZSkge1xuICAgICAgdGhpcy5zdGF0ZSA9IHt9O1xuICAgIH1cbiAgICB0aGlzLnN0YXRlLnRyaWdnZXJUeXBlID0gUE9QVVBfVFJJR0dFUl9UWVBFU1swXTtcbiAgICB0aGlzLnN0YXRlLnRyaWdnZXJFbGVtID0gbnVsbDtcbiAgICB0aGlzLnN0YXRlLmN1cnJlbnRUcmlnZ2VyRWxlbSA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJuIHRoZSBwcm9wZXJ0aWVzIHdlIGhhbmRsZSBhcyBnZXR0ZXJzL3NldHRlcnNcbiAgICogQHJldHVybnMge0FycmF5fSBUaGUgcHJvcGVydGllcyBpbiBhbiBhcnJheVxuICAgKi9cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi4oc3VwZXJjbGFzcyBhcyBhbnkpLmF0dHJpYnV0ZXMsXG4gICAgICBhdHRyaWJ1dGVzLlRBUkdFVCxcbiAgICAgIGF0dHJpYnV0ZXMuVFJJR0dFUl9UWVBFLFxuICAgICAgYXR0cmlidXRlcy5UUklHR0VSX0VMRU1cbiAgICBdO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMuI3NldEluaXRpYWxTdGF0ZSgpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMucmVtb3ZlVHJpZ2dlckV2ZW50cygpO1xuICB9XG5cbiAgI3NldEluaXRpYWxTdGF0ZSgpIHtcbiAgICBjb25zdCB0YXJnZXRTZWxlY3RvciA9IHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVEFSR0VUKTtcbiAgICBjb25zdCBpbml0VGFyZ2V0ID0gdGFyZ2V0U2VsZWN0b3IgPyB0aGlzLnBhcmVudE5vZGU/LnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KHRhcmdldFNlbGVjdG9yKSA6IG51bGw7XG5cbiAgICBpZiAodGhpcy5wb3B1cCAmJiBpbml0VGFyZ2V0ICYmICF0aGlzLnRhcmdldCkge1xuICAgICAgdGhpcy5wb3B1cC5hbGlnblRhcmdldCA9IGluaXRUYXJnZXQ7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudHJpZ2dlckVsZW0gfHwgaW5pdFRhcmdldCkge1xuICAgICAgdGhpcy5yZW1vdmVUcmlnZ2VyRXZlbnRzKCk7XG4gICAgICB0aGlzLnJlZnJlc2hUcmlnZ2VyRXZlbnRzKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaGFzVHJpZ2dlckV2ZW50cyB0cnVlIGlmIFwidHJpZ2dlclwiIGV2ZW50c1xuICAgKiBhcmUgY3VycmVudGx5IGFwcGxpZWQgdG8gdGhpcyBjb21wb25lbnRcbiAgICovXG4gIGhhc1RyaWdnZXJFdmVudHMgPSBmYWxzZTtcblxuICAvKipcbiAgICogQHByb3BlcnR5IHtudW1iZXJ9IHBvcHVwRGVsYXkgZHVyYXRpb24gaW4gbWlsaXNlY29uZHMgdG8gZGVsYXkgYSBgbW91c2VlbnRlcmAgZXZlbnQuXG4gICAqICBVc2VkIGluIFBvcHVwcyBjb25maWd1cmVkIHRvIHVzZSB0aGUgYGhvdmVyYCBpbnRlcmFjdGlvbi5cbiAgICovXG4gIHBvcHVwRGVsYXkgPSA1MDA7XG5cbiAgLyoqXG4gICAqIEByZWFkb25seVxuICAgKiBAcmV0dXJucyB7YW55fSByZWZlcmVuY2UgdG8gdGhlIGlubmVyIFBvcHVwIGNvbXBvbmVudFxuICAgKi9cbiAgZ2V0IHBvcHVwKCk6IElkc1BvcHVwIHwgdW5kZWZpbmVkIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcjxJZHNQb3B1cD4oJ2lkcy1wb3B1cCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtJZHNQb3B1cEVsZW1lbnRSZWZ9IHJlZmVyZW5jZSB0byBhIHRhcmdldCBlbGVtZW50LCBpZiBhcHBsaWNhYmxlXG4gICAqL1xuICBnZXQgdGFyZ2V0KCk6IElkc1BvcHVwRWxlbWVudFJlZiB7XG4gICAgcmV0dXJuIHRoaXMucG9wdXA/LmFsaWduVGFyZ2V0ID8/IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtJZHNQb3B1cEVsZW1lbnRSZWZ9IHZhbCByZWZlcmVuY2UgdG8gYW4gZWxlbWVudCwgb3IgYSBzdHJpbmcgdGhhdCB3aWxsIGJlIHVzZWRcbiAgICogYXMgYSBDU1MgU2VsZWN0b3IgcmVmZXJlbmNpbmcgYW4gZWxlbWVudCwgdGhhdCB0aGUgUG9wdXBtZW51IHdpbGwgYWxpZ24gYWdhaW5zdC5cbiAgICovXG4gIHNldCB0YXJnZXQodmFsOiBJZHNQb3B1cEVsZW1lbnRSZWYgfCBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5wb3B1cCAmJiB2YWwgIT09IHRoaXMucG9wdXAuYWxpZ25UYXJnZXQpIHtcbiAgICAgIGNvbnN0IHByZXZpb3VzVGFyZ2V0ID0gdGhpcy5wb3B1cC5hbGlnblRhcmdldDtcbiAgICAgIHRoaXMucmVtb3ZlVHJpZ2dlckV2ZW50cygpO1xuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhbCA9IHRoaXMucGFyZW50Tm9kZT8ucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4odmFsKSB8fCB0aGlzLnBhcmVudE5vZGUgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICB9XG4gICAgICB0aGlzLnBvcHVwLmFsaWduVGFyZ2V0ID0gdmFsO1xuICAgICAgdGhpcy5yZWZyZXNoVHJpZ2dlckV2ZW50cygpO1xuXG4gICAgICBpZiAodHlwZW9mIHRoaXMub25UYXJnZXRDaGFuZ2UgPT09ICdmdW5jdGlvbicpIHRoaXMub25UYXJnZXRDaGFuZ2UocHJldmlvdXNUYXJnZXQsIHZhbCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IHRoZSB0eXBlIG9mIGFjdGlvbiB0aGF0IHdpbGwgdHJpZ2dlciB0aGlzIFBvcHVwbWVudVxuICAgKi9cbiAgZ2V0IHRyaWdnZXJUeXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuc3RhdGUudHJpZ2dlclR5cGU7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbCBhIHZhbGlkIHRyaWdnZXIgdHlwZVxuICAgKi9cbiAgc2V0IHRyaWdnZXJUeXBlKHZhbDogc3RyaW5nKSB7XG4gICAgY29uc3QgY3VycmVudCA9IHRoaXMuc3RhdGUudHJpZ2dlclR5cGU7XG4gICAgbGV0IHRydWVUcmlnZ2VyVHlwZSA9IHZhbDtcbiAgICBpZiAoIVBPUFVQX1RSSUdHRVJfVFlQRVMuaW5jbHVkZXModmFsIGFzIHN0cmluZykpIHtcbiAgICAgIHRydWVUcmlnZ2VyVHlwZSA9IFBPUFVQX1RSSUdHRVJfVFlQRVNbMF07XG4gICAgfVxuICAgIGlmIChjdXJyZW50ICE9PSB0cnVlVHJpZ2dlclR5cGUpIHtcbiAgICAgIHRoaXMucmVtb3ZlVHJpZ2dlckV2ZW50cygpO1xuICAgICAgdGhpcy5zdGF0ZS50cmlnZ2VyVHlwZSA9IHRydWVUcmlnZ2VyVHlwZTtcbiAgICAgIHRoaXMucmVmcmVzaFRyaWdnZXJFdmVudHMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0cyB0aGUgYWx0ZXJuYXRpdmVseS1kZWZpbmVkIHRyaWdnZXJpbmcgZWxlbWVudCwgaWYgYXBwbGljYWJsZVxuICAgKiBAcmV0dXJucyB7SWRzUG9wdXBFbGVtZW50UmVmfSByZWZlcmVuY2UgdG8gYW4gb3B0aW9uYWwgdHJpZ2dlciBlbGVtZW50LCBpZiBvbmUgaXMgc2V0XG4gICAqL1xuICBnZXQgdHJpZ2dlckVsZW0oKTogSWRzUG9wdXBFbGVtZW50UmVmIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS50cmlnZ2VyRWxlbTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsIGEgdmFsaWQgdHJpZ2dlciB0eXBlXG4gICAqL1xuICBzZXQgdHJpZ2dlckVsZW0odmFsOiBJZHNQb3B1cEVsZW1lbnRSZWYgfCBzdHJpbmcpIHtcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnN0IHRydWVUcmlnZ2VyRWxlbSA9IHRoaXMucGFyZW50Tm9kZT8ucXVlcnlTZWxlY3Rvcih2YWwpO1xuICAgICAgaWYgKHRydWVUcmlnZ2VyRWxlbSkge1xuICAgICAgICB0aGlzLnJlbW92ZVRyaWdnZXJFdmVudHMoKTtcbiAgICAgICAgdGhpcy5zdGF0ZS50cmlnZ2VyRWxlbSA9IHRydWVUcmlnZ2VyRWxlbTtcbiAgICAgICAgdGhpcy5yZWZyZXNoVHJpZ2dlckV2ZW50cygpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDYXVzZXMgZXZlbnRzIHJlbGF0ZWQgdG8gdGhlIFBvcHVwbWVudSdzIFwidHJpZ2dlclwiIHN0eWxlIHRvIGJlIHVuYm91bmQvcmVib3VuZFxuICAgKi9cbiAgcmVmcmVzaFRyaWdnZXJFdmVudHMoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaGFzVHJpZ2dlckV2ZW50cyB8fCAhdGhpcy5wb3B1cCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIE9yZGVyIG9mIGltcG9ydGFuY2UgZm9yIHRhcmdldCBlbGVtZW50czpcbiAgICAvLyAtIGB0cmlnZ2VyRWxlbWA6IHVzZXIgZGVmaW5lZCBhcyB0aGUgZWxlbWVudCB0aGF0IHNob3VsZCB0cmlnZ2VyIHRoZSBwb3B1cC5cbiAgICAvLyAgIFRoaXMgaXMgb25seSBkZWZpbmVkIHdoZW4gdGhlIHRyaWdnZXJpbmcgZWxlbWVudCBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgYWxpZ25tZW50IHRhcmdldC5cbiAgICAvLyAtIGB0YXJnZXRgOiB1c2VkIGZvciBQb3B1cCBwb3NpdGlvbmluZyB3aGVuIGFsaWduZWQgYWdhaW5zdCBhIFwicGFyZW50XCIgZWxlbWVudCwgY2FuIGFsc28gYmUgdGhlIHRyaWdnZXJpbmcgZWxlbWVudC5cbiAgICAvLyAtIGB3aW5kb3dgOiBkZWZhdWx0LCBnZW5lcmFsbHkgdXNlZCBmb3IgY29vcmRpbmF0ZS1iYXNlZCBwbGFjZW1lbnQgb3IgYGNvbnRleHRtZW51YCBldmVudHMuXG4gICAgY29uc3QgdGFyZ2V0RWxlbTogSFRNTEVsZW1lbnQgfCBXaW5kb3cgPSAodGhpcy50cmlnZ2VyRWxlbSBhcyBIVE1MRWxlbWVudCkgfHwgdGhpcy50YXJnZXQgfHwgd2luZG93O1xuICAgIHRoaXMuc3RhdGUuY3VycmVudFRyaWdnZXJFbGVtID0gdGFyZ2V0RWxlbTtcblxuICAgIC8vIEJhc2VkIG9uIHRoZSB0cmlnZ2VyIHR5cGUsIGJpbmQgbmV3IGV2ZW50c1xuICAgIHN3aXRjaCAodGhpcy5zdGF0ZS50cmlnZ2VyVHlwZSkge1xuICAgICAgY2FzZSAnY2xpY2snOlxuICAgICAgICAvLyBBbm5vdW5jZSBQb3B1cCBjb250cm9sIHdpdGggYGFyaWEtY29udHJvbHNgIG9uIHRoZSB0YXJnZXRcbiAgICAgICAgaWYgKHRhcmdldEVsZW0uaWQgJiYgISh0YXJnZXRFbGVtIGluc3RhbmNlb2YgV2luZG93KSkge1xuICAgICAgICAgIHRhcmdldEVsZW0uc2V0QXR0cmlidXRlKCdhcmlhLWNvbnRyb2xzJywgYCR7dGhpcy5pZH1gKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9wZW4vQ2xvc2UgdGhlIG1lbnUgd2hlbiB0aGUgdHJpZ2dlciBlbGVtZW50IGlzIGNsaWNrZWRcbiAgICAgICAgdGhpcy5vZmZFdmVudCgnY2xpY2sudHJpZ2dlcicpO1xuICAgICAgICB0aGlzLm9uRXZlbnQoJ2NsaWNrLnRyaWdnZXInLCB0YXJnZXRFbGVtLCAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIHRoaXMub25UcmlnZ2VyQ2xpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9uVHJpZ2dlckNsaWNrKGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjb250ZXh0bWVudSc6XG4gICAgICAgIC8vIFN0YW5kYXJkIGBjb250ZXh0bWVudWAgZXZlbnQgYmVoYXZpb3IuXG4gICAgICAgIC8vIGBjb250ZXh0bWVudWAgZXZlbnRzIHNob3VsZCBvbmx5IGFwcGx5IHRvIHRvcC1sZXZlbCBQb3B1cCBNZW51IGNvbXBvbmVudHMuXG4gICAgICAgIC8vIChzdWJtZW51cyBvcGVuL2Nsb3NlIGV2ZW50cyBhcmUgaGFuZGxlZCBieSB0aGVpciBwYXJlbnQgaXRlbXMpXG4gICAgICAgIGlmICgodGhpcyBhcyBhbnkpLnBhcmVudE1lbnUpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEF0dGFjaCBhIGNvbnRleHRtZW51IGhhbmRsZXIgdG8gdGhlIHRhcmdldCBlbGVtZW50IGZvciBvcGVuaW5nIHRoZSBwb3B1cFxuICAgICAgICB0aGlzLm9uRXZlbnQoJ2NvbnRleHRtZW51LnRyaWdnZXInLCB0YXJnZXRFbGVtLCAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIHRoaXMub25Db250ZXh0TWVudSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5vbkNvbnRleHRNZW51KGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaG92ZXInOlxuICAgICAgICB0aGlzLm9uRXZlbnQoJ2hvdmVyZW5kLnRyaWdnZXInLCB0YXJnZXRFbGVtLCAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgICBpZiAodHlwZW9mIHRoaXMub25UcmlnZ2VySG92ZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMub25UcmlnZ2VySG92ZXIoZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCB7IGRlbGF5OiB0aGlzLnBvcHVwRGVsYXkgfSk7XG4gICAgICAgIHRoaXMub25FdmVudCgnc2xvcGVkLW1vdXNlbGVhdmUudHJpZ2dlcicsIHRhcmdldEVsZW0sIChlOiBFdmVudCkgPT4ge1xuICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5vbkNhbmNlbFRyaWdnZXJIb3ZlciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdGhpcy5vbkNhbmNlbFRyaWdnZXJIb3ZlcihlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHsgZGVsYXk6IHRoaXMucG9wdXBEZWxheSB9KTtcbiAgICAgICAgdGhpcy5vbkV2ZW50KCdjbGljay50cmlnZ2VyJywgdGFyZ2V0RWxlbSwgKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm9uVHJpZ2dlckhvdmVyQ2xpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMub25UcmlnZ2VySG92ZXJDbGljayhlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2ltbWVkaWF0ZSc6XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vblRyaWdnZXJJbW1lZGlhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICB0aGlzLm9uVHJpZ2dlckltbWVkaWF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY3VzdG9tJzpcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICB0aGlzLmhhc1RyaWdnZXJFdmVudHMgPSB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgYW55IHByZS1leGlzdGluZyB0cmlnZ2VyIGV2ZW50c1xuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIHJlbW92ZVRyaWdnZXJFdmVudHMoKSB7XG4gICAgKHRoaXMgYXMgYW55KS5jdXJyZW50VGFyZ2V0RWxlbT8ucmVtb3ZlQXR0cmlidXRlKCdhcmlhLWNvbnRyb2xzJyk7XG4gICAgUE9QVVBfSU5URVJBQ1RJT05fRVZFTlRfTkFNRVMuZm9yRWFjaCgoZXZlbnROYW1lKSA9PiB7XG4gICAgICB0aGlzLmRldGFjaEV2ZW50c0J5TmFtZShldmVudE5hbWUpO1xuICAgIH0pO1xuICAgIHRoaXMuaGFzVHJpZ2dlckV2ZW50cyA9IGZhbHNlO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJZHNQb3B1cEludGVyYWN0aW9uc01peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-popup-interactions-mixin/ids-popup-interactions-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-popup-open-events-mixin/ids-popup-open-events-mixin.ts":
/*!*******************************************************************************!*\
  !*** ./src/mixins/ids-popup-open-events-mixin/ids-popup-open-events-mixin.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_popup_open_events_mixin_default)\n/* harmony export */ });\nconst IdsPopupOpenEventsMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [...superclass.attributes];\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.removeOpenEvents();\n    this.popupOpenEventsTarget = null;\n  }\n  /**\n   * @property {boolean} hasOpenEvents true if \"open\" events are currently applied to this component\n   */\n  hasOpenEvents = false;\n  /**\n   * @property {IdsPopupElementRef} popupOpenEventsTarget receives the top-level event listener\n   *  that will cause the `onOutsideClick` callback to fire\n   */\n  popupOpenEventsTarget = document.body;\n  /**\n   * @property {IdsPopupElementRef} currentPopupOpenEventsTarget stores a reference to the event\n   *  target to be used for unbinding events (prevents memory leaks if the\n   *  event target changes while the Popup is open)\n   */\n  #currentPopupOpenEventsTarget = null;\n  /**\n   * Attaches some events when the Popupmenu is opened.\n   * Call this method from inside your extended component whenever \"open\" events should be applied.\n   * @returns {void}\n   */\n  addOpenEvents() {\n    window.requestAnimationFrame(() => {\n      this.onEvent(\"click.toplevel\", this.popupOpenEventsTarget, (e) => {\n        this.onOutsideClick?.(e);\n      });\n      this.hasOpenEvents = true;\n      this.#currentPopupOpenEventsTarget = this.popupOpenEventsTarget;\n    });\n  }\n  /**\n   * Detaches some events when the Popupmenu is closed.\n   * Call this method from inside your extended component whenever \"open\" events should be removed.\n   * @returns {void}\n   */\n  removeOpenEvents() {\n    if (!this.hasOpenEvents) {\n      return;\n    }\n    this.offEvent(\"click.toplevel\", this.#currentPopupOpenEventsTarget);\n    this.hasOpenEvents = false;\n    this.#currentPopupOpenEventsTarget = null;\n  }\n};\nvar ids_popup_open_events_mixin_default = IdsPopupOpenEventsMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1wb3B1cC1vcGVuLWV2ZW50cy1taXhpbi9pZHMtcG9wdXAtb3Blbi1ldmVudHMtbWl4aW4udHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQWlCQSxNQUFNLDBCQUEwQixDQUF3QixlQUFrQixjQUFjLFdBQVc7QUFBQSxFQUNqRyxlQUFlLE1BQWE7QUFDMUIsVUFBTSxHQUFHLElBQUk7QUFBQSxFQUNmO0FBQUEsRUFFQSxXQUFXLGFBQWE7QUFDdEIsV0FBTyxDQUFDLEdBQUksV0FBbUIsVUFBVTtBQUFBLEVBQzNDO0FBQUEsRUFFQSx1QkFBdUI7QUFDckIsVUFBTSx1QkFBdUI7QUFDN0IsU0FBSyxpQkFBaUI7QUFDdEIsU0FBSyx3QkFBd0I7QUFBQSxFQUMvQjtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS0EsZ0JBQWdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1oQix3QkFBNEMsU0FBUztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU9yRCxnQ0FBb0Q7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFPcEQsZ0JBQWdCO0FBQ2QsV0FBTyxzQkFBc0IsTUFBTTtBQUdqQyxXQUFLLFFBQVEsa0JBQWtCLEtBQUssdUJBQXVCLENBQUMsTUFBYTtBQUN2RSxhQUFLLGlCQUFpQixDQUFDO0FBQUEsTUFDekIsQ0FBQztBQUNELFdBQUssZ0JBQWdCO0FBQ3JCLFdBQUssZ0NBQWdDLEtBQUs7QUFBQSxJQUM1QyxDQUFDO0FBQUEsRUFDSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU9BLG1CQUFtQjtBQUNqQixRQUFJLENBQUMsS0FBSyxlQUFlO0FBQ3ZCO0FBQUEsSUFDRjtBQUNBLFNBQUssU0FBUyxrQkFBa0IsS0FBSyw2QkFBNkI7QUFDbEUsU0FBSyxnQkFBZ0I7QUFDckIsU0FBSyxnQ0FBZ0M7QUFBQSxFQUN2QztBQUNGO0FBRUEsSUFBTyxzQ0FBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL21peGlucy9pZHMtcG9wdXAtb3Blbi1ldmVudHMtbWl4aW4vaWRzLXBvcHVwLW9wZW4tZXZlbnRzLW1peGluLnRzPzc4NzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBJZHNQb3B1cEVsZW1lbnRSZWYgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2lkcy1wb3B1cC9pZHMtcG9wdXAtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNDb25zdHJ1Y3RvciB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWVsZW1lbnQnO1xuaW1wb3J0IHsgRXZlbnRzTWl4aW5JbnRlcmZhY2UgfSBmcm9tICcuLi9pZHMtZXZlbnRzLW1peGluL2lkcy1ldmVudHMtbWl4aW4nO1xuXG5pbnRlcmZhY2UgUG9wdXBPcGVuZXIge1xuICBvbk91dHNpZGVDbGljaz8oZTogRXZlbnQpOiB2b2lkO1xufVxuXG50eXBlIENvbnN0cmFpbnRzID0gSWRzQ29uc3RydWN0b3I8RXZlbnRzTWl4aW5JbnRlcmZhY2UgJiBQb3B1cE9wZW5lcj47XG5cbi8qKlxuICogVGhpcyBtaXhpbiBjYW4gYmUgdXNlZCB3aXRoIHRoZSBJZHNQb3B1cCBjb21wb25lbnQgdG8gcHJvdmlkZSBldmVudCBoYW5kbGluZyBpbiBzb21lIHNjZW5hcmlvczpcbiAqIC0gV2hlbiBjbGlja2luZyBvdXRzaWRlIHRoZSBQb3B1cCBvY2N1cnMsIGFuIGV2ZW50IGhhbmRsZXIgYXQgdGhlIGRvY3VtZW50IGxldmVsIGhpZGVzIHRoZSBQb3B1cC5cbiAqIEBtaXhpbiBJZHNQb3B1cE9wZW5FdmVudHNNaXhpblxuICogQHBhcmFtIHthbnl9IHN1cGVyY2xhc3MgQWNjZXB0cyBhIHN1cGVyY2xhc3MgYW5kIGNyZWF0ZXMgYSBuZXcgc3ViY2xhc3MgZnJvbSBpdFxuICogQHJldHVybnMge2FueX0gVGhlIGV4dGVuZGVkIG9iamVjdFxuICovXG5jb25zdCBJZHNQb3B1cE9wZW5FdmVudHNNaXhpbiA9IDxUIGV4dGVuZHMgQ29uc3RyYWludHM+KHN1cGVyY2xhc3M6IFQpID0+IGNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsuLi4oc3VwZXJjbGFzcyBhcyBhbnkpLmF0dHJpYnV0ZXNdO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMucmVtb3ZlT3BlbkV2ZW50cygpO1xuICAgIHRoaXMucG9wdXBPcGVuRXZlbnRzVGFyZ2V0ID0gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkge2Jvb2xlYW59IGhhc09wZW5FdmVudHMgdHJ1ZSBpZiBcIm9wZW5cIiBldmVudHMgYXJlIGN1cnJlbnRseSBhcHBsaWVkIHRvIHRoaXMgY29tcG9uZW50XG4gICAqL1xuICBoYXNPcGVuRXZlbnRzID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7SWRzUG9wdXBFbGVtZW50UmVmfSBwb3B1cE9wZW5FdmVudHNUYXJnZXQgcmVjZWl2ZXMgdGhlIHRvcC1sZXZlbCBldmVudCBsaXN0ZW5lclxuICAgKiAgdGhhdCB3aWxsIGNhdXNlIHRoZSBgb25PdXRzaWRlQ2xpY2tgIGNhbGxiYWNrIHRvIGZpcmVcbiAgICovXG4gIHBvcHVwT3BlbkV2ZW50c1RhcmdldDogSWRzUG9wdXBFbGVtZW50UmVmID0gZG9jdW1lbnQuYm9keTtcblxuICAvKipcbiAgICogQHByb3BlcnR5IHtJZHNQb3B1cEVsZW1lbnRSZWZ9IGN1cnJlbnRQb3B1cE9wZW5FdmVudHNUYXJnZXQgc3RvcmVzIGEgcmVmZXJlbmNlIHRvIHRoZSBldmVudFxuICAgKiAgdGFyZ2V0IHRvIGJlIHVzZWQgZm9yIHVuYmluZGluZyBldmVudHMgKHByZXZlbnRzIG1lbW9yeSBsZWFrcyBpZiB0aGVcbiAgICogIGV2ZW50IHRhcmdldCBjaGFuZ2VzIHdoaWxlIHRoZSBQb3B1cCBpcyBvcGVuKVxuICAgKi9cbiAgI2N1cnJlbnRQb3B1cE9wZW5FdmVudHNUYXJnZXQ6IElkc1BvcHVwRWxlbWVudFJlZiA9IG51bGw7XG5cbiAgLyoqXG4gICAqIEF0dGFjaGVzIHNvbWUgZXZlbnRzIHdoZW4gdGhlIFBvcHVwbWVudSBpcyBvcGVuZWQuXG4gICAqIENhbGwgdGhpcyBtZXRob2QgZnJvbSBpbnNpZGUgeW91ciBleHRlbmRlZCBjb21wb25lbnQgd2hlbmV2ZXIgXCJvcGVuXCIgZXZlbnRzIHNob3VsZCBiZSBhcHBsaWVkLlxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGFkZE9wZW5FdmVudHMoKSB7XG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAvLyBBdHRhY2ggYSBjbGljayBoYW5kbGVyIHRvIHRoZSB3aW5kb3cgZm9yIGRldGVjdGluZyBjbGlja3Mgb3V0c2lkZSB0aGUgcG9wdXAuXG4gICAgICAvLyBJZiB0aGVzZSBhcmVuJ3QgY2FwdHVyZWQgYnkgYSBwb3B1cCwgdGhlIG1lbnUgd2lsbCBjbG9zZS5cbiAgICAgIHRoaXMub25FdmVudCgnY2xpY2sudG9wbGV2ZWwnLCB0aGlzLnBvcHVwT3BlbkV2ZW50c1RhcmdldCwgKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgIHRoaXMub25PdXRzaWRlQ2xpY2s/LihlKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5oYXNPcGVuRXZlbnRzID0gdHJ1ZTtcbiAgICAgIHRoaXMuI2N1cnJlbnRQb3B1cE9wZW5FdmVudHNUYXJnZXQgPSB0aGlzLnBvcHVwT3BlbkV2ZW50c1RhcmdldDtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRhY2hlcyBzb21lIGV2ZW50cyB3aGVuIHRoZSBQb3B1cG1lbnUgaXMgY2xvc2VkLlxuICAgKiBDYWxsIHRoaXMgbWV0aG9kIGZyb20gaW5zaWRlIHlvdXIgZXh0ZW5kZWQgY29tcG9uZW50IHdoZW5ldmVyIFwib3BlblwiIGV2ZW50cyBzaG91bGQgYmUgcmVtb3ZlZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICByZW1vdmVPcGVuRXZlbnRzKCkge1xuICAgIGlmICghdGhpcy5oYXNPcGVuRXZlbnRzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMub2ZmRXZlbnQoJ2NsaWNrLnRvcGxldmVsJywgdGhpcy4jY3VycmVudFBvcHVwT3BlbkV2ZW50c1RhcmdldCk7XG4gICAgdGhpcy5oYXNPcGVuRXZlbnRzID0gZmFsc2U7XG4gICAgdGhpcy4jY3VycmVudFBvcHVwT3BlbkV2ZW50c1RhcmdldCA9IG51bGw7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc1BvcHVwT3BlbkV2ZW50c01peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-popup-open-events-mixin/ids-popup-open-events-mixin.ts\n");

/***/ })

}]);