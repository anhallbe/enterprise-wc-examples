"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_mixins_ids-clearable-mixin_ids-clearable-mixin_ts-src_mixins_ids-field-height-mixin_ids-f-4429f9"],{

/***/ "./src/mixins/ids-clearable-mixin/ids-clearable-mixin.ts":
/*!***************************************************************!*\
  !*** ./src/mixins/ids-clearable-mixin/ids-clearable-mixin.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_clearable_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\n\nconst IdsClearableMixin = (superclass) => class extends superclass {\n  // Input clearable events\n  inputClearableEvents = [\"blur.clearmixin\", \"change.clearmixin\", \"keyup.clearmixin\"];\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_FORCED\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.render();\n    this.handleClearable();\n  }\n  /**\n   * Handle clearable\n   * @returns {void}\n   */\n  handleClearable() {\n    let isClearable = this.clearable && !(this.disabled || this.readonly);\n    isClearable = `${isClearable || this.clearableForced}`.toLowerCase() === \"true\";\n    if (isClearable) {\n      this.appendClearableButton();\n    } else {\n      this.destroyClearable();\n    }\n  }\n  refreshClearableButtonStyles() {\n    const xButton = this.shadowRoot?.querySelector(\".btn-clear\");\n    if (!xButton) {\n      this.removeClearableButton();\n      this.appendClearableButton();\n    }\n  }\n  #initClearableButton() {\n    const xButton = document.createElement(\"ids-trigger-button\");\n    const icon = document.createElement(\"ids-icon\");\n    const text = document.createElement(\"ids-text\");\n    icon.setAttribute(\"icon\", \"close\");\n    icon.setAttribute(\"size\", \"small\");\n    text.setAttribute(\"audible\", \"true\");\n    text.textContent = \"clear\";\n    xButton.appendChild(text);\n    xButton.appendChild(icon);\n    xButton.refreshProtoClasses();\n    if (this.colorVariant) {\n      xButton.colorVariant = this.colorVariant === \"app-menu\" ? \"alternate\" : this.colorVariant;\n    }\n    xButton.setAttribute(\"part\", \"clearable-button\");\n    xButton.className = \"btn-clear\";\n    xButton.noMargins = true;\n    return xButton;\n  }\n  /**\n   * Check if clearable x-icon button exists if not add it\n   * @private\n   * @returns {void}\n   */\n  appendClearableButton() {\n    if (!this.shadowRoot) {\n      return;\n    }\n    let xButton = this.shadowRoot.querySelector(\".btn-clear\");\n    if (!xButton) {\n      xButton = this.#initClearableButton();\n      const parent = this.shadowRoot.querySelector(\".ids-input, .ids-textarea\")?.querySelector(\".field-container\");\n      parent?.appendChild(xButton);\n      const input = this.shadowRoot?.querySelector(\".ids-input-field, .ids-textarea-field\");\n      input?.after(xButton);\n      this.attachClearableEvents();\n    }\n    this.container?.classList.add(\"has-clearable\");\n  }\n  /**\n   * Remove if clearable x-icon button exists\n   * @private\n   * @returns {void}\n   */\n  removeClearableButton() {\n    const xButton = this.shadowRoot?.querySelector(\".btn-clear\");\n    if (xButton) {\n      xButton.remove();\n      this.container?.classList.remove(\"has-clearable\");\n    }\n  }\n  /**\n   * Clears the contents of the input element\n   * @returns {void}\n   */\n  clear() {\n    const selfInput = this;\n    if (selfInput.input) {\n      selfInput.value = \"\";\n      selfInput.input.dispatchEvent(new Event(\"change\"));\n      selfInput.input.focus();\n      this.checkContents();\n      this.triggerEvent(\"cleared\", this, { detail: { elem: this, value: selfInput.value } });\n    }\n  }\n  /**\n   * Checks the contents of input element for empty\n   * @private\n   * @returns {void}\n   */\n  checkContents() {\n    const selfInput = this;\n    const xButton = this.shadowRoot?.querySelector(\".btn-clear\");\n    if (xButton) {\n      const text = selfInput.input?.value;\n      if (!text || !text.length) {\n        xButton.classList.add(\"is-empty\");\n      } else {\n        xButton.classList.remove(\"is-empty\");\n      }\n      this.triggerEvent(\"contents-checked\", this, { detail: { elem: this, value: selfInput.value } });\n    }\n  }\n  /**\n   * Handle clearable events\n   * @private\n   * @returns {void}\n   */\n  attachClearableEvents() {\n    this.handleClearBtnClick(\"\");\n    this.inputClearableEvents.forEach((e) => this.handleClearableInputEvents(e, \"\"));\n    this.checkContents();\n  }\n  /**\n   * Handle clearable x-icon button click event\n   * @private\n   * @param {string} option If 'remove', will remove attached events\n   * @returns {void}\n   */\n  handleClearBtnClick(option) {\n    const xButton = this.shadowRoot?.querySelector(\".btn-clear\");\n    if (xButton) {\n      const eventName = \"click\";\n      if (option === \"remove\") {\n        const handler = this?.handledEvents?.get(eventName);\n        if (handler && handler.target === xButton) {\n          this.offEvent(eventName, xButton);\n        }\n      } else {\n        this.onEvent(eventName, xButton, () => {\n          this.clear();\n        });\n      }\n    }\n  }\n  /**\n   * Handle clearable events (blur|change|keyup)\n   * @private\n   * @param {string} evt event name to attach/remove\n   * @param {string} option If 'remove', will remove attached events\n   * @returns {void}\n   */\n  handleClearableInputEvents(evt, option) {\n    const selfInput = this;\n    if (selfInput.input && evt && typeof evt === \"string\") {\n      const eventName = evt;\n      if (option === \"remove\") {\n        const handler = this.handledEvents?.get(eventName);\n        if (handler && handler.target === selfInput.input) {\n          this.offEvent(eventName, selfInput.input);\n        }\n      } else {\n        this.onEvent(eventName, selfInput.input, () => {\n          this.checkContents();\n        });\n      }\n    }\n  }\n  /**\n   * Destroy clearable actions\n   * @returns {void}\n   */\n  destroyClearable() {\n    this.input?.classList.remove(\"has-clearable\");\n    this.handleClearBtnClick(\"remove\");\n    this.inputClearableEvents.forEach((e) => this.handleClearableInputEvents(e, \"remove\"));\n    this.removeClearableButton();\n  }\n  /**\n   * When set the input will add a clearable x button\n   * @param {boolean|string} value If true will set `clearable` attribute\n   */\n  set clearable(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE);\n    }\n    if (this.container)\n      this.handleClearable();\n  }\n  get clearable() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE));\n  }\n  /**\n   * When set the input will force to add a clearable x button on readonly and disabled\n   * @param {boolean|string} value If true will set `clearable-forced` attribute\n   */\n  set clearableForced(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_FORCED, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_FORCED);\n    }\n    this.handleClearable();\n  }\n  get clearableForced() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_FORCED);\n  }\n};\nvar ids_clearable_mixin_default = IdsClearableMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1jbGVhcmFibGUtbWl4aW4vaWRzLWNsZWFyYWJsZS1taXhpbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDMkI7QUFFRTtBQVU3QixNQUFNLG9CQUFvQixDQUF3QixlQUFrQixjQUFjLFdBQVc7QUFBQTtBQUFBLEVBRTNGLHVCQUF1QixDQUFDLG1CQUFtQixxQkFBcUIsa0JBQWtCO0FBQUEsRUFFbEYsZUFBZSxNQUFhO0FBQzFCLFVBQU0sR0FBRyxJQUFJO0FBQUEsRUFDZjtBQUFBLEVBRUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUksV0FBbUI7QUFBQSxNQUN2QixzRUFBb0I7QUFBVCxNQUNYLDZFQUEyQjtBQUFoQixJQUNiO0FBQUEsRUFDRjtBQUFBLEVBRUEsb0JBQW9CO0FBQ2xCLFVBQU0sb0JBQW9CO0FBQzFCLFNBQUssT0FBTztBQUNaLFNBQUssZ0JBQWdCO0FBQUEsRUFDdkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsa0JBQWtCO0FBQ2hCLFFBQUksY0FBYyxLQUFLLGFBQWEsRUFBRyxLQUFhLFlBQWEsS0FBYTtBQUM5RSxrQkFBYyxHQUFHLGVBQWUsS0FBSyxrQkFBa0IsWUFBWSxNQUFNO0FBRXpFLFFBQUksYUFBYTtBQUNmLFdBQUssc0JBQXNCO0FBQUEsSUFDN0IsT0FBTztBQUNMLFdBQUssaUJBQWlCO0FBQUEsSUFDeEI7QUFBQSxFQUNGO0FBQUEsRUFFQSwrQkFBK0I7QUFDN0IsVUFBTSxVQUFVLEtBQUssWUFBWSxjQUFjLFlBQVk7QUFDM0QsUUFBSSxDQUFDLFNBQVM7QUFDWixXQUFLLHNCQUFzQjtBQUMzQixXQUFLLHNCQUFzQjtBQUFBLElBQzdCO0FBQUEsRUFDRjtBQUFBLEVBRUEsdUJBQW9DO0FBQ2xDLFVBQU0sVUFBZSxTQUFTLGNBQWMsb0JBQW9CO0FBQ2hFLFVBQU0sT0FBTyxTQUFTLGNBQWMsVUFBVTtBQUM5QyxVQUFNLE9BQU8sU0FBUyxjQUFjLFVBQVU7QUFDOUMs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QzNDO0FBQ0EsUUFBSSxLQUFLO0FBQVcsV0FBSyxnQkFBZ0I7QUFBQSxFQUMzQztBQUFBLEVBRUEsSUFBSSxZQUFxQjtBQUN2QixXQUFPLHNGQUFZLENBQUMsS0FBSyxhQUFhLHNFQUFvQixDQUFDO0FBQUEsRUFDN0Q7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSxnQkFBZ0IsT0FBTztBQUN6QixVQUFNLE1BQU0sc0ZBQVksQ0FBQyxLQUFLO0FBQzlCLFFBQUksS0FBSztBQUNQLFdBQUssYUFBYSw2RUFBMkIsRUFBRSxJQUFJLFNBQVMsQ0FBQztBQUFBLElBQy9ELE9BQU87QUFDTCxXQUFLLGdCQUFnQiw2RUFBMkI7QUFBQSxJQUNsRDtBQUNBLFNBQUssZ0JBQWdCO0FBQUEsRUFDdkI7QUFBQSxFQUVBLElBQUksa0JBQWtCO0FBQUUsV0FBTyxLQUFLLGFBQWEsNkVBQTJCO0FBQUEsRUFBRztBQUNqRjtBQUVBLElBQU8sOEJBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9taXhpbnMvaWRzLWNsZWFyYWJsZS1taXhpbi9pZHMtY2xlYXJhYmxlLW1peGluLnRzP2EzYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSWRzSW5wdXRJbnRlcmZhY2UgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL2lkcy1pbnB1dC9pZHMtaW5wdXQtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNDb25zdHJ1Y3RvciB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWVsZW1lbnQnO1xuaW1wb3J0IHsgc3RyaW5nVG9Cb29sIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcbmltcG9ydCB7IEV2ZW50c01peGluSW50ZXJmYWNlIH0gZnJvbSAnLi4vaWRzLWV2ZW50cy1taXhpbi9pZHMtZXZlbnRzLW1peGluJztcblxudHlwZSBDb25zdHJhaW50cyA9IElkc0NvbnN0cnVjdG9yPEV2ZW50c01peGluSW50ZXJmYWNlPjtcblxuLyoqXG4gKiBJZHNDbGVhcmFibGVNaXhpbiBhdHRhY2hlcyBhIGJ1dHRvbiB0byBpbnB1dCBmaWVsZHMgYW5kIHRleHQgYXJlYXMgYWxsb3dpbmcgdGhlaXIgY29udGVudHMgdG8gYmUgY2xlYXJlZC5cbiAqIEBwYXJhbSB7YW55fSBzdXBlcmNsYXNzIEFjY2VwdHMgYSBzdXBlcmNsYXNzIGFuZCBjcmVhdGVzIGEgbmV3IHN1YmNsYXNzIGZyb20gaXRcbiAqIEByZXR1cm5zIHthbnl9IFRoZSBleHRlbmRlZCBvYmplY3RcbiAqL1xuY29uc3QgSWRzQ2xlYXJhYmxlTWl4aW4gPSA8VCBleHRlbmRzIENvbnN0cmFpbnRzPihzdXBlcmNsYXNzOiBUKSA9PiBjbGFzcyBleHRlbmRzIHN1cGVyY2xhc3Mge1xuICAvLyBJbnB1dCBjbGVhcmFibGUgZXZlbnRzXG4gIGlucHV0Q2xlYXJhYmxlRXZlbnRzID0gWydibHVyLmNsZWFybWl4aW4nLCAnY2hhbmdlLmNsZWFybWl4aW4nLCAna2V5dXAuY2xlYXJtaXhpbiddO1xuXG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLihzdXBlcmNsYXNzIGFzIGFueSkuYXR0cmlidXRlcyxcbiAgICAgIGF0dHJpYnV0ZXMuQ0xFQVJBQkxFLFxuICAgICAgYXR0cmlidXRlcy5DTEVBUkFCTEVfRk9SQ0VELFxuICAgIF07XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaz8uKCk7XG4gICAgdGhpcy5yZW5kZXIoKTtcbiAgICB0aGlzLmhhbmRsZUNsZWFyYWJsZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBjbGVhcmFibGVcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBoYW5kbGVDbGVhcmFibGUoKSB7XG4gICAgbGV0IGlzQ2xlYXJhYmxlID0gdGhpcy5jbGVhcmFibGUgJiYgISgodGhpcyBhcyBhbnkpLmRpc2FibGVkIHx8ICh0aGlzIGFzIGFueSkucmVhZG9ubHkpO1xuICAgIGlzQ2xlYXJhYmxlID0gYCR7aXNDbGVhcmFibGUgfHwgdGhpcy5jbGVhcmFibGVGb3JjZWR9YC50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZSc7XG5cbiAgICBpZiAoaXNDbGVhcmFibGUpIHtcbiAgICAgIHRoaXMuYXBwZW5kQ2xlYXJhYmxlQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVzdHJveUNsZWFyYWJsZSgpO1xuICAgIH1cbiAgfVxuXG4gIHJlZnJlc2hDbGVhcmFibGVCdXR0b25TdHlsZXMoKSB7XG4gICAgY29uc3QgeEJ1dHRvbiA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignLmJ0bi1jbGVhcicpO1xuICAgIGlmICgheEJ1dHRvbikge1xuICAgICAgdGhpcy5yZW1vdmVDbGVhcmFibGVCdXR0b24oKTtcbiAgICAgIHRoaXMuYXBwZW5kQ2xlYXJhYmxlQnV0dG9uKCk7XG4gICAgfVxuICB9XG5cbiAgI2luaXRDbGVhcmFibGVCdXR0b24oKTogSFRNTEVsZW1lbnQge1xuICAgIGNvbnN0IHhCdXR0b246IGFueSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lkcy10cmlnZ2VyLWJ1dHRvbicpO1xuICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZHMtaWNvbicpO1xuICAgIGNvbnN0IHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZHMtdGV4dCcpO1xuICAgIGljb24uc2V0QXR0cmlidXRlKCdpY29uJywgJ2Nsb3NlJyk7XG4gICAgaWNvbi5zZXRBdHRyaWJ1dGUoJ3NpemUnLCAnc21hbGwnKTtcbiAgICB0ZXh0LnNldEF0dHJpYnV0ZSgnYXVkaWJsZScsICd0cnVlJyk7XG4gICAgdGV4dC50ZXh0Q29udGVudCA9ICdjbGVhcic7XG5cbiAgICB4QnV0dG9uLmFwcGVuZENoaWxkKHRleHQpO1xuICAgIHhCdXR0b24uYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgeEJ1dHRvbi5yZWZyZXNoUHJvdG9DbGFzc2VzKCk7XG5cbiAgICBpZiAoKHRoaXMgYXMgYW55KS5jb2xvclZhcmlhbnQpIHtcbiAgICAgIHhCdXR0b24uY29sb3JWYXJpYW50ID0gKHRoaXMgYXMgYW55KS5jb2xvclZhcmlhbnQgPT09ICdhcHAtbWVudScgPyAnYWx0ZXJuYXRlJyA6ICh0aGlzIGFzIGFueSkuY29sb3JWYXJpYW50O1xuICAgIH1cbiAgICB4QnV0dG9uLnNldEF0dHJpYnV0ZSgncGFydCcsICdjbGVhcmFibGUtYnV0dG9uJyk7XG4gICAgeEJ1dHRvbi5jbGFzc05hbWUgPSAnYnRuLWNsZWFyJztcbiAgICB4QnV0dG9uLm5vTWFyZ2lucyA9IHRydWU7XG5cbiAgICByZXR1cm4geEJ1dHRvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBjbGVhcmFibGUgeC1pY29uIGJ1dHRvbiBleGlzdHMgaWYgbm90IGFkZCBpdFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGFwcGVuZENsZWFyYWJsZUJ1dHRvbigpIHtcbiAgICBpZiAoIXRoaXMuc2hhZG93Um9vdCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCB4QnV0dG9uID0gdGhpcy5zaGFkb3dSb290LnF1ZXJ5U2VsZWN0b3IoJy5idG4tY2xlYXInKTtcbiAgICBpZiAoIXhCdXR0b24pIHtcbiAgICAgIHhCdXR0b24gPSB0aGlzLiNpbml0Q2xlYXJhYmxlQnV0dG9uKCk7XG4gICAgICBjb25zdCBwYXJlbnQgPSB0aGlzLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvcignLmlkcy1pbnB1dCwgLmlkcy10ZXh0YXJlYScpPy5xdWVyeVNlbGVjdG9yKCcuZmllbGQtY29udGFpbmVyJyk7XG4gICAgICBwYXJlbnQ/LmFwcGVuZENoaWxkKHhCdXR0b24pO1xuXG4gICAgICBjb25zdCBpbnB1dCA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignLmlkcy1pbnB1dC1maWVsZCwgLmlkcy10ZXh0YXJlYS1maWVsZCcpO1xuICAgICAgaW5wdXQ/LmFmdGVyKHhCdXR0b24pO1xuXG4gICAgICB0aGlzLmF0dGFjaENsZWFyYWJsZUV2ZW50cygpO1xuICAgIH1cblxuICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3QuYWRkKCdoYXMtY2xlYXJhYmxlJyk7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGlmIGNsZWFyYWJsZSB4LWljb24gYnV0dG9uIGV4aXN0c1xuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIHJlbW92ZUNsZWFyYWJsZUJ1dHRvbigpIHtcbiAgICBjb25zdCB4QnV0dG9uID0gdGhpcy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yKCcuYnRuLWNsZWFyJyk7XG4gICAgaWYgKHhCdXR0b24pIHtcbiAgICAgIHhCdXR0b24ucmVtb3ZlKCk7XG4gICAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZSgnaGFzLWNsZWFyYWJsZScpO1xuICAgIH1cbiAgICAvLyBAVE9ETzogcmVtb3ZlIGV2ZW50IGhhbmRsZXJzXG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBjb250ZW50cyBvZiB0aGUgaW5wdXQgZWxlbWVudFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGNsZWFyKCkge1xuICAgIGNvbnN0IHNlbGZJbnB1dCA9IHRoaXMgYXMgSWRzSW5wdXRJbnRlcmZhY2U7XG5cbiAgICBpZiAoc2VsZklucHV0LmlucHV0KSB7XG4gICAgICBzZWxmSW5wdXQudmFsdWUgPSAnJztcbiAgICAgIHNlbGZJbnB1dC5pbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJykpO1xuICAgICAgc2VsZklucHV0LmlucHV0LmZvY3VzKCk7XG4gICAgICB0aGlzLmNoZWNrQ29udGVudHMoKTtcbiAgICAgIHRoaXMudHJpZ2dlckV2ZW50KCdjbGVhcmVkJywgdGhpcywgeyBkZXRhaWw6IHsgZWxlbTogdGhpcywgdmFsdWU6IHNlbGZJbnB1dC52YWx1ZSB9IH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgdGhlIGNvbnRlbnRzIG9mIGlucHV0IGVsZW1lbnQgZm9yIGVtcHR5XG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2hlY2tDb250ZW50cygpIHtcbiAgICBjb25zdCBzZWxmSW5wdXQgPSB0aGlzIGFzIElkc0lucHV0SW50ZXJmYWNlO1xuXG4gICAgY29uc3QgeEJ1dHRvbiA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignLmJ0bi1jbGVhcicpO1xuICAgIGlmICh4QnV0dG9uKSB7XG4gICAgICBjb25zdCB0ZXh0ID0gc2VsZklucHV0LmlucHV0Py52YWx1ZTtcbiAgICAgIGlmICghdGV4dCB8fCAhdGV4dC5sZW5ndGgpIHtcbiAgICAgICAgeEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdpcy1lbXB0eScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdpcy1lbXB0eScpO1xuICAgICAgfVxuICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ2NvbnRlbnRzLWNoZWNrZWQnLCB0aGlzLCB7IGRldGFpbDogeyBlbGVtOiB0aGlzLCB2YWx1ZTogc2VsZklucHV0LnZhbHVlIH0gfSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBjbGVhcmFibGUgZXZlbnRzXG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgYXR0YWNoQ2xlYXJhYmxlRXZlbnRzKCkge1xuICAgIHRoaXMuaGFuZGxlQ2xlYXJCdG5DbGljaygnJyk7XG4gICAgdGhpcy5pbnB1dENsZWFyYWJsZUV2ZW50cy5mb3JFYWNoKChlKSA9PiB0aGlzLmhhbmRsZUNsZWFyYWJsZUlucHV0RXZlbnRzKGUsICcnKSk7XG5cbiAgICAvLyBTZXQgaW5pdGlhbCBzdGF0ZVxuICAgIHRoaXMuY2hlY2tDb250ZW50cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBjbGVhcmFibGUgeC1pY29uIGJ1dHRvbiBjbGljayBldmVudFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9uIElmICdyZW1vdmUnLCB3aWxsIHJlbW92ZSBhdHRhY2hlZCBldmVudHNcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBoYW5kbGVDbGVhckJ0bkNsaWNrKG9wdGlvbjogc3RyaW5nKSB7XG4gICAgY29uc3QgeEJ1dHRvbiA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignLmJ0bi1jbGVhcicpO1xuICAgIGlmICh4QnV0dG9uKSB7XG4gICAgICBjb25zdCBldmVudE5hbWUgPSAnY2xpY2snO1xuICAgICAgaWYgKG9wdGlvbiA9PT0gJ3JlbW92ZScpIHtcbiAgICAgICAgY29uc3QgaGFuZGxlciA9IHRoaXM/LmhhbmRsZWRFdmVudHM/LmdldChldmVudE5hbWUpO1xuICAgICAgICBpZiAoaGFuZGxlciAmJiBoYW5kbGVyLnRhcmdldCA9PT0geEJ1dHRvbikge1xuICAgICAgICAgIHRoaXMub2ZmRXZlbnQoZXZlbnROYW1lLCB4QnV0dG9uKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkV2ZW50KGV2ZW50TmFtZSwgeEJ1dHRvbiwgKCkgPT4ge1xuICAgICAgICAgIHRoaXMuY2xlYXIoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBjbGVhcmFibGUgZXZlbnRzIChibHVyfGNoYW5nZXxrZXl1cClcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2dCBldmVudCBuYW1lIHRvIGF0dGFjaC9yZW1vdmVcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbiBJZiAncmVtb3ZlJywgd2lsbCByZW1vdmUgYXR0YWNoZWQgZXZlbnRzXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgaGFuZGxlQ2xlYXJhYmxlSW5wdXRFdmVudHMoZXZ0OiBzdHJpbmcsIG9wdGlvbjogc3RyaW5nKSB7XG4gICAgY29uc3Qgc2VsZklucHV0ID0gdGhpcyBhcyBJZHNJbnB1dEludGVyZmFjZTtcblxuICAgIGlmIChzZWxmSW5wdXQuaW5wdXQgJiYgZXZ0ICYmIHR5cGVvZiBldnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb25zdCBldmVudE5hbWUgPSBldnQ7XG4gICAgICBpZiAob3B0aW9uID09PSAncmVtb3ZlJykge1xuICAgICAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5oYW5kbGVkRXZlbnRzPy5nZXQoZXZlbnROYW1lKTtcbiAgICAgICAgaWYgKGhhbmRsZXIgJiYgaGFuZGxlci50YXJnZXQgPT09IHNlbGZJbnB1dC5pbnB1dCkge1xuICAgICAgICAgIHRoaXMub2ZmRXZlbnQoZXZlbnROYW1lLCBzZWxmSW5wdXQuaW5wdXQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uRXZlbnQoZXZlbnROYW1lLCBzZWxmSW5wdXQuaW5wdXQsICgpID0+IHtcbiAgICAgICAgICB0aGlzLmNoZWNrQ29udGVudHMoKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERlc3Ryb3kgY2xlYXJhYmxlIGFjdGlvbnNcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBkZXN0cm95Q2xlYXJhYmxlKCkge1xuICAgICh0aGlzIGFzIElkc0lucHV0SW50ZXJmYWNlKS5pbnB1dD8uY2xhc3NMaXN0LnJlbW92ZSgnaGFzLWNsZWFyYWJsZScpO1xuICAgIHRoaXMuaGFuZGxlQ2xlYXJCdG5DbGljaygncmVtb3ZlJyk7XG4gICAgdGhpcy5pbnB1dENsZWFyYWJsZUV2ZW50cy5mb3JFYWNoKChlKSA9PiB0aGlzLmhhbmRsZUNsZWFyYWJsZUlucHV0RXZlbnRzKGUsICdyZW1vdmUnKSk7XG4gICAgdGhpcy5yZW1vdmVDbGVhcmFibGVCdXR0b24oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGVuIHNldCB0aGUgaW5wdXQgd2lsbCBhZGQgYSBjbGVhcmFibGUgeCBidXR0b25cbiAgICogQHBhcmFtIHtib29sZWFufHN0cmluZ30gdmFsdWUgSWYgdHJ1ZSB3aWxsIHNldCBgY2xlYXJhYmxlYCBhdHRyaWJ1dGVcbiAgICovXG4gIHNldCBjbGVhcmFibGUodmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpIHtcbiAgICBjb25zdCB2YWwgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmICh2YWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFLCB2YWwudG9TdHJpbmcoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuY29udGFpbmVyKSB0aGlzLmhhbmRsZUNsZWFyYWJsZSgpO1xuICB9XG5cbiAgZ2V0IGNsZWFyYWJsZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gc3RyaW5nVG9Cb29sKHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFKSk7XG4gIH1cblxuICAvKipcbiAgICogV2hlbiBzZXQgdGhlIGlucHV0IHdpbGwgZm9yY2UgdG8gYWRkIGEgY2xlYXJhYmxlIHggYnV0dG9uIG9uIHJlYWRvbmx5IGFuZCBkaXNhYmxlZFxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfSB2YWx1ZSBJZiB0cnVlIHdpbGwgc2V0IGBjbGVhcmFibGUtZm9yY2VkYCBhdHRyaWJ1dGVcbiAgICovXG4gIHNldCBjbGVhcmFibGVGb3JjZWQodmFsdWUpIHtcbiAgICBjb25zdCB2YWwgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmICh2YWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFX0ZPUkNFRCwgdmFsLnRvU3RyaW5nKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNMRUFSQUJMRV9GT1JDRUQpO1xuICAgIH1cbiAgICB0aGlzLmhhbmRsZUNsZWFyYWJsZSgpO1xuICB9XG5cbiAgZ2V0IGNsZWFyYWJsZUZvcmNlZCgpIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFX0ZPUkNFRCk7IH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0NsZWFyYWJsZU1peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-clearable-mixin/ids-clearable-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts":
/*!*********************************************************************!*\
  !*** ./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FIELD_HEIGHTS\": () => (/* binding */ FIELD_HEIGHTS),\n/* harmony export */   \"default\": () => (/* binding */ ids_field_height_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\n\nconst FIELD_HEIGHTS = {\n  default: \"md\",\n  xs: \"xs\",\n  sm: \"sm\",\n  md: \"md\",\n  lg: \"lg\"\n};\nconst getFieldHeightClass = (val) => `field-height-${val}`;\nconst IdsFieldHeightMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n    if (!this.state) {\n      this.state = {};\n    }\n    this.state.fieldHeight = FIELD_HEIGHTS.default;\n    this.state.compact = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT)) || false;\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD_HEIGHT\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT)) {\n      this.compact = true;\n    } else {\n      this.container?.classList.add(getFieldHeightClass(this.fieldHeight));\n    }\n  }\n  /**\n   * @returns {string} that can be applied to an HTML element\n   * inside a template for determining the current Field Height class\n   */\n  templateFieldHeight() {\n    if (this.compact)\n      return \"\";\n    return this.fieldHeight ? `${getFieldHeightClass(this.fieldHeight)}` : \"\";\n  }\n  /**\n   *  Set the compact height\n   * @param {boolean|string} value If true will set `compact` attribute\n   */\n  set compact(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (val !== this.state.compact) {\n      this.state.compact = val;\n      if (val) {\n        this.fieldHeight = \"\";\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT, \"\");\n        this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT);\n        this.#doFieldHeightChange(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT);\n        this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT);\n        this.#doFieldHeightChange(\"\");\n      }\n    }\n  }\n  get compact() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COMPACT));\n  }\n  /**\n   * Set the fieldHeight (height) of input\n   * @param {string} value [xs, sm, md, lg]\n   */\n  set fieldHeight(value) {\n    if (!value) {\n      this.state.fieldHeight = FIELD_HEIGHTS.default;\n      this.clearHeightClasses();\n      this.container?.classList.add(getFieldHeightClass(FIELD_HEIGHTS.default));\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD_HEIGHT);\n    } else {\n      const fieldHeight = FIELD_HEIGHTS[value];\n      if (fieldHeight && this.state.fieldHeight !== fieldHeight) {\n        this.state.fieldHeight = fieldHeight;\n        this.clearHeightClasses();\n        this.compact = false;\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD_HEIGHT, fieldHeight);\n        this.container?.classList.add(getFieldHeightClass(fieldHeight));\n        this.#doFieldHeightChange(fieldHeight);\n      }\n    }\n  }\n  get fieldHeight() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD_HEIGHT) ?? FIELD_HEIGHTS.default;\n  }\n  /**\n   * Clears all existing field height classes defined on this component\n   * @returns {void}\n   */\n  clearHeightClasses() {\n    const heightClasses = Object.values(FIELD_HEIGHTS).map((h) => getFieldHeightClass(h));\n    this.container?.classList.remove(...heightClasses);\n  }\n  /**\n   * Runs optional `onFieldHeightChange` callback, if possible\n   * @param {string} fieldHeight the incoming `fieldHeight` or `compact` setting\n   */\n  #doFieldHeightChange(fieldHeight) {\n    if (typeof this.onFieldHeightChange === \"function\") {\n      this.onFieldHeightChange(fieldHeight);\n    }\n  }\n};\nvar ids_field_height_mixin_default = IdsFieldHeightMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-label-state-mixin/ids-label-state-common.ts":
/*!********************************************************************!*\
  !*** ./src/mixins/ids-label-state-mixin/ids-label-state-common.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdsLabelStateAttributes\": () => (/* binding */ IdsLabelStateAttributes),\n/* harmony export */   \"isLabelRequiredValid\": () => (/* binding */ isLabelRequiredValid),\n/* harmony export */   \"isLabelStateValid\": () => (/* binding */ isLabelStateValid)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\n\nconst IdsLabelStateAttributes = [\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_REQUIRED,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE\n];\nconst isLabelStateValid = (value) => value === null || [\"hidden\", \"collapsed\"].includes(value);\nconst isLabelRequiredValid = (value) => {\n  const isValid = typeof value !== \"undefined\" && value !== null;\n  return isValid ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value) : true;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1sYWJlbC1zdGF0ZS1taXhpbi9pZHMtbGFiZWwtc3RhdGUtY29tbW9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJCO0FBQ0U7QUFJdEIsTUFBTSwwQkFBMEI7QUFBQSxFQUNyQyxrRUFBZ0I7QUFBTCxFQUNYLDJFQUF5QjtBQUFkLEVBQ1gsd0VBQXNCO0FBQ3hCO0FBRU8sTUFBTSxvQkFBb0IsQ0FBQyxVQUF5QixVQUFVLFFBQVEsQ0FBQyxVQUFVLFdBQVcsRUFBRSxTQUFTLEtBQUs7QUFFNUcsTUFBTSx1QkFBdUIsQ0FBQyxVQUE0QztBQUMvRSxRQUFNLFVBQVUsT0FBTyxVQUFVLGVBQWUsVUFBVTtBQUMxRCxTQUFPLFVBQVUsc0ZBQVksQ0FBQyxLQUFLLElBQUk7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9taXhpbnMvaWRzLWxhYmVsLXN0YXRlLW1peGluL2lkcy1sYWJlbC1zdGF0ZS1jb21tb24udHM/YWY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBzdHJpbmdUb0Jvb2wgfSBmcm9tICcuLi8uLi91dGlscy9pZHMtc3RyaW5nLXV0aWxzL2lkcy1zdHJpbmctdXRpbHMnO1xuXG5leHBvcnQgdHlwZSBJZHNMYWJlbFN0YXRlTW9kZSA9IG51bGwgfCAnaGlkZGVuJyB8ICdjb2xsYXBzZWQnO1xuXG5leHBvcnQgY29uc3QgSWRzTGFiZWxTdGF0ZUF0dHJpYnV0ZXMgPSBbXG4gIGF0dHJpYnV0ZXMuTEFCRUwsXG4gIGF0dHJpYnV0ZXMuTEFCRUxfUkVRVUlSRUQsXG4gIGF0dHJpYnV0ZXMuTEFCRUxfU1RBVEVcbl07XG5cbmV4cG9ydCBjb25zdCBpc0xhYmVsU3RhdGVWYWxpZCA9ICh2YWx1ZTogc3RyaW5nIHwgbnVsbCkgPT4gdmFsdWUgPT09IG51bGwgfHwgWydoaWRkZW4nLCAnY29sbGFwc2VkJ10uaW5jbHVkZXModmFsdWUpO1xuXG5leHBvcnQgY29uc3QgaXNMYWJlbFJlcXVpcmVkVmFsaWQgPSAodmFsdWU6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IGlzVmFsaWQgPSB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlICE9PSBudWxsO1xuICByZXR1cm4gaXNWYWxpZCA/IHN0cmluZ1RvQm9vbCh2YWx1ZSkgOiB0cnVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/mixins/ids-label-state-mixin/ids-label-state-common.ts\n");

/***/ })

}]);