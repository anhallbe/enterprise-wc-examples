"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-textarea_ids-textarea_ts"],{

/***/ "./src/components/ids-textarea/ids-textarea.ts":
/*!*****************************************************!*\
  !*** ./src/components/ids-textarea/ids-textarea.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsTextarea)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_label_state_mixin_ids_label_state_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-label-state-mixin/ids-label-state-mixin */ \"./src/mixins/ids-label-state-mixin/ids-label-state-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_clearable_mixin_ids_clearable_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-clearable-mixin/ids-clearable-mixin */ \"./src/mixins/ids-clearable-mixin/ids-clearable-mixin.ts\");\n/* harmony import */ var _mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin */ \"./src/mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin.ts\");\n/* harmony import */ var _mixins_ids_validation_mixin_ids_validation_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-validation-mixin/ids-validation-mixin */ \"./src/mixins/ids-validation-mixin/ids-validation-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_field__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-field */ \"./src/components/ids-trigger-field/ids-trigger-field.ts\");\n/* harmony import */ var _ids_textarea_scss__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ids-textarea.scss */ \"./src/components/ids-textarea/ids-textarea.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n  (0,_mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n    (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n      (0,_mixins_ids_label_state_mixin_ids_label_state_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n        (0,_mixins_ids_validation_mixin_ids_validation_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n          (0,_mixins_ids_clearable_mixin_ids_clearable_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n            (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n              _core_ids_element__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n            )\n          )\n        )\n      )\n    )\n  )\n);\nconst ID = \"ids-textarea-id\";\nconst SIZES = {\n  default: \"md\",\n  sm: \"sm\",\n  md: \"md\",\n  lg: \"lg\",\n  full: \"full\"\n};\nconst TEXT_ALIGN = {\n  default: \"left\",\n  left: \"left\",\n  center: \"center\",\n  right: \"right\"\n};\nconst CHAR_MAX_TEXT = \"Character count maximum of\";\nconst CHAR_REMAINING_TEXT = \"Characters left {0}\";\nlet IdsTextarea = class extends Base {\n  /**\n   * Call the constructor and then initialize\n   */\n  constructor() {\n    super();\n  }\n  autogrowProcessing = false;\n  isSafari = false;\n  isFormComponent = true;\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array<string>} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW_MAX_HEIGHT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOSELECT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_MAX_TEXT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_REMAINING_TEXT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHARACTER_COUNTER,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PRINTABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE\n    ];\n  }\n  /**\n   * Custom Element `connectedCallback` implementation\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.#attachEventHandlers();\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    const value = this.value || \"\";\n    const rows = this.rows ? ` rows=\"${this.rows}\"` : \"\";\n    const ariaLabel = this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_STATE) && this.label ? `aria-label=\"${this.label}\"` : \"\";\n    const hiddenLabelCss = !this.label.length || this.labelState === \"hidden\" ? \" empty\" : \"\";\n    const requiredLabelCss = !this.labelRequired ? \" no-required-indicator\" : \"\";\n    const maxlength = this.maxlength ? ` maxlength=\"${this.maxlength}\"` : \"\";\n    const placeholder = this.placeholder ? ` placeholder=\"${this.placeholder}\"` : \"\";\n    const isPrintable = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.printable) || this.printable === null;\n    const printable = isPrintable ? `<span class=\"textarea-print\">${value}</span>` : \"\";\n    const isCounter = this.characterCounter && this.maxlength;\n    const counter = isCounter ? '<span class=\"textarea-character-counter\"></span>' : \"\";\n    let textareaState = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.readonly) ? \" readonly\" : \"\";\n    textareaState = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.disabled) ? \" disabled\" : textareaState;\n    let textareaClass = `ids-textarea-field ${this.textAlign}`;\n    textareaClass += (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.resizable) ? \" resizable\" : \"\";\n    textareaClass = ` class=\"${textareaClass}\"`;\n    return `\n      <div class=\"ids-textarea${textareaState}\">\n        ${printable}\n        <slot class=\"hidden\"></slot>\n        <label for=\"${ID}\" class=\"ids-label-text${requiredLabelCss}${hiddenLabelCss}\">\n          <ids-text part=\"label\" label ${textareaState} color-unset>${this.label}</ids-text>\n        </label>\n        <div class=\"field-container ${this.size}\">\n          <textarea part=\"textarea\" id=\"${ID}\"${textareaClass}${placeholder}${textareaState}${maxlength}${rows}${ariaLabel} value=\"${value}\"></textarea>\n        </div>\n        ${counter}\n      </div>\n    `;\n  }\n  /**\n   * @returns {HTMLTextAreaElement} reference to this component's inner text input element\n   */\n  get input() {\n    return this.container?.querySelector(\"textarea\") || null;\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} the element in this component's Shadow Root\n   *  that wraps the input and any triggering elements or icons\n   */\n  get fieldContainer() {\n    return this.container?.querySelector(\".field-container\") || null;\n  }\n  /**\n   * Set state for disabled or readonly\n   * @private\n   * @param {string} prop The property.\n   * @returns {void}\n   */\n  setTextareaState(prop) {\n    if (prop === _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY || prop === _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED) {\n      if (!this.shadowRoot) {\n        return;\n      }\n      const msgNodes = [].slice.call(this.shadowRoot?.querySelectorAll(\".validation-message\"));\n      const options = {\n        prop1: prop,\n        prop2: prop !== _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY ? _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY : _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n        val: (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this[prop])\n      };\n      if (options.val) {\n        this.input?.removeAttribute(options.prop2);\n        this.container?.classList.remove(options.prop2);\n        this.container?.querySelector(\"ids-text\")?.removeAttribute(options.prop2);\n        msgNodes.forEach((x) => x.classList.remove(options.prop2));\n        this.input?.setAttribute(options.prop1, \"true\");\n        this.container?.classList.add(options.prop1);\n        this.container?.querySelector(\"ids-text\")?.setAttribute(options.prop1, \"true\");\n        msgNodes.forEach((x) => x.classList.add(options.prop1));\n      } else {\n        this.input?.removeAttribute(options.prop1);\n        this.container?.classList.remove(options.prop1);\n        this.container?.querySelector(\"ids-text\")?.removeAttribute(options.prop1);\n        msgNodes.forEach((x) => x.classList.remove(options.prop1));\n      }\n    }\n  }\n  /**\n   * Handle autoselect\n   * @private\n   * @returns {void}\n   */\n  handleAutoselect() {\n    if (this.autoselect) {\n      this.handleTextareaFocusEvent();\n    } else {\n      this.handleTextareaFocusEvent(\"remove\");\n    }\n  }\n  /**\n   * Handle autogrow\n   * @private\n   * @returns {void}\n   */\n  handleAutogrow() {\n    if (this.input) {\n      if (this.autogrow) {\n        if (this.autogrowMaxHeight) {\n          this.input.style.maxHeight = `${this.autogrowMaxHeight}px`;\n        }\n        this.input.style.overflow = \"hidden\";\n        this.setAutogrow();\n      } else {\n        this.input.style.overflow = \"\";\n        this.input.style.maxHeight = \"\";\n        this.input.style.height = \"\";\n      }\n    }\n  }\n  /**\n   * Set Browser\n   * will remove this soon get environment utils setup\n   * @private\n   * @returns {void}\n   */\n  setBrowser() {\n    const ua = navigator.userAgent || navigator.vendor || window.opera;\n    const browser = (s) => ua.toLowerCase().indexOf(s) > -1;\n    this.isSafari = browser(\"safari\") && !browser(\"chrome\") && !browser(\"android\");\n  }\n  /**\n   * Get the max text value, trim extra\n   * @private\n   * @param {string} value of textarea\n   * @returns {string} max value\n   */\n  getMaxValue(value) {\n    const max = parseInt(this.maxlength, 10);\n    return value && max > 0 ? value.substr(0, max) : value;\n  }\n  /**\n   * Set the label text\n   * @private\n   * @param {string} value of label\n   * @returns {void}\n   */\n  setLabelText(value) {\n    return super.setLabelText(value, `[for=\"${ID}\"]`);\n  }\n  /**\n   * Set autogrow\n   * @private\n   * @returns {void}\n   */\n  setAutogrow() {\n    if (this.autogrow && !this.autogrowProcessing) {\n      this.autogrowProcessing = true;\n      const maxHeight = parseInt(this.autogrowMaxHeight, 10) || 0;\n      const oldHeight = this.input?.offsetHeight || 0;\n      this.adjustHeight(oldHeight, maxHeight);\n      this.autogrowProcessing = false;\n    }\n  }\n  /**\n   * Adjust height to given element\n   * @private\n   * @param {number} oldHeight old height\n   * @param {number} maxHeight max height\n   * @param {HTMLElement|null} input The textarea input element\n   * @returns {void}\n   */\n  adjustHeight(oldHeight, maxHeight, input = null) {\n    const elem = input || this.input;\n    const newHeight = elem?.scrollHeight;\n    if (elem && typeof newHeight === \"number\" && oldHeight !== newHeight) {\n      let height = newHeight;\n      if (oldHeight > newHeight) {\n        elem.style.height = \"5px\";\n        height = elem.scrollHeight;\n      }\n      const isScrollable = maxHeight > 0 && maxHeight < height;\n      elem.style.overflow = isScrollable ? \"\" : \"hidden\";\n      elem.style.height = `${height}px`;\n    }\n  }\n  /**\n   * Handle character-counter\n   * @private\n   * @returns {void}\n   */\n  handleCharacterCounter() {\n    let elem = this.shadowRoot?.querySelector(\".textarea-character-counter\");\n    if (this.characterCounter && this.maxlength) {\n      if (!elem) {\n        elem = document.createElement(\"span\");\n        elem.className = \"textarea-character-counter\";\n        this.container?.appendChild(elem);\n      }\n      this.updateCounter();\n    } else {\n      elem?.remove();\n    }\n  }\n  /**\n   * Handle printable\n   * @private\n   * @param {boolean|string|null} value of printable\n   * @returns {void}\n   */\n  handlePrintable(value) {\n    let elem = this.shadowRoot?.querySelector(\".textarea-print\");\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.printable) || value === null) {\n      if (!elem) {\n        elem = document.createElement(\"span\");\n        elem.className = \"textarea-print\";\n        elem.textContent = this.value;\n        this.container?.prepend(elem);\n      }\n    } else {\n      elem?.remove();\n    }\n  }\n  /**\n   * Handle slotchange event\n   * @private\n   * @returns {void}\n   */\n  handleSlotchangeEvent() {\n    const slot = this.shadowRoot?.querySelector(\"slot\");\n    this.onEvent(\"slotchange\", slot, () => {\n      const val = slot?.assignedNodes()[0].textContent;\n      this.value = this.getMaxValue(val || \"\");\n    });\n  }\n  /**\n   * Handle focus event\n   * @private\n   * @param {string | undefined | null} option If 'remove', will remove attached events\n   * @returns {void}\n   */\n  handleTextareaFocusEvent(option = \"\") {\n    if (this.input) {\n      const eventName = \"focus\";\n      if (option === \"remove\") {\n        const handler = this.handledEvents?.get(eventName);\n        if (handler && handler.target === this.input) {\n          this.offEvent(eventName, this.input);\n        }\n      } else {\n        this.onEvent(eventName, this.input, () => {\n          setTimeout(() => {\n            this.input?.select();\n          }, 1);\n        });\n      }\n    }\n  }\n  /**\n   * Handle change event\n   * @private\n   * @returns {void}\n   */\n  handleTextareaChangeEvent() {\n    const events = [\"change\", \"input\", \"propertychange\"];\n    events.forEach((evt) => {\n      this.onEvent(evt, this.input, () => {\n        this.value = this.input?.value || \"\";\n      });\n    });\n  }\n  /**\n   * Establish Internal Event Handlers\n   * @private\n   * @returns {object} The object for chaining.\n   */\n  handleNativeEvents() {\n    if (this.input) {\n      const events = [\"change\", \"input\", \"propertychange\", \"focus\", \"select\"];\n      events.forEach((evt) => {\n        this.onEvent(evt, this.input, (e) => {\n          this.triggerEvent(e.type, this, {\n            detail: { elem: this, nativeEvent: e, value: this.value }\n          });\n        });\n      });\n    }\n    return this;\n  }\n  /**\n   * Handle events\n   * @private\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.setBrowser();\n    this.handleAutoselect();\n    this.handleAutogrow();\n    this.handleSlotchangeEvent();\n    this.handleNativeEvents();\n    this.handleTextareaChangeEvent();\n  }\n  /**\n   * Updates the printarea with current value.\n   * @private\n   * @returns {void}\n   */\n  updatePrintarea() {\n    const printareaEl = this.shadowRoot?.querySelector(\".textarea-print\");\n    if (printareaEl) {\n      printareaEl.textContent = this.value;\n    }\n  }\n  /**\n   * Counts the number of line breaks in a string\n   * @private\n   * @param {string} s The string to test.\n   * @returns {number} The number of found line countLinebreaks\n   */\n  countLinebreaks(s) {\n    return (s.match(/\\n/g) || []).length;\n  }\n  /**\n   * Updates the descriptive markup (counter, etc) to notify the user how many\n   * characters can be typed.\n   * @private\n   * @returns {void}\n   */\n  updateCounter() {\n    const elem = this.shadowRoot?.querySelector(\".textarea-character-counter\");\n    if (elem && this.maxlength) {\n      const val = this.value || \"\";\n      const linebreaks = this.isSafari ? this.countLinebreaks(val) : 0;\n      const length = val.length + linebreaks;\n      const max = parseInt(this.maxlength, 10);\n      const remaining = max - length;\n      const cssClass = \"almost-empty\";\n      let text = this.charRemainingText.replace(\"{0}\", remaining.toString());\n      if (length >= max) {\n        text = this.charMaxText === CHAR_MAX_TEXT ? `${this.charMaxText} ${max}` : this.charMaxText.replace(\"{0}\", max.toString());\n        elem.textContent = text;\n        elem.classList.remove(cssClass);\n      } else {\n        elem.textContent = text;\n        if (remaining < 10) {\n          elem.classList.add(cssClass);\n        } else {\n          elem.classList.remove(cssClass);\n        }\n      }\n    }\n  }\n  /**\n   * Set textarea height to be autogrow\n   * @param {boolean|string} value If true will set `autogrow` attribute\n   */\n  set autogrow(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW);\n    }\n    this.handleAutogrow();\n  }\n  get autogrow() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW));\n  }\n  /**\n   * Set textarea height to be autogrow-max-height\n   * @param {string | null} value of `autogrow-max-height` attribute\n   */\n  set autogrowMaxHeight(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW_MAX_HEIGHT, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW_MAX_HEIGHT);\n    }\n    this.handleAutogrow();\n  }\n  get autogrowMaxHeight() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOGROW_MAX_HEIGHT);\n  }\n  /**\n   * When set the textarea will select all text on focus\n   * @param {boolean|string} value If true will set `autoselect` attribute\n   */\n  set autoselect(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOSELECT, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOSELECT);\n    }\n    this.handleAutoselect();\n  }\n  get autoselect() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.AUTOSELECT));\n  }\n  /**\n   * Set `char-max-text` text for character counter\n   * @param {string} value of the `char-max-text` property\n   */\n  set charMaxText(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_MAX_TEXT, value.toString());\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_MAX_TEXT);\n  }\n  get charMaxText() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_MAX_TEXT) || CHAR_MAX_TEXT;\n  }\n  /**\n   * Set `char-remaining-text` text for character counter\n   * @param {string} value of the `char-remaining-text` property\n   */\n  set charRemainingText(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_REMAINING_TEXT, value.toString());\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_REMAINING_TEXT);\n  }\n  get charRemainingText() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHAR_REMAINING_TEXT) || CHAR_REMAINING_TEXT;\n  }\n  /**\n   * Set the `character-counter` feature\n   * @param {boolean|string} value If true will set `character-counter` attribute\n   */\n  set characterCounter(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHARACTER_COUNTER, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHARACTER_COUNTER);\n    }\n    this.handleCharacterCounter();\n  }\n  get characterCounter() {\n    const val = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHARACTER_COUNTER);\n    return val !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val) : true;\n  }\n  /**\n   * Sets textarea to disabled\n   * @param {boolean|string} value If true will set `disabled` attribute\n   */\n  set disabled(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n    this.setTextareaState(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED));\n  }\n  /**\n   * internal reference to a label element a user provides\n   */\n  #labelEl;\n  /**\n   * @readonly\n   * @returns {HTMLLabelElement} the inner `label` element\n   */\n  get labelEl() {\n    return this.#labelEl || this.shadowRoot?.querySelector(`[for=\"${ID}\"]`) || null;\n  }\n  /**\n   * Set the `maxlength` of textarea\n   * @param {string|null} value of the `maxlength` property\n   */\n  set maxlength(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH, value.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH);\n    }\n    this.handleCharacterCounter();\n  }\n  get maxlength() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAXLENGTH);\n  }\n  /**\n   * Set the `placeholder` of textarea\n   * @param {string|null} value of the `placeholder` property\n   */\n  set placeholder(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, value.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, value.toString());\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n    this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n  }\n  get placeholder() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n  }\n  /**\n   * Set the `printable` of textarea\n   * @param {boolean|string|null} value If true will set `printable` attribute\n   */\n  set printable(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PRINTABLE, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PRINTABLE);\n    }\n    this.handlePrintable(value);\n  }\n  get printable() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PRINTABLE);\n  }\n  /**\n   * Set the textarea to readonly state\n   * @param {boolean|string} value If true will set `readonly` attribute\n   */\n  set readonly(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n    }\n    this.setTextareaState(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n  }\n  get readonly() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY));\n  }\n  /**\n   * Set the textarea to resizable state\n   * @param {boolean|string} value If true will set `resizable` attribute\n   */\n  set resizable(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE, val.toString());\n      this.input?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE);\n      this.input?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE);\n    }\n  }\n  get resizable() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.RESIZABLE));\n  }\n  /**\n   * Set the rows for textarea\n   * @param {string|null} value If true will set `rows` attribute\n   */\n  set rows(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS, value.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS);\n    }\n  }\n  get rows() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ROWS);\n  }\n  /**\n   * Set the size (width) of textarea\n   * @param {string} value [sm, md, lg, full]\n   */\n  set size(value) {\n    const fieldContainer = this.shadowRoot?.querySelector(\".field-container\");\n    const size = SIZES[value];\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, size || SIZES.default);\n    fieldContainer?.classList.remove(...Object.values(SIZES));\n    fieldContainer?.classList.add(size || SIZES.default);\n  }\n  get size() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE) || SIZES.default;\n  }\n  /**\n   * Sets the text alignment\n   * @param {string} value [left, center, right]\n   */\n  set textAlign(value) {\n    if (value === \"start\")\n      value = \"left\";\n    else if (value === \"end\")\n      value = \"right\";\n    const textAlign = TEXT_ALIGN[value];\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN, textAlign || TEXT_ALIGN.default);\n    this.input?.classList.remove(...Object.values(TEXT_ALIGN));\n    this.input?.classList.add(textAlign || TEXT_ALIGN.default);\n  }\n  get textAlign() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN) || TEXT_ALIGN.default;\n  }\n  /**\n   * Set the `value` of textarea\n   * @param {string} val the value property\n   */\n  set value(val) {\n    const v = val || \"\";\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, v);\n    if (this.input && this.input.value !== v) {\n      this.input.value = this.getMaxValue(v);\n      this.input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      this.resetDirtyTracker();\n    }\n    this.updateCounter();\n    this.updatePrintarea();\n    this.setAutogrow();\n  }\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n  }\n};\nIdsTextarea = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-textarea\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_textarea_scss__WEBPACK_IMPORTED_MODULE_14__[\"default\"])\n], IdsTextarea);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtdGV4dGFyZWEvaWRzLXRleHRhcmVhLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQztBQUNUO0FBQ0U7QUFFRjtBQUNJO0FBQ0o7QUFDRztBQUNHO0FBQ0Y7QUFDTDtBQUNIO0FBRWhCO0FBQ0E7QUFDQTtBQUVZO0FBRW5CLE1BQU0sT0FBTyxtRkFBYTtBQUFiLEVBQ1gsbUdBQW9CO0FBQXBCLElBQ0UscUZBQWM7QUFBZCxNQUNFLCtGQUFrQjtBQUFsQixRQUNFLDZGQUFrQjtBQUFsQixVQUNFLDJGQUFpQjtBQUFqQixZQUNFLHFGQUFjO0FBQWQsY0FDRSwwREFBVTtBQUFWLFlBQ0Y7QUFBQSxVQUNGO0FBQUEsUUFDRjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGO0FBR0EsTUFBTSxLQUFLO0FBR1gsTUFBTSxRQUFnQztBQUFBLEVBQ3BDLFNBQVM7QUFBQSxFQUNULElBQUk7QUFBQSxFQUNKLElBQUk7QUFBQSxFQUNKLElBQUk7QUFBQSxFQUNKLE1BQU07QUFDUjtBQUdBLE1BQU0sYUFBcUM7QUFBQSxFQUN6QyxTQUFTO0FBQUEsRUFDVCxNQUFNO0FBQUEsRUFDTixRQUFRO0FBQUEsRUFDUixPQUFPO0FBQ1Q7QUFHQSxNQUFNLGdCQUFnQjtBQUN0QixNQUFNLHNCQUFzQjtBQWtCNUIsSUFBcUIsY0FBckIsY0FBeUMsS0FBSztBQUFBO0FBQUE7QUFBQTtBQUFBLEVBSTVDLGNBQWM7QUFDWixVQUFNO0FBQUEsRUFDUjtBQUFBLEVBRUEscUJBQXFCO0FBQUEsRUFFckIsV0FBVztBQUFBLEVBRVgsa0JBQWtCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1sQixXQUFXLGFBQTRCO0FBQ3JDLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLE1BQ1QscUVBQW1CO0FBQVIsTUFDWCxnRkFBOEI7QUFBbkIsTUFDWCx1RUFBcUI7QUFBVixNQUNYLDBFQUF3QjtB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QUFlO0FBQzNCLFFBQUksVUFBVTtBQUFTLGNBQVE7QUFBQSxhQUN0QixVQUFVO0FBQU8sY0FBUTtBQUNsQyxVQUFNLFlBQVksV0FBVyxLQUFLO0FBQ2xDLFNBQUssYUFBYSx1RUFBcUIsRUFBRSxhQUFhLFdBQVcsT0FBTztBQUN4RSxTQUFLLE9BQU8sVUFBVSxPQUFPLEdBQUcsT0FBTyxPQUFPLFVBQVUsQ0FBQztBQUN6RCxTQUFLLE9BQU8sVUFBVSxJQUFJLGFBQWEsV0FBVyxPQUFPO0FBQUEsRUFDM0Q7QUFBQSxFQUVBLElBQUksWUFBb0I7QUFBRSxXQUFPLEtBQUssYUFBYSx1RUFBcUIsS0FBSyxXQUFXO0FBQUEsRUFBUztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNakcsSUFBSSxNQUFNLEtBQWE7QUFDckIsVUFBTSxJQUFJLE9BQU87QUFDakIsU0FBSyxhQUFhLGtFQUFnQixFQUFFLENBQUM7QUFDckMsUUFBSSxLQUFLLFNBQVMsS0FBSyxNQUFNLFVBQVUsR0FBRztBQUN4QyxXQUFLLE1BQU0sUUFBUSxLQUFLLFlBQVksQ0FBQztBQUNyQyxXQUFLLE1BQU0sY0FBYyxJQUFJLE1BQU0sVUFBVSxFQUFFLFNBQVMsS0FBSyxDQUFDLENBQUM7QUFDL0QsV0FBSyxrQkFBa0I7QUFBQSxJQUN6QjtBQUNBLFNBQUssY0FBYztBQUNuQixTQUFLLGdCQUFnQjtBQUNyQixTQUFLLFlBQVk7QUFBQSxFQUNuQjtBQUFBLEVBRUEsSUFBSSxRQUFnQjtBQUFFLFdBQU8sS0FBSyxhQUFhLGtFQUFnQixLQUFLO0FBQUEsRUFBSTtBQUMxRTtBQTdyQnFCLGNBQXJCO0FBQUEsRUFGQyxtRUFBYSxDQUFDLGNBQWM7QUFBQSxFQUM1QiwwREFBSSxDQUFDLDJEQUFNO0FBQUEsR0FDUyIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLXRleHRhcmVhL2lkcy10ZXh0YXJlYS50cz84OGVmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGN1c3RvbUVsZW1lbnQsIHNjc3MgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1kZWNvcmF0b3JzJztcbmltcG9ydCB7IGF0dHJpYnV0ZXMgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1hdHRyaWJ1dGVzJztcbmltcG9ydCB7IHN0cmluZ1RvQm9vbCB9IGZyb20gJy4uLy4uL3V0aWxzL2lkcy1zdHJpbmctdXRpbHMvaWRzLXN0cmluZy11dGlscyc7XG5cbmltcG9ydCBJZHNFdmVudHNNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWV2ZW50cy1taXhpbi9pZHMtZXZlbnRzLW1peGluJztcbmltcG9ydCBJZHNMYWJlbFN0YXRlTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1sYWJlbC1zdGF0ZS1taXhpbi9pZHMtbGFiZWwtc3RhdGUtbWl4aW4nO1xuaW1wb3J0IElkc0xvY2FsZU1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtbG9jYWxlLW1peGluL2lkcy1sb2NhbGUtbWl4aW4nO1xuaW1wb3J0IElkc0NsZWFyYWJsZU1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtY2xlYXJhYmxlLW1peGluL2lkcy1jbGVhcmFibGUtbWl4aW4nO1xuaW1wb3J0IElkc0RpcnR5VHJhY2tlck1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtZGlydHktdHJhY2tlci1taXhpbi9pZHMtZGlydHktdHJhY2tlci1taXhpbic7XG5pbXBvcnQgSWRzVmFsaWRhdGlvbk1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtdmFsaWRhdGlvbi1taXhpbi9pZHMtdmFsaWRhdGlvbi1taXhpbic7XG5pbXBvcnQgSWRzVGhlbWVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLXRoZW1lLW1peGluL2lkcy10aGVtZS1taXhpbic7XG5pbXBvcnQgSWRzRWxlbWVudCBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcblxuaW1wb3J0ICcuLi9pZHMtaWNvbi9pZHMtaWNvbic7XG5pbXBvcnQgJy4uL2lkcy10ZXh0L2lkcy10ZXh0JztcbmltcG9ydCAnLi4vaWRzLXRyaWdnZXItZmllbGQvaWRzLXRyaWdnZXItZmllbGQnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaWRzLXRleHRhcmVhLnNjc3MnO1xuXG5jb25zdCBCYXNlID0gSWRzVGhlbWVNaXhpbihcbiAgSWRzRGlydHlUcmFja2VyTWl4aW4oXG4gICAgSWRzTG9jYWxlTWl4aW4oXG4gICAgICBJZHNMYWJlbFN0YXRlTWl4aW4oXG4gICAgICAgIElkc1ZhbGlkYXRpb25NaXhpbihcbiAgICAgICAgICBJZHNDbGVhcmFibGVNaXhpbihcbiAgICAgICAgICAgIElkc0V2ZW50c01peGluKFxuICAgICAgICAgICAgICBJZHNFbGVtZW50XG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApXG4gICAgKVxuICApXG4pO1xuXG4vLyBUZXh0YXJlYSBpZFxuY29uc3QgSUQgPSAnaWRzLXRleHRhcmVhLWlkJztcblxuLy8gU2V0dGluZyBkZWZhdWx0cyBzaXplc1xuY29uc3QgU0laRVM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gIGRlZmF1bHQ6ICdtZCcsXG4gIHNtOiAnc20nLFxuICBtZDogJ21kJyxcbiAgbGc6ICdsZycsXG4gIGZ1bGw6ICdmdWxsJ1xufTtcblxuLy8gU2V0dGluZyBkZWZhdWx0cyB0ZXh0LWFsaWduXG5jb25zdCBURVhUX0FMSUdOOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICBkZWZhdWx0OiAnbGVmdCcsXG4gIGxlZnQ6ICdsZWZ0JyxcbiAgY2VudGVyOiAnY2VudGVyJyxcbiAgcmlnaHQ6ICdyaWdodCdcbn07XG5cbi8vIENoYXJhY3RlciBjb3VudGVyIGRlZmF1bHQgc3RyaW5nc1xuY29uc3QgQ0hBUl9NQVhfVEVYVCA9ICdDaGFyYWN0ZXIgY291bnQgbWF4aW11bSBvZic7XG5jb25zdCBDSEFSX1JFTUFJTklOR19URVhUID0gJ0NoYXJhY3RlcnMgbGVmdCB7MH0nO1xuXG4vKipcbiAqIElEUyBUZXh0YXJlYSBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNUZXh0YXJlYX1cbiAqIEBpbmhlcml0cyBJZHNFbGVtZW50XG4gKiBAbWl4ZXMgSWRzRXZlbnRzTWl4aW5cbiAqIEBtaXhlcyBJZHNDbGVhcmFibGVNaXhpblxuICogQG1peGVzIElkc0RpcnR5VHJhY2tlck1peGluXG4gKiBAbWl4ZXMgSWRzTGFiZWxTdGF0ZU1peGluXG4gKiBAbWl4ZXMgSWRzTG9jYWxlTWl4aW5cbiAqIEBtaXhlcyBJZHNUaGVtZU1peGluXG4gKiBAbWl4ZXMgSWRzVmFsaWRhdGlvbk1peGluXG4gKiBAcGFydCB0ZXh0YXJlYSAtIHRoZSB0ZXh0YXJlYSBlbGVtZW50XG4gKiBAcGFydCBsYWJlbCAtIHRoZSBsYWJlbCBlbGVtZW50XG4gKi9cbkBjdXN0b21FbGVtZW50KCdpZHMtdGV4dGFyZWEnKVxuQHNjc3Moc3R5bGVzKVxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSWRzVGV4dGFyZWEgZXh0ZW5kcyBCYXNlIHtcbiAgLyoqXG4gICAqIENhbGwgdGhlIGNvbnN0cnVjdG9yIGFuZCB0aGVuIGluaXRpYWxpemVcbiAgICovXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBhdXRvZ3Jvd1Byb2Nlc3NpbmcgPSBmYWxzZTtcblxuICBpc1NhZmFyaSA9IGZhbHNlO1xuXG4gIGlzRm9ybUNvbXBvbmVudCA9IHRydWU7XG5cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgYXR0cmlidXRlcyB3ZSBoYW5kbGUgYXMgZ2V0dGVycy9zZXR0ZXJzXG4gICAqIEByZXR1cm5zIHtBcnJheTxzdHJpbmc+fSBUaGUgYXR0cmlidXRlcyBpbiBhbiBhcnJheVxuICAgKi9cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCk6IEFycmF5PHN0cmluZz4ge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5BVVRPR1JPVyxcbiAgICAgIGF0dHJpYnV0ZXMuQVVUT0dST1dfTUFYX0hFSUdIVCxcbiAgICAgIGF0dHJpYnV0ZXMuQVVUT1NFTEVDVCxcbiAgICAgIGF0dHJpYnV0ZXMuQ0hBUl9NQVhfVEVYVCxcbiAgICAgIGF0dHJpYnV0ZXMuQ0hBUl9SRU1BSU5JTkdfVEVYVCxcbiAgICAgIGF0dHJpYnV0ZXMuQ0hBUkFDVEVSX0NPVU5URVIsXG4gICAgICBhdHRyaWJ1dGVzLkRJU0FCTEVELFxuICAgICAgYXR0cmlidXRlcy5NQVhMRU5HVEgsXG4gICAgICBhdHRyaWJ1dGVzLlBMQUNFSE9MREVSLFxuICAgICAgYXR0cmlidXRlcy5QUklOVEFCTEUsXG4gICAgICBhdHRyaWJ1dGVzLlNJWkUsXG4gICAgICBhdHRyaWJ1dGVzLlJFQURPTkxZLFxuICAgICAgYXR0cmlidXRlcy5SRVNJWkFCTEUsXG4gICAgICBhdHRyaWJ1dGVzLlJPV1MsXG4gICAgICBhdHRyaWJ1dGVzLlRFWFRfQUxJR04sXG4gICAgICBhdHRyaWJ1dGVzLlZBTFVFXG4gICAgXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDdXN0b20gRWxlbWVudCBgY29ubmVjdGVkQ2FsbGJhY2tgIGltcGxlbWVudGF0aW9uXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY29ubmVjdGVkQ2FsbGJhY2soKTogdm9pZCB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICB0aGlzLiNhdHRhY2hFdmVudEhhbmRsZXJzKCk7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlIHRoZSBUZW1wbGF0ZSBmb3IgdGhlIGNvbnRlbnRzXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSB0ZW1wbGF0ZVxuICAgKi9cbiAgdGVtcGxhdGUoKTogc3RyaW5nIHtcbiAgICAvLyBUZXh0YXJlYVxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy52YWx1ZSB8fCAnJztcbiAgICBjb25zdCByb3dzID0gdGhpcy5yb3dzID8gYCByb3dzPVwiJHt0aGlzLnJvd3N9XCJgIDogJyc7XG4gICAgY29uc3QgYXJpYUxhYmVsID0gdGhpcy5oYXNBdHRyaWJ1dGUoYXR0cmlidXRlcy5MQUJFTF9TVEFURSkgJiYgdGhpcy5sYWJlbCA/IGBhcmlhLWxhYmVsPVwiJHt0aGlzLmxhYmVsfVwiYCA6ICcnO1xuICAgIGNvbnN0IGhpZGRlbkxhYmVsQ3NzID0gIXRoaXMubGFiZWwubGVuZ3RoIHx8IHRoaXMubGFiZWxTdGF0ZSA9PT0gJ2hpZGRlbicgPyAnIGVtcHR5JyA6ICcnO1xuICAgIGNvbnN0IHJlcXVpcmVkTGFiZWxDc3MgPSAhdGhpcy5sYWJlbFJlcXVpcmVkID8gJyBuby1yZXF1aXJlZC1pbmRpY2F0b3InIDogJyc7XG4gICAgY29uc3QgbWF4bGVuZ3RoID0gdGhpcy5tYXhsZW5ndGggPyBgIG1heGxlbmd0aD1cIiR7dGhpcy5tYXhsZW5ndGh9XCJgIDogJyc7XG4gICAgY29uc3QgcGxhY2Vob2xkZXIgPSB0aGlzLnBsYWNlaG9sZGVyID8gYCBwbGFjZWhvbGRlcj1cIiR7dGhpcy5wbGFjZWhvbGRlcn1cImAgOiAnJztcbiAgICBjb25zdCBpc1ByaW50YWJsZSA9IHN0cmluZ1RvQm9vbCh0aGlzLnByaW50YWJsZSkgfHwgdGhpcy5wcmludGFibGUgPT09IG51bGw7XG4gICAgY29uc3QgcHJpbnRhYmxlID0gaXNQcmludGFibGUgPyBgPHNwYW4gY2xhc3M9XCJ0ZXh0YXJlYS1wcmludFwiPiR7dmFsdWV9PC9zcGFuPmAgOiAnJztcbiAgICBjb25zdCBpc0NvdW50ZXIgPSAodGhpcy5jaGFyYWN0ZXJDb3VudGVyICYmIHRoaXMubWF4bGVuZ3RoKTtcbiAgICBjb25zdCBjb3VudGVyID0gaXNDb3VudGVyID8gJzxzcGFuIGNsYXNzPVwidGV4dGFyZWEtY2hhcmFjdGVyLWNvdW50ZXJcIj48L3NwYW4+JyA6ICcnO1xuICAgIGxldCB0ZXh0YXJlYVN0YXRlID0gc3RyaW5nVG9Cb29sKHRoaXMucmVhZG9ubHkpID8gJyByZWFkb25seScgOiAnJztcbiAgICB0ZXh0YXJlYVN0YXRlID0gc3RyaW5nVG9Cb29sKHRoaXMuZGlzYWJsZWQpID8gJyBkaXNhYmxlZCcgOiB0ZXh0YXJlYVN0YXRlO1xuICAgIGxldCB0ZXh0YXJlYUNsYXNzID0gYGlkcy10ZXh0YXJlYS1maWVsZCAke3RoaXMudGV4dEFsaWdufWA7XG4gICAgdGV4dGFyZWFDbGFzcyArPSBzdHJpbmdUb0Jvb2wodGhpcy5yZXNpemFibGUpID8gJyByZXNpemFibGUnIDogJyc7XG4gICAgdGV4dGFyZWFDbGFzcyA9IGAgY2xhc3M9XCIke3RleHRhcmVhQ2xhc3N9XCJgO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgIDxkaXYgY2xhc3M9XCJpZHMtdGV4dGFyZWEke3RleHRhcmVhU3RhdGV9XCI+XG4gICAgICAgICR7cHJpbnRhYmxlfVxuICAgICAgICA8c2xvdCBjbGFzcz1cImhpZGRlblwiPjwvc2xvdD5cbiAgICAgICAgPGxhYmVsIGZvcj1cIiR7SUR9XCIgY2xhc3M9XCJpZHMtbGFiZWwtdGV4dCR7cmVxdWlyZWRMYWJlbENzc30ke2hpZGRlbkxhYmVsQ3NzfVwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBwYXJ0PVwibGFiZWxcIiBsYWJlbCAke3RleHRhcmVhU3RhdGV9IGNvbG9yLXVuc2V0PiR7dGhpcy5sYWJlbH08L2lkcy10ZXh0PlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQtY29udGFpbmVyICR7dGhpcy5zaXplfVwiPlxuICAgICAgICAgIDx0ZXh0YXJlYSBwYXJ0PVwidGV4dGFyZWFcIiBpZD1cIiR7SUR9XCIke3RleHRhcmVhQ2xhc3N9JHtwbGFjZWhvbGRlcn0ke3RleHRhcmVhU3RhdGV9JHttYXhsZW5ndGh9JHtyb3dzfSR7YXJpYUxhYmVsfSB2YWx1ZT1cIiR7dmFsdWV9XCI+PC90ZXh0YXJlYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgICR7Y291bnRlcn1cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge0hUTUxUZXh0QXJlYUVsZW1lbnR9IHJlZmVyZW5jZSB0byB0aGlzIGNvbXBvbmVudCdzIGlubmVyIHRleHQgaW5wdXQgZWxlbWVudFxuICAgKi9cbiAgZ2V0IGlucHV0KCk6IEhUTUxUZXh0QXJlYUVsZW1lbnQgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhJykgfHwgbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmVhZG9ubHlcbiAgICogQHJldHVybnMge0hUTUxFbGVtZW50fSB0aGUgZWxlbWVudCBpbiB0aGlzIGNvbXBvbmVudCdzIFNoYWRvdyBSb290XG4gICAqICB0aGF0IHdyYXBzIHRoZSBpbnB1dCBhbmQgYW55IHRyaWdnZXJpbmcgZWxlbWVudHMgb3IgaWNvbnNcbiAgICovXG4gIGdldCBmaWVsZENvbnRhaW5lcigpOiBIVE1MRWxlbWVudCB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcignLmZpZWxkLWNvbnRhaW5lcicpIHx8IG51bGw7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHN0YXRlIGZvciBkaXNhYmxlZCBvciByZWFkb25seVxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBUaGUgcHJvcGVydHkuXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgc2V0VGV4dGFyZWFTdGF0ZShwcm9wOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAocHJvcCA9PT0gYXR0cmlidXRlcy5SRUFET05MWSB8fCBwcm9wID09PSBhdHRyaWJ1dGVzLkRJU0FCTEVEKSB7XG4gICAgICBpZiAoIXRoaXMuc2hhZG93Um9vdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG1zZ05vZGVzID0gW10uc2xpY2UuY2FsbCh0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3JBbGwoJy52YWxpZGF0aW9uLW1lc3NhZ2UnKSk7XG4gICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBwcm9wMTogcHJvcCxcbiAgICAgICAgcHJvcDI6IHByb3AgIT09IGF0dHJpYnV0ZXMuUkVBRE9OTFkgPyBhdHRyaWJ1dGVzLlJFQURPTkxZIDogYXR0cmlidXRlcy5ESVNBQkxFRCxcbiAgICAgICAgdmFsOiBzdHJpbmdUb0Jvb2woKHRoaXMgYXMgYW55KVtwcm9wXSlcbiAgICAgIH07XG4gICAgICBpZiAob3B0aW9ucy52YWwpIHtcbiAgICAgICAgdGhpcy5pbnB1dD8ucmVtb3ZlQXR0cmlidXRlKG9wdGlvbnMucHJvcDIpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZShvcHRpb25zLnByb3AyKTtcbiAgICAgICAgdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJ2lkcy10ZXh0Jyk/LnJlbW92ZUF0dHJpYnV0ZShvcHRpb25zLnByb3AyKTtcbiAgICAgICAgbXNnTm9kZXMuZm9yRWFjaCgoeDogSFRNTEVsZW1lbnQpID0+IHguY2xhc3NMaXN0LnJlbW92ZShvcHRpb25zLnByb3AyKSk7XG5cbiAgICAgICAgdGhpcy5pbnB1dD8uc2V0QXR0cmlidXRlKG9wdGlvbnMucHJvcDEsICd0cnVlJyk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3QuYWRkKG9wdGlvbnMucHJvcDEpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcignaWRzLXRleHQnKT8uc2V0QXR0cmlidXRlKG9wdGlvbnMucHJvcDEsICd0cnVlJyk7XG4gICAgICAgIG1zZ05vZGVzLmZvckVhY2goKHg6IEhUTUxFbGVtZW50KSA9PiB4LmNsYXNzTGlzdC5hZGQob3B0aW9ucy5wcm9wMSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5pbnB1dD8ucmVtb3ZlQXR0cmlidXRlKG9wdGlvbnMucHJvcDEpO1xuICAgICAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZShvcHRpb25zLnByb3AxKTtcbiAgICAgICAgdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJ2lkcy10ZXh0Jyk/LnJlbW92ZUF0dHJpYnV0ZShvcHRpb25zLnByb3AxKTtcbiAgICAgICAgbXNnTm9kZXMuZm9yRWFjaCgoeDogSFRNTEVsZW1lbnQpID0+IHguY2xhc3NMaXN0LnJlbW92ZShvcHRpb25zLnByb3AxKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBhdXRvc2VsZWN0XG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgaGFuZGxlQXV0b3NlbGVjdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5hdXRvc2VsZWN0KSB7XG4gICAgICB0aGlzLmhhbmRsZVRleHRhcmVhRm9jdXNFdmVudCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhhbmRsZVRleHRhcmVhRm9jdXNFdmVudCgncmVtb3ZlJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBhdXRvZ3Jvd1xuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGhhbmRsZUF1dG9ncm93KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlucHV0KSB7XG4gICAgICBpZiAodGhpcy5hdXRvZ3Jvdykge1xuICAgICAgICBpZiAodGhpcy5hdXRvZ3Jvd01heEhlaWdodCkge1xuICAgICAgICAgIHRoaXMuaW5wdXQuc3R5bGUubWF4SGVpZ2h0ID0gYCR7dGhpcy5hdXRvZ3Jvd01heEhlaWdodH1weGA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbnB1dC5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICAgICAgICB0aGlzLnNldEF1dG9ncm93KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmlucHV0LnN0eWxlLm92ZXJmbG93ID0gJyc7XG4gICAgICAgIHRoaXMuaW5wdXQuc3R5bGUubWF4SGVpZ2h0ID0gJyc7XG4gICAgICAgIHRoaXMuaW5wdXQuc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNldCBCcm93c2VyXG4gICAqIHdpbGwgcmVtb3ZlIHRoaXMgc29vbiBnZXQgZW52aXJvbm1lbnQgdXRpbHMgc2V0dXBcbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBzZXRCcm93c2VyKCk6IHZvaWQge1xuICAgIGNvbnN0IHVhID0gbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCBuYXZpZ2F0b3IudmVuZG9yIHx8ICh3aW5kb3cgYXMgYW55KS5vcGVyYTtcbiAgICBjb25zdCBicm93c2VyID0gKHM6IHN0cmluZykgPT4gdWEudG9Mb3dlckNhc2UoKS5pbmRleE9mKHMpID4gLTE7XG4gICAgdGhpcy5pc1NhZmFyaSA9IGJyb3dzZXIoJ3NhZmFyaScpICYmICFicm93c2VyKCdjaHJvbWUnKSAmJiAhYnJvd3NlcignYW5kcm9pZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgbWF4IHRleHQgdmFsdWUsIHRyaW0gZXh0cmFcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIG9mIHRleHRhcmVhXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IG1heCB2YWx1ZVxuICAgKi9cbiAgZ2V0TWF4VmFsdWUodmFsdWU6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgbWF4ID0gcGFyc2VJbnQoKHRoaXMubWF4bGVuZ3RoIGFzIGFueSksIDEwKTtcbiAgICByZXR1cm4gdmFsdWUgJiYgbWF4ID4gMCA/IHZhbHVlLnN1YnN0cigwLCBtYXgpIDogdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBsYWJlbCB0ZXh0XG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBvZiBsYWJlbFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIHNldExhYmVsVGV4dCh2YWx1ZTogc3RyaW5nKTogdm9pZCB7XG4gICAgcmV0dXJuIHN1cGVyLnNldExhYmVsVGV4dCh2YWx1ZSwgYFtmb3I9XCIke0lEfVwiXWApO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBhdXRvZ3Jvd1xuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIHNldEF1dG9ncm93KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmF1dG9ncm93ICYmICF0aGlzLmF1dG9ncm93UHJvY2Vzc2luZykge1xuICAgICAgdGhpcy5hdXRvZ3Jvd1Byb2Nlc3NpbmcgPSB0cnVlO1xuICAgICAgY29uc3QgbWF4SGVpZ2h0ID0gcGFyc2VJbnQoKHRoaXMuYXV0b2dyb3dNYXhIZWlnaHQgYXMgYW55KSwgMTApIHx8IDA7XG4gICAgICBjb25zdCBvbGRIZWlnaHQgPSB0aGlzLmlucHV0Py5vZmZzZXRIZWlnaHQgfHwgMDtcblxuICAgICAgdGhpcy5hZGp1c3RIZWlnaHQob2xkSGVpZ2h0LCBtYXhIZWlnaHQpO1xuICAgICAgdGhpcy5hdXRvZ3Jvd1Byb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQWRqdXN0IGhlaWdodCB0byBnaXZlbiBlbGVtZW50XG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBvbGRIZWlnaHQgb2xkIGhlaWdodFxuICAgKiBAcGFyYW0ge251bWJlcn0gbWF4SGVpZ2h0IG1heCBoZWlnaHRcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudHxudWxsfSBpbnB1dCBUaGUgdGV4dGFyZWEgaW5wdXQgZWxlbWVudFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGFkanVzdEhlaWdodChvbGRIZWlnaHQ6IG51bWJlciwgbWF4SGVpZ2h0OiBudW1iZXIsIGlucHV0OiBIVE1MRWxlbWVudCB8IG51bGwgPSBudWxsKTogdm9pZCB7XG4gICAgY29uc3QgZWxlbSA9IGlucHV0IHx8IHRoaXMuaW5wdXQ7XG4gICAgY29uc3QgbmV3SGVpZ2h0ID0gZWxlbT8uc2Nyb2xsSGVpZ2h0O1xuXG4gICAgaWYgKGVsZW0gJiYgdHlwZW9mIG5ld0hlaWdodCA9PT0gJ251bWJlcicgJiYgKG9sZEhlaWdodCAhPT0gbmV3SGVpZ2h0KSkge1xuICAgICAgbGV0IGhlaWdodCA9IG5ld0hlaWdodDtcbiAgICAgIGlmIChvbGRIZWlnaHQgPiBuZXdIZWlnaHQpIHtcbiAgICAgICAgZWxlbS5zdHlsZS5oZWlnaHQgPSAnNXB4JztcbiAgICAgICAgaGVpZ2h0ID0gZWxlbS5zY3JvbGxIZWlnaHQ7XG4gICAgICB9XG4gICAgICBjb25zdCBpc1Njcm9sbGFibGUgPSAobWF4SGVpZ2h0ID4gMCAmJiBtYXhIZWlnaHQgPCBoZWlnaHQpO1xuICAgICAgZWxlbS5zdHlsZS5vdmVyZmxvdyA9IGlzU2Nyb2xsYWJsZSA/ICcnIDogJ2hpZGRlbic7XG4gICAgICBlbGVtLnN0eWxlLmhlaWdodCA9IGAke2hlaWdodH1weGA7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBjaGFyYWN0ZXItY291bnRlclxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGhhbmRsZUNoYXJhY3RlckNvdW50ZXIoKTogdm9pZCB7XG4gICAgbGV0IGVsZW0gPSB0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3IoJy50ZXh0YXJlYS1jaGFyYWN0ZXItY291bnRlcicpO1xuICAgIGlmICh0aGlzLmNoYXJhY3RlckNvdW50ZXIgJiYgdGhpcy5tYXhsZW5ndGgpIHtcbiAgICAgIGlmICghZWxlbSkge1xuICAgICAgICBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBlbGVtLmNsYXNzTmFtZSA9ICd0ZXh0YXJlYS1jaGFyYWN0ZXItY291bnRlcic7XG4gICAgICAgIHRoaXMuY29udGFpbmVyPy5hcHBlbmRDaGlsZChlbGVtKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudXBkYXRlQ291bnRlcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtPy5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIHByaW50YWJsZVxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfG51bGx9IHZhbHVlIG9mIHByaW50YWJsZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIGhhbmRsZVByaW50YWJsZSh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZyB8IG51bGwpOiB2b2lkIHtcbiAgICBsZXQgZWxlbSA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignLnRleHRhcmVhLXByaW50Jyk7XG4gICAgaWYgKHN0cmluZ1RvQm9vbCh0aGlzLnByaW50YWJsZSkgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgIGlmICghZWxlbSkge1xuICAgICAgICBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBlbGVtLmNsYXNzTmFtZSA9ICd0ZXh0YXJlYS1wcmludCc7XG4gICAgICAgIGVsZW0udGV4dENvbnRlbnQgPSB0aGlzLnZhbHVlO1xuICAgICAgICB0aGlzLmNvbnRhaW5lcj8ucHJlcGVuZChlbGVtKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZWxlbT8ucmVtb3ZlKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBzbG90Y2hhbmdlIGV2ZW50XG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgaGFuZGxlU2xvdGNoYW5nZUV2ZW50KCk6IHZvaWQge1xuICAgIGNvbnN0IHNsb3QgPSB0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3IoJ3Nsb3QnKTtcbiAgICB0aGlzLm9uRXZlbnQoJ3Nsb3RjaGFuZ2UnLCBzbG90LCAoKSA9PiB7XG4gICAgICBjb25zdCB2YWwgPSBzbG90Py5hc3NpZ25lZE5vZGVzKClbMF0udGV4dENvbnRlbnQ7XG4gICAgICB0aGlzLnZhbHVlID0gdGhpcy5nZXRNYXhWYWx1ZSh2YWwgfHwgJycpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBmb2N1cyBldmVudFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge3N0cmluZyB8IHVuZGVmaW5lZCB8IG51bGx9IG9wdGlvbiBJZiAncmVtb3ZlJywgd2lsbCByZW1vdmUgYXR0YWNoZWQgZXZlbnRzXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgaGFuZGxlVGV4dGFyZWFGb2N1c0V2ZW50KG9wdGlvbjogc3RyaW5nIHwgdW5kZWZpbmVkIHwgbnVsbCA9ICcnKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuaW5wdXQpIHtcbiAgICAgIGNvbnN0IGV2ZW50TmFtZSA9ICdmb2N1cyc7XG4gICAgICBpZiAob3B0aW9uID09PSAncmVtb3ZlJykge1xuICAgICAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5oYW5kbGVkRXZlbnRzPy5nZXQoZXZlbnROYW1lKTtcbiAgICAgICAgaWYgKGhhbmRsZXIgJiYgaGFuZGxlci50YXJnZXQgPT09IHRoaXMuaW5wdXQpIHtcbiAgICAgICAgICB0aGlzLm9mZkV2ZW50KGV2ZW50TmFtZSwgdGhpcy5pbnB1dCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMub25FdmVudChldmVudE5hbWUsIHRoaXMuaW5wdXQsICgpID0+IHtcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgLy8gc2FmYXJpIGhhcyBkZWxheVxuICAgICAgICAgICAgdGhpcy5pbnB1dD8uc2VsZWN0KCk7XG4gICAgICAgICAgfSwgMSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIYW5kbGUgY2hhbmdlIGV2ZW50XG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgaGFuZGxlVGV4dGFyZWFDaGFuZ2VFdmVudCgpOiB2b2lkIHtcbiAgICBjb25zdCBldmVudHMgPSBbJ2NoYW5nZScsICdpbnB1dCcsICdwcm9wZXJ0eWNoYW5nZSddO1xuICAgIGV2ZW50cy5mb3JFYWNoKChldnQpID0+IHtcbiAgICAgIHRoaXMub25FdmVudChldnQsIHRoaXMuaW5wdXQsICgpID0+IHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMuaW5wdXQ/LnZhbHVlIHx8ICcnO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogRXN0YWJsaXNoIEludGVybmFsIEV2ZW50IEhhbmRsZXJzXG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSBvYmplY3QgZm9yIGNoYWluaW5nLlxuICAgKi9cbiAgaGFuZGxlTmF0aXZlRXZlbnRzKCk6IG9iamVjdCB7XG4gICAgaWYgKHRoaXMuaW5wdXQpIHtcbiAgICAgIGNvbnN0IGV2ZW50cyA9IFsnY2hhbmdlJywgJ2lucHV0JywgJ3Byb3BlcnR5Y2hhbmdlJywgJ2ZvY3VzJywgJ3NlbGVjdCddO1xuICAgICAgZXZlbnRzLmZvckVhY2goKGV2dCkgPT4ge1xuICAgICAgICB0aGlzLm9uRXZlbnQoZXZ0LCB0aGlzLmlucHV0LCAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBUcmlnZ2VyIGV2ZW50IG9uIHBhcmVudCBhbmQgY29tcG9zZSB0aGUgYXJnc1xuICAgICAgICAgICAqIHdpbGwgZmlyZSBuYXRpdmVFdmVudHMuXG4gICAgICAgICAgICogQHByaXZhdGVcbiAgICAgICAgICAgKiBAcGFyYW0ge29iamVjdH0gZWxlbSBBY3R1YWwgZXZlbnRcbiAgICAgICAgICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVGhlIHVwZGF0ZWQgZWxlbWVudCB2YWx1ZVxuICAgICAgICAgICAqL1xuICAgICAgICAgIHRoaXMudHJpZ2dlckV2ZW50KGUudHlwZSwgdGhpcywge1xuICAgICAgICAgICAgZGV0YWlsOiB7IGVsZW06IHRoaXMsIG5hdGl2ZUV2ZW50OiBlLCB2YWx1ZTogdGhpcy52YWx1ZSB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZSBldmVudHNcbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICAjYXR0YWNoRXZlbnRIYW5kbGVycygpOiB2b2lkIHtcbiAgICB0aGlzLnNldEJyb3dzZXIoKTtcbiAgICB0aGlzLmhhbmRsZUF1dG9zZWxlY3QoKTtcbiAgICB0aGlzLmhhbmRsZUF1dG9ncm93KCk7XG4gICAgdGhpcy5oYW5kbGVTbG90Y2hhbmdlRXZlbnQoKTtcbiAgICB0aGlzLmhhbmRsZU5hdGl2ZUV2ZW50cygpO1xuICAgIHRoaXMuaGFuZGxlVGV4dGFyZWFDaGFuZ2VFdmVudCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIHByaW50YXJlYSB3aXRoIGN1cnJlbnQgdmFsdWUuXG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgdXBkYXRlUHJpbnRhcmVhKCk6IHZvaWQge1xuICAgIGNvbnN0IHByaW50YXJlYUVsID0gdGhpcy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yKCcudGV4dGFyZWEtcHJpbnQnKTtcbiAgICBpZiAocHJpbnRhcmVhRWwpIHtcbiAgICAgIHByaW50YXJlYUVsLnRleHRDb250ZW50ID0gdGhpcy52YWx1ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ291bnRzIHRoZSBudW1iZXIgb2YgbGluZSBicmVha3MgaW4gYSBzdHJpbmdcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHMgVGhlIHN0cmluZyB0byB0ZXN0LlxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBUaGUgbnVtYmVyIG9mIGZvdW5kIGxpbmUgY291bnRMaW5lYnJlYWtzXG4gICAqL1xuICBjb3VudExpbmVicmVha3Moczogc3RyaW5nKTogbnVtYmVyIHtcbiAgICByZXR1cm4gKHMubWF0Y2goL1xcbi9nKSB8fCBbXSkubGVuZ3RoO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIGRlc2NyaXB0aXZlIG1hcmt1cCAoY291bnRlciwgZXRjKSB0byBub3RpZnkgdGhlIHVzZXIgaG93IG1hbnlcbiAgICogY2hhcmFjdGVycyBjYW4gYmUgdHlwZWQuXG4gICAqIEBwcml2YXRlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgdXBkYXRlQ291bnRlcigpOiB2b2lkIHtcbiAgICBjb25zdCBlbGVtID0gdGhpcy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yKCcudGV4dGFyZWEtY2hhcmFjdGVyLWNvdW50ZXInKTtcbiAgICBpZiAoZWxlbSAmJiB0aGlzLm1heGxlbmd0aCkge1xuICAgICAgY29uc3QgdmFsID0gdGhpcy52YWx1ZSB8fCAnJztcbiAgICAgIGNvbnN0IGxpbmVicmVha3MgPSB0aGlzLmlzU2FmYXJpID8gdGhpcy5jb3VudExpbmVicmVha3ModmFsKSA6IDA7XG4gICAgICBjb25zdCBsZW5ndGggPSB2YWwubGVuZ3RoICsgbGluZWJyZWFrcztcbiAgICAgIGNvbnN0IG1heCA9IHBhcnNlSW50KHRoaXMubWF4bGVuZ3RoLCAxMCk7XG4gICAgICBjb25zdCByZW1haW5pbmcgPSAobWF4IC0gbGVuZ3RoKTtcbiAgICAgIGNvbnN0IGNzc0NsYXNzID0gJ2FsbW9zdC1lbXB0eSc7XG4gICAgICBsZXQgdGV4dCA9IHRoaXMuY2hhclJlbWFpbmluZ1RleHQucmVwbGFjZSgnezB9JywgcmVtYWluaW5nLnRvU3RyaW5nKCkpO1xuXG4gICAgICBpZiAobGVuZ3RoID49IG1heCkge1xuICAgICAgICB0ZXh0ID0gKHRoaXMuY2hhck1heFRleHQgPT09IENIQVJfTUFYX1RFWFQpID8gYCR7dGhpcy5jaGFyTWF4VGV4dH0gJHttYXh9YCA6IHRoaXMuY2hhck1heFRleHQucmVwbGFjZSgnezB9JywgbWF4LnRvU3RyaW5nKCkpO1xuICAgICAgICBlbGVtLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNzc0NsYXNzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW0udGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICBpZiAocmVtYWluaW5nIDwgMTApIHtcbiAgICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY3NzQ2xhc3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVsZW0uY2xhc3NMaXN0LnJlbW92ZShjc3NDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRleHRhcmVhIGhlaWdodCB0byBiZSBhdXRvZ3Jvd1xuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfSB2YWx1ZSBJZiB0cnVlIHdpbGwgc2V0IGBhdXRvZ3Jvd2AgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgYXV0b2dyb3codmFsdWU6IGJvb2xlYW4gfCBzdHJpbmcpIHtcbiAgICBjb25zdCB2YWwgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmICh2YWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQVVUT0dST1csIHZhbC50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5BVVRPR1JPVyk7XG4gICAgfVxuICAgIHRoaXMuaGFuZGxlQXV0b2dyb3coKTtcbiAgfVxuXG4gIGdldCBhdXRvZ3JvdygpOiBib29sZWFuIHsgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9HUk9XKSk7IH1cblxuICAvKipcbiAgICogU2V0IHRleHRhcmVhIGhlaWdodCB0byBiZSBhdXRvZ3Jvdy1tYXgtaGVpZ2h0XG4gICAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbH0gdmFsdWUgb2YgYGF1dG9ncm93LW1heC1oZWlnaHRgIGF0dHJpYnV0ZVxuICAgKi9cbiAgc2V0IGF1dG9ncm93TWF4SGVpZ2h0KHZhbHVlOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9HUk9XX01BWF9IRUlHSFQsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9HUk9XX01BWF9IRUlHSFQpO1xuICAgIH1cbiAgICB0aGlzLmhhbmRsZUF1dG9ncm93KCk7XG4gIH1cblxuICBnZXQgYXV0b2dyb3dNYXhIZWlnaHQoKTogc3RyaW5nIHwgbnVsbCB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9HUk9XX01BWF9IRUlHSFQpOyB9XG5cbiAgLyoqXG4gICAqIFdoZW4gc2V0IHRoZSB0ZXh0YXJlYSB3aWxsIHNlbGVjdCBhbGwgdGV4dCBvbiBmb2N1c1xuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfSB2YWx1ZSBJZiB0cnVlIHdpbGwgc2V0IGBhdXRvc2VsZWN0YCBhdHRyaWJ1dGVcbiAgICovXG4gIHNldCBhdXRvc2VsZWN0KHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9TRUxFQ1QsIHZhbC50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5BVVRPU0VMRUNUKTtcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVBdXRvc2VsZWN0KCk7XG4gIH1cblxuICBnZXQgYXV0b3NlbGVjdCgpOiBib29sZWFuIHsgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9TRUxFQ1QpKTsgfVxuXG4gIC8qKlxuICAgKiBTZXQgYGNoYXItbWF4LXRleHRgIHRleHQgZm9yIGNoYXJhY3RlciBjb3VudGVyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBvZiB0aGUgYGNoYXItbWF4LXRleHRgIHByb3BlcnR5XG4gICAqL1xuICBzZXQgY2hhck1heFRleHQodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5DSEFSX01BWF9URVhULCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5DSEFSX01BWF9URVhUKTtcbiAgfVxuXG4gIGdldCBjaGFyTWF4VGV4dCgpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5DSEFSX01BWF9URVhUKSB8fCBDSEFSX01BWF9URVhUOyB9XG5cbiAgLyoqXG4gICAqIFNldCBgY2hhci1yZW1haW5pbmctdGV4dGAgdGV4dCBmb3IgY2hhcmFjdGVyIGNvdW50ZXJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIG9mIHRoZSBgY2hhci1yZW1haW5pbmctdGV4dGAgcHJvcGVydHlcbiAgICovXG4gIHNldCBjaGFyUmVtYWluaW5nVGV4dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNIQVJfUkVNQUlOSU5HX1RFWFQsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNIQVJfUkVNQUlOSU5HX1RFWFQpO1xuICB9XG5cbiAgZ2V0IGNoYXJSZW1haW5pbmdUZXh0KCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0hBUl9SRU1BSU5JTkdfVEVYVCkgfHwgQ0hBUl9SRU1BSU5JTkdfVEVYVDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGBjaGFyYWN0ZXItY291bnRlcmAgZmVhdHVyZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfSB2YWx1ZSBJZiB0cnVlIHdpbGwgc2V0IGBjaGFyYWN0ZXItY291bnRlcmAgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgY2hhcmFjdGVyQ291bnRlcih2YWx1ZTogYm9vbGVhbiB8IHN0cmluZykge1xuICAgIGNvbnN0IHZhbCA9IHN0cmluZ1RvQm9vbCh2YWx1ZSk7XG4gICAgaWYgKHZhbCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5DSEFSQUNURVJfQ09VTlRFUiwgdmFsLnRvU3RyaW5nKCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNIQVJBQ1RFUl9DT1VOVEVSKTtcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVDaGFyYWN0ZXJDb3VudGVyKCk7XG4gIH1cblxuICBnZXQgY2hhcmFjdGVyQ291bnRlcigpOiBib29sZWFuIHtcbiAgICBjb25zdCB2YWwgPSB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNIQVJBQ1RFUl9DT1VOVEVSKTtcbiAgICByZXR1cm4gdmFsICE9PSBudWxsID8gc3RyaW5nVG9Cb29sKHZhbCkgOiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGV4dGFyZWEgdG8gZGlzYWJsZWRcbiAgICogQHBhcmFtIHtib29sZWFufHN0cmluZ30gdmFsdWUgSWYgdHJ1ZSB3aWxsIHNldCBgZGlzYWJsZWRgIGF0dHJpYnV0ZVxuICAgKi9cbiAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkRJU0FCTEVELCB2YWwudG9TdHJpbmcoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQpO1xuICAgIH1cbiAgICB0aGlzLnNldFRleHRhcmVhU3RhdGUoYXR0cmlidXRlcy5ESVNBQkxFRCk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKTogYm9vbGVhbiB7IHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVNBQkxFRCkpOyB9XG5cbiAgLyoqXG4gICAqIGludGVybmFsIHJlZmVyZW5jZSB0byBhIGxhYmVsIGVsZW1lbnQgYSB1c2VyIHByb3ZpZGVzXG4gICAqL1xuICAjbGFiZWxFbD86IEhUTUxMYWJlbEVsZW1lbnQ7XG5cbiAgLyoqXG4gICAqIEByZWFkb25seVxuICAgKiBAcmV0dXJucyB7SFRNTExhYmVsRWxlbWVudH0gdGhlIGlubmVyIGBsYWJlbGAgZWxlbWVudFxuICAgKi9cbiAgZ2V0IGxhYmVsRWwoKTogSFRNTExhYmVsRWxlbWVudCB8IG51bGwge1xuICAgIHJldHVybiB0aGlzLiNsYWJlbEVsIHx8IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcihgW2Zvcj1cIiR7SUR9XCJdYCkgfHwgbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGBtYXhsZW5ndGhgIG9mIHRleHRhcmVhXG4gICAqIEBwYXJhbSB7c3RyaW5nfG51bGx9IHZhbHVlIG9mIHRoZSBgbWF4bGVuZ3RoYCBwcm9wZXJ0eVxuICAgKi9cbiAgc2V0IG1heGxlbmd0aCh2YWx1ZTogc3RyaW5nIHwgbnVsbCkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5NQVhMRU5HVEgsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgdGhpcy5pbnB1dD8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTUFYTEVOR1RILCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5NQVhMRU5HVEgpO1xuICAgICAgdGhpcy5pbnB1dD8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuTUFYTEVOR1RIKTtcbiAgICB9XG4gICAgdGhpcy5oYW5kbGVDaGFyYWN0ZXJDb3VudGVyKCk7XG4gIH1cblxuICBnZXQgbWF4bGVuZ3RoKCk6IHN0cmluZyB8IG51bGwgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5NQVhMRU5HVEgpOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgYHBsYWNlaG9sZGVyYCBvZiB0ZXh0YXJlYVxuICAgKiBAcGFyYW0ge3N0cmluZ3xudWxsfSB2YWx1ZSBvZiB0aGUgYHBsYWNlaG9sZGVyYCBwcm9wZXJ0eVxuICAgKi9cbiAgc2V0IHBsYWNlaG9sZGVyKHZhbHVlOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlBMQUNFSE9MREVSLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHRoaXMuaW5wdXQ/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlBMQUNFSE9MREVSLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5QTEFDRUhPTERFUik7XG4gICAgdGhpcy5pbnB1dD8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuUExBQ0VIT0xERVIpO1xuICB9XG5cbiAgZ2V0IHBsYWNlaG9sZGVyKCk6IHN0cmluZyB8IG51bGwgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5QTEFDRUhPTERFUik7IH1cblxuICAvKipcbiAgICogU2V0IHRoZSBgcHJpbnRhYmxlYCBvZiB0ZXh0YXJlYVxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfG51bGx9IHZhbHVlIElmIHRydWUgd2lsbCBzZXQgYHByaW50YWJsZWAgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgcHJpbnRhYmxlKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nIHwgbnVsbCkge1xuICAgIGNvbnN0IHZhbCA9IHN0cmluZ1RvQm9vbCh2YWx1ZSk7XG4gICAgaWYgKHZhbCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5QUklOVEFCTEUsIHZhbC50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5QUklOVEFCTEUpO1xuICAgIH1cbiAgICB0aGlzLmhhbmRsZVByaW50YWJsZSh2YWx1ZSk7XG4gIH1cblxuICBnZXQgcHJpbnRhYmxlKCk6IHN0cmluZyB8IG51bGwgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5QUklOVEFCTEUpOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgdGV4dGFyZWEgdG8gcmVhZG9ubHkgc3RhdGVcbiAgICogQHBhcmFtIHtib29sZWFufHN0cmluZ30gdmFsdWUgSWYgdHJ1ZSB3aWxsIHNldCBgcmVhZG9ubHlgIGF0dHJpYnV0ZVxuICAgKi9cbiAgc2V0IHJlYWRvbmx5KHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlJFQURPTkxZLCB2YWwudG9TdHJpbmcoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuUkVBRE9OTFkpO1xuICAgIH1cbiAgICB0aGlzLnNldFRleHRhcmVhU3RhdGUoYXR0cmlidXRlcy5SRUFET05MWSk7XG4gIH1cblxuICBnZXQgcmVhZG9ubHkoKTogYm9vbGVhbiB7IHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5SRUFET05MWSkpOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgdGV4dGFyZWEgdG8gcmVzaXphYmxlIHN0YXRlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbnxzdHJpbmd9IHZhbHVlIElmIHRydWUgd2lsbCBzZXQgYHJlc2l6YWJsZWAgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgcmVzaXphYmxlKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlJFU0laQUJMRSwgdmFsLnRvU3RyaW5nKCkpO1xuICAgICAgdGhpcy5pbnB1dD8uY2xhc3NMaXN0LmFkZChhdHRyaWJ1dGVzLlJFU0laQUJMRSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuUkVTSVpBQkxFKTtcbiAgICAgIHRoaXMuaW5wdXQ/LmNsYXNzTGlzdC5yZW1vdmUoYXR0cmlidXRlcy5SRVNJWkFCTEUpO1xuICAgIH1cbiAgfVxuXG4gIGdldCByZXNpemFibGUoKTogYm9vbGVhbiB7IHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5SRVNJWkFCTEUpKTsgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHJvd3MgZm9yIHRleHRhcmVhXG4gICAqIEBwYXJhbSB7c3RyaW5nfG51bGx9IHZhbHVlIElmIHRydWUgd2lsbCBzZXQgYHJvd3NgIGF0dHJpYnV0ZVxuICAgKi9cbiAgc2V0IHJvd3ModmFsdWU6IHN0cmluZyB8IG51bGwpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuUk9XUywgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICB0aGlzLmlucHV0Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ST1dTLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5ST1dTKTtcbiAgICAgIHRoaXMuaW5wdXQ/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlJPV1MpO1xuICAgIH1cbiAgfVxuXG4gIGdldCByb3dzKCk6IHN0cmluZyB8IG51bGwgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ST1dTKTsgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHNpemUgKHdpZHRoKSBvZiB0ZXh0YXJlYVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgW3NtLCBtZCwgbGcsIGZ1bGxdXG4gICAqL1xuICBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgY29uc3QgZmllbGRDb250YWluZXIgPSB0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3IoJy5maWVsZC1jb250YWluZXInKTtcbiAgICBjb25zdCBzaXplID0gU0laRVNbdmFsdWVdO1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0laRSwgc2l6ZSB8fCBTSVpFUy5kZWZhdWx0KTtcbiAgICBmaWVsZENvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZSguLi5PYmplY3QudmFsdWVzKFNJWkVTKSk7XG4gICAgZmllbGRDb250YWluZXI/LmNsYXNzTGlzdC5hZGQoc2l6ZSB8fCBTSVpFUy5kZWZhdWx0KTtcbiAgfVxuXG4gIGdldCBzaXplKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNJWkUpIHx8IFNJWkVTLmRlZmF1bHQ7IH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgdGV4dCBhbGlnbm1lbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFtsZWZ0LCBjZW50ZXIsIHJpZ2h0XVxuICAgKi9cbiAgc2V0IHRleHRBbGlnbih2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlID09PSAnc3RhcnQnKSB2YWx1ZSA9ICdsZWZ0JztcbiAgICBlbHNlIGlmICh2YWx1ZSA9PT0gJ2VuZCcpIHZhbHVlID0gJ3JpZ2h0JztcbiAgICBjb25zdCB0ZXh0QWxpZ24gPSBURVhUX0FMSUdOW3ZhbHVlXTtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlRFWFRfQUxJR04sIHRleHRBbGlnbiB8fCBURVhUX0FMSUdOLmRlZmF1bHQpO1xuICAgIHRoaXMuaW5wdXQ/LmNsYXNzTGlzdC5yZW1vdmUoLi4uT2JqZWN0LnZhbHVlcyhURVhUX0FMSUdOKSk7XG4gICAgdGhpcy5pbnB1dD8uY2xhc3NMaXN0LmFkZCh0ZXh0QWxpZ24gfHwgVEVYVF9BTElHTi5kZWZhdWx0KTtcbiAgfVxuXG4gIGdldCB0ZXh0QWxpZ24oKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVEVYVF9BTElHTikgfHwgVEVYVF9BTElHTi5kZWZhdWx0OyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgYHZhbHVlYCBvZiB0ZXh0YXJlYVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsIHRoZSB2YWx1ZSBwcm9wZXJ0eVxuICAgKi9cbiAgc2V0IHZhbHVlKHZhbDogc3RyaW5nKSB7XG4gICAgY29uc3QgdiA9IHZhbCB8fCAnJztcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTFVFLCB2KTtcbiAgICBpZiAodGhpcy5pbnB1dCAmJiB0aGlzLmlucHV0LnZhbHVlICE9PSB2KSB7XG4gICAgICB0aGlzLmlucHV0LnZhbHVlID0gdGhpcy5nZXRNYXhWYWx1ZSh2KTtcbiAgICAgIHRoaXMuaW5wdXQuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScsIHsgYnViYmxlczogdHJ1ZSB9KSk7XG4gICAgICB0aGlzLnJlc2V0RGlydHlUcmFja2VyKCk7XG4gICAgfVxuICAgIHRoaXMudXBkYXRlQ291bnRlcigpO1xuICAgIHRoaXMudXBkYXRlUHJpbnRhcmVhKCk7XG4gICAgdGhpcy5zZXRBdXRvZ3JvdygpO1xuICB9XG5cbiAgZ2V0IHZhbHVlKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTFVFKSB8fCAnJzsgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-textarea/ids-textarea.ts\n");

/***/ })

}]);