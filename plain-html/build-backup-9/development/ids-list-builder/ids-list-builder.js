/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/ids-list-builder/demos/index.ts":
/*!********************************************************!*\
  !*** ./src/components/ids-list-builder/demos/index.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ids_list_builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ids-list-builder */ \"./src/components/ids-list-builder/ids-list-builder.ts\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbGlzdC1idWlsZGVyL2RlbW9zL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7O0FBQ08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1saXN0LWJ1aWxkZXIvZGVtb3MvaW5kZXgudHM/MDJjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTdXBwb3J0aW5nIGNvbXBvbmVudHNcbmltcG9ydCAnLi4vaWRzLWxpc3QtYnVpbGRlcic7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-list-builder/demos/index.ts\n");

/***/ }),

/***/ "./src/components/ids-list-builder/ids-list-builder.ts":
/*!*************************************************************!*\
  !*** ./src/components/ids-list-builder/ids-list-builder.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsListBuilder)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _ids_input_ids_input__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ids-input/ids-input */ \"./src/components/ids-input/ids-input.ts\");\n/* harmony import */ var _ids_toolbar_ids_toolbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ids-toolbar/ids-toolbar */ \"./src/components/ids-toolbar/ids-toolbar.ts\");\n/* harmony import */ var _ids_list_view_ids_list_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-list-view/ids-list-view */ \"./src/components/ids-list-view/ids-list-view.ts\");\n/* harmony import */ var _ids_list_builder_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ids-list-builder.scss */ \"./src/components/ids-list-builder/ids-list-builder.scss\");\n/* harmony import */ var _ids_swappable_ids_swappable_item__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ids-swappable/ids-swappable-item */ \"./src/components/ids-swappable/ids-swappable-item.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\nlet IdsListBuilder = class extends _ids_list_view_ids_list_view__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  /**\n   * Call the constructor and then initialize\n   */\n  constructor() {\n    super();\n  }\n  /** Active editor of the selected list item */\n  #selectedLiEditor = null;\n  /**\n   * A clone of the list item being dragged,\n   * it appears during drag to help visualize where the dragged item's position\n   */\n  placeholder;\n  /**\n   * List of actions can be performed\n   */\n  actions = {\n    ADD: \"add\",\n    EDIT: \"edit\",\n    DELETE: \"delete\",\n    MOVE_UP: \"move-up\",\n    MOVE_DOWN: \"move-down\"\n  };\n  connectedCallback() {\n    this.sortable = true;\n    this.#initToolbar();\n    super.connectedCallback();\n    this.#attachEventListeners();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array<string>} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes\n    ];\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    return `\n      <div class=\"ids-list-builder\">\n        <div class=\"toolbar-container\" part=\"toolbar-container\">\n          <slot name=\"toolbar\"></slot>\n        </div>\n        ${super.template()}\n      </div>\n    `;\n  }\n  /**\n   * Get toolbar template\n   * @returns {string} The template\n   */\n  toolbarTemplate() {\n    const a = this.actions;\n    return `\n      <ids-toolbar slot=\"toolbar\" type=\"formatter\" tabbable=\"true\">\n        <ids-toolbar-section type=\"buttonset\">\n          ${this.buttonTemplate({ action: a.ADD, icon: \"add\", text: \"Add New\" })}\n          <ids-separator vertical></ids-separator>\n          ${this.buttonTemplate({ action: a.MOVE_UP, icon: \"arrow-up\", text: \"Move Up\" })}\n          ${this.buttonTemplate({ action: a.MOVE_DOWN, icon: \"arrow-down\", text: \"Move Down\" })}\n          <ids-separator vertical></ids-separator>\n          ${this.buttonTemplate({ action: a.EDIT, icon: \"edit\", text: \"Edit\" })}\n          ${this.buttonTemplate({ action: a.DELETE, icon: \"delete\", text: \"Delete\" })}\n        </ids-toolbar-section>\n      </ids-toolbar>\n    `;\n  }\n  /**\n   * Get toolbar button template\n   * @param {object} [options] The button options\n   * @param {string} [options.action] The button action\n   * @param {string} [options.icon] The button icon\n   * @param {string} [options.text] The button text\n   * @returns {string} The template\n   */\n  buttonTemplate(options) {\n    const { action, icon, text } = options;\n    return `\n      <ids-button list-builder-action=\"${action}\" tooltip=\"${text}\" color-variant=\"alternate-formatter\">\n        <span class=\"audible\">${text}</span>\n        <ids-icon icon=\"${icon}\"></ids-icon>\n      </ids-button>\n    `;\n  }\n  /**\n   * Init the toolbar\n   * @private\n   * @returns {void}\n   */\n  #initToolbar() {\n    const slot = this.querySelector('[slot=\"toolbar\"]');\n    if (!slot) {\n      this.insertAdjacentHTML(\"afterbegin\", this.toolbarTemplate());\n    }\n  }\n  /**\n   * Get the parent element\n   * @returns {IdsToolbar|null} the parent element\n   */\n  get parentEl() {\n    return this.shadowRoot?.querySelector(\"ids-swappable\");\n  }\n  /**\n   * Get the toolbar element\n   * @returns {IdsToolbar|null} the toolbar element\n   */\n  get toolbar() {\n    return this.querySelector(\"ids-toolbar\");\n  }\n  /**\n   * Set the selection mode of the listview\n   * @param {string} value true to use virtual scrolling\n   */\n  set selectable(value) {\n    super.selectable = value;\n  }\n  get selectable() {\n    return super.selectable;\n  }\n  get dataKeys() {\n    return super.dataKeys;\n  }\n  set dataKeys(val) {\n    super.dataKeys = val;\n  }\n  get data() {\n    return super.data;\n  }\n  /**\n   * Set the data set of the list\n   * @param {Array<any>} val The list of items\n   */\n  set data(val) {\n    super.data = val;\n    this.#attachEventListeners();\n  }\n  /**\n   * Attaches all the listeners which allow for clicking,\n   * dragging, and keyboard interaction with the list items\n   * @private\n   * @returns {void}\n   */\n  #attachEventListeners() {\n    this.#attachClickListeners();\n    this.#attachKeyboardListeners();\n  }\n  /**\n   * Removes and unfocuses any active list item editor after updating the list item's value\n   * @private\n   * @returns {void}\n   */\n  #unfocusAnySelectedLiEditor() {\n    if (this.#selectedLiEditor) {\n      this.#removeSelectedLiEditor();\n      this.updateDataFromDOM();\n    }\n  }\n  /**\n   * Helper function to update the list item inner text with the editor's input value\n   * @private\n   * @returns {void}\n   */\n  #updateSelectedLiWithEditorValue() {\n    const listItem = this.selectedLi?.querySelector('div[part=\"list-item\"]');\n    const textElem = listItem?.querySelector(\"ids-text\");\n    if (textElem)\n      textElem.innerHTML = this.#selectedLiEditor?.value ?? \"\";\n  }\n  /**\n   * Helper function to remove the editor element from the DOM\n   * @private\n   * @returns {void}\n   */\n  #removeSelectedLiEditor() {\n    this.offEvent(\"keyup\", this.#selectedLiEditor);\n    if (this.#selectedLiEditor) {\n      this.#selectedLiEditor?.parentNode?.classList.remove(\"is-editing\");\n      this.#selectedLiEditor.remove();\n    }\n    this.#selectedLiEditor = null;\n  }\n  /**\n   * Helper function to insert an editor into the DOM and hide the inner text of the list item\n   * @param {boolean | null} newEntry whether or not this is an editor for a new or pre-existing list item\n   * @private\n   * @returns {void}\n   */\n  #insertSelectedLiWithEditor(newEntry = false) {\n    if (this.selectedLi) {\n      this.triggerEvent(\"itemChange\", this, {\n        detail: this.getListItemData(this.selectedLi)\n      });\n      if (!this.#selectedLiEditor) {\n        const i = new _ids_input_ids_input__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        const selectorStr = this.selectable === \"single\" ? 'div[part=\"list-item\"]' : \".list-item-content\";\n        const listItem = this.selectedLi.querySelector(selectorStr);\n        listItem?.insertBefore(i, listItem.querySelector(\"ids-text\"));\n        listItem?.classList.add(\"is-editing\");\n        this.#selectedLiEditor = i;\n        i.value = newEntry ? \"New Value\" : listItem?.querySelector(\"ids-text\")?.innerHTML;\n        i.autoselect = \"true\";\n        i.noMargins = \"true\";\n        i.colorVariant = \"alternate\";\n        i.focus();\n        this.onEvent(\"keyup\", i, () => this.#updateSelectedLiWithEditorValue());\n      } else {\n        this.#selectedLiEditor.focus();\n      }\n    }\n  }\n  get selectedLi() {\n    return this.shadowRoot?.querySelector(\"ids-swappable-item[selected]\");\n  }\n  get allSelectedLi() {\n    return this.shadowRoot?.querySelectorAll(\"ids-swappable-item[selected]\");\n  }\n  /**\n   * Remove selected list item\n   * @private\n   * @returns {void}\n   */\n  #removeAllSelectedLi() {\n    const items = this.allSelectedLi || [];\n    const indexOfItems = [];\n    for (const item of items) {\n      indexOfItems.push(item.getAttribute(\"index\"));\n      this.triggerEvent(\"itemDelete\", this, {\n        detail: this.getListItemData(item)\n      });\n      item.remove();\n      if (this.#selectedLiEditor)\n        this.#selectedLiEditor = null;\n    }\n    this.resetIndices();\n    this.updateDataFromDOM();\n    for (const index of indexOfItems) {\n      const liItem = this.shadowRoot?.querySelector(`ids-swappable-item[index=\"${index}\"]`);\n      if (liItem) {\n        this.toggleSelectedLi(liItem);\n      }\n    }\n  }\n  /**\n   * Helper function for swapping nodes in the list item -- used when dragging list items or clicking the up/down arrows\n   * @param {Node} nodeA the first node\n   * @param {Node} nodeB the second node\n   */\n  swap(nodeA, nodeB) {\n    nodeB.parentNode?.insertBefore(nodeA, nodeB);\n  }\n  /**\n   * Add new item\n   * @returns {void}\n   */\n  add() {\n    if (this.selectable && this.selectable !== \"single\") {\n      const items = [...this.allSelectedLi || []];\n      if (items.length > 1) {\n        items.shift();\n        items.forEach((item) => this.toggleSelectedAttribute(item, false));\n      }\n    }\n    this.#unfocusAnySelectedLiEditor();\n    let newSwappableItem;\n    if (!this.data.length) {\n      const newItemData = {};\n      this.dataKeys.forEach((key) => {\n        newItemData[key] = \"New Value\";\n      });\n      this.shadowRoot?.querySelector(\".ids-list-builder\")?.remove();\n      this.data = [newItemData];\n      this.redraw?.();\n      newSwappableItem = this.shadowRoot?.querySelector(\"ids-swappable-item\");\n    } else {\n      const selectionNull = !this.selectedLi;\n      let targetDraggableItem = selectionNull ? this.shadowRoot?.querySelector(\"ids-swappable-item\") : this.selectedLi;\n      if (!targetDraggableItem) {\n        targetDraggableItem = new _ids_swappable_ids_swappable_item__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n      }\n      newSwappableItem = targetDraggableItem.cloneNode(true);\n      const insertionLocation = selectionNull ? targetDraggableItem : targetDraggableItem.nextSibling;\n      if (targetDraggableItem.parentNode) {\n        targetDraggableItem.parentNode.insertBefore(newSwappableItem, insertionLocation);\n        targetDraggableItem.removeAttribute(\"selected\");\n      }\n    }\n    newSwappableItem?.setAttribute(\"selected\", \"\");\n    const listItem = newSwappableItem?.querySelector('div[part=\"list-item\"]');\n    const listItemText = listItem?.querySelector(\"ids-text\");\n    if (listItemText)\n      listItemText.innerHTML = \"New Value\";\n    if (listItem?.getAttribute(\"selected\"))\n      listItem.removeAttribute(\"selected\");\n    this.resetIndices();\n    const newEntry = true;\n    this.#insertSelectedLiWithEditor(newEntry);\n    this.focusLi(newSwappableItem);\n    this.#attachClickListenersForLi(newSwappableItem);\n    this.#attachKeyboardListenersForLi(newSwappableItem);\n    this.triggerEvent(\"itemAdd\", this, { detail: this.getListItemData(newSwappableItem) });\n  }\n  /**\n   * Delete selected\n   * @returns {void}\n   */\n  delete() {\n    this.#removeAllSelectedLi();\n  }\n  /**\n   * Edit selected item\n   * @returns {void}\n   */\n  edit() {\n    this.#insertSelectedLiWithEditor();\n  }\n  /**\n   * Move up selected\n   * @returns {void}\n   */\n  moveUp() {\n    if (this.selectedLi) {\n      this.#unfocusAnySelectedLiEditor();\n      let isMoved = false;\n      const items = [...this.allSelectedLi || []];\n      const prev = this.selectedLi?.previousElementSibling;\n      if (items.length > 1) {\n        if (prev) {\n          isMoved = true;\n          prev.before(...items);\n        } else {\n          const shouldMove = items.some((item, i) => String(i + 1) !== item.getAttribute(\"aria-posinset\"));\n          if (shouldMove) {\n            isMoved = true;\n            this.parentEl?.prepend(...items);\n          }\n        }\n      } else if (prev) {\n        isMoved = true;\n        this.swap(this.selectedLi, prev);\n      }\n      if (isMoved) {\n        this.resetIndices();\n        this.updateDataFromDOM();\n        this.triggerEvent(\"itemMoveUp\", this, { detail: { dataSet: this.data } });\n      }\n    }\n  }\n  /**\n   * Move down selected\n   * @returns {void}\n   */\n  moveDown() {\n    if (this.selectedLi) {\n      this.#unfocusAnySelectedLiEditor();\n      let isMoved = false;\n      const items = [...this.allSelectedLi || []];\n      const len = items.length;\n      let next = this.selectedLi?.nextElementSibling;\n      if (len > 1) {\n        next = items[len - 1]?.nextElementSibling;\n        if (next) {\n          isMoved = true;\n          next.after(...items);\n        } else {\n          const size = Number.parseInt(items[0].getAttribute(\"aria-setsize\"), 10);\n          const shouldMove = items.some((item, i) => String(size - (len - 1) + i) !== item.getAttribute(\"aria-posinset\"));\n          if (shouldMove) {\n            isMoved = true;\n            this.parentEl?.append(...items);\n          }\n        }\n      } else if (next) {\n        isMoved = true;\n        this.swap(next, this.selectedLi);\n      }\n      if (isMoved) {\n        this.resetIndices();\n        this.updateDataFromDOM();\n        this.triggerEvent(\"itemMoveDown\", this, { detail: { dataSet: this.data } });\n      }\n    }\n  }\n  /**\n   * Handle given action.\n   * @private\n   * @param {string} action The action\n   * @returns {void}\n   */\n  #handleAction(action) {\n    const a = this.actions;\n    switch (action) {\n      case a.ADD:\n        this.add();\n        break;\n      case a.DELETE:\n        this.delete();\n        break;\n      case a.EDIT:\n        this.edit();\n        break;\n      case a.MOVE_DOWN:\n        this.moveDown();\n        break;\n      case a.MOVE_UP:\n        this.moveUp();\n        break;\n      default:\n        break;\n    }\n  }\n  /**\n   * Attaches functionality for toolbar button interaction\n   * @private\n   * @returns {void}\n   */\n  #attachClickListeners() {\n    this.onEvent(\"selected.list-builder-toolbar\", this.toolbar, (e) => {\n      e.stopImmediatePropagation();\n      const action = e.detail?.elem?.getAttribute(\"list-builder-action\");\n      this.#handleAction(action);\n    });\n    this.offEvent(\"afterdragend.listbuilder\", this.container);\n    this.onEvent(\"afterdragend.listbuilder\", this.container, (e) => {\n      const editableItem = e.detail?.elem?.querySelector(\".is-editing\");\n      if (editableItem)\n        this.#selectedLiEditor?.focus();\n    });\n    this.getAllSwappableItems()?.forEach((li) => {\n      this.#attachClickListenersForLi(li);\n    });\n  }\n  /**\n   * Add/remove the editor in one function,\n   * used when `Enter` key is hit on a selected list item\n   * @private\n   * @returns {void}\n   */\n  #toggleEditor() {\n    if (this.selectedLi) {\n      if (!this.#selectedLiEditor) {\n        this.#insertSelectedLiWithEditor();\n      } else {\n        this.#unfocusAnySelectedLiEditor();\n      }\n      this.focusLi(this.selectedLi);\n    }\n  }\n  #attachKeyboardListeners() {\n    this.getAllSwappableItems()?.forEach((li) => {\n      this.#attachKeyboardListenersForLi(li);\n    });\n  }\n  /**\n   * Helper function to attach mouse events to each individual item\n   * @private\n   * @param {any} li the list item\n   * @returns {void}\n   */\n  #attachClickListenersForLi(li) {\n    li.offEvent(\"click\");\n    this.offEvent(\"click\", li);\n    this.onEvent(\"click\", li, () => {\n      this.focusLi(li);\n      li.offEvent(\"click\");\n      if (!this.getAllSelectedLiIndex().includes(+this.getFocusedLiIndex())) {\n        this.#unfocusAnySelectedLiEditor();\n        this.toggleSelectedLi(li);\n      } else if (!this.#selectedLiEditor) {\n        this.toggleSelectedLi(li);\n      }\n    });\n  }\n  /**\n   * Helper function to attach keyboard events to each individual item\n   * @private\n   * @param {any} li the list item\n   * @returns {void}\n   */\n  #attachKeyboardListenersForLi(li) {\n    li.unlisten(\"Enter\");\n    li.unlisten(\"ArrowUp\");\n    li.unlisten(\"ArrowDown\");\n    this.offEvent(\"keydown\", li);\n    this.onEvent(\"keydown\", li, (event) => {\n      switch (event.key) {\n        case \"Enter\":\n          event.preventDefault();\n          if (!this.getAllSelectedLiIndex().includes(+this.getFocusedLiIndex())) {\n            this.toggleSelectedLi(li);\n          }\n          this.#toggleEditor();\n          break;\n        case \" \":\n          if (!this.#selectedLiEditor) {\n            event.preventDefault();\n            this.toggleSelectedLi(li);\n          }\n          break;\n        case \"Tab\":\n          this.#unfocusAnySelectedLiEditor();\n          break;\n        case \"ArrowUp\":\n          this.focusLi(this.getFocusedLi().previousElementSibling);\n          this.#unfocusAnySelectedLiEditor();\n          break;\n        case \"ArrowDown\":\n          this.focusLi(this.getFocusedLi().nextElementSibling);\n          this.#unfocusAnySelectedLiEditor();\n          break;\n        case \"Delete\":\n          this.#removeAllSelectedLi();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n  /**\n   * Get focused Li\n   * @returns {any} focused Li\n   */\n  getFocusedLi() {\n    const savedFocusedLi = this.container?.querySelector(`ids-swappable-item[role=\"listitem\"][index=\"${this.getFocusedLiIndex()}\"]`);\n    const val = savedFocusedLi ?? this.container?.querySelector('ids-swappable-item[role=\"listitem\"][tabindex=\"0\"]');\n    return val;\n  }\n  /**\n   * Reset indices\n   * @returns {void}\n   */\n  resetIndices() {\n    const listItems = this.container?.querySelectorAll(\"ids-swappable-item\");\n    listItems?.forEach((x, i) => {\n      x.setAttribute(\"index\", i.toString());\n      x.setAttribute(\"id\", `id_item_${i + 1}`);\n      x.setAttribute(\"aria-posinset\", `${i + 1}`);\n      x.setAttribute(\"aria-setsize\", listItems.length.toString());\n    });\n  }\n  set virtualScroll(value) {\n  }\n  /**\n   * List builder does not support VS\n   * @returns {boolean} false\n   */\n  get virtualScroll() {\n    return false;\n  }\n};\nIdsListBuilder = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-list-builder\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_list_builder_scss__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n], IdsListBuilder);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-list-builder/ids-list-builder.ts\n");

/***/ }),

/***/ "./src/mixins/ids-selection-mixin/ids-selection-mixin.ts":
/*!***************************************************************!*\
  !*** ./src/mixins/ids-selection-mixin/ids-selection-mixin.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_selection_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n\nconst IdsSelectionMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTION,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.PRE_SELECTED\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n  }\n  /**\n   * Set the selection to a particular string\n   * @param {string} value The selection value\n   */\n  set selection(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTION, String(value));\n    if (value === \"multiple\" || value === \"single\" || value === \"mixed\") {\n      this.container?.classList.add(\"is-selectable\");\n    } else {\n      this.container?.classList.remove(\"is-selectable\");\n    }\n  }\n  get selection() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTION);\n  }\n  /**\n   * Set the selected to a boolean value\n   * @param {boolean} value The selected value\n   */\n  set selected(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTED, String(value));\n    if (this.selection === \"multiple\" || this.selection === \"single\" || this.selection === \"mixed\") {\n      this.container?.classList[value === \"true\" ? \"add\" : \"remove\"](\"is-selected\");\n    }\n  }\n  get selected() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SELECTED);\n  }\n  /**\n   * Set the preselected to a boolean value\n   * @param {boolean} value The preselected value\n   */\n  set preselected(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.PRE_SELECTED, String(value));\n    if (this.selection === \"mixed\") {\n      this.container?.classList[value === \"true\" ? \"add\" : \"remove\"](\"pre-selected\");\n    }\n  }\n  get preselected() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.PRE_SELECTED);\n  }\n};\nvar ids_selection_mixin_default = IdsSelectionMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1zZWxlY3Rpb24tbWl4aW4vaWRzLXNlbGVjdGlvbi1taXhpbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQjtBQVMzQixNQUFNLG9CQUFvQixDQUErQixlQUFrQixjQUFjLFdBQVc7QUFBQSxFQUNsRyxlQUFlLE1BQWE7QUFDMUIsVUFBTSxHQUFHLElBQUk7QUFBQSxFQUNmO0FBQUEsRUFFQSxXQUFXLGFBQWE7QUFDdEIsV0FBTztBQUFBLE1BQ0wsR0FBSSxXQUFtQjtBQUFBLE1BQ3ZCLHFFQUFtQjtBQUFSLE1BQ1gsc0VBQW9CO0FBQVQsTUFDWCx5RUFBdUI7QUFBWixJQUNiO0FBQUEsRUFDRjtBQUFBLEVBRUEsb0JBQW9CO0FBQ2xCLFVBQU0sb0JBQW9CO0FBQUEsRUFDNUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSxVQUFVLE9BQU87QUFDbkIsU0FBSyxhQUFhLHNFQUFvQixFQUFFLE9BQU8sS0FBSyxDQUFDO0FBRXJELFFBQUksVUFBVSxjQUFjLFVBQVUsWUFBWSxVQUFVLFNBQVM7QUFDbkUsV0FBSyxXQUFXLFVBQVUsSUFBSSxlQUFlO0FBQUEsSUFDL0MsT0FBTztBQUNMLFdBQUssV0FBVyxVQUFVLE9BQU8sZUFBZTtBQUFBLElBQ2xEO0FBQUEsRUFDRjtBQUFBLEVBRUEsSUFBSSxZQUFZO0FBQUUsV0FBTyxLQUFLLGFBQWEsc0VBQW9CO0FBQUEsRUFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNbEUsSUFBSSxTQUFTLE9BQU87QUFDbEIsU0FBSyxhQUFhLHFFQUFtQixFQUFFLE9BQU8sS0FBSyxDQUFDO0FBRXBELFFBQUksS0FBSyxjQUFjLGNBQWMsS0FBSyxjQUFjLFlBQVksS0FBSyxjQUFjLFNBQVM7QUFDOUYsV0FBSyxXQUFXLFVBQVUsVUFBVSxTQUFTLFFBQVEsUUFBUSxFQUFFLGFBQWE7QUFBQSxJQUM5RTtBQUFBLEVBQ0Y7QUFBQSxFQUVBLElBQUksV0FBVztBQUFFLFdBQU8sS0FBSyxhQUFhLHFFQUFtQjtBQUFBLEVBQUc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTWhFLElBQUksWUFBWSxPQUFPO0FBQ3JCLFNBQUssYUFBYSx5RUFBdUIsRUFBRSxPQUFPLEtBQUssQ0FBQztBQUV4RCxRQUFJLEtBQUssY0FBYyxTQUFTO0FBQzlCLFdBQUssV0FBVyxVQUFVLFVBQVUsU0FBUyxRQUFRLFFBQVEsRUFBRSxjQUFjO0FBQUEsSUFDL0U7QUFBQSxFQUNGO0FBQUEsRUFFQSxJQUFJLGNBQWM7QUFBRSxXQUFPLEtBQUssYUFBYSx5RUFBdUI7QUFBQSxFQUFHO0FBQ3pFO0FBRUEsSUFBTyw4QkFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL21peGlucy9pZHMtc2VsZWN0aW9uLW1peGluL2lkcy1zZWxlY3Rpb24tbWl4aW4udHM/N2E5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNCYXNlQ29uc3RydWN0b3IgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcblxuLyoqXG4vKipcbiAqIEEgbWl4aW4gdGhhdCBhZGRzIHNlbGVjdGlvbiBmdW5jdGlvbmFsaXR5IHRvIGNvbXBvbmVudHNcbiAqIEBwYXJhbSB7YW55fSBzdXBlcmNsYXNzIEFjY2VwdHMgYSBzdXBlcmNsYXNzIGFuZCBjcmVhdGVzIGEgbmV3IHN1YmNsYXNzIGZyb20gaXRcbiAqIEByZXR1cm5zIHthbnl9IFRoZSBleHRlbmRlZCBvYmplY3RcbiAqL1xuY29uc3QgSWRzU2VsZWN0aW9uTWl4aW4gPSA8VCBleHRlbmRzIElkc0Jhc2VDb25zdHJ1Y3Rvcj4oc3VwZXJjbGFzczogVCkgPT4gY2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgY29uc3RydWN0b3IoLi4uYXJnczogYW55W10pIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgLi4uKHN1cGVyY2xhc3MgYXMgYW55KS5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5TRUxFQ1RFRCxcbiAgICAgIGF0dHJpYnV0ZXMuU0VMRUNUSU9OLFxuICAgICAgYXR0cmlidXRlcy5QUkVfU0VMRUNURUQsXG4gICAgXTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrPy4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHNlbGVjdGlvbiB0byBhIHBhcnRpY3VsYXIgc3RyaW5nXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgc2VsZWN0aW9uIHZhbHVlXG4gICAqL1xuICBzZXQgc2VsZWN0aW9uKHZhbHVlKSB7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TRUxFQ1RJT04sIFN0cmluZyh2YWx1ZSkpO1xuXG4gICAgaWYgKHZhbHVlID09PSAnbXVsdGlwbGUnIHx8IHZhbHVlID09PSAnc2luZ2xlJyB8fCB2YWx1ZSA9PT0gJ21peGVkJykge1xuICAgICAgdGhpcy5jb250YWluZXI/LmNsYXNzTGlzdC5hZGQoJ2lzLXNlbGVjdGFibGUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jb250YWluZXI/LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLXNlbGVjdGFibGUnKTtcbiAgICB9XG4gIH1cblxuICBnZXQgc2VsZWN0aW9uKCkgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TRUxFQ1RJT04pOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgc2VsZWN0ZWQgdG8gYSBib29sZWFuIHZhbHVlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdmFsdWUgVGhlIHNlbGVjdGVkIHZhbHVlXG4gICAqL1xuICBzZXQgc2VsZWN0ZWQodmFsdWUpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNFTEVDVEVELCBTdHJpbmcodmFsdWUpKTtcblxuICAgIGlmICh0aGlzLnNlbGVjdGlvbiA9PT0gJ211bHRpcGxlJyB8fCB0aGlzLnNlbGVjdGlvbiA9PT0gJ3NpbmdsZScgfHwgdGhpcy5zZWxlY3Rpb24gPT09ICdtaXhlZCcpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3RbdmFsdWUgPT09ICd0cnVlJyA/ICdhZGQnIDogJ3JlbW92ZSddKCdpcy1zZWxlY3RlZCcpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBzZWxlY3RlZCgpIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0VMRUNURUQpOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgcHJlc2VsZWN0ZWQgdG8gYSBib29sZWFuIHZhbHVlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gdmFsdWUgVGhlIHByZXNlbGVjdGVkIHZhbHVlXG4gICAqL1xuICBzZXQgcHJlc2VsZWN0ZWQodmFsdWUpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlBSRV9TRUxFQ1RFRCwgU3RyaW5nKHZhbHVlKSk7XG5cbiAgICBpZiAodGhpcy5zZWxlY3Rpb24gPT09ICdtaXhlZCcpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3RbdmFsdWUgPT09ICd0cnVlJyA/ICdhZGQnIDogJ3JlbW92ZSddKCdwcmUtc2VsZWN0ZWQnKTtcbiAgICB9XG4gIH1cblxuICBnZXQgcHJlc2VsZWN0ZWQoKSB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlBSRV9TRUxFQ1RFRCk7IH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc1NlbGVjdGlvbk1peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-selection-mixin/ids-selection-mixin.ts\n");

/***/ }),

/***/ "./src/components/ids-list-builder/ids-list-builder.scss":
/*!***************************************************************!*\
  !*** ./src/components/ids-list-builder/ids-list-builder.scss ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `@charset \"UTF-8\";\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.ids-list-builder {\n  display: flex;\n  flex-direction: column;\n  border-radius: 2px;\n  border: 1px solid var(--ids-color-palette-slate-40);\n}\n.ids-list-builder .ids-list-view-body div[part=list-item].is-editing > ids-text,\n.ids-list-builder .ids-list-view-body .list-item-content.is-editing > ids-text {\n  display: none;\n}\n.ids-list-builder .ids-list-view {\n  overflow: auto;\n  position: relative;\n}\n.ids-list-builder .ids-list-view ids-input::part(input) {\n  border-width: 0;\n  background-color: transparent;\n  height: 20px;\n  padding: 0;\n}\n.ids-list-builder .ids-list-view ids-input::part(field-container) {\n  max-width: 98%;\n}\n.ids-list-builder .ids-list-view div[part=list-item] {\n  list-style-type: none;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  padding-inline-start: 20px;\n  padding-inline-end: 20px;\n  border: 1px solid transparent;\n  box-sizing: border-box;\n  cursor: pointer;\n  position: relative;\n  min-height: 44px;\n  width: 100%;\n  height: 48px;\n}\n.ids-list-builder .ids-list-view div[part=list-item]:hover span::after {\n  position: absolute;\n  left: 0;\n  transform: translate(100%, -8%);\n  font-size: 24px;\n  content: \"⁞\";\n  cursor: move;\n}\n.ids-list-builder .ids-list-view div[part=list-item] ids-text::part(text) {\n  display: inline;\n  user-select: none;\n}\n.ids-list-builder .ids-list-view div[part=list-item].placeholder {\n  background-color: var(--ids-color-palette-azure-10);\n  opacity: 0.6;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-list-builder/ids-list-builder.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("919871523b4f16874939")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"ids-list-builder": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-menu_ids-menu-group_scss-src_components_ids-menu_ids-menu-header_scss-src_-787682","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-menu_ids-menu-group_ts-src_components_ids-menu_ids-menu-item_ts-src_compon-420212","src_components_ids-menu_ids-menu_ts","src_components_ids-popup-menu_ids-popup-menu_ts","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_components_ids-toolbar_ids-toolbar_ts","src_components_ids-pager_ids-pager_ts","src_components_ids-virtual-scroll_ids-virtual-scroll_ts","src_components_ids-search-field_ids-search-field_ts","src_components_ids-swappable_ids-swappable-item_ts-src_components_ids-swappable_ids-swappable_ts","src_components_ids-list-view_ids-list-view_scss","src_components_ids-list-view_ids-list-view_ts-src_components_ids-trigger-field_ids-trigger-field_ts"], () => (__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=4300&pathname=%2Fws&logging=error&overlay=true&reconnect=10&hot=false&live-reload=true")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-menu_ids-menu-group_scss-src_components_ids-menu_ids-menu-header_scss-src_-787682","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-menu_ids-menu-group_ts-src_components_ids-menu_ids-menu-item_ts-src_compon-420212","src_components_ids-menu_ids-menu_ts","src_components_ids-popup-menu_ids-popup-menu_ts","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_components_ids-toolbar_ids-toolbar_ts","src_components_ids-pager_ids-pager_ts","src_components_ids-virtual-scroll_ids-virtual-scroll_ts","src_components_ids-search-field_ids-search-field_ts","src_components_ids-swappable_ids-swappable-item_ts-src_components_ids-swappable_ids-swappable_ts","src_components_ids-list-view_ids-list-view_scss","src_components_ids-list-view_ids-list-view_ts-src_components_ids-trigger-field_ids-trigger-field_ts"], () => (__webpack_require__("./src/components/ids-list-builder/demos/index.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;