"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-toolbar_ids-toolbar_ts"],{

/***/ "./src/components/ids-menu-button/ids-menu-button.ts":
/*!***********************************************************!*\
  !*** ./src/components/ids-menu-button/ids-menu-button.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsMenuButton)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _ids_button_ids_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-button/ids-button */ \"./src/components/ids-button/ids-button.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_popup_menu_ids_popup_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ids-popup-menu/ids-popup-menu */ \"./src/components/ids-popup-menu/ids-popup-menu.ts\");\n/* harmony import */ var _ids_menu_ids_menu_group__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ids-menu/ids-menu-group */ \"./src/components/ids-menu/ids-menu-group.ts\");\n/* harmony import */ var _ids_menu_ids_menu_item__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ids-menu/ids-menu-item */ \"./src/components/ids-menu/ids-menu-item.ts\");\n/* harmony import */ var _ids_button_ids_button_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-button/ids-button.scss */ \"./src/components/ids-button/ids-button.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\nlet IdsMenuButton = class extends _ids_button_ids_button__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor() {\n    super();\n  }\n  /**\n   * @returns {Array} containing configurable attributes on this component\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DISPLAY_SELECTED_TEXT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DROPDOWN_ICON,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.FORMATTER_WIDTH,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.ID,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.MENU\n    ];\n  }\n  /**\n   * Toggle-Button-level `connectedCallback` implementation (adds an icon refresh)\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DROPDOWN_ICON)) {\n      this.#configureDropdownIcon(true);\n    }\n    this.#initMenuPopup();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.dropdownIcon = null;\n  }\n  /**\n   * @returns {string[]} containing CSS classes that will be added to the buttons\n   */\n  get protoClasses() {\n    const textSlot = this.querySelector(\"span:not(.audible), ids-text:not(.audible)\");\n    const iconSlot = this.querySelector(\"ids-icon[slot]\") || this.querySelector(\"ids-icon\");\n    if (iconSlot && !textSlot) {\n      return [\"ids-menu-button\", \"ids-icon-button\"];\n    }\n    return [\"ids-menu-button\"];\n  }\n  /**\n   * @param {boolean | string} val true if the component should be disabledd\n   */\n  set disabled(val) {\n    super.disabled = val;\n    const truthyVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(val);\n    this.menuEl.disabled = truthyVal;\n  }\n  /**\n   * @returns {boolean} true if the component is disabled\n   */\n  get disabled() {\n    return super.disabled;\n  }\n  #configureDropdownIcon(doShow) {\n    const icon = this.dropdownIconEl;\n    const iconType = this.dropdownIcon && this.dropdownIcon.length ? this.dropdownIcon : \"dropdown\";\n    if (doShow) {\n      if (!icon) {\n        this.container?.insertAdjacentHTML(\"beforeend\", `<ids-icon icon=\"${iconType}\" class=\"ids-icon dropdown-icon\"></ids-icon>`);\n      } else {\n        icon.icon = iconType;\n      }\n    } else if (icon) {\n      icon.remove();\n    }\n  }\n  /**\n   * @param {boolean | string} val true if the menu button should adopt a selected menu item's text content when chosen\n   */\n  set displaySelectedText(val) {\n    const bool = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(val);\n    if (bool)\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DISPLAY_SELECTED_TEXT, `${val}`);\n    else\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DISPLAY_SELECTED_TEXT);\n    this.configureMenu();\n  }\n  /**\n   * @returns {string} true if the menu button will adopt a selected menu item's text content when chosen\n   */\n  get displaySelectedText() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DISPLAY_SELECTED_TEXT));\n  }\n  /**\n   * @param {string|undefined} val referencing an icon string name to use\n   */\n  set dropdownIcon(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(val);\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DROPDOWN_ICON, typeof val === \"string\" && val.length ? `${val}` : \"dropdown\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DROPDOWN_ICON);\n    }\n    this.#configureDropdownIcon(trueVal);\n    this.setPopupArrow();\n  }\n  /**\n   * @returns {string|undefined} containing the type of icon being displayed as the Dropdown Icon\n   */\n  get dropdownIcon() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.DROPDOWN_ICON);\n  }\n  /**\n   * @returns {HTMLElement|null} the decorative dropdown icon element\n   */\n  get dropdownIconEl() {\n    return this.container?.querySelector(\"ids-icon:not([slot])\");\n  }\n  /**\n   * @returns {string|null} an ID selector string matching a menu\n   */\n  get menu() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.MENU);\n  }\n  /**\n   * @param {string|null} val an ID selector string\n   */\n  set menu(val) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.MENU, `${val}`);\n    this.configureMenu();\n  }\n  /**\n   * Retrieves a list of selected items from menu.\n   * @returns {Array<any>} list of the values contained by selected menu items\n   */\n  get value() {\n    return this.menuEl?.getSelectedValues();\n  }\n  /**\n   * Set menu's selected items by value\n   * @param {Array<any>|string} values array|string of value(s) contained in menu items\n   * @returns {void}\n   */\n  set value(values) {\n    if (typeof this.menuEl?.setSelectedValues === \"function\") {\n      this.menuEl.setSelectedValues(values);\n    }\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement | null} element if one is present\n   */\n  get menuEl() {\n    const findPopup = (root) => root?.querySelector(`ids-popup-menu[id=\"${this.menu}\"]`) || root?.querySelector(`ids-action-sheet[id=\"${this.menu}\"]`);\n    let el = findPopup(this.parentElement);\n    if (!el)\n      el = findPopup(this.getRootNode());\n    return el;\n  }\n  /**\n   * Set popup menu initially\n   * @private\n   * @returns {void}\n   */\n  #initMenuPopup() {\n    this.configureMenu();\n    if (!this.menuEl?.popup)\n      requestAnimationFrame(() => this.configureMenu());\n  }\n  /**\n   * @returns {void}\n   */\n  configureMenu() {\n    if (!this.menuEl || !this.menuEl.popup) {\n      return;\n    }\n    this.resizeMenu();\n    this.menuEl.triggerType = \"click\";\n    this.menuEl.target = this;\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.htmlAttributes.ARIA_HASPOPUP, \"menu\");\n    if (this.menuEl.popup) {\n      this.menuEl.popup.align = \"bottom, left\";\n      this.menuEl.popup.y = 8;\n      this.setPopupArrow();\n    }\n    const hasBeforeShow = this?.handledEvents?.get(\"beforeshow\");\n    if (!hasBeforeShow) {\n      this.onEvent(\"beforeshow\", this.menuEl, () => {\n        this.setActiveState(true);\n        this.resizeMenu();\n      });\n    }\n    const hasHideHandler = this?.handledEvents?.get(\"hide\");\n    if (!hasHideHandler) {\n      this.onEvent(\"hide\", this.menuEl, () => {\n        this.setActiveState(false);\n      });\n    }\n    this.offEvent(\"selected.menu\");\n    if (this.menuEl && this.displaySelectedText) {\n      this.onEvent(\"selected.menu\", this.menuEl, (e) => {\n        let btnTextEl = this.querySelector(\"ids-text, span\");\n        if (!btnTextEl)\n          btnTextEl = this;\n        btnTextEl.textContent = e.detail.elem.textContent.trim();\n      });\n    }\n  }\n  /**\n   * Set button's active state\n   * @param {boolean} isActive true when menu is open\n   */\n  setActiveState(isActive) {\n    if (isActive) {\n      this.button?.classList.add(\"is-active\");\n    } else {\n      this.button?.classList.remove(\"is-active\");\n    }\n  }\n  /**\n   * @returns {void}\n   */\n  resizeMenu() {\n    if (!this.menuEl || !this.menuEl.popup) {\n      return;\n    }\n    this.menuEl.popup.container.style.minWidth = `${this.button?.clientWidth}px`;\n  }\n  /**\n   * @returns {void}\n   */\n  setPopupArrow() {\n    if (!this.menuEl || !this.menuEl.popup) {\n      return;\n    }\n    this.menuEl.popup.arrowTarget = this.dropdownIconEl || this;\n    this.menuEl.popup.arrow = \"bottom\";\n  }\n  /**\n   * Set the formatter width for menu button\n   * @param {string | number} value The formatter width value\n   */\n  set formatterWidth(value) {\n    let val = null;\n    if (typeof value === \"number\" && !Number.isNaN(value)) {\n      val = `${value}px`;\n    } else if (typeof value === \"string\") {\n      const last = parseInt(value.slice(-1), 10);\n      if (typeof last === \"number\" && !Number.isNaN(last)) {\n        val = `${value}px`;\n      } else if (/(px|em|vw|vh|ch|%)$/g.test(value) && !Number.isNaN(parseInt(value, 10))) {\n        this.container?.classList[/%$/g.test(value) ? \"add\" : \"remove\"](\"formatter-width-percentage\");\n        val = value;\n      }\n    }\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.FORMATTER_WIDTH, String(value));\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.FORMATTER_WIDTH);\n      if (this.container)\n        this.container.style.minWidth = val;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.FORMATTER_WIDTH);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_2__.attributes.FORMATTER_WIDTH);\n      if (this.container)\n        this.container.style.minWidth = \"\";\n    }\n  }\n};\nIdsMenuButton = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-menu-button\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_button_ids_button_scss__WEBPACK_IMPORTED_MODULE_8__[\"default\"])\n], IdsMenuButton);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-menu-button/ids-menu-button.ts\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar-more-actions.ts":
/*!****************************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar-more-actions.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsToolbarMoreActions)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_toolbar_section__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ids-toolbar-section */ \"./src/components/ids-toolbar/ids-toolbar-section.ts\");\n/* harmony import */ var _ids_menu_button_ids_menu_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ids-menu-button/ids-menu-button */ \"./src/components/ids-menu-button/ids-menu-button.ts\");\n/* harmony import */ var _ids_popup_menu_ids_popup_menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-popup-menu/ids-popup-menu */ \"./src/components/ids-popup-menu/ids-popup-menu.ts\");\n/* harmony import */ var _ids_toolbar_more_actions_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ids-toolbar-more-actions.scss */ \"./src/components/ids-toolbar/ids-toolbar-more-actions.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\nconst MORE_ACTIONS_SELECTOR = `[${_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MORE_ACTIONS}]`;\nconst TOOLBAR_TYPES = [\"formatter\"];\nconst Base = (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    _core_ids_element__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  )\n);\nlet IdsToolbarMoreActions = class extends Base {\n  constructor() {\n    super();\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOW,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOOLBAR_TYPE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VISIBLE\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.menu || !this.button) {\n      this.#renderActionsComponents();\n    }\n    this.#refresh();\n    this.#attachEventHandlers();\n    this.button?.configureMenu?.();\n    requestAnimationFrame(() => {\n      this.#connectOverflowedItems();\n    });\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.overflowMenuItems.forEach((item) => {\n      item.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOWED);\n    });\n  }\n  template() {\n    return `<div class=\"ids-toolbar-section ids-toolbar-more-actions more\">\n      <slot></slot>\n    </div>`;\n  }\n  colorVariants = [\"alternate-formatter\"];\n  #renderActionsComponents() {\n    const menuButtonId = \"more-actions\";\n    const menuId = \"more-actions-menu\";\n    const disabled = this.disabled ? \" disabled\" : \"\";\n    const icon = this.getAttribute(\"icon\") || \"more\";\n    this.insertAdjacentHTML(\"afterbegin\", `<ids-menu-button id=\"${menuButtonId}\" menu=\"${menuId}\"${disabled}>\n        <ids-icon icon=\"${icon}\"></ids-icon>\n        <span class=\"audible\">More Actions Button</span>\n      </ids-menu-button>\n      <ids-popup-menu id=\"${menuId}\" target=\"#${menuButtonId}\" trigger-type=\"click\"></ids-popup-menu>`);\n    const groups = this.querySelectorAll(\":scope > ids-menu-group\");\n    groups?.forEach((groupEl) => this.menu?.append(groupEl));\n  }\n  /**\n   * @private\n   * @returns {string} the template for the More Actions Menu Group\n   */\n  #moreActionsMenuTemplate() {\n    const renderToolbarItems = () => this.toolbar?.items?.map((i) => this.#moreActionsItemTemplate(i)).join(\"\") || \"\";\n    return `<ids-menu-group ${_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MORE_ACTIONS}>\n      ${renderToolbarItems()}\n    </ids-menu-group>`;\n  }\n  /**\n   * @private\n   * @param {HTMLElement} item an element from inside one of the Toolbar sections\n   *  that will be mirrored in the More Actions menu\n   * @param {boolean} isSubmenuItem true if the item provided is a submenu item\n   * @returns {string} representing a single menu item\n   */\n  #moreActionsItemTemplate(item, isSubmenuItem = false) {\n    let text = \"\";\n    let icon = \"\";\n    let hidden = \"\";\n    let disabled = \"\";\n    let submenu = \"\";\n    let overflowed = \"\";\n    let viewbox = \"\";\n    if (!isSubmenuItem) {\n      overflowed = this.isOverflowed(item) ? \"\" : \" hidden\";\n    }\n    const handleButton = (thisItem) => {\n      if (thisItem.disabled)\n        disabled = \" disabled\";\n      if (thisItem.icon) {\n        icon = ` icon=\"${thisItem.icon}\"`;\n        viewbox = thisItem.iconEl?.viewbox;\n        viewbox = viewbox ? ` viewbox=\"${viewbox}\"` : \"\";\n      }\n      text = thisItem.text;\n    };\n    const handleSubmenu = (thisItem) => {\n      const menuProp = isSubmenuItem ? \"submenu\" : \"menuEl\";\n      if (thisItem[menuProp]) {\n        const thisSubItems = thisItem[menuProp].items;\n        submenu = `<ids-popup-menu slot=\"submenu\">\n          <ids-menu-group>\n            ${thisSubItems.map((subItem) => this.#moreActionsItemTemplate(subItem, true)).join(\"\") || \"\"}\n          </ids-menu-group>\n        </ids-popup-menu>`;\n      }\n    };\n    const handleMenuItem = (thisItem) => {\n      if (thisItem.disabled)\n        disabled = \" disabled\";\n      if (thisItem.icon)\n        icon = ` icon=\"${thisItem.icon}\"`;\n      if (thisItem.hidden)\n        hidden = ` hidden`;\n      text = thisItem.text;\n      if (thisItem.submenu) {\n        handleSubmenu(thisItem);\n      }\n    };\n    switch (item.tagName) {\n      case \"IDS-MENU-BUTTON\":\n        handleButton(item);\n        handleSubmenu(item);\n        break;\n      case \"IDS-MENU-ITEM\":\n        handleMenuItem(item);\n        break;\n      case \"IDS-BUTTON\":\n        handleButton(item);\n        break;\n      default:\n        text = item.textContent;\n        break;\n    }\n    text = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_5__.removeNewLines)(text)?.trim();\n    return `<ids-menu-item${disabled}${icon}${viewbox}${hidden || overflowed}>\n      ${text}\n      ${submenu}\n    </ids-menu-item>`;\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} the inner menu button\n   */\n  get button() {\n    return this.querySelector(\"ids-menu-button\");\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} the inner popup menu\n   */\n  get menu() {\n    return this.querySelector(\"ids-popup-menu\") || null;\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of manually-defined menu items\n   */\n  get predefinedMenuItems() {\n    return [...this.querySelectorAll(`:scope > ids-popup-menu > ids-menu-group:not(${MORE_ACTIONS_SELECTOR}) > ids-menu-item`)];\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of menu items that mirror Toolbar items\n   */\n  get overflowMenuItems() {\n    const moreActionsMenu = this.querySelector(MORE_ACTIONS_SELECTOR);\n    if (moreActionsMenu) {\n      return [...this.querySelector(MORE_ACTIONS_SELECTOR)?.children ?? []];\n    }\n    return [];\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} a reference to this section's toolbar parent node\n   */\n  get toolbar() {\n    return this.parentElement;\n  }\n  /**\n   * @param {boolean | string} val true if the More Actions menu should be disabled\n   */\n  set disabled(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_5__.stringToBool)(val);\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n    this.button?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, trueVal.toString());\n    this.container?.classList[trueVal ? \"add\" : \"remove\"](_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  /**\n   * @returns {boolean} true if the More Actions menu is currently disabled\n   */\n  get disabled() {\n    return !!this.container?.classList.contains(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  /**\n   * @param {boolean | string} val truthy if this More Actions menu should display overflowed items from the toolbar\n   */\n  set overflow(val) {\n    const newValue = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_5__.stringToBool)(val);\n    const currentValue = this.overflow;\n    if (newValue !== currentValue) {\n      if (newValue) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOW, \"\");\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOW);\n      }\n    }\n  }\n  /**\n   * @returns {boolean} true if this More Actions menu will display overflowed items from the toolbar\n   */\n  get overflow() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOW);\n  }\n  /**\n   * @param {string} value the type of toolbar\n   */\n  set toolbarType(value) {\n    if (value && TOOLBAR_TYPES.includes(value)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOOLBAR_TYPE, value);\n      this.container?.classList.add(value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOOLBAR_TYPE);\n      this.container?.classList.remove(TOOLBAR_TYPES[0]);\n    }\n  }\n  /**\n   * @returns {string} the type of toolbar\n   */\n  get toolbarType() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOOLBAR_TYPE);\n  }\n  /**\n   * Overrides the standard toolbar section \"type\" setter, which is always \"more\" in this case.\n   * @param {string} val the type value\n   */\n  set type(val) {\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE);\n  }\n  /**\n   * Overrides the standard toolbar section \"type\" getter, which always returns \"more\" in this case.\n   * @returns {string} representing the Toolbar Section type\n   */\n  get type() {\n    return \"more\";\n  }\n  /**\n   * @param {boolean | string} val alters whether the More Actions menu is displayed/hidden\n   */\n  set visible(val) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_5__.stringToBool)(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VISIBLE, \"\");\n      this.menu?.showIfAble();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VISIBLE);\n      this.menu?.hide();\n    }\n  }\n  /**\n   * @returns {boolean} true if the More Actions menu is currently displayed\n   */\n  get visible() {\n    return this.menu?.visible || false;\n  }\n  /**\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.onEvent(\"beforeshow\", this.menu, (e) => {\n      this.triggerEvent(\"beforeshow\", this, {\n        bubbles: e.bubbles,\n        detail: e.detail\n      });\n      this.refreshOverflowedItems();\n    });\n    this.onEvent(\"selected\", this.menu, (e) => {\n      const menuItem = e.detail.elem;\n      if (menuItem.overflowTarget) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.toolbar.triggerSelectedEvent(menuItem, true);\n      }\n    });\n    this.onEvent(\"show\", this.menu, () => {\n      this.visible = true;\n    });\n    this.onEvent(\"hide\", this.menu, () => {\n      this.visible = false;\n    });\n  }\n  /**\n   * Refreshes the state of the More Actions button\n   * @returns {void}\n   */\n  #refresh() {\n    if (this.menu?.popup) {\n      this.menu.popup.align = \"bottom, right\";\n      this.menu.popup.alignEdge = \"bottom\";\n    }\n    this.onColorVariantRefresh();\n  }\n  /**\n   * Refreshes the visible state of menu items representing \"overflowed\" elements\n   * @returns {void}\n   */\n  refreshOverflowedItems() {\n    this.overflowMenuItems.forEach((item) => {\n      const doHide = !this.isOverflowed(item.overflowTarget);\n      item.hidden = doHide;\n      if (doHide) {\n        item.overflowTarget.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOWED);\n      } else {\n        item.overflowTarget.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOWED, \"\");\n      }\n    });\n    if (this.button) {\n      this.button.hidden = !this.hasVisibleActions();\n      this.button.disabled = !this.hasEnabledActions();\n    }\n    if (this.menu?.visible) {\n      this.menu.refreshIconAlignment();\n    }\n  }\n  /**\n   * Connects each overflowed menu item to a real Toolbar element\n   * @private\n   * @returns {void}\n   */\n  #connectOverflowedItems() {\n    if (!this.menu)\n      return;\n    const el = this.menu.querySelector(MORE_ACTIONS_SELECTOR);\n    if (!el && this.overflow) {\n      this.menu.insertAdjacentHTML(\"afterbegin\", this.#moreActionsMenuTemplate());\n    }\n    if (el && !this.overflow) {\n      el.remove();\n    }\n    const handleSubmenu = (thisItem, overflowTargetMenu) => {\n      if (!overflowTargetMenu)\n        return;\n      [...thisItem.submenu.children].forEach((item, i) => {\n        item.overflowTarget = overflowTargetMenu.items[i];\n        if (item.submenu) {\n          handleSubmenu(item, item.overflowTarget.submenu);\n        }\n      });\n    };\n    this.overflowMenuItems.forEach((item, i) => {\n      item.overflowTarget = this.toolbar.items[i];\n      if (item.submenu) {\n        handleSubmenu(item, item.overflowTarget.menuEl);\n      }\n    });\n  }\n  /**\n   * Passes focus from the main element into the inner Ids Menu Button\n   * @returns {void}\n   */\n  focus() {\n    if (!this.visible) {\n      this.button?.focus();\n    } else {\n      this.menu?.focusTarget?.focus();\n    }\n  }\n  /**\n   * @returns {boolean} true if there are currently visible actions in this menu\n   */\n  hasVisibleActions() {\n    return this.predefinedMenuItems.length > 0 || this.querySelectorAll(`:scope > ids-popup-menu > ids-menu-group${MORE_ACTIONS_SELECTOR} > ids-menu-item:not([hidden])`).length > 0;\n  }\n  /**\n   * @returns {boolean} true if there are currently enabled (read: not disabled) actions in this menu\n   */\n  hasEnabledActions() {\n    return this.querySelectorAll(`:scope > ids-popup-menu > ids-menu-group${MORE_ACTIONS_SELECTOR} > ids-menu-item:not([disabled])`).length > 0;\n  }\n  /**\n   * @param {HTMLElement} item reference to the toolbar item to be checked for overflow\n   * @returns {boolean} true if the item is a toolbar member and should be displayed by overflow\n   */\n  isOverflowed(item) {\n    if (!this.toolbar.contains(item)) {\n      return false;\n    }\n    if (item.hidden) {\n      return false;\n    }\n    const itemRect = item.getBoundingClientRect();\n    const section = item.parentElement;\n    const sectionRect = section.getBoundingClientRect();\n    const isBeyondRightEdge = itemRect.right > sectionRect.right;\n    const isBeyondLeftEdge = itemRect.left < sectionRect.left;\n    return isBeyondLeftEdge || isBeyondRightEdge;\n  }\n  onColorVariantRefresh() {\n    const colorVariant = this.colorVariant;\n    if (colorVariant === \"alternate-formatter\") {\n      this.button?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLOR_VARIANT, \"alternate-formatter\");\n    } else {\n      this.button?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLOR_VARIANT);\n    }\n  }\n};\nIdsToolbarMoreActions = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-toolbar-more-actions\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_toolbar_more_actions_scss__WEBPACK_IMPORTED_MODULE_9__[\"default\"])\n], IdsToolbarMoreActions);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar-more-actions.ts\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar-section.ts":
/*!***********************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar-section.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TOOLBAR_ITEM_TAGNAMES\": () => (/* binding */ TOOLBAR_ITEM_TAGNAMES),\n/* harmony export */   \"default\": () => (/* binding */ IdsToolbarSection)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _ids_toolbar_section_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ids-toolbar-section.scss */ \"./src/components/ids-toolbar/ids-toolbar-section.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\nconst TOOLBAR_SECTION_ATTRIBUTES = [\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ALIGN,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TOOLBAR_TYPE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TYPE\n];\nconst SECTION_ALIGNS = [\n  \"align-start\",\n  \"align-center\",\n  \"align-center-even\",\n  \"align-end\"\n];\nconst TOOLBAR_TYPES = [\"formatter\"];\nconst SECTION_TYPES = [\n  \"static\",\n  \"buttonset\",\n  \"button\",\n  \"fluid\",\n  \"search\",\n  \"title\",\n  \"more\"\n];\nconst TOOLBAR_ITEM_TAGNAMES = [\n  \"ids-button\",\n  \"ids-checkbox\",\n  \"ids-input\",\n  \"ids-menu-button\",\n  \"ids-radio\",\n  \"ids-toolbar-more-actions\"\n];\nconst TOOLBAR_TEXTNODE_TAGNAMES = [\n  \"ids-text\"\n];\nconst TOOLBAR_SEPARATOR_TAGNAMES = [\n  \"ids-separator\"\n];\nfunction setCssClassFromGroup(targetClass, targetElem, group) {\n  group.forEach((item) => {\n    const cl = targetElem.classList;\n    const cssClass = `${item}`;\n    const thisClass = `${targetClass}`;\n    if (cssClass === thisClass) {\n      if (!cl.contains(cssClass)) {\n        cl.add(cssClass);\n      }\n    } else {\n      cl.remove(cssClass);\n    }\n  });\n}\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n  (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    _core_ids_element__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n  )\n);\nlet IdsToolbarSection = class extends Base {\n  constructor() {\n    super();\n  }\n  static get attributes() {\n    return [...super.attributes, ...TOOLBAR_SECTION_ATTRIBUTES];\n  }\n  template() {\n    const align = this.hasAttribute(\"align\") ? ` align-${this.align}` : \"\";\n    return `\n      <div class=\"ids-toolbar-section${align}\" part=\"container\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    setCssClassFromGroup(this.type, this.container, SECTION_TYPES);\n    setCssClassFromGroup(this.toolbarType ?? \"\", this.container, TOOLBAR_TYPES);\n  }\n  /**\n   * @readonly\n   * @returns {Array<any>} list of available items contained by the toolbar\n   */\n  get items() {\n    return [...this.children].filter((e) => {\n      const elemTagName = e.tagName.toLowerCase();\n      return TOOLBAR_ITEM_TAGNAMES.includes(elemTagName);\n    });\n  }\n  /**\n   * @readonly\n   * @returns {Array<any>} list of text nodes contained by the toolbar\n   */\n  get textElems() {\n    const nodes = [...this.children].filter((e) => {\n      const elemTagName = e.tagName.toLowerCase();\n      return TOOLBAR_TEXTNODE_TAGNAMES.includes(elemTagName);\n    });\n    return nodes;\n  }\n  /**\n   * @readonly\n   * @returns {Array<any>} list of ids-separator nodes contained by the toolbar\n   */\n  get separators() {\n    const nodes = [...this.children].filter((e) => {\n      const elemTagName = e.tagName.toLowerCase();\n      return TOOLBAR_SEPARATOR_TAGNAMES.includes(elemTagName);\n    });\n    return nodes;\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} a reference to this section's toolbar parent node\n   */\n  get toolbar() {\n    return this.parentElement;\n  }\n  /**\n   * @param {string} val the alignment type to set\n   */\n  set align(val) {\n    let trueVal = `align-${val}`;\n    if (typeof val !== \"string\" || val === \"\" || !SECTION_ALIGNS.includes(trueVal)) {\n      this.removeAttribute(\"align\");\n      trueVal = SECTION_ALIGNS[0];\n    } else {\n      this.setAttribute(\"align\", val);\n      this.container?.classList.add(`align-${val}`);\n    }\n  }\n  /**\n   * @returns {string} the current alignment value\n   */\n  get align() {\n    return this.getAttribute(\"align\") || \"start\";\n  }\n  /**\n   * @param {boolean | string} val true if this toolbar section should be marked \"favor\"\n   * (will try not to be collapsed/shrunk if the parent toolbar size shrinks)\n   */\n  set favor(val) {\n    const newValue = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    if (newValue) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR, \"\");\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR);\n    }\n  }\n  /**\n   * @returns {boolean} true if this toolbar section is marked \"favor\"\n   * (will try not to be collapsed/shrunk if the parent toolbar size shrinks)\n   */\n  get favor() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FAVOR);\n  }\n  /**\n   * @param {string | boolean | null} value truthy if this toolbar section should be made \"inactive\"\n   * (takes up space, but items are not visible)\n   */\n  set inactive(value) {\n    const isInactive = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isInactive) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE, \"true\");\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE);\n    }\n  }\n  /**\n   * @returns {boolean} true if the toolbar section is \"inactive\" (takes up space, but items are not visible)\n   */\n  get inactive() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE);\n  }\n  /**\n   * @param {string} val the type of section\n   */\n  set type(val) {\n    let trueVal;\n    if (typeof val !== \"string\" || val === \"\" || !SECTION_TYPES.includes(val)) {\n      trueVal = SECTION_TYPES[0];\n    } else {\n      trueVal = `${val}`;\n    }\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TYPE, trueVal);\n    if (this.container) {\n      setCssClassFromGroup(trueVal, this.container, SECTION_TYPES);\n    }\n  }\n  /**\n   * @returns {string} the type of section\n   */\n  get type() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TYPE) || \"static\";\n  }\n  /**\n   * @param {string} value the type of toolbar\n   */\n  set toolbarType(value) {\n    if (value && TOOLBAR_TYPES.includes(value)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TOOLBAR_TYPE, value);\n      this.container?.classList.add(value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TOOLBAR_TYPE);\n      this.container?.classList.remove(TOOLBAR_TYPES[0]);\n    }\n  }\n  /**\n   * @returns {string} the type of toolbar\n   */\n  get toolbarType() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TOOLBAR_TYPE);\n  }\n};\nIdsToolbarSection = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.customElement)(\"ids-toolbar-section\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.scss)(_ids_toolbar_section_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n], IdsToolbarSection);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar-section.ts\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar.ts":
/*!***************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsToolbar)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n/* harmony import */ var _utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/ids-xss-utils/ids-xss-utils */ \"./src/utils/ids-xss-utils/ids-xss-utils.ts\");\n/* harmony import */ var _ids_toolbar_section__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ids-toolbar-section */ \"./src/components/ids-toolbar/ids-toolbar-section.ts\");\n/* harmony import */ var _ids_toolbar_more_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ids-toolbar-more-actions */ \"./src/components/ids-toolbar/ids-toolbar-more-actions.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_toolbar_scss__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ids-toolbar.scss */ \"./src/components/ids-toolbar/ids-toolbar.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\nconst FORMATTER_VARIANT = \"alternate-formatter\";\nconst TOOLBAR_TYPES = [\"formatter\"];\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n  (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n    )\n  )\n);\nlet IdsToolbar = class extends Base {\n  /**\n   * Watches for Toolbar size changes\n   */\n  #resizeObserver;\n  constructor() {\n    super();\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"toolbar\");\n    this.#attachEventHandlers();\n    this.#attachKeyboardListeners();\n    this.#configureResizeObserver();\n    this.#setType(null, this.type);\n    this.makeTabbable(this.detectTabbable());\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING)) {\n      this.padding = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING);\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    if (this.#resizeObserver) {\n      this.#resizeObserver.disconnect();\n      this.#resizeObserver = null;\n    }\n  }\n  /**\n   * Configures the resize observer.\n   * @private\n   */\n  #configureResizeObserver() {\n    this.#resizeObserver = new ResizeObserver(() => {\n      this.#resize();\n    });\n    this.#resizeObserver.observe(this);\n  }\n  /**\n   * Sets up event handlers assigned to the Toolbar and its child elements\n   * @private\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.onEvent(\"click.toolbar-item\", this, (e) => {\n      const btn = e.target.closest(\"ids-button\");\n      if (btn) {\n        this.triggerSelectedEvent(btn);\n      }\n    });\n  }\n  /**\n   * Sets up the connection to the global keyboard handler\n   * @private\n   * @returns {void}\n   */\n  #attachKeyboardListeners() {\n    this.listen([\"ArrowLeft\"], this, (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.target.name === \"ids-menu-item\") {\n        return;\n      }\n      this.navigate(-1, true);\n    });\n    this.listen([\"ArrowRight\"], this, (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (e.target.name === \"ids-menu-item\") {\n        return;\n      }\n      this.navigate(1, true);\n    });\n  }\n  /**\n   * Uses a currently-highlighted toolbar item to \"navigate\" a specified number\n   * of steps to another toolbar item, highlighting it.\n   * @param {number} [amt] the amount of items to navigate\n   * @param {boolean} [doFocus] if true, causes the new item to become focused.\n   * @returns {HTMLElement} the item that will be focused\n   */\n  navigate(amt = 0, doFocus = false) {\n    const items = this.items;\n    let currentItem = this.focused || items[0];\n    if (typeof amt !== \"number\") {\n      return currentItem;\n    }\n    const negative = amt < 0;\n    let steps = Math.abs(amt);\n    let currentIndex = items.indexOf(currentItem);\n    while (steps > 0) {\n      currentItem = items[currentIndex + (negative ? -1 : 1)];\n      currentIndex = items.indexOf(currentItem);\n      if (currentIndex < 0) {\n        currentIndex = negative ? items.length - 1 : 0;\n        currentItem = items[currentIndex];\n      }\n      if (!currentItem.disabled && !currentItem.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.OVERFLOWED)) {\n        steps -= 1;\n      }\n    }\n    if (!currentItem.disabled && doFocus) {\n      this.makeTabbable(currentItem);\n      currentItem.focus();\n    }\n    return currentItem;\n  }\n  template() {\n    return `<div class=\"ids-toolbar\" role=\"toolbar\">\n      <slot></slot>\n    </div>`;\n  }\n  /**\n   * @param {boolean | string} val sets the disabled state of the entire toolbar\n   */\n  set disabled(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n    this.container?.classList[trueVal ? \"add\" : \"remove\"](_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    const setDisabledState = (elem) => {\n      if (elem.id === \"more-actions\") {\n        const trueElem = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_3__.getClosest)(elem, \"ids-toolbar-more-actions\");\n        trueElem.disabled = trueVal;\n      } else {\n        elem.disabled = trueVal;\n      }\n    };\n    this.items.forEach(setDisabledState);\n    this.textElems.forEach(setDisabledState);\n    this.refreshOverflowedItems();\n  }\n  /**\n   * @returns {boolean} true if the toolbar is currently disabled\n   */\n  get disabled() {\n    return !!this.container?.classList?.contains(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  /**\n   * Refreshes the overflow state of toolbar items\n   * @returns {void}\n   */\n  refreshOverflowedItems() {\n    const moreActions = this.querySelector(\"ids-toolbar-more-actions\");\n    if (moreActions) {\n      moreActions.refreshOverflowedItems();\n    }\n  }\n  /**\n   * @readonly\n   * @returns {any | undefined} the currently focused menu item, if one exists\n   */\n  get focused() {\n    return this.items.find((item) => {\n      const container = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_3__.getClosestContainerNode)(item);\n      const focused = container.activeElement;\n      const isEqualNode = focused?.isEqualNode(item);\n      return isEqualNode;\n    });\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of all available toolbar items present in all toolbar sections\n   */\n  get items() {\n    const i = [];\n    this.sections.forEach((section) => {\n      if (section?.name === \"ids-toolbar-more-actions\") {\n        i.push(section.button);\n      } else if (section.items) {\n        i.push(...section.items);\n      }\n    });\n    return i;\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of all available text nodes present in all toolbar sections\n   */\n  get textElems() {\n    const i = [];\n    this.sections.forEach((section) => {\n      if (section?.name !== \"ids-toolbar-more-actions\") {\n        i.push(...section.textElems);\n      }\n    });\n    return i;\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of all available ids-separator nodes present in all toolbar sections\n   */\n  get separators() {\n    const sep = [];\n    this.sections.forEach((section) => {\n      if (section?.name !== \"ids-toolbar-more-actions\" && section?.separators) {\n        sep.push(...section.separators);\n      }\n    });\n    return sep;\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of available sections within the toolbar\n   */\n  get sections() {\n    return [...this.children].filter((e) => e.matches(\"ids-toolbar-section, ids-toolbar-more-actions\"));\n  }\n  /**\n   * If true, sets the Toolbar mode to allow ALL items to have a usable tabIndex.\n   * Default is false, which means one Toolbar element is focusable at a time.\n   * @param {boolean | string} val sets the tabbable state of the toolbar\n   */\n  set tabbable(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE, trueVal.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n    }\n    this.container?.classList[trueVal ? \"add\" : \"remove\"](_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n    this.makeTabbable(this.focused);\n  }\n  /**\n   * @returns {boolean} true if the toolbar is fully tabbable\n   */\n  get tabbable() {\n    return !!this.container?.classList.contains(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n  }\n  /**\n   * Set the type for toolbar\n   * @param {string | null} value of toolbar type\n   */\n  set type(value) {\n    let safeValue = null;\n    if (typeof value === \"string\") {\n      safeValue = (0,_utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_4__.stripTags)(value, \"\");\n    }\n    const currentValue = this.type;\n    if (currentValue !== safeValue) {\n      if (TOOLBAR_TYPES.includes(safeValue)) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE, `${safeValue}`);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE);\n        safeValue = null;\n      }\n      this.#setType(currentValue, safeValue);\n    }\n  }\n  get type() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE) ?? null;\n  }\n  /**\n   * If set to number the container will have padding added (in pixels)\n   * @param {string | number} value sets the padding to the container\n   */\n  set padding(value) {\n    if (value !== null) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING, value.toString());\n      this.container?.style.setProperty(\"padding-bottom\", `${value}px`);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING);\n      this.container?.style.removeProperty(\"padding-bottom\");\n    }\n  }\n  get padding() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PADDING);\n  }\n  /**\n   * Set the toolbar type to each section\n   * @private\n   * @param {string|null} oldType the type class to remove\n   * @param {string|null} newType the type class to add\n   * @returns {void}\n   */\n  #setType(oldType, newType) {\n    const cl = this.container?.classList;\n    if (oldType)\n      cl?.remove(`type-${oldType}`);\n    if (newType)\n      cl?.add(`type-${newType}`);\n    this.sections.forEach((s) => {\n      s.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOOLBAR_TYPE, `${newType}`);\n      if (s.tagName === \"IDS-TOOLBAR-MORE-ACTIONS\") {\n        if (newType === \"formatter\") {\n          s.colorVariant = FORMATTER_VARIANT;\n        } else {\n          s.colorVariant = null;\n        }\n      }\n    });\n    [...this.items, ...this.separators].forEach((item) => {\n      if (newType === \"formatter\") {\n        item.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLOR_VARIANT, FORMATTER_VARIANT);\n      } else {\n        const val = item.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLOR_VARIANT);\n        if (val === FORMATTER_VARIANT)\n          item.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLOR_VARIANT);\n      }\n    });\n  }\n  /**\n   * Gets the current item that should be used as the \"tabbable\" item\n   * (item that receives focus when the toolbar overall is \"focused\").\n   * @returns {HTMLElement | undefined} an element that currently has a usable tabIndex attribute\n   */\n  detectTabbable() {\n    let tabbableItem;\n    for (let i = 0; !tabbableItem && i < this.items.length; i++) {\n      if (this.items[i].tabIndex > -1) {\n        tabbableItem = this.items[i];\n      }\n    }\n    return tabbableItem;\n  }\n  /**\n   * @private\n   * @param {HTMLElement} elem an element residing within the toolbar that can accept\n   */\n  makeTabbable(elem = this.items[0]) {\n    const isTabbable = this.tabbable;\n    this.items.forEach((item) => {\n      const nonTabbableTargetIndex = elem.isEqualNode(item) ? 0 : -1;\n      item.tabIndex = isTabbable ? 0 : nonTabbableTargetIndex;\n    });\n  }\n  #resize() {\n    this.refreshOverflowedItems();\n  }\n  /**\n   * Triggers a `selected` event on a specified Toolbar item\n   * @param {HTMLElement} elem the specified Toolbar item\n   * @param {boolean} [triggeredFromOverflow] if true, notifies the event handler that this\n   *  `selected` event originated from the Overflow menu\n   * @returns {void}\n   */\n  triggerSelectedEvent(elem, triggeredFromOverflow = false) {\n    if (!this.contains(elem)) {\n      return;\n    }\n    const detail = {\n      elem,\n      value: elem.value\n    };\n    if (elem.overflowTarget) {\n      detail.elem = elem.overflowTarget;\n      detail.value = elem.overflowTarget.value;\n      detail.overflowMenuItem = elem;\n      detail.triggeredFromOverflow = triggeredFromOverflow;\n    }\n    elem.dispatchEvent(new CustomEvent(\"selected\", {\n      bubbles: true,\n      detail\n    }));\n  }\n};\nIdsToolbar = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-toolbar\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_toolbar_scss__WEBPACK_IMPORTED_MODULE_11__[\"default\"])\n], IdsToolbar);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar.ts\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar-more-actions.scss":
/*!******************************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar-more-actions.scss ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: inline-flex;\n}\n\n::slotted(ids-separator) {\n  align-self: center;\n  justify-self: center;\n}\n\n.ids-toolbar-more-actions {\n  padding: 4px;\n  white-space: nowrap;\n  width: auto;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar-more-actions.scss\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar-section.scss":
/*!*************************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar-section.scss ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: flex;\n}\n\nids-toolbar-section + ids-toolbar-section[type=title],\nids-toolbar-section + ids-toolbar-section[type=buttonset] {\n  padding-left: 10px;\n}\n\n.ids-toolbar-section {\n  padding: 4px;\n  white-space: nowrap;\n  width: auto;\n}\n.ids-toolbar-section ::slotted(*) {\n  transition: opacity 200ms cubic-bezier(0.4, 0, 0.6, 1);\n  opacity: 1;\n}\n.ids-toolbar-section ::slotted([overflowed]) {\n  opacity: 0;\n  pointer-events: none;\n}\n.ids-toolbar-section.buttonset {\n  display: flex;\n}\n.ids-toolbar-section.buttonset ::slotted(ids-button:not(:first-child)),\n.ids-toolbar-section.buttonset ::slotted(ids-menu-button:not(:first-child)) {\n  padding-inline-start: 4px;\n}\n.ids-toolbar-section.buttonset ::slotted(ids-separator[vertical]) {\n  margin-inline-end: -4px;\n}\n.ids-toolbar-section.title {\n  display: inline-block;\n}\n.ids-toolbar-section.title, .ids-toolbar-section.buttonset {\n  padding-inline-start: 8px;\n  padding-inline-end: 8px;\n}\n.ids-toolbar-section.fluid {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n}\n.ids-toolbar-section.search {\n  padding-inline-start: 12px;\n  padding-inline-end: 12px;\n}\n.ids-toolbar-section.inactive > * {\n  visibility: hidden;\n  pointer-events: none;\n}\n.ids-toolbar-section.inactive ::slotted(*) {\n  visibility: hidden;\n  pointer-events: none;\n}\n.ids-toolbar-section:not(.favor) {\n  flex: 0 1 auto;\n}\n.ids-toolbar-section:not(.favor).title, .ids-toolbar-section:not(.favor).buttonset {\n  flex: 1 1 auto;\n}\n.ids-toolbar-section.title, .ids-toolbar-section.buttonset, .ids-toolbar-section.fluid {\n  flex: 1 0 auto;\n}\n.ids-toolbar-section.title:not(.favor):not(.fluid), .ids-toolbar-section.buttonset:not(.favor):not(.fluid), .ids-toolbar-section.fluid:not(.favor):not(.fluid) {\n  flex: 0 1 auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n  text-overflow: ellipsis;\n}\n.ids-toolbar-section.title.static, .ids-toolbar-section.buttonset.static, .ids-toolbar-section.fluid.static {\n  flex-grow: 0 0 auto;\n}\n.ids-toolbar-section.favor {\n  flex: 2 0 auto;\n}\n.ids-toolbar-section.favor.title:not(.static), .ids-toolbar-section.favor.buttonset:not(.static) {\n  flex-grow: 2 0 auto;\n}\n.ids-toolbar-section.align-start {\n  justify-content: flex-start;\n}\n.ids-toolbar-section.align-center {\n  justify-content: center;\n}\n.ids-toolbar-section.align-center-even {\n  justify-content: space-around;\n}\n.ids-toolbar-section.align-end {\n  justify-content: flex-end;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar-section.scss\n");

/***/ }),

/***/ "./src/components/ids-toolbar/ids-toolbar.scss":
/*!*****************************************************!*\
  !*** ./src/components/ids-toolbar/ids-toolbar.scss ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n}\n:host ::slotted(ids-toolbar-section:not([favor])) {\n  overflow: hidden;\n}\n:host ::slotted(ids-toolbar-section:not([type])),\n:host ::slotted(ids-toolbar-section[type=button]) {\n  flex: 0 0 auto;\n}\n:host ::slotted(ids-toolbar-section[type=fluid]),\n:host ::slotted(ids-toolbar-section[type=title]),\n:host ::slotted(ids-toolbar-section[type=buttonset]) {\n  flex: 1 0 auto;\n}\n:host ::slotted(ids-toolbar-section[type=fluid]:not([favor])),\n:host ::slotted(ids-toolbar-section[type=title]:not([favor])),\n:host ::slotted(ids-toolbar-section[type=buttonset]:not([favor])) {\n  flex: 1 1 auto;\n}\n:host ::slotted(ids-toolbar-section[favor]) {\n  flex: 2 0 auto;\n}\n:host ::slotted(ids-toolbar-section[favor][type=buttonset]),\n:host ::slotted(ids-toolbar-section[favor][type=title]) {\n  overflow: auto;\n  flex: 2 0 auto;\n}\n:host ::slotted(ids-toolbar-section[align=start]),\n:host ::slotted(ids-toolbar-section:not([align])) {\n  justify-content: flex-start;\n}\n:host ::slotted(ids-toolbar-section[align=center]) {\n  justify-content: center;\n}\n:host ::slotted(ids-toolbar-section[align=center-even]) {\n  justify-content: space-around;\n}\n:host ::slotted(ids-toolbar-section[align=end]) {\n  justify-content: flex-end;\n}\n:host[disabled] ::slotted(.ids-text) {\n  color: text-slate-30();\n}\n\n:host(.secondary) {\n  border-top: 1px solid var(--ids-color-palette-slate-20);\n  border-bottom: 1px solid var(--ids-color-palette-slate-20);\n}\n\n:host(.with-padding) {\n  padding: 0 16px;\n}\n\n.ids-toolbar {\n  display: flex;\n  align-items: center;\n  flex-flow: row nowrap;\n  height: 100%;\n  justify-content: space-between;\n  overflow: hidden;\n  width: 100%;\n}\n.ids-toolbar.disabled {\n  color: text-slate-30();\n}\n.ids-toolbar.disabled .ids-text {\n  color: inherit;\n}\n.ids-toolbar.type-formatter {\n  background-color: var(--ids-color-palette-slate-80);\n}\n.ids-toolbar.type-formatter[mode=dark] {\n  background-color: var(--ids-color-palette-slate-20);\n}\n.ids-toolbar.type-formatter[mode=contrast] {\n  background-color: var(--ids-color-palette-slate-70);\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-toolbar/ids-toolbar.scss\n");

/***/ })

}]);