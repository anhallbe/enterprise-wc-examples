"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-pie-chart_ids-pie-chart_ts"],{

/***/ "./src/components/ids-pie-chart/ids-pie-chart.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-pie-chart/ids-pie-chart.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsPieChart)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _ids_axis_chart_ids_chart_colors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ids-axis-chart/ids-chart-colors */ \"./src/components/ids-axis-chart/ids-chart-colors.ts\");\n/* harmony import */ var _ids_axis_chart_ids_pattern_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-axis-chart/ids-pattern-data */ \"./src/components/ids-axis-chart/ids-pattern-data.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_chart_legend_mixin_ids_chart_legend_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-chart-legend-mixin/ids-chart-legend-mixin */ \"./src/mixins/ids-chart-legend-mixin/ids-chart-legend-mixin.ts\");\n/* harmony import */ var _mixins_ids_chart_selection_mixin_ids_chart_selection_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-chart-selection-mixin/ids-chart-selection-mixin */ \"./src/mixins/ids-chart-selection-mixin/ids-chart-selection-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _core_ids_data_source__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/ids-data-source */ \"./src/core/ids-data-source.ts\");\n/* harmony import */ var _ids_tooltip_ids_tooltip__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ids-tooltip/ids-tooltip */ \"./src/components/ids-tooltip/ids-tooltip.ts\");\n/* harmony import */ var _ids_empty_message_ids_empty_message__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-empty-message/ids-empty-message */ \"./src/components/ids-empty-message/ids-empty-message.ts\");\n/* harmony import */ var _ids_pie_chart_scss__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ids-pie-chart.scss */ \"./src/components/ids-pie-chart/ids-pie-chart.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_chart_legend_mixin_ids_chart_legend_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n  (0,_mixins_ids_chart_selection_mixin_ids_chart_selection_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n    (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n      (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n        (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n          _core_ids_element__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n        )\n      )\n    )\n  )\n);\nlet IdsPieChart = class extends Base {\n  initialized = false;\n  constructor() {\n    super();\n    if (!this.state)\n      this.state = {};\n    this.DEFAULT_SELECTABLE = false;\n  }\n  svg;\n  svgContainer;\n  emptyMessage;\n  legend;\n  percents = [];\n  totals = 0;\n  /** Reference to datasource API */\n  datasource = new _core_ids_data_source__WEBPACK_IMPORTED_MODULE_11__[\"default\"]();\n  /**\n   * @returns {Array<string>} Drawer vetoable events\n   */\n  vetoableEventTypes = [\n    \"beforeselected\",\n    \"beforedeselected\"\n  ];\n  /**\n   * Invoked each time the custom element is connected to the DOM.\n   */\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.legendPlacement = \"right\";\n    this.svg = this.shadowRoot?.querySelector(\"svg\");\n    this.svgContainer = this.shadowRoot?.querySelector(\".ids-chart-svg-container\");\n    this.emptyMessage = this.querySelector(\"ids-empty-message\") || this.shadowRoot?.querySelector(\"ids-empty-message\");\n    this.legend = this.shadowRoot?.querySelector('[name=\"legend\"]');\n    this.redraw();\n    this.legendsClickable?.(this.selectable);\n  }\n  /**\n   * On selectable change\n   */\n  onSelectableChange() {\n    this.legendsClickable?.(this.selectable);\n  }\n  /**\n   * Invoked when redrawing the chart\n   * @private\n   */\n  redraw() {\n    if (!this.initialized) {\n      return;\n    }\n    if (this.data && this.data.length === 0 && this.initialized) {\n      this.#showEmptyMessage();\n      return;\n    }\n    this.#calculate();\n    this.#addColorVariables();\n    this.#setSliceAngles();\n    if (this.legend)\n      this.legend.innerHTML = this.legendTemplate();\n    if (this.svg)\n      this.svg.innerHTML = this.chartTemplate();\n    this.#attachTooltipEvents();\n    this.#preSelected();\n    this.triggerEvent(\"rendered\", this, {\n      detail: {\n        svg: this.svg,\n        data: this.data\n      }\n    });\n  }\n  /**\n   * Return the attributes handled as getters/setters\n   * @returns {Array} the list of attributes\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ANIMATED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DATA,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT_TEXT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HEIGHT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SUPPRESS_TOOLTIPS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.WIDTH\n    ];\n  }\n  /**\n   * Create the template chart\n   * @returns {string} The template\n   */\n  template() {\n    return `<div class=\"ids-chart-container\" part=\"container\">\n      <div class=\"ids-chart-svg-container\">\n        <svg class=\"ids-pie-chart\" part=\"chart\"${this.width ? ` width=\"${this.width}\"` : \"\"}${this.height ? ` height=\"${this.height}\"` : \"\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${this.viewBoxSize} ${this.viewBoxSize}\">\n        </svg>\n      </div>\n      <slot name=\"legend\">\n      </slot>\n      <slot name=\"empty-message\">\n        <ids-empty-message icon=\"empty-no-data\" hidden>\n          <ids-text type=\"h2\" font-size=\"20\" label=\"true\" slot=\"label\">${this.localeAPI?.translate(\"NoData\") || \"No Data Available\"}</ids-text>\n        </ids-empty-message>\n      </slot>\n      <slot name=\"tooltip\">\n        <ids-tooltip id=\"tooltip\"></ids-tooltip>\n      </slot>\n    </div>`;\n  }\n  // Respond to changing locale\n  onLocaleChange = () => {\n    this.redraw();\n    const textElem = this.shadowRoot?.querySelector(\"ids-empty-message ids-text\");\n    if (textElem)\n      textElem.textContent = this.localeAPI?.translate(\"NoData\");\n  };\n  // Respond to changing language\n  onLanguageChange = () => {\n    const textElem = this.shadowRoot?.querySelector(\"ids-empty-message ids-text\");\n    if (textElem)\n      textElem.textContent = this.localeAPI?.translate(\"NoData\");\n  };\n  /**\n   * Get the percentages as rounded and total\n   * @private\n   */\n  #calculate() {\n    this.totals = 0;\n    this.percents = [];\n    const data = this.data[0].data;\n    data?.forEach((element) => {\n      this.totals += element.value || 0;\n    });\n    data?.forEach((element) => {\n      const total = (element.value || 0) / this.totals * 100;\n      this.percents.push({ total, rounded: Math.round(total) });\n    });\n  }\n  /**\n   * Calculate the legend markup and return it\n   * @returns {string} The legend markup.\n   */\n  legendTemplate() {\n    let legend = `<div class=\"chart-legend\">`;\n    this.data[0].data?.forEach((slice, index) => {\n      const colorClass = slice.pattern ? \"\" : ` color-${index + 1}`;\n      const patternSvg = slice.pattern ? `<svg width=\"12\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"12\" height=\"12\" fill=\"url(#${slice.pattern})\"></rect></svg>` : \"\";\n      let legendValue = `${slice.name} (${this.percents[index].rounded}${this.localeAPI?.numbers().percentSign || \"%\"})`;\n      if (typeof this.legendFormatter === \"function\") {\n        legendValue = this.legendFormatter(slice, this.percents[index], this);\n      }\n      legend += `<a href=\"#legend-${(0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.kebabCase)(slice.name || index)}\" data-index=\"${index}\" class=\"chart-legend-item\">\n        <div class=\"swatch${colorClass}\">${patternSvg}</div>\n        ${legendValue}\n        </a>`;\n    });\n    legend += `</div>`;\n    return legend;\n  }\n  /**\n   * Set the format on the legend items\n   * @param {Function} value A function for legend customization\n   */\n  set legendFormatter(value) {\n    this.state.legendFormatter = value;\n    this.redraw();\n  }\n  get legendFormatter() {\n    return this.state.legendFormatter;\n  }\n  /**\n   * Add colors in a style sheet to the root so the css variables can be used\n   * @private\n   */\n  #addColorVariables() {\n    let colorSheet = \"\";\n    if (!this.shadowRoot?.styleSheets) {\n      return;\n    }\n    const data = this.data[0].data;\n    data?.forEach((group, index) => {\n      const slice = group;\n      let color = slice.patternColor;\n      if (!color && slice.color && slice.color.substr(0, 1) === \"#\") {\n        color = slice.color;\n      }\n      if (!color && slice.color && slice.color.substr(0, 1) !== \"#\") {\n        color = `var(--ids-color-palette-${slice.color})`;\n      }\n      if (!color) {\n        color = `var(${this.colors[index]})`;\n      }\n      colorSheet += `--ids-chart-color-${index + 1}: ${color} !important;`;\n    });\n    const styleSheet = this.shadowRoot.styleSheets[0];\n    if (styleSheet.cssRules && styleSheet.cssRules[0].selectorText === \":host\") {\n      styleSheet.deleteRule(0);\n    }\n    styleSheet.insertRule(`:host {\n      ${colorSheet}\n    }`);\n  }\n  /**\n   * Return the inner chart template\n   * @returns {string} The pie inner template\n   */\n  chartTemplate() {\n    let circles = \"\";\n    let filled = 0;\n    const radius = this.donut ? 40 : 25;\n    const strokeWidth = this.donut ? 15 : 50;\n    const cx = this.viewBoxSize / 2;\n    const cy = this.viewBoxSize / 2;\n    this.percents.forEach((percent, index) => {\n      const startAngle = -90;\n      const dashArray = 2 * Math.PI * radius;\n      const dashOffset = dashArray - dashArray * percent.total / 100;\n      const angle = filled * 360 / 100 + startAngle;\n      const data = this.data[0].data;\n      const colorClass = data?.[index].pattern ? \"\" : ` color-${index + 1}`;\n      const stroke = data?.[index].pattern ? `url(#${data?.[index].pattern})` : this.color(index);\n      circles += `<g role=\"listitem\">\n        <circle class=\"slice${colorClass}\" part=\"circle\" stroke=\"${stroke}\" stroke-width=\"${strokeWidth}\" index=\"${index}\" percent=\"${percent.total}\" r=\"${radius}\" cx=\"${cx}\" cy=\"${cy}\" stroke-dasharray=\"${dashArray}\" stroke-dashoffset=\"${this.animated ? dashArray : dashOffset}\" transform=\"rotate(${angle} ${cx} ${cy})\" pointer-events=\"stroke\"></circle>\n        <text class=\"audible\">${data?.[index].name}  ${percent.rounded}%</text>\n        </g>`;\n      filled += percent.total;\n      if (this.animated) {\n        const animationDuration = 380;\n        const currentDuration = animationDuration * percent.total / 100;\n        const delay = animationDuration * filled / 100;\n        requestAnimationFrame(() => {\n          this.container?.querySelector(`circle.slice[index=\"${index}\"]`)?.style.setProperty(\"transition\", `stroke-dashoffset ${currentDuration}ms cubic-bezier(0.17, 0.04, 0.03, 0.94) ${delay}ms`);\n          requestAnimationFrame(() => {\n            this.container?.querySelector(`circle.slice[index=\"${index}\"]`)?.setAttribute(\"stroke-dashoffset\", String(dashOffset));\n          });\n        });\n      }\n    });\n    return `<title></title>\n      <title>${this.title}</title>\n      <defs>\n        ${this.#patterns()}\n      </defs>\n      <g role=\"list\">\n        ${circles}\n      </g>\n      <circle class=\"donut-hole\" r=\"${radius}\" cx=\"${cx}\" cy=\"${cy}\" fill=\"transparent\" stroke-width=\"0\"></circle>\n      <text class=\"donut-text\" x=\"50%\" y=\"50%\" dy=\".3em\">${this.donutText}</text>\n      `;\n  }\n  /**\n   * Return the definition markup for svg patterns\n   * @private\n   * @returns {string} The string with all the patterns being used\n   */\n  #patterns() {\n    let patternHtml = \"\";\n    this.data[0].data?.forEach((slice, i) => {\n      let pattern = _ids_axis_chart_ids_pattern_data__WEBPACK_IMPORTED_MODULE_3__.patternData[slice.pattern];\n      if (pattern) {\n        const color = `${this.color(i)}`;\n        pattern = pattern.replace('fill=\"#000000\"', `fill=\"${color}\"`);\n        patternHtml += pattern;\n      }\n    });\n    return patternHtml;\n  }\n  /**\n   * Viewbox size (square)\n   * @returns {number} the viewbox width/height\n   */\n  get viewBoxSize() {\n    return 100;\n  }\n  /**\n   * Return chart elements that get selection\n   * @returns {Array<SVGElement>} The elements\n   */\n  get selectionElements() {\n    if (!this.selectable)\n      return [];\n    return [...this.container?.querySelectorAll(\".slice\") ?? []];\n  }\n  /**\n   * Return chart elements that get tooltips\n   * @private\n   * @returns {Array<SVGElement>} The elements\n   */\n  tooltipElements() {\n    return [...this.container?.querySelectorAll(\".slice\") ?? []];\n  }\n  /**\n   * Return the tooltip template\n   * @returns {string} The tooltip template\n   */\n  tooltipTemplate() {\n    return \"<b>${label}</b> ${value}\";\n  }\n  /**\n   * Convert angle degree to radians\n   * @private\n   * @param {number} degree The degree\n   * @returns {number} calculated radians value\n   */\n  #degreeToRadians(degree) {\n    return degree * (Math.PI / 180);\n  }\n  /**\n   * Hold the angles for each slice\n   * @private\n   */\n  #sliceAngles = [];\n  /**\n   * Set the angles for each slice\n   * @private\n   * @returns {void}\n   */\n  #setSliceAngles() {\n    this.#sliceAngles = [];\n    const totals = this.totals;\n    let startAngle = this.#degreeToRadians(-90);\n    this.data?.[0]?.data?.forEach((d) => {\n      const endAngle = d.value / totals * Math.PI * 2 + startAngle;\n      const midAngle = (startAngle + endAngle) / 2;\n      this.#sliceAngles.push({ startAngle, midAngle, endAngle });\n      startAngle = endAngle;\n    });\n  }\n  /**\n   * Get the midpoint position for given slice index\n   * @private\n   * @param {number} index The slice index\n   * @param {number} extra Any extra desired padding\n   * @returns {{ x: number, y: number, midAngle: number }} The calculated position\n   */\n  #midPosition(index, extra = 0) {\n    const width = this.svg?.clientWidth ?? NaN;\n    const height = this.svg?.clientHeight ?? NaN;\n    const radius = Math.min(width, height) / 2 - (this.donut ? 8 : 0);\n    const { x: offsetX, y: offsetY } = this.svgContainer?.getBoundingClientRect() ?? { x: NaN, y: NaN };\n    const cx = width / 2 + offsetX - this.#tooltipDotSize;\n    const cy = height / 2 + offsetY - this.#tooltipDotSize;\n    const { midAngle } = this.#sliceAngles[index];\n    return {\n      x: cx + Math.cos(midAngle) * (radius + extra),\n      y: cy + Math.sin(midAngle) * (radius + extra),\n      midAngle\n    };\n  }\n  /**\n   * Hold the size for tooltip dot\n   * @private\n   */\n  #tooltipDotSize = 2;\n  /**\n   * Hold the tooltip dots\n   * @private\n   */\n  #tooltipDots = [];\n  /**\n   * Adjust the position of tooltip dots and add if run first time.\n   * @private\n   * @returns {void}\n   */\n  #adjustTooltipDots() {\n    this.#tooltipDots = [...this.svgContainer?.parentElement?.querySelectorAll(\"#dots .dot\") ?? []];\n    if (!this.#tooltipDots.length) {\n      const html = `<div id=\"dots\">${this.#sliceAngles.map(() => '<span class=\"dot\"></span>').join(\"\")}`;\n      this.svgContainer?.parentElement?.insertAdjacentHTML(\"beforeend\", html);\n      this.#tooltipDots = [...this.svgContainer?.parentElement?.querySelectorAll(\"#dots .dot\") ?? []];\n    }\n    this.#tooltipDots.forEach((dot, i) => {\n      const { x, y } = this.#midPosition(i);\n      dot.style.setProperty(\"--ids-pie-chart-tooltip-dot-size\", `${this.#tooltipDotSize}px`);\n      dot.style.setProperty(\"left\", `${x}px`);\n      dot.style.setProperty(\"top\", `${y}px`);\n    });\n  }\n  /**\n   * Setup handlers on tooltip elements\n   */\n  #attachTooltipEvents() {\n    if (this.suppressTooltips) {\n      return;\n    }\n    const tooltip = this.svgContainer?.parentElement?.querySelector(\"ids-tooltip\");\n    this.tooltipElements().forEach((element, index) => {\n      this.onEvent(\"hoverend\", element, async () => {\n        if (tooltip) {\n          tooltip.innerHTML = this.#tooltipContent(element);\n          tooltip.target = element;\n        }\n        this.#positionTooltip(tooltip, index);\n      });\n    });\n  }\n  /**\n   * Detatch tooltip handlers on elements\n   */\n  #detachTooltipEvents() {\n    this.tooltipElements().forEach((element) => {\n      this.offEvent(\"hoverend\", element);\n    });\n  }\n  /**\n   * Return the data for a tooltip accessed by index\n   * @private\n   * @param {SVGElement} tooltip the tooltip component\n   * @param {number} index the index\n   */\n  #positionTooltip(tooltip, index) {\n    this.#adjustTooltipDots();\n    tooltip.popup.alignTarget = this.#tooltipDots[index];\n    const { midAngle } = this.#sliceAngles[index];\n    const rads = midAngle + this.#degreeToRadians(90);\n    const piQuart = Math.PI / 4;\n    let placement = null;\n    if (rads <= piQuart && rads >= 0 || rads > 7 * piQuart)\n      placement = \"top\";\n    else if (rads <= 3 * piQuart && rads >= piQuart)\n      placement = \"right\";\n    else if (rads <= 5 * piQuart && rads >= 3 * piQuart)\n      placement = \"bottom\";\n    else if (rads <= 7 * piQuart && rads >= 5 * piQuart)\n      placement = \"left\";\n    tooltip.placement = placement;\n    tooltip.visible = true;\n  }\n  /**\n   * Return the data for a tooltip accessible by index\n   * @param {number} index the data groupIndex\n   * @returns {Array<string>} The elements\n   */\n  tooltipData(index) {\n    const data = this.data[0].data[index];\n    return {\n      label: data.name,\n      value: data.value || 0,\n      tooltip: data.tooltip,\n      total: this.percents[index].total,\n      rounded: this.percents[index].rounded\n    };\n  }\n  /**\n   * Return the tooltip content\n   * @param {SVGElement} elem The svg element we will inspect for content\n   * @private\n   * @returns {string} The tooltip content\n   */\n  #tooltipContent(elem) {\n    const index = Number(elem.getAttribute(\"index\"));\n    const data = this.tooltipData(index);\n    if (data.tooltip) {\n      return data.tooltip.replace(\"${value}\", data.value).replace(\"${label}\", data.label).replace(\"${percent}\", data.rounded);\n    }\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.injectTemplate)(this.tooltipTemplate(), data);\n  }\n  /**\n   * Show an empty message with settings configuration\n   * @private\n   */\n  #showEmptyMessage() {\n    this.svg?.classList.add(\"hidden\");\n    this.svgContainer?.parentElement?.classList.add(\"empty\");\n    this.emptyMessage?.style.setProperty(\"height\", `${this.height}px`);\n    this.emptyMessage?.removeAttribute(\"hidden\");\n  }\n  /**\n   * Hide the empty message\n   * @private\n   */\n  #hideEmptyMessage() {\n    this.svg?.classList.remove(\"hidden\");\n    this.svgContainer?.parentElement?.classList.remove(\"empty\");\n    this.emptyMessage?.style.setProperty(\"height\", \"\");\n    this.emptyMessage?.setAttribute(\"hidden\", \"\");\n  }\n  /**\n   * Set initially selected\n   * @private\n   * @returns {void}\n   */\n  #preSelected() {\n    if (!this.initialized || !this.selectable || !this.data?.length || !this.selectionElements?.length)\n      return;\n    const index = this.data[0]?.data?.findIndex((n) => n.selected);\n    if (typeof index === \"number\" && index > -1) {\n      const target = this.selectionElements[index];\n      if (!target)\n        return;\n      this.selectionElements.forEach((el) => {\n        if (el === target)\n          el.setAttribute(\"selected\", \"\");\n        else\n          el.classList.add(\"not-selected\");\n      });\n    }\n  }\n  /**\n   * Get currently selected\n   * @returns {IdsPieChartSelected} selected.\n   */\n  getSelected() {\n    const selected = this.selectionElements.filter((el) => el.hasAttribute(\"selected\"))[0];\n    if (!selected)\n      return {};\n    const i = selected.getAttribute(\"index\");\n    const data = this.data[0].data?.[i];\n    return { slice: selected, index: i, data };\n  }\n  /**\n   * Set selected by give indexes\n   * @param {IdsPieChartSelectedBy} opt The in comeing options\n   * @returns {void}\n   */\n  setSelected(opt) {\n    if (!this.initialized || !this.selectable || !this.data?.length || !this.selectionElements?.length)\n      return;\n    const index = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.stringToNumber)(opt.index);\n    if (!Number.isNaN(index))\n      this.setSelection(index);\n  }\n  /**\n   * Set the selection for given index\n   * @private\n   * @param {number|string} index The index value\n   * @returns {boolean} False, if veto.\n   */\n  setSelection(index) {\n    const target = this.selectionElements?.[index];\n    if (!target)\n      return false;\n    let data;\n    const deselect = (elem, idx) => {\n      data = this.data[0].data?.[idx];\n      if (!this.triggerVetoableEvent(\"beforedeselected\", { slice: elem, index: idx, data })) {\n        return false;\n      }\n      if (data)\n        delete data.selected;\n      this.selectionElements.forEach((el) => el.classList.remove(\"not-selected\"));\n      elem.removeAttribute(\"selected\");\n      this.triggerEvent(\"deselected\", this, {\n        bubbles: true,\n        detail: { elem: this, slice: elem, index: idx, data }\n        // eslint-disable-line\n      });\n      return true;\n    };\n    const idxSelected = this.selectionElements.findIndex((el) => el.hasAttribute(\"selected\"));\n    if (idxSelected > -1) {\n      if (`${idxSelected}` === `${index}`)\n        return deselect(target, idxSelected);\n      if (!deselect(this.selectionElements[idxSelected], idxSelected))\n        return false;\n    }\n    data = this.data[0].data?.[index];\n    if (!this.triggerVetoableEvent(\"beforeselected\", { slice: target, index, data })) {\n      return false;\n    }\n    this.selectionElements.forEach((el) => {\n      if (el === target)\n        el.setAttribute(\"selected\", \"\");\n      else\n        el.classList.add(\"not-selected\");\n    });\n    if (data)\n      data.selected = true;\n    this.triggerEvent(\"selected\", this, {\n      bubbles: true,\n      detail: { elem: this, slice: target, index, data }\n      // eslint-disable-line\n    });\n    return true;\n  }\n  /**\n   * Handles title attribute changes\n   * @param {string} value title value\n   */\n  onTitleChange(value) {\n    const titleElems = this.container?.querySelectorAll(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE);\n    if (titleElems && titleElems?.length > 1) {\n      titleElems[1].textContent = value;\n    }\n  }\n  /**\n   * Sets the chart to donut chart\n   * @param {boolean} value True to make a donut chart\n   */\n  set donut(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT, String(value));\n    this.redraw();\n  }\n  get donut() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT)) || false;\n  }\n  /**\n   * Sets the charts middle text\n   * @param {string} value The text to use\n   */\n  set donutText(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT_TEXT, value);\n    const textElem = this.container?.querySelector(\".donut-text\");\n    if (textElem)\n      textElem.innerHTML = value;\n  }\n  get donutText() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DONUT_TEXT) || \"\";\n  }\n  /**\n   * The width of the chart (in pixels) or 'inherit' from the parent\n   * @param {number | string} value The height value\n   */\n  set height(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HEIGHT, String(value));\n    this.svg?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HEIGHT, String(value));\n    this.redraw();\n  }\n  get height() {\n    const attrib = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HEIGHT);\n    return attrib ? parseFloat(attrib) : \"\";\n  }\n  /**\n   * The width of the chart (in pixels) or 'inherit' from the parent\n   * @param {number | string} value The width value\n   */\n  set width(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.WIDTH, String(value));\n    this.svg?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.WIDTH, String(value));\n    this.redraw();\n  }\n  get width() {\n    const attrib = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.WIDTH);\n    return attrib ? parseFloat(attrib) : \"\";\n  }\n  /**\n   * Set the data array of the chart\n   * @param {Array<unknown>} value The array to use\n   */\n  set data(value) {\n    if (value) {\n      this.#hideEmptyMessage();\n      this.datasource.data = value;\n      this.initialized = true;\n      this.redraw();\n      return;\n    }\n    this.datasource.data = [];\n  }\n  get data() {\n    return this?.datasource?.data || [];\n  }\n  /**\n   * Utility function to get the colors series being used in this chart\n   * @returns {Array} The colors being used on this instance.\n   */\n  get colors() {\n    return _ids_axis_chart_ids_chart_colors__WEBPACK_IMPORTED_MODULE_2__.QUALITATIVE_COLORS;\n  }\n  /**\n   * Get the color to use based on the index for sequential and custom colors\n   * @param {number} index The current index\n   * @returns {string} The color to use\n   * @private\n   */\n  color(index) {\n    return `var(${this.data[0].data?.[index].color ? `color-${index + 1}` : this.colors[index]})`;\n  }\n  /**\n   * Set the animation on/off\n   * @param {boolean} value True if animation is on\n   */\n  set animated(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ANIMATED, String(value));\n    this.redraw();\n  }\n  get animated() {\n    const animated = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ANIMATED);\n    if (animated === null) {\n      return true;\n    }\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ANIMATED));\n  }\n  /**\n   * Set the tooltips on/off\n   * @param {boolean} value True if animation is on\n   */\n  set suppressTooltips(value) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SUPPRESS_TOOLTIPS, String(value));\n    const suppressed = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SUPPRESS_TOOLTIPS));\n    if (suppressed) {\n      this.#detachTooltipEvents();\n    }\n    this.redraw();\n  }\n  get suppressTooltips() {\n    const suppressed = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SUPPRESS_TOOLTIPS);\n    if (suppressed === null) {\n      return false;\n    }\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_4__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SUPPRESS_TOOLTIPS));\n  }\n};\nIdsPieChart = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.customElement)(\"ids-pie-chart\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.scss)(_ids_pie_chart_scss__WEBPACK_IMPORTED_MODULE_14__[\"default\"])\n], IdsPieChart);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-pie-chart/ids-pie-chart.ts\n");

/***/ }),

/***/ "./src/components/ids-pie-chart/ids-pie-chart.scss":
/*!*********************************************************!*\
  !*** ./src/components/ids-pie-chart/ids-pie-chart.scss ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Pie Chart Component */ /* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.chart-legend {\n  display: flex;\n  padding-inline-start: 8px;\n  flex-direction: row;\n  margin-top: -4px;\n  justify-content: flex-start;\n  width: inherit;\n}\n.chart-legend a {\n  display: flex;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  font-size: 14px;\n  color: var(--ids-color-palette-slate-60);\n  padding-inline-start: 8px;\n  padding-inline-end: 8px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  align-items: center;\n  border: 1px solid transparent;\n  text-decoration: none;\n}\n.chart-legend a:focus {\n  outline: 0;\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 3px rgba(54, 138, 192, 0.3);\n}\n.chart-legend .swatch {\n  display: inline-flex;\n  margin-inline-end: 8px;\n  height: 12px;\n  width: 12px;\n}\n.chart-legend .swatch.color-1 {\n  background-color: var(--ids-chart-color-1);\n}\n.chart-legend .swatch.color-2 {\n  background-color: var(--ids-chart-color-2);\n}\n.chart-legend .swatch.color-3 {\n  background-color: var(--ids-chart-color-3);\n}\n.chart-legend .swatch.color-4 {\n  background-color: var(--ids-chart-color-4);\n}\n.chart-legend .swatch.color-5 {\n  background-color: var(--ids-chart-color-5);\n}\n.chart-legend .swatch.color-6 {\n  background-color: var(--ids-chart-color-6);\n}\n.chart-legend .swatch.color-7 {\n  background-color: var(--ids-chart-color-7);\n}\n.chart-legend .swatch.color-8 {\n  background-color: var(--ids-chart-color-8);\n}\n.chart-legend .swatch.color-9 {\n  background-color: var(--ids-chart-color-9);\n}\n.chart-legend .swatch.color-10 {\n  background-color: var(--ids-chart-color-10);\n}\n.chart-legend .swatch.color-11 {\n  background-color: var(--ids-chart-color-11);\n}\n.chart-legend .swatch.color-12 {\n  background-color: var(--ids-chart-color-12);\n}\n.chart-legend .swatch.color-13 {\n  background-color: var(--ids-chart-color-13);\n}\n.chart-legend .swatch.color-14 {\n  background-color: var(--ids-chart-color-14);\n}\n.chart-legend .swatch.color-15 {\n  background-color: var(--ids-chart-color-15);\n}\n.chart-legend .swatch.color-16 {\n  background-color: var(--ids-chart-color-16);\n}\n.chart-legend .swatch.color-17 {\n  background-color: var(--ids-chart-color-17);\n}\n.chart-legend .swatch.color-18 {\n  background-color: var(--ids-chart-color-18);\n}\n.chart-legend .swatch.color-19 {\n  background-color: var(--ids-chart-color-19);\n}\n.chart-legend .swatch.color-20 {\n  background-color: var(--ids-chart-color-20);\n}\n.chart-legend .swatch.color-21 {\n  background-color: var(--ids-chart-color-21);\n}\n\n.ids-chart-container {\n  display: flex;\n  flex-direction: column;\n}\n.ids-chart-container.legend-top {\n  margin-bottom: 8px;\n  flex-direction: column-reverse;\n}\n.ids-chart-container.legend-top .chart-legend {\n  margin-inline-start: 0;\n  justify-content: end;\n}\n.ids-chart-container.legend-right, .ids-chart-container.legend-left {\n  flex-direction: row;\n}\n.ids-chart-container.legend-right .chart-legend, .ids-chart-container.legend-left .chart-legend {\n  margin-inline-start: 0;\n  flex-direction: column;\n  justify-content: center;\n}\n.ids-chart-container.legend-right .chart-legend a, .ids-chart-container.legend-left .chart-legend a {\n  margin-bottom: 8px;\n  width: max-content;\n}\n.ids-chart-container.legend-left {\n  flex-direction: row-reverse;\n}\n\n:host([mode=dark]) .chart-legend a {\n  color: var(--ids-color-palette-slate-10);\n}\n\n.ids-chart-container {\n  height: 100%;\n  width: 100%;\n}\n.ids-chart-container.empty {\n  flex-direction: column;\n}\n.ids-chart-container .dot {\n  position: absolute;\n  border-color: transparent;\n  border-style: solid;\n  border-radius: 50%;\n  width: 0;\n  display: inline-block;\n  border-width: var(--ids-pie-chart-tooltip-dot-size, 0);\n  height: 0;\n}\n\n.ids-pie-chart {\n  margin-bottom: 12px;\n  height: 100%;\n  width: 100%;\n}\n.ids-pie-chart .slice.color-1:not([fill]) {\n  stroke: var(--ids-chart-color-1);\n}\n.ids-pie-chart .slice.color-2:not([fill]) {\n  stroke: var(--ids-chart-color-2);\n}\n.ids-pie-chart .slice.color-3:not([fill]) {\n  stroke: var(--ids-chart-color-3);\n}\n.ids-pie-chart .slice.color-4:not([fill]) {\n  stroke: var(--ids-chart-color-4);\n}\n.ids-pie-chart .slice.color-5:not([fill]) {\n  stroke: var(--ids-chart-color-5);\n}\n.ids-pie-chart .slice.color-6:not([fill]) {\n  stroke: var(--ids-chart-color-6);\n}\n.ids-pie-chart .slice.color-7:not([fill]) {\n  stroke: var(--ids-chart-color-7);\n}\n.ids-pie-chart .slice.color-8:not([fill]) {\n  stroke: var(--ids-chart-color-8);\n}\n.ids-pie-chart .slice.color-9:not([fill]) {\n  stroke: var(--ids-chart-color-9);\n}\n.ids-pie-chart .slice.color-10:not([fill]) {\n  stroke: var(--ids-chart-color-10);\n}\n.ids-pie-chart .slice.color-11:not([fill]) {\n  stroke: var(--ids-chart-color-11);\n}\n.ids-pie-chart .slice.color-12:not([fill]) {\n  stroke: var(--ids-chart-color-12);\n}\n.ids-pie-chart .slice.color-13:not([fill]) {\n  stroke: var(--ids-chart-color-13);\n}\n.ids-pie-chart .slice.color-14:not([fill]) {\n  stroke: var(--ids-chart-color-14);\n}\n.ids-pie-chart .slice.color-15:not([fill]) {\n  stroke: var(--ids-chart-color-15);\n}\n.ids-pie-chart .slice.color-16:not([fill]) {\n  stroke: var(--ids-chart-color-16);\n}\n.ids-pie-chart .slice.color-17:not([fill]) {\n  stroke: var(--ids-chart-color-17);\n}\n.ids-pie-chart .slice.color-18:not([fill]) {\n  stroke: var(--ids-chart-color-18);\n}\n.ids-pie-chart .slice.color-19:not([fill]) {\n  stroke: var(--ids-chart-color-19);\n}\n.ids-pie-chart .slice.color-20:not([fill]) {\n  stroke: var(--ids-chart-color-20);\n}\n.ids-pie-chart .slice.color-21:not([fill]) {\n  stroke: var(--ids-chart-color-21);\n}\n.ids-pie-chart.hidden {\n  display: none;\n}\n.ids-pie-chart.selectable .audible {\n  font-size: 1px;\n}\n.ids-pie-chart.selectable .slice {\n  cursor: pointer;\n}\n.ids-pie-chart.selectable .slice[selected] {\n  opacity: 1;\n}\n.ids-pie-chart.selectable .slice.not-selected {\n  opacity: 0.5;\n}\n\n.slice {\n  outline: none;\n  fill-opacity: 0;\n}\n\n.donut-text {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  font-size: 10px;\n  fill: var(--ids-color-palette-slate-60);\n  text-anchor: middle;\n}\n\n.donut-hole {\n  pointer-events: none;\n}\n\n.audible {\n  opacity: 0;\n  fill-opacity: 0;\n}\n\n.chart-legend {\n  justify-content: center;\n}\n\n[mode=dark] .donut-text {\n  fill: var(--ids-color-palette-slate-10);\n}\n\n[mode=contrast] .donut-text {\n  fill: var(--ids-color-palette-slate-100);\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-pie-chart/ids-pie-chart.scss\n");

/***/ })

}]);