"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-button_ids-button_ts"],{

/***/ "./src/components/ids-button/ids-button-common.ts":
/*!********************************************************!*\
  !*** ./src/components/ids-button/ids-button-common.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BUTTON_APPEARANCE\": () => (/* binding */ BUTTON_APPEARANCE),\n/* harmony export */   \"BUTTON_ATTRIBUTES\": () => (/* binding */ BUTTON_ATTRIBUTES),\n/* harmony export */   \"BUTTON_DEFAULTS\": () => (/* binding */ BUTTON_DEFAULTS),\n/* harmony export */   \"BUTTON_TYPES\": () => (/* binding */ BUTTON_TYPES),\n/* harmony export */   \"ICON_ALIGN_CLASSNAMES\": () => (/* binding */ ICON_ALIGN_CLASSNAMES),\n/* harmony export */   \"baseProtoClasses\": () => (/* binding */ baseProtoClasses)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n\nconst BUTTON_APPEARANCE = [\n  \"default\",\n  \"primary\",\n  \"secondary\",\n  \"tertiary\",\n  \"primary-destructive\",\n  \"tertiary-destructive\",\n  \"swipe-action-left\",\n  \"swipe-action-right\"\n];\nconst BUTTON_TYPES = [\n  \"button\",\n  \"submit\",\n  \"reset\",\n  \"menu\"\n];\nconst BUTTON_DEFAULTS = {\n  cssClass: [],\n  disabled: false,\n  hidden: false,\n  tabIndex: 0,\n  iconAlign: void 0,\n  appearance: BUTTON_APPEARANCE[0]\n};\nconst BUTTON_ATTRIBUTES = [\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.APPEARANCE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CSS_CLASS,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ICON,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ICON_ALIGN,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ID,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_PADDING,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_MARGINS,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SQUARE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TEXT,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TYPE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABINDEX,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.WIDTH\n];\nconst ICON_ALIGN_CLASSNAMES = [\n  \"align-icon-start\",\n  \"align-icon-end\"\n];\nconst baseProtoClasses = [\n  \"ids-button\",\n  \"ids-icon-button\",\n  \"ids-menu-button\",\n  \"ids-toggle-button\"\n];\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtYnV0dG9uL2lkcy1idXR0b24tY29tbW9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkI7QUFPcEIsTUFBTSxvQkFBZ0Q7QUFBQSxFQUMzRDtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDRjtBQUtPLE1BQU0sZUFBOEI7QUFBQSxFQUN6QztBQUFBLEVBQVU7QUFBQSxFQUFVO0FBQUEsRUFBUztBQUMvQjtBQUdPLE1BQU0sa0JBQXVCO0FBQUEsRUFDbEMsVUFBVSxDQUFDO0FBQUEsRUFDWCxVQUFVO0FBQUEsRUFDVixRQUFRO0FBQUEsRUFDUixVQUFVO0FBQUEsRUFDVixXQUFXO0FBQUEsRUFDWCxZQUFZLGtCQUFrQixDQUFDO0FBQ2pDO0FBR08sTUFBTSxvQkFBOEI7QUFBQSxFQUN6Qyx1RUFBcUI7QUFBVixFQUNYLHNFQUFvQjtBQUFULEVBQ1gscUVBQW1CO0FBQVIsRUFDWCxtRUFBaUI7QUFBTixFQUNYLGlFQUFlO0FBQUosRUFDWCx1RUFBcUI7QUFBVixFQUNYLCtEQUFhO0FBQUYsRUFDWCx1RUFBcUI7QUFBVixFQUNYLHVFQUFxQjtBQUFWLEVBQ1gsbUVBQWlCO0FBQU4sRUFDWCxpRUFBZTtBQUFKLEVBQ1gsaUVBQWU7QUFBSixFQUNYLHFFQUFtQjtBQUFSLEVBQ1gsa0VBQWdCO0FBQ2xCO0FBR08sTUFBTSx3QkFBd0I7QUFBQSxFQUNuQztBQUFBLEVBQ0E7QUFDRjtBQUdPLE1BQU0sbUJBQW1CO0FBQUEsRUFDOUI7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLWJ1dHRvbi9pZHMtYnV0dG9uLWNvbW1vbi50cz80NDE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF0dHJpYnV0ZXMgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1hdHRyaWJ1dGVzJztcblxuZXhwb3J0IHR5cGUgSWRzQnV0dG9uSWNvbkFsaWdubWVudCA9IHVuZGVmaW5lZCB8ICdzdGFydCcgfCAnZW5kJztcblxuZXhwb3J0IHR5cGUgSWRzQnV0dG9uQXBwZWFyYW5jZSA9ICdkZWZhdWx0JyB8ICdwcmltYXJ5JyB8ICdzZWNvbmRhcnknIHwgJ3RlcnRpYXJ5JyB8ICdwcmltYXJ5LWRlc3RydWN0aXZlJyB8ICd0ZXJ0aWFyeS1kZXN0cnVjdGl2ZScgfCAnc3dpcGUtYWN0aW9uLXJpZ2h0JyB8ICdzd2lwZS1hY3Rpb24tbGVmdCc7XG5cbi8vIEJ1dHRvbiBBcHBlYXJhbmNlIHR5cGVzXG5leHBvcnQgY29uc3QgQlVUVE9OX0FQUEVBUkFOQ0U6IEFycmF5PElkc0J1dHRvbkFwcGVhcmFuY2U+ID0gW1xuICAnZGVmYXVsdCcsXG4gICdwcmltYXJ5JyxcbiAgJ3NlY29uZGFyeScsXG4gICd0ZXJ0aWFyeScsXG4gICdwcmltYXJ5LWRlc3RydWN0aXZlJyxcbiAgJ3RlcnRpYXJ5LWRlc3RydWN0aXZlJyxcbiAgJ3N3aXBlLWFjdGlvbi1sZWZ0JyxcbiAgJ3N3aXBlLWFjdGlvbi1yaWdodCdcbl07XG5cbmV4cG9ydCB0eXBlIElkc0J1dHRvblR5cGUgPSBIVE1MQnV0dG9uRWxlbWVudFsndHlwZSddO1xuXG4vLyBIVE1MQnV0dG9uRWxlbWVudCB0eXBlc1xuZXhwb3J0IGNvbnN0IEJVVFRPTl9UWVBFUzogQXJyYXk8c3RyaW5nPiA9IFtcbiAgJ2J1dHRvbicsICdzdWJtaXQnLCAncmVzZXQnLCAnbWVudSdcbl07XG5cbi8vIERlZmF1bHQgQnV0dG9uIHN0YXRlIHZhbHVlc1xuZXhwb3J0IGNvbnN0IEJVVFRPTl9ERUZBVUxUUzogYW55ID0ge1xuICBjc3NDbGFzczogW10sXG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgaGlkZGVuOiBmYWxzZSxcbiAgdGFiSW5kZXg6IDAsXG4gIGljb25BbGlnbjogdW5kZWZpbmVkLFxuICBhcHBlYXJhbmNlOiBCVVRUT05fQVBQRUFSQU5DRVswXVxufTtcblxuLy8gRGVmaW5hYmxlIGF0dHJpYnV0ZXNcbmV4cG9ydCBjb25zdCBCVVRUT05fQVRUUklCVVRFUzogc3RyaW5nW10gPSBbXG4gIGF0dHJpYnV0ZXMuQVBQRUFSQU5DRSxcbiAgYXR0cmlidXRlcy5DU1NfQ0xBU1MsXG4gIGF0dHJpYnV0ZXMuRElTQUJMRUQsXG4gIGF0dHJpYnV0ZXMuSElEREVOLFxuICBhdHRyaWJ1dGVzLklDT04sXG4gIGF0dHJpYnV0ZXMuSUNPTl9BTElHTixcbiAgYXR0cmlidXRlcy5JRCxcbiAgYXR0cmlidXRlcy5OT19QQURESU5HLFxuICBhdHRyaWJ1dGVzLk5PX01BUkdJTlMsXG4gIGF0dHJpYnV0ZXMuU1FVQVJFLFxuICBhdHRyaWJ1dGVzLlRFWFQsXG4gIGF0dHJpYnV0ZXMuVFlQRSxcbiAgYXR0cmlidXRlcy5UQUJJTkRFWCxcbiAgYXR0cmlidXRlcy5XSURUSFxuXTtcblxuLy8gSWNvbiBhbGlnbm1lbnQgQ1NTIGNsYXNzIG5hbWVzXG5leHBvcnQgY29uc3QgSUNPTl9BTElHTl9DTEFTU05BTUVTID0gW1xuICAnYWxpZ24taWNvbi1zdGFydCcsXG4gICdhbGlnbi1pY29uLWVuZCdcbl07XG5cbi8vIElkc0J1dHRvbiBDU1MgY2xhc3NlcyByZXByZXNlbnRpbmcgYnV0dG9uIHR5cGVzXG5leHBvcnQgY29uc3QgYmFzZVByb3RvQ2xhc3NlcyA9IFtcbiAgJ2lkcy1idXR0b24nLFxuICAnaWRzLWljb24tYnV0dG9uJyxcbiAgJ2lkcy1tZW51LWJ1dHRvbicsXG4gICdpZHMtdG9nZ2xlLWJ1dHRvbidcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-button/ids-button-common.ts\n");

/***/ }),

/***/ "./src/components/ids-button/ids-button.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-button/ids-button.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsButton)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-tooltip-mixin/ids-tooltip-mixin */ \"./src/mixins/ids-tooltip-mixin/ids-tooltip-mixin.ts\");\n/* harmony import */ var _mixins_ids_ripple_mixin_ids_ripple_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-ripple-mixin/ids-ripple-mixin */ \"./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts\");\n/* harmony import */ var _mixins_ids_hide_focus_mixin_ids_hide_focus_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-hide-focus-mixin/ids-hide-focus-mixin */ \"./src/mixins/ids-hide-focus-mixin/ids-hide-focus-mixin.ts\");\n/* harmony import */ var _mixins_ids_loading_indicator_mixin_ids_loading_indicator_mixin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin */ \"./src/mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_button_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ids-button-common */ \"./src/components/ids-button/ids-button-common.ts\");\n/* harmony import */ var _ids_button_scss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ids-button.scss */ \"./src/components/ids-button/ids-button.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n    (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n      (0,_mixins_ids_loading_indicator_mixin_ids_loading_indicator_mixin__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\n        (0,_mixins_ids_ripple_mixin_ids_ripple_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n          (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n            (0,_mixins_ids_hide_focus_mixin_ids_hide_focus_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n              (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n                _core_ids_element__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\nlet IdsButton = class extends Base {\n  shouldUpdate = false;\n  constructor() {\n    super();\n    Object.keys(_ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_DEFAULTS).forEach((prop) => {\n      this.state[prop] = _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_DEFAULTS[prop];\n    });\n    Object.defineProperty(this, \"tabIndex\", {\n      get: () => this.#tabIndex,\n      set: (value) => {\n        this.#tabIndex = value;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n  /**\n   * Button-level `connectedCallback` implementation\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.#setInitialState();\n    this.shouldUpdate = true;\n  }\n  #setInitialState() {\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON))\n      this.appendIcon(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON));\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT))\n      this.appendText(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT));\n    this.setAriaText();\n    const isIconButton = this.button?.classList.contains(\"ids-icon-button\");\n    this.setupRipple(this.button, isIconButton ? 35 : 50);\n    this.setIconAlignment();\n    this.refreshProtoClasses();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array<string>} The attributes in an array\n   */\n  static get attributes() {\n    return [...super.attributes, ..._ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_ATTRIBUTES];\n  }\n  /**\n   * Inherited from `IdsColorVariantMixin`\n   * @returns {Array<string>} List of available color variants for this component\n   */\n  colorVariants = [\"alternate\", \"alternate-formatter\"];\n  /**\n   * Figure out the classes\n   * @private\n   * @readonly\n   * @returns {Array<string>} containing classes used to identify this button prototype\n   */\n  get protoClasses() {\n    const textContent = this.querySelector(\"span:not(.audible), ids-text:not([audible])\");\n    const iconContent = this.iconEl;\n    if (iconContent && !textContent) {\n      return [\"ids-icon-button\"];\n    }\n    return [\"ids-button\"];\n  }\n  /**\n   * Refreshes this button's prototype CSS class\n   * @private\n   * @returns {void}\n   */\n  refreshProtoClasses() {\n    if (!this.button)\n      return;\n    const cl = this.button.classList;\n    const newProtoClass = this.protoClasses;\n    cl.remove(..._ids_button_common__WEBPACK_IMPORTED_MODULE_12__.baseProtoClasses);\n    cl.add(...newProtoClass);\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    let cssClass = \"\";\n    let protoClasses = \"\";\n    let disabled = \"\";\n    let tabIndex = 'tabindex=\"0\"';\n    let appearance = \"\";\n    if (this.state?.cssClass) {\n      cssClass = ` ${this.state.cssClass.join(\" \")}`;\n    }\n    if (this.state?.disabled) {\n      disabled = ` disabled=\"true\"`;\n    }\n    if (this.state?.tabIndex) {\n      tabIndex = `tabindex=\"${this.state.tabIndex}\"`;\n    }\n    if (this.state && this.state?.appearance !== \"default\") {\n      appearance = ` btn-${this.state.appearance}`;\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE)) {\n      cssClass += \" square\";\n    }\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING)) {\n      cssClass += \" no-padding\";\n    }\n    if (this.protoClasses.length) {\n      protoClasses = `${this.protoClasses.join(\" \")}`;\n    }\n    let alignCSS = \"\";\n    if (this.state?.iconAlign)\n      alignCSS = ` align-icon-${this.state?.iconAlign}`;\n    return `<button part=\"button\" class=\"${protoClasses}${appearance}${alignCSS}${cssClass}\" ${tabIndex}${disabled}>\n      <slot></slot>\n      <slot name=\"loading-indicator\"></slot>\n    </button>`;\n  }\n  /**\n   * Handles hidden attribute changes\n   * @param {string} value true if hidden\n   */\n  onHiddenChange(value) {\n    const bool = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    this.shouldUpdate = false;\n    if (bool) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN, \"\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN);\n    }\n    this.shouldUpdate = true;\n    this.state.hidden = bool;\n    if (this.button)\n      this.button.hidden = bool;\n  }\n  setAriaText() {\n    if (this.container) {\n      this.container.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABEL, this.text?.trim() || \"Button\");\n    }\n  }\n  /**\n   * @readonly\n   * @returns {HTMLButtonElement} reference to the true button element used in the Shadow Root\n   */\n  get button() {\n    return this.shadowRoot?.querySelector(\"button\") || null;\n  }\n  /**\n   * @param {Array<string>|string} val containing CSS classes that will be applied to the button\n   * Strings will be split into an array and separated by whitespace.\n   */\n  set cssClass(val) {\n    let attr = val;\n    let newCl = [];\n    const prevClasses = [].concat(this.state.cssClass);\n    if (Array.isArray(val)) {\n      newCl = val;\n      attr = val.join(\" \");\n    } else if (typeof val === \"string\" && val.length) {\n      newCl = val.split(\" \");\n    }\n    this.state.cssClass = newCl;\n    if (newCl.length) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CSS_CLASS, attr.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CSS_CLASS);\n    }\n    if (!this.button)\n      return;\n    const buttonCl = this.button.classList;\n    const buttonClArr = Array.from(buttonCl);\n    prevClasses.forEach((cssClass) => {\n      if (!newCl.includes(cssClass)) {\n        buttonCl.remove(cssClass);\n      }\n    });\n    newCl.forEach((newCssClass) => {\n      if (!buttonClArr.includes(newCssClass)) {\n        buttonCl.add(newCssClass);\n      }\n    });\n  }\n  get cssClass() {\n    return this.state.cssClass;\n  }\n  /**\n   * Passes a disabled attribute from the custom element to the button\n   * @param {boolean|string} val true if the button will be disabled\n   */\n  set disabled(val) {\n    const isValueTruthy = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    this.shouldUpdate = false;\n    if (isValueTruthy) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n    this.shouldUpdate = true;\n    this.state.disabled = isValueTruthy;\n    if (this.button)\n      this.button.disabled = isValueTruthy;\n  }\n  get disabled() {\n    return this.state.disabled;\n  }\n  /**\n   * Passes a tabIndex attribute from the custom element to the button\n   * @param {number | string | null} val the tabIndex value\n   */\n  set #tabIndex(val) {\n    const trueVal = Number(val);\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX);\n    if (Number.isNaN(trueVal) || trueVal < -1) {\n      this.state.tabIndex = 0;\n      this.button?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX, \"0\");\n      return;\n    }\n    this.state.tabIndex = trueVal;\n    this.button?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX, `${trueVal}`);\n  }\n  /**\n   * @returns {number} the current tabIndex number for the button\n   */\n  get #tabIndex() {\n    return this.state.tabIndex;\n  }\n  /**\n   * Sets the icon on the button\n   * @param {string | undefined} val representing the icon to set\n   */\n  set icon(val) {\n    if (typeof val !== \"string\" || !val.length) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON);\n      this.state.icon = void 0;\n      this.removeIcon();\n      return;\n    }\n    this.state.icon = val;\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON, val);\n    this.appendIcon(val);\n  }\n  /**\n   * Gets the current icon used on the button\n   * @returns {string} a defined IdsIcon's `icon` attribute, if one is present\n   */\n  get icon() {\n    return this.iconEl?.getAttribute(\"icon\");\n  }\n  /**\n   * Gets the current icon element\n   * @readonly\n   * @returns {HTMLElement | null} a defined IdsIcon, if one is present\n   */\n  get iconEl() {\n    return this.querySelector(\"ids-icon\");\n  }\n  /**\n   * Sets the automatic alignment of an existing icon to the 'start' or 'end' of the text\n   * @param {IdsButtonIconAlignment} val automatic icon alignment setting, if applicable (defaults to undefined).\n   */\n  set iconAlign(val) {\n    if (!_ids_button_common__WEBPACK_IMPORTED_MODULE_12__.ICON_ALIGN_CLASSNAMES.includes(`align-icon-${val}`)) {\n      val = void 0;\n    }\n    this.state.iconAlign = val;\n    this.setIconAlignment();\n  }\n  /**\n   * @returns {IdsButtonIconAlignment} automatic icon alignment setting, if enabled\n   */\n  get iconAlign() {\n    return this.state?.iconAlign;\n  }\n  /**\n   * Get width\n   * @returns {string | null} 100%, 90px, 50rem etc.\n   */\n  get width() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.WIDTH);\n  }\n  /**\n   * Set width of button\n   * @param {string | null} w 100%, 90px, 50rem etc.\n   */\n  set width(w) {\n    if (!w) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.WIDTH);\n      this.style.width = \"\";\n      if (this.button)\n        this.button.style.width = \"\";\n      return;\n    }\n    if (w.indexOf(\"%\") !== -1) {\n      this.style.width = w;\n      if (this.button)\n        this.button.style.width = \"\";\n    } else {\n      this.style.width = \"\";\n      if (this.button)\n        this.button.style.width = w;\n    }\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.WIDTH, w);\n  }\n  /**\n   * Check if an icon exists, and adds the icon if it's missing\n   * @param {string} iconName The icon name to check\n   * @private\n   */\n  appendIcon(iconName) {\n    const icon = this.querySelector(`ids-icon`);\n    const align = this.iconAlign;\n    const iconInsertTarget = align === \"end\" ? \"beforeend\" : \"afterbegin\";\n    if (icon) {\n      if (icon.icon !== iconName) {\n        icon.icon = iconName;\n        this.setIconAlignment();\n      }\n      if (align === \"end\" && this.hasIncorrectEndElement())\n        this.append(icon);\n      else if (this.hasIncorrectStartElement())\n        this.prepend(icon);\n    } else {\n      this.insertAdjacentHTML(iconInsertTarget, `<ids-icon icon=\"${iconName}\" class=\"ids-icon\"></ids-icon>`);\n    }\n    this.refreshProtoClasses();\n  }\n  /**\n   * Check if an icon exists, and removes the icon if it's present\n   * @private\n   */\n  removeIcon() {\n    const icon = this.querySelector(`ids-icon`);\n    if (icon)\n      icon.remove();\n    this.setIconAlignment();\n    this.refreshProtoClasses();\n  }\n  /**\n   * Adds/Removes Icon Alignment CSS classes to/from the inner button component.\n   * @private\n   */\n  setIconAlignment() {\n    if (!this.button)\n      return;\n    const alignment = this.iconAlign;\n    const iconStr = this.icon;\n    this.button.classList.remove(..._ids_button_common__WEBPACK_IMPORTED_MODULE_12__.ICON_ALIGN_CLASSNAMES);\n    if (alignment) {\n      if (iconStr) {\n        this.button.classList.add(`align-icon-${alignment}`);\n        const incorrectStartElement = this.hasIncorrectStartElement();\n        const incorrectEndElement = this.hasIncorrectEndElement();\n        if (incorrectStartElement || incorrectEndElement)\n          this.appendIcon(iconStr);\n      }\n    }\n  }\n  /**\n   * @returns {boolean} true if an icon element isn't the first child element of this button\n   */\n  hasIncorrectStartElement() {\n    return this.iconAlign === \"start\" && !this.children[0].isEqualNode(this.iconEl);\n  }\n  /**\n   * @returns {boolean} true if an icon element isn't the last child element of this button\n   */\n  hasIncorrectEndElement() {\n    return this.iconAlign === \"end\" && !this.children[this.children.length - 1].isEqualNode(this.iconEl);\n  }\n  /**\n   * @param {string | null} val the text value\n   * @returns {void}\n   */\n  set text(val) {\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT);\n    if (typeof val !== \"string\" || !val.length) {\n      this.state.text = \"\";\n      this.removeText();\n      return;\n    }\n    this.state.text = val;\n    this.appendText(val);\n  }\n  /**\n   * @returns {string | null} the current text value\n   */\n  get text() {\n    const textElem = this.querySelector(\"span:not(.audible)\");\n    if (textElem && textElem.textContent?.length) {\n      return textElem.textContent;\n    }\n    return this.textContent;\n  }\n  /**\n   * Check if the text slot exists, and appends it if it's missing\n   * @param {string} val New text contents\n   * @private\n   */\n  appendText(val) {\n    const text = this.querySelector(`span:not(.audible)`);\n    const align = this.iconAlign;\n    const iconInsertTarget = align === \"end\" ? \"afterbegin\" : \"beforeend\";\n    if (text) {\n      text.textContent = val;\n      this.setAriaText();\n      if (align === \"end\" && this.hasIncorrectEndElement())\n        this.prepend(text);\n      else if (align === \"start\" && this.hasIncorrectStartElement())\n        this.append(text);\n    } else {\n      this.insertAdjacentHTML(iconInsertTarget, `<span>${val}</span>`);\n    }\n    this.refreshProtoClasses();\n  }\n  /**\n   * Checks if the text slot exists, and removes it if necessary\n   * @private\n   */\n  removeText() {\n    const text = this.querySelector(`span:not(.audible)`);\n    if (text) {\n      text.remove();\n    }\n    this.refreshProtoClasses();\n  }\n  /**\n   * Set the button appearance between 'default', 'primary', 'secondary', 'tertiary', or 'destructive'\n   * @param {IdsButtonAppearance | null} val a valid button \"appearance\"\n   */\n  set appearance(val) {\n    if (!val || _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_APPEARANCE.indexOf(val) <= 0) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.APPEARANCE);\n      this.state.appearance = _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_APPEARANCE[0];\n    } else {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.APPEARANCE, val);\n      if (this.state.appearance !== val)\n        this.state.appearance = val;\n    }\n    this.setAppearanceClass(val);\n  }\n  /**\n   * @returns {IdsButtonAppearance} the currently set appearance\n   */\n  get appearance() {\n    return this.state.appearance;\n  }\n  /**\n   * Sets the HTMLButtonElement 'type' attribute\n   */\n  set type(val) {\n    if (val && _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_TYPES.includes(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE, val);\n      this.button?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE, val);\n      if (this.state.type !== val)\n        this.state.type = val;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE);\n      this.button?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPE);\n      this.state.type = _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_TYPES[0];\n    }\n  }\n  /**\n   * @returns {IdsButtonType} Gets the HTMLButtonElement 'type' attribute\n   */\n  get type() {\n    return this.state.type;\n  }\n  /**\n   * Sets the no margins attribute\n   * @param {boolean | string} n string value from the no margins attribute\n   */\n  set noMargins(n) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(n)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, \"\");\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n    this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n  }\n  get noMargins() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS));\n  }\n  /**\n   * @param {boolean | string} val true if the button should not have standard padding rules applied\n   */\n  set noPadding(val) {\n    const isTruthy = this.noPadding;\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    if (isTruthy !== trueVal) {\n      if (trueVal) {\n        this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING);\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING, \"true\");\n      } else {\n        this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING);\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING);\n      }\n    }\n  }\n  /**\n   * @returns {boolean | string} true if the button does not currently have standard padding rules applied\n   */\n  get noPadding() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_PADDING));\n  }\n  /**\n   * @param {boolean} value whether the corners of the button as an icon-button should be angled/90°\n   */\n  set square(value) {\n    const isTruthy = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (this.button) {\n      if (isTruthy && !this.button.classList.contains(\"square\")) {\n        this.button.classList.add(\"square\");\n      } else if (!isTruthy && this.button.classList.contains(\"square\")) {\n        this.button.classList.remove(\"square\");\n      }\n    }\n    if (isTruthy && !this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE, \"\");\n    } else if (!isTruthy && this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE)) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE);\n    }\n  }\n  /**\n   * @returns {boolean} whether the corners of the button as an icon-button are angled/90°\n   */\n  get square() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SQUARE);\n  }\n  /**\n   * Sets the correct appearance class on the ShadowRoot button.\n   * @private\n   * @param {string | null} val desired appearance class\n   */\n  setAppearanceClass(val) {\n    if (this.button) {\n      _ids_button_common__WEBPACK_IMPORTED_MODULE_12__.BUTTON_APPEARANCE.forEach((app) => {\n        const appClassName = `btn-${app}`;\n        if (val === app) {\n          if (app !== \"default\" && !this.button?.classList.contains(appClassName)) {\n            this.button?.classList.add(appClassName);\n          }\n          return;\n        }\n        if (this.button?.classList.contains(appClassName)) {\n          this.button?.classList.remove(appClassName);\n        }\n      });\n    }\n  }\n  /**\n   * Overrides the standard \"focus\" behavior to instead pass focus to the inner HTMLButton element.\n   */\n  focus() {\n    this.button?.focus();\n  }\n  /**\n   * Implements callback from IdsColorVariantMixin used to\n   * update the color variant on children components\n   * @returns {void}\n   */\n  onColorVariantRefresh() {\n    const icons = this.querySelectorAll(\"ids-icon\");\n    const texts = this.querySelectorAll(\"ids-text, span\");\n    const iterator = (el) => {\n      if (!(el instanceof HTMLSpanElement))\n        el.colorVariant = this.colorVariant;\n    };\n    [...icons, ...texts].forEach(iterator);\n  }\n};\nIdsButton = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-button\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_button_scss__WEBPACK_IMPORTED_MODULE_13__[\"default\"])\n], IdsButton);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-button/ids-button.ts\n");

/***/ }),

/***/ "./src/mixins/ids-hide-focus-mixin/ids-hide-focus-mixin.ts":
/*!*****************************************************************!*\
  !*** ./src/mixins/ids-hide-focus-mixin/ids-hide-focus-mixin.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_hide_focus_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\n\nconst IdsHideFocusMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDE_FOCUS\n    ];\n  }\n  /**\n   * @property {boolean} isClick indicates if the component being clicked\n   */\n  #isClick = false;\n  /**\n   * @property {boolean} isFocused indicates if the component is focused on key entry\n   */\n  #isFocused = false;\n  connectedCallback() {\n    super.connectedCallback?.();\n    if (this.hideFocus) {\n      this.#attachHideFocusEvents();\n      this.#addCssClass();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.#removeHideFocusEvents();\n  }\n  /**\n   * Set up event listeners\n   * @private\n   * @returns {void}\n   */\n  #attachHideFocusEvents() {\n    this.#removeHideFocusEvents();\n    this.onEvent(\"focusin.hide-focus\", this, (e) => {\n      if (!this.#isClick && !this.#isFocused) {\n        this.#removeCssClass();\n        this.triggerEvent(\"hidefocusremove\", this, e);\n      }\n      this.#isClick = false;\n      this.#isFocused = true;\n    });\n    this.onEvent(\"focusout.hide-focus\", this, (e) => {\n      this.#addCssClass();\n      this.#isFocused = false;\n      this.triggerEvent(\"hidefocusadd\", this, e);\n    });\n    this.onEvent(\"mousedown.hide-focus\", this, (e) => {\n      this.#isClick = true;\n      this.#addCssClass();\n      this.triggerEvent(\"hidefocusadd\", this, e);\n    });\n  }\n  #removeHideFocusEvents() {\n    this.offEvent(\"focusin.hide-focus\");\n    this.offEvent(\"focusout.hide-focus\");\n    this.offEvent(\"mousedown.hide-focus\");\n  }\n  #addCssClass() {\n    this.container?.classList.add(\"hide-focus\");\n  }\n  #removeCssClass() {\n    this.container?.classList.remove(\"hide-focus\");\n  }\n  /**\n   * Set whether or not the functionality should be enabled. Enabled by default\n   * @param {string|boolean|null} value hide-focus attribute value\n   */\n  set hideFocus(value) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDE_FOCUS, String(boolVal));\n    if (boolVal) {\n      this.#addCssClass();\n      this.#attachHideFocusEvents();\n    } else {\n      this.#removeCssClass();\n      this.#removeHideFocusEvents();\n    }\n  }\n  /**\n   * hide-focus attribute\n   * @returns {boolean} hideFocus param converted to boolean from attribute value. Defaults to true\n   */\n  get hideFocus() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDE_FOCUS);\n    return attrVal ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(attrVal) : true;\n  }\n};\nvar ids_hide_focus_mixin_default = IdsHideFocusMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1oaWRlLWZvY3VzLW1peGluL2lkcy1oaWRlLWZvY3VzLW1peGluLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUVFO0FBVzdCLE1BQU0sb0JBQW9CLENBQXdCLGVBQWtCLGNBQWMsV0FBVztBQUFBLEVBQzNGLGVBQWUsTUFBYTtBQUMxQixVQUFNLEdBQUcsSUFBSTtBQUFBLEVBQ2Y7QUFBQSxFQUVBLFdBQVcsYUFBYTtBQUN0QixXQUFPO0FBQUEsTUFDTCxHQUFJLFdBQW1CO0FBQUEsTUFDdkIsdUVBQXFCO0FBQVYsSUFDYjtBQUFBLEVBQ0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLFdBQVc7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtYLGFBQWE7QUFBQSxFQUViLG9CQUFvQjtBQUNsQixVQUFNLG9CQUFvQjtBQUUxQixRQUFJLEtBQUssV0FBVztBQUNsQixXQUFLLHVCQUF1QjtBQUM1QixXQUFLLGFBQWE7QUFBQSxJQUNwQjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLHVCQUF1QjtBQUNyQixVQUFNLHVCQUF1QjtBQUM3QixTQUFLLHVCQUF1QjtBQUFBLEVBQzlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT0EseUJBQXlCO0FBQ3ZCLFNBQUssdUJBQXVCO0FBRTVCLFNBQUssUUFBUSxzQkFBc0IsTUFBTSxDQUFDLE1BQU07QUFDOUMsVUFBSSxDQUFDLEtBQUssWUFBWSxDQUFDLEtBQUssWUFBWTtBQUN0QyxhQUFLLGdCQUFnQjtBQUNyQixhQUFLLGFBQWEsbUJBQW1CLE1BQU0sQ0FBQztBQUFBLE1BQzlDO0FBQ0EsV0FBSyxXQUFXO0FBQ2hCLFdBQUssYUFBYTtBQUFBLElBQ3BCLENBQUM7QUFDRCxTQUFLLFFBQVEsdUJBQXVCLE1BQU0sQ0FBQyxNQUFNO0FBQy9DLFdBQUssYUFBYTtBQUNsQixXQUFLLGFBQWE7QUFDbEIsV0FBSyxhQUFhLGdCQUFnQixNQUFNLENBQUM7QUFBQSxJQUMzQyxDQUFDO0FBQ0QsU0FBSyxRQUFRLHdCQUF3QixNQUFNLENBQUMsTUFBTTtBQUNoRCxXQUFLLFdBQVc7QUFDaEIsV0FBSyxhQUFhO0FBQ2xCLFdBQUssYUFBYSxnQkFBZ0IsTUFBTSxDQUFDO0FBQUEsSUFDM0MsQ0FBQztBQUFBLEVBQ0g7QUFBQSxFQUVBLHlCQUF5QjtBQUN2QixTQUFLLFNBQVMsb0JBQW9CO0FBQ2xDLFNBQUssU0FBUyxxQkFBcUI7QUFDbkMsU0FBSyxTQUFTLHNCQUFzQjtBQUFBLEVBQ3RDO0FBQUEsRUFFQSxlQUFlO0FBQ2IsU0FBSyxXQUFXLFVBQVUsSUFBSSxZQUFZO0FBQUEsRUFDNUM7QUFBQSxFQUVBLGtCQUFrQjtBQUNoQixTQUFLLFdBQVcsVUFBVSxPQUFPLFlBQVk7QUFBQSxFQUMvQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxJQUFJLFVBQVUsT0FBZ0M7QUFDNUMsVUFBTSxVQUFVLHNGQUFZLENBQUMsS0FBSztBQUNsQyxTQUFLLGFBQWEsdUVBQXFCLEVBQUUsT0FBTyxPQUFPLENBQUM7QUFFeEQsUUFBSSxTQUFTO0FBQ1gsV0FBSyxhQUFhO0FBQ2xCLFdBQUssdUJBQXVCO0FBQUEsSUFDOUIsT0FBTztBQUNMLFdBQUssZ0JBQWdCO0FBQ3JCLFdBQUssdUJBQXVCO0FBQUEsSUFDOUI7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksWUFBcUI7QUFDdkIsVUFBTSxVQUFVLEtBQUssYUFBYSx1RUFBcUI7QUFFdkQsV0FBTyxVQUFVLHNGQUFZLENBQUMsT0FBTyxJQUFJO0FBQUEsRUFDM0M7QUFDRjtBQUVBLElBQU8sK0JBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9taXhpbnMvaWRzLWhpZGUtZm9jdXMtbWl4aW4vaWRzLWhpZGUtZm9jdXMtbWl4aW4udHM/MGFlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNDb25zdHJ1Y3RvciB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWVsZW1lbnQnO1xuaW1wb3J0IHsgc3RyaW5nVG9Cb29sIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcbmltcG9ydCB7IEV2ZW50c01peGluSW50ZXJmYWNlIH0gZnJvbSAnLi4vaWRzLWV2ZW50cy1taXhpbi9pZHMtZXZlbnRzLW1peGluJztcblxudHlwZSBDb25zdHJhaW50cyA9IElkc0NvbnN0cnVjdG9yPEV2ZW50c01peGluSW50ZXJmYWNlPjtcblxuLyoqXG4gKiBUb2dnbGVzIENTUyBjbGFzcyBmb3IgYSBjb21wb25lbnQgY29udGFpbmVyIGRlcGVuZHMgb24gaG93IHRoZSBjb21wb25lbnQgcmVjZWl2ZXMgZm9jdXMsXG4gKiBjbGlja2VkIG9yIG9uIGtleSBlbnRyeSAodGFicyBvciBhcnJvd3MpLlxuICogQHBhcmFtIHthbnl9IHN1cGVyY2xhc3MgQWNjZXB0cyBhIHN1cGVyY2xhc3MgYW5kIGNyZWF0ZXMgYSBuZXcgc3ViY2xhc3MgZnJvbSBpdFxuICogQHJldHVybnMge2FueX0gVGhlIGV4dGVuZGVkIG9iamVjdFxuICovXG5jb25zdCBJZHNIaWRlRm9jdXNNaXhpbiA9IDxUIGV4dGVuZHMgQ29uc3RyYWludHM+KHN1cGVyY2xhc3M6IFQpID0+IGNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgc3VwZXIoLi4uYXJncyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLihzdXBlcmNsYXNzIGFzIGFueSkuYXR0cmlidXRlcyxcbiAgICAgIGF0dHJpYnV0ZXMuSElERV9GT0NVU1xuICAgIF07XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHtib29sZWFufSBpc0NsaWNrIGluZGljYXRlcyBpZiB0aGUgY29tcG9uZW50IGJlaW5nIGNsaWNrZWRcbiAgICovXG4gICNpc0NsaWNrID0gZmFsc2U7XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gaXNGb2N1c2VkIGluZGljYXRlcyBpZiB0aGUgY29tcG9uZW50IGlzIGZvY3VzZWQgb24ga2V5IGVudHJ5XG4gICAqL1xuICAjaXNGb2N1c2VkID0gZmFsc2U7XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuXG4gICAgaWYgKHRoaXMuaGlkZUZvY3VzKSB7XG4gICAgICB0aGlzLiNhdHRhY2hIaWRlRm9jdXNFdmVudHMoKTtcbiAgICAgIHRoaXMuI2FkZENzc0NsYXNzKCk7XG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICAgIHRoaXMuI3JlbW92ZUhpZGVGb2N1c0V2ZW50cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB1cCBldmVudCBsaXN0ZW5lcnNcbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICAjYXR0YWNoSGlkZUZvY3VzRXZlbnRzKCkge1xuICAgIHRoaXMuI3JlbW92ZUhpZGVGb2N1c0V2ZW50cygpO1xuXG4gICAgdGhpcy5vbkV2ZW50KCdmb2N1c2luLmhpZGUtZm9jdXMnLCB0aGlzLCAoZSkgPT4ge1xuICAgICAgaWYgKCF0aGlzLiNpc0NsaWNrICYmICF0aGlzLiNpc0ZvY3VzZWQpIHtcbiAgICAgICAgdGhpcy4jcmVtb3ZlQ3NzQ2xhc3MoKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ2hpZGVmb2N1c3JlbW92ZScsIHRoaXMsIGUpO1xuICAgICAgfVxuICAgICAgdGhpcy4jaXNDbGljayA9IGZhbHNlO1xuICAgICAgdGhpcy4jaXNGb2N1c2VkID0gdHJ1ZTtcbiAgICB9KTtcbiAgICB0aGlzLm9uRXZlbnQoJ2ZvY3Vzb3V0LmhpZGUtZm9jdXMnLCB0aGlzLCAoZSkgPT4ge1xuICAgICAgdGhpcy4jYWRkQ3NzQ2xhc3MoKTtcbiAgICAgIHRoaXMuI2lzRm9jdXNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ2hpZGVmb2N1c2FkZCcsIHRoaXMsIGUpO1xuICAgIH0pO1xuICAgIHRoaXMub25FdmVudCgnbW91c2Vkb3duLmhpZGUtZm9jdXMnLCB0aGlzLCAoZSkgPT4ge1xuICAgICAgdGhpcy4jaXNDbGljayA9IHRydWU7XG4gICAgICB0aGlzLiNhZGRDc3NDbGFzcygpO1xuICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ2hpZGVmb2N1c2FkZCcsIHRoaXMsIGUpO1xuICAgIH0pO1xuICB9XG5cbiAgI3JlbW92ZUhpZGVGb2N1c0V2ZW50cygpIHtcbiAgICB0aGlzLm9mZkV2ZW50KCdmb2N1c2luLmhpZGUtZm9jdXMnKTtcbiAgICB0aGlzLm9mZkV2ZW50KCdmb2N1c291dC5oaWRlLWZvY3VzJyk7XG4gICAgdGhpcy5vZmZFdmVudCgnbW91c2Vkb3duLmhpZGUtZm9jdXMnKTtcbiAgfVxuXG4gICNhZGRDc3NDbGFzcygpIHtcbiAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LmFkZCgnaGlkZS1mb2N1cycpO1xuICB9XG5cbiAgI3JlbW92ZUNzc0NsYXNzKCkge1xuICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3QucmVtb3ZlKCdoaWRlLWZvY3VzJyk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHdoZXRoZXIgb3Igbm90IHRoZSBmdW5jdGlvbmFsaXR5IHNob3VsZCBiZSBlbmFibGVkLiBFbmFibGVkIGJ5IGRlZmF1bHRcbiAgICogQHBhcmFtIHtzdHJpbmd8Ym9vbGVhbnxudWxsfSB2YWx1ZSBoaWRlLWZvY3VzIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgc2V0IGhpZGVGb2N1cyh2YWx1ZTogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJREVfRk9DVVMsIFN0cmluZyhib29sVmFsKSk7XG5cbiAgICBpZiAoYm9vbFZhbCkge1xuICAgICAgdGhpcy4jYWRkQ3NzQ2xhc3MoKTtcbiAgICAgIHRoaXMuI2F0dGFjaEhpZGVGb2N1c0V2ZW50cygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLiNyZW1vdmVDc3NDbGFzcygpO1xuICAgICAgdGhpcy4jcmVtb3ZlSGlkZUZvY3VzRXZlbnRzKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIGhpZGUtZm9jdXMgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBoaWRlRm9jdXMgcGFyYW0gY29udmVydGVkIHRvIGJvb2xlYW4gZnJvbSBhdHRyaWJ1dGUgdmFsdWUuIERlZmF1bHRzIHRvIHRydWVcbiAgICovXG4gIGdldCBoaWRlRm9jdXMoKTogYm9vbGVhbiB7XG4gICAgY29uc3QgYXR0clZhbCA9IHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuSElERV9GT0NVUyk7XG5cbiAgICByZXR1cm4gYXR0clZhbCA/IHN0cmluZ1RvQm9vbChhdHRyVmFsKSA6IHRydWU7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0hpZGVGb2N1c01peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-hide-focus-mixin/ids-hide-focus-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin.ts":
/*!*******************************************************************************!*\
  !*** ./src/mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_loading_indicator_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _components_ids_loading_indicator_ids_loading_indicator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/ids-loading-indicator/ids-loading-indicator */ \"./src/components/ids-loading-indicator/ids-loading-indicator.ts\");\n\n\n\nconst IdsLoadingIndicatorMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LOADING_INDICATOR_ONLY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_LOADING_INDICATOR\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.#attachLoadingIndicator();\n    this.#addClass();\n  }\n  /**\n   * Set whether or not to show loading indicator. Disabled by default\n   * @param {boolean|string|null} value show-loading-indicator attribute value\n   */\n  set showLoadingIndicator(value) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_LOADING_INDICATOR, boolVal.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_LOADING_INDICATOR);\n    }\n    this.#attachLoadingIndicator();\n  }\n  /**\n   * show-loading-indicator attribute\n   * @returns {boolean} showLoadingIndicator param converted to boolean from attribute value. Defaults to false\n   */\n  get showLoadingIndicator() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_LOADING_INDICATOR));\n  }\n  /**\n   * Set whether or not to replace text/icons with the loading indicator and place it at the center. Defaults to false\n   * @param {boolean|string|null} value loading-indicator-only attribute value\n   */\n  set loadingIndicatorOnly(value) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LOADING_INDICATOR_ONLY, boolVal.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LOADING_INDICATOR_ONLY);\n    }\n  }\n  /**\n   * loading-indicator-only attribute\n   * @returns {boolean} loadingIndicatorOnly param converted to boolean from attribute value. Defaults to false\n   */\n  get loadingIndicatorOnly() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LOADING_INDICATOR_ONLY));\n  }\n  #getSlottedElements() {\n    const slot = this.container?.querySelector('slot[name=\"loading-indicator\"]');\n    return slot?.assignedNodes();\n  }\n  #attachLoadingIndicator() {\n    if (this.showLoadingIndicator && this.#getSlottedElements()?.length === 0) {\n      const type = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.APPEARANCE);\n      this.insertAdjacentHTML(\n        \"beforeend\",\n        `<ids-loading-indicator\n          slot=\"loading-indicator\"\n          size=\"xs\"\n          class=\"slot-loading-indicator${type ? ` type-${type}` : \"\"}\"\n        ></ids-loading-indicator>`\n      );\n    }\n  }\n  /**\n   * Add CSS class if an element provided in the slot\n   */\n  #addClass() {\n    this.#getSlottedElements()?.forEach((item) => {\n      item.classList.add(\"slot-loading-indicator\");\n    });\n  }\n};\nvar ids_loading_indicator_mixin_default = IdsLoadingIndicatorMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1sb2FkaW5nLWluZGljYXRvci1taXhpbi9pZHMtbG9hZGluZy1pbmRpY2F0b3ItbWl4aW4udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQjtBQUVFO0FBQ3RCO0FBUVAsTUFBTSwyQkFBMkIsQ0FBK0IsZUFBa0IsY0FBYyxXQUFXO0FBQUEsRUFDekcsZUFBZSxNQUFhO0FBQzFCLFVBQU0sR0FBRyxJQUFJO0FBQUEsRUFDZjtBQUFBLEVBRUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUksV0FBbUI7QUFBQSxNQUN2QixtRkFBaUM7QUFBdEIsTUFDWCxtRkFBaUM7QUFBdEIsSUFDYjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLG9CQUEwQjtBQUN4QixVQUFNLG9CQUFvQjtBQUMxQixTQUFLLHdCQUF3QjtBQUM3QixTQUFLLFVBQVU7QUFBQSxFQUNqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxJQUFJLHFCQUFxQixPQUFnQztBQUN2RCxVQUFNLFVBQVUsc0ZBQVksQ0FBQyxLQUFLO0FBQ2xDLFFBQUksU0FBUztBQUNYLFdBQUssYUFBYSxtRkFBaUMsRUFBRSxRQUFRLFNBQVMsQ0FBQztBQUFBLElBQ3pFLE9BQU87QUFDTCxXQUFLLGdCQUFnQixtRkFBaUM7QUFBQSxJQUN4RDtBQUVBLFNBQUssd0JBQXdCO0FBQUEsRUFDL0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSx1QkFBdUI7QUFBRSxXQUFPLHNGQUFZLENBQUMsS0FBSyxhQUFhLG1GQUFpQyxDQUFDO0FBQUEsRUFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNeEcsSUFBSSxxQkFBcUIsT0FBZ0M7QUFDdkQsVUFBTSxVQUFVLHNGQUFZLENBQUMsS0FBSztBQUNsQyxRQUFJLFNBQVM7QUFDWCxXQUFLLGFBQWEsbUZBQWlDLEVBQUUsUUFBUSxTQUFTLENBQUM7QUFBQSxJQUN6RSxPQUFPO0FBQ0wsV0FBSyxnQkFBZ0IsbUZBQWlDO0FBQUEsSUFDeEQ7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksdUJBQXVCO0FBQUUsV0FBTyxzRkFBWSxDQUFDLEtBQUssYUFBYSxtRkFBaUMsQ0FBQztBQUFBLEVBQUc7QUFBQSxFQUV4RyxzQkFBc0I7QUFDcEIsVUFBTSxPQUFPLEtBQUssV0FBVyxjQUErQixnQ0FBZ0M7QUFFNUYsV0FBTyxNQUFNLGNBQWM7QUFBQSxFQUM3QjtBQUFBLEVBRUEsMEJBQTBCO0FBQ3hCLFFBQUksS0FBSyx3QkFBd0IsS0FBSyxvQkFBb0IsR0FBRyxXQUFXLEdBQUc7QUFDekUsWUFBTSxPQUFzQixLQUFLLGFBQWEsdUVBQXFCO0FBRW5FLFdBQUs7QUFBQSxRQUNIO0FBQUEsUUFDQTtBQUFBO0FBQUE7QUFBQSx5Q0FHaUMsT0FBTyxTQUFTLFNBQVM7QUFBQTtBQUFBLE1BRTVEO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLFlBQVk7QUFDVixTQUFLLG9CQUFvQixHQUFHLFFBQVEsQ0FBQyxTQUFlO0FBQ2xELE1BQUMsS0FBcUIsVUFBVSxJQUFJLHdCQUF3QjtBQUFBLElBQzlELENBQUM7QUFBQSxFQUNIO0FBQ0Y7QUFFQSxJQUFPLHNDQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvbWl4aW5zL2lkcy1sb2FkaW5nLWluZGljYXRvci1taXhpbi9pZHMtbG9hZGluZy1pbmRpY2F0b3ItbWl4aW4udHM/YjJjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNCYXNlQ29uc3RydWN0b3IgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcbmltcG9ydCB7IHN0cmluZ1RvQm9vbCB9IGZyb20gJy4uLy4uL3V0aWxzL2lkcy1zdHJpbmctdXRpbHMvaWRzLXN0cmluZy11dGlscyc7XG5pbXBvcnQgJy4uLy4uL2NvbXBvbmVudHMvaWRzLWxvYWRpbmctaW5kaWNhdG9yL2lkcy1sb2FkaW5nLWluZGljYXRvcic7XG5cbi8qKlxuICogQSBtaXhpbiB0aGF0IHdpbGwgYWRkIGxvYWRpbmcgaW5kaWNhdG9yIGZ1bmN0aW9uYWxpdHkgdG8gYSBjb21wb25lbnQuXG4gKiBAbWl4aW4gSWRzTG9hZGluZ0luZGljYXRvck1peGluXG4gKiBAcGFyYW0ge2FueX0gc3VwZXJjbGFzcyBBY2NlcHRzIGEgc3VwZXJjbGFzcyBhbmQgY3JlYXRlcyBhIG5ldyBzdWJjbGFzcyBmcm9tIGl0LlxuICogQHJldHVybnMge2FueX0gVGhlIGV4dGVuZGVkIG9iamVjdFxuICovXG5jb25zdCBJZHNMb2FkaW5nSW5kaWNhdG9yTWl4aW4gPSA8VCBleHRlbmRzIElkc0Jhc2VDb25zdHJ1Y3Rvcj4oc3VwZXJjbGFzczogVCkgPT4gY2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgY29uc3RydWN0b3IoLi4uYXJnczogYW55W10pIHtcbiAgICBzdXBlciguLi5hcmdzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgLi4uKHN1cGVyY2xhc3MgYXMgYW55KS5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5MT0FESU5HX0lORElDQVRPUl9PTkxZLFxuICAgICAgYXR0cmlidXRlcy5TSE9XX0xPQURJTkdfSU5ESUNBVE9SLFxuICAgIF07XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpOiB2b2lkIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaz8uKCk7XG4gICAgdGhpcy4jYXR0YWNoTG9hZGluZ0luZGljYXRvcigpO1xuICAgIHRoaXMuI2FkZENsYXNzKCk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHdoZXRoZXIgb3Igbm90IHRvIHNob3cgbG9hZGluZyBpbmRpY2F0b3IuIERpc2FibGVkIGJ5IGRlZmF1bHRcbiAgICogQHBhcmFtIHtib29sZWFufHN0cmluZ3xudWxsfSB2YWx1ZSBzaG93LWxvYWRpbmctaW5kaWNhdG9yIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgc2V0IHNob3dMb2FkaW5nSW5kaWNhdG9yKHZhbHVlOiBzdHJpbmcgfCBib29sZWFuIHwgbnVsbCkge1xuICAgIGNvbnN0IGJvb2xWYWwgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfTE9BRElOR19JTkRJQ0FUT1IsIGJvb2xWYWwudG9TdHJpbmcoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19MT0FESU5HX0lORElDQVRPUik7XG4gICAgfVxuXG4gICAgdGhpcy4jYXR0YWNoTG9hZGluZ0luZGljYXRvcigpO1xuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctbG9hZGluZy1pbmRpY2F0b3IgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBzaG93TG9hZGluZ0luZGljYXRvciBwYXJhbSBjb252ZXJ0ZWQgdG8gYm9vbGVhbiBmcm9tIGF0dHJpYnV0ZSB2YWx1ZS4gRGVmYXVsdHMgdG8gZmFsc2VcbiAgICovXG4gIGdldCBzaG93TG9hZGluZ0luZGljYXRvcigpIHsgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfTE9BRElOR19JTkRJQ0FUT1IpKTsgfVxuXG4gIC8qKlxuICAgKiBTZXQgd2hldGhlciBvciBub3QgdG8gcmVwbGFjZSB0ZXh0L2ljb25zIHdpdGggdGhlIGxvYWRpbmcgaW5kaWNhdG9yIGFuZCBwbGFjZSBpdCBhdCB0aGUgY2VudGVyLiBEZWZhdWx0cyB0byBmYWxzZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfG51bGx9IHZhbHVlIGxvYWRpbmctaW5kaWNhdG9yLW9ubHkgYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBzZXQgbG9hZGluZ0luZGljYXRvck9ubHkodmFsdWU6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKSB7XG4gICAgY29uc3QgYm9vbFZhbCA9IHN0cmluZ1RvQm9vbCh2YWx1ZSk7XG4gICAgaWYgKGJvb2xWYWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTE9BRElOR19JTkRJQ0FUT1JfT05MWSwgYm9vbFZhbC50b1N0cmluZygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5MT0FESU5HX0lORElDQVRPUl9PTkxZKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogbG9hZGluZy1pbmRpY2F0b3Itb25seSBhdHRyaWJ1dGVcbiAgICogQHJldHVybnMge2Jvb2xlYW59IGxvYWRpbmdJbmRpY2F0b3JPbmx5IHBhcmFtIGNvbnZlcnRlZCB0byBib29sZWFuIGZyb20gYXR0cmlidXRlIHZhbHVlLiBEZWZhdWx0cyB0byBmYWxzZVxuICAgKi9cbiAgZ2V0IGxvYWRpbmdJbmRpY2F0b3JPbmx5KCkgeyByZXR1cm4gc3RyaW5nVG9Cb29sKHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTE9BRElOR19JTkRJQ0FUT1JfT05MWSkpOyB9XG5cbiAgI2dldFNsb3R0ZWRFbGVtZW50cygpIHtcbiAgICBjb25zdCBzbG90ID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3I8SFRNTFNsb3RFbGVtZW50Pignc2xvdFtuYW1lPVwibG9hZGluZy1pbmRpY2F0b3JcIl0nKTtcblxuICAgIHJldHVybiBzbG90Py5hc3NpZ25lZE5vZGVzKCk7XG4gIH1cblxuICAjYXR0YWNoTG9hZGluZ0luZGljYXRvcigpIHtcbiAgICBpZiAodGhpcy5zaG93TG9hZGluZ0luZGljYXRvciAmJiB0aGlzLiNnZXRTbG90dGVkRWxlbWVudHMoKT8ubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zdCB0eXBlOiBzdHJpbmcgfCBudWxsID0gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5BUFBFQVJBTkNFKTtcblxuICAgICAgdGhpcy5pbnNlcnRBZGphY2VudEhUTUwoXG4gICAgICAgICdiZWZvcmVlbmQnLFxuICAgICAgICBgPGlkcy1sb2FkaW5nLWluZGljYXRvclxuICAgICAgICAgIHNsb3Q9XCJsb2FkaW5nLWluZGljYXRvclwiXG4gICAgICAgICAgc2l6ZT1cInhzXCJcbiAgICAgICAgICBjbGFzcz1cInNsb3QtbG9hZGluZy1pbmRpY2F0b3Ike3R5cGUgPyBgIHR5cGUtJHt0eXBlfWAgOiAnJ31cIlxuICAgICAgICA+PC9pZHMtbG9hZGluZy1pbmRpY2F0b3I+YFxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQWRkIENTUyBjbGFzcyBpZiBhbiBlbGVtZW50IHByb3ZpZGVkIGluIHRoZSBzbG90XG4gICAqL1xuICAjYWRkQ2xhc3MoKSB7XG4gICAgdGhpcy4jZ2V0U2xvdHRlZEVsZW1lbnRzKCk/LmZvckVhY2goKGl0ZW06IE5vZGUpID0+IHtcbiAgICAgIChpdGVtIGFzIEhUTUxFbGVtZW50KS5jbGFzc0xpc3QuYWRkKCdzbG90LWxvYWRpbmctaW5kaWNhdG9yJyk7XG4gICAgfSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0xvYWRpbmdJbmRpY2F0b3JNaXhpbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts":
/*!*********************************************************!*\
  !*** ./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_ripple_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n\n\n\nconst IdsRippleMixin = (superclass) => class IdsRippleMixiner extends superclass {\n  // HTMLElement containing ripple, typically component container\n  rippleTarget;\n  // Radius of ripple, defaults to 50\n  rippleRadius = 50;\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE\n    ];\n  }\n  /**\n   * If set to true the ripple effect will be disabled.\n   * @param {boolean} val The ripple value\n   */\n  set noRipple(val) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE, \"\");\n      this.#removeRippleListeners();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE);\n      this.#attachRippleListeners();\n    }\n  }\n  /**\n   * @returns {boolean} true if ripple disabled\n   */\n  get noRipple() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE);\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.removeRipples();\n    this.#removeRippleListeners();\n  }\n  /**\n   * @public\n   * @param {HTMLElement} rippleTarget Element containing ripple, default to component container\n   * @param {number} rippleRadius Used to calc ripple size and coordinates, defaults to 50\n   * @returns {void}\n   */\n  setupRipple(rippleTarget, rippleRadius) {\n    this.rippleTarget = rippleTarget || this.container;\n    this.rippleRadius = rippleRadius || this.rippleRadius;\n    this.#attachRippleListeners();\n  }\n  removeRipples() {\n    const rippleTarget = this.rippleTarget;\n    const otherRippleEls = rippleTarget?.querySelectorAll(\".ripple-effect\");\n    otherRippleEls?.forEach((rippleEl) => {\n      rippleEl.remove();\n    });\n  }\n  /**\n   * Remove event listeners\n   * @private\n   * @returns {void}\n   */\n  #removeRippleListeners() {\n    this.offEvent(\"click.ripple\");\n    this.offEvent(\"touchstart.ripple\");\n  }\n  /**\n   * Sets up event listeners\n   * @private\n   * @returns {void}\n   */\n  #attachRippleListeners() {\n    if (this.noRipple)\n      return;\n    let x;\n    let y;\n    let preceededByTouchstart = false;\n    this.onEvent(\"click.ripple\", this.rippleTarget, (e) => {\n      if (preceededByTouchstart) {\n        preceededByTouchstart = false;\n        return;\n      }\n      x = e.clientX !== 0 ? e.clientX : void 0;\n      y = e.clientY !== 0 ? e.clientY : void 0;\n      this.createRipple(x, y);\n    });\n    this.onEvent(\"touchstart.ripple\", this.rippleTarget, (e) => {\n      if (e.touches && e.touches.length > 0) {\n        const touch = e.touches[0];\n        x = touch.clientX !== 0 ? touch.clientX : void 0;\n        y = touch.clientY !== 0 ? touch.clientY : void 0;\n        this.createRipple(x, y);\n        preceededByTouchstart = true;\n      }\n    }, { passive: true });\n  }\n  /**\n   * Generates a \"ripple\" effect on a specified location inside the element's boundaries.\n   * The coordinates defined are actual page coordinates, using the top/left of the page as [0,0],\n   * which allows this to connect easily to mouse/touch events.\n   * @private\n   * @param {number} x the X coordinate\n   * @param {number} y the Y coordinate\n   * @returns {void}\n   */\n  async createRipple(x, y) {\n    if (this.noRipple || this.disabled)\n      return;\n    this.removeRipples();\n    const rippleTarget = this.rippleTarget;\n    const rippleEl = document.createElement(\"span\");\n    rippleEl.classList.add(\"ripple-effect\");\n    rippleEl.setAttribute(\"aria-hidden\", \"true\");\n    rippleEl.setAttribute(\"focusable\", \"false\");\n    rippleEl.style.width = `${this.rippleRadius * 2}px`;\n    rippleEl.style.height = `${this.rippleRadius * 2}px`;\n    const btnOffsets = this.getRippleOffsets(x, y);\n    rippleTarget?.classList.add(\"is-rippling\");\n    rippleTarget?.prepend(rippleEl);\n    rippleEl.style.left = `${btnOffsets.x}px`;\n    rippleEl.style.top = `${btnOffsets.y}px`;\n    rippleEl.classList.add(\"animating\");\n    await (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_2__.waitForAnimationEnd)(rippleEl, \"ripple-animation\");\n    rippleTarget?.classList.remove(\"is-rippling\");\n    rippleEl.remove();\n    this.#triggerRippleEndEvent(rippleEl);\n  }\n  /**\n   * Dispatches a `rippleend` event on the host element that can notify parent Web Components\n   * that a ripple animation has completed.\n   * @param {HTMLElement} rippleEl reference to the removed ripple element\n   * @returns {void}\n   */\n  #triggerRippleEndEvent(rippleEl) {\n    this.triggerEvent(\"rippleend\", this, {\n      detail: {\n        element: rippleEl\n      }\n    });\n  }\n  /**\n   * The math used for getting the ripple offsets\n   * @private\n   * @param {number} x the X coordinate\n   * @param {number} y the Y coordinate\n   * @returns {object} containing x/y coordinates of the ripple\n   */\n  getRippleOffsets(x, y) {\n    const rect = this.getBoundingClientRect();\n    let elemX;\n    let elemY;\n    if (!x) {\n      elemX = rect.width / 2;\n    } else {\n      elemX = x - rect.left;\n    }\n    if (!y) {\n      elemY = rect.height / 2;\n    } else {\n      elemY = y - rect.top;\n    }\n    elemX -= this.rippleRadius;\n    elemY -= this.rippleRadius;\n    return { x: elemX, y: elemY };\n  }\n};\nvar ids_ripple_mixin_default = IdsRippleMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts\n");

/***/ })

}]);