/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/ids-multiselect/demos/index.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-multiselect/demos/index.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ids_multiselect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ids-multiselect */ \"./src/components/ids-multiselect/ids-multiselect.ts\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbXVsdGlzZWxlY3QvZGVtb3MvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLW11bHRpc2VsZWN0L2RlbW9zL2luZGV4LnRzP2Y5M2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9pZHMtbXVsdGlzZWxlY3QnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-multiselect/demos/index.ts\n");

/***/ }),

/***/ "./src/components/ids-multiselect/ids-multiselect.ts":
/*!***********************************************************!*\
  !*** ./src/components/ids-multiselect/ids-multiselect.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_multiselect_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_dropdown_ids_dropdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-dropdown/ids-dropdown */ \"./src/components/ids-dropdown/ids-dropdown.ts\");\n/* harmony import */ var _ids_checkbox_ids_checkbox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ids-checkbox/ids-checkbox */ \"./src/components/ids-checkbox/ids-checkbox.ts\");\n/* harmony import */ var _ids_tag_ids_tag__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ids-tag/ids-tag */ \"./src/components/ids-tag/ids-tag.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_multiselect_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ids-multiselect.scss */ \"./src/components/ids-multiselect/ids-multiselect.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\nlet IdsMultiselect = class extends _ids_dropdown_ids_dropdown__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor() {\n    super();\n  }\n  /**\n   * Invoked each time the custom element is add into a document-connected element\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.resetDirtyTracker();\n    this.#setOptionsData();\n    this.#populateSelected();\n  }\n  #selectedList = [];\n  #optionsData = [];\n  /**\n   * Return the attributes we handle as getters and setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TAGS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX\n    ];\n  }\n  /**\n   * Sets the disabled attribute\n   * @param {string|boolean} value string value from the disabled attribute\n   */\n  set disabled(value) {\n    if (this.tags) {\n      this.input?.querySelectorAll(\"ids-tag\")?.forEach((element) => {\n        element.setAttribute(\"disabled\", \"true\");\n      });\n    }\n    super.disabled = value;\n  }\n  /**\n   * Gets the value of the disabled property\n   * @returns {boolean} a boolean indicating the elements disabled status\n   */\n  get disabled() {\n    return super.disabled;\n  }\n  /**\n   * Sets the tags attribute which determines if selected options are displayed as tags\n   * @param {string|boolean} value string or boolean that sets the use of tag attribute\n   */\n  set tags(value) {\n    const valueSafe = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (valueSafe !== this.tags) {\n      if (valueSafe) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TAGS, \"true\");\n      } else {\n        this.offEvent(\"beforetagremove.multiselect-tag\");\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TAGS, \"false\");\n      }\n    }\n  }\n  /**\n   * returns whether the multiselect is set to display selections as tags\n   * @returns {boolean} a boolean indicating tags setting\n   */\n  get tags() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TAGS));\n  }\n  /**\n   * sets the max possible selections for multiselect\n   * @param {string|number} value the max number of selections allowed\n   */\n  set max(value) {\n    const valueSafe = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(value);\n    if (valueSafe !== this.max) {\n      if (valueSafe) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX, value);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX);\n      }\n    }\n  }\n  /**\n   * returns the maximum number of allowed selections\n   * @returns {number} the maximum number of selectable options\n   */\n  get max() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MAX));\n  }\n  /**\n   * Set the selected values of the multiselect using the provided array\n   * @param {Array} value the array of values to set as selected\n   */\n  set value(value) {\n    let matched = true;\n    if (!Array.isArray(value) || value.length > this.max) {\n      return;\n    }\n    value.forEach((selectedValue) => {\n      const existingOption = this.dropdownList?.listBox?.querySelector(`ids-list-box-option[value=\"${selectedValue}\"]`);\n      if (!existingOption) {\n        matched = false;\n      }\n    });\n    if (!matched) {\n      return;\n    }\n    this.#selectedList = value;\n    this.container.value = \"\";\n    this.#updateDisplay();\n    this.#updateList();\n    if (this.value === value) {\n      this.triggerEvent(\"change\", this, {\n        bubbles: true,\n        detail: {\n          elem: this,\n          value: this.value\n        }\n      });\n    }\n    this.#selectedList = value;\n    this.container?.classList.toggle(\"has-value\", value.length > 0);\n  }\n  /**\n   * returns an array of the values that have been selected\n   * @returns {Array} the array of values\n   */\n  get value() {\n    return this.#selectedList;\n  }\n  /**\n   * Rewriting dropdown click events\n   */\n  attachClickEvent() {\n    this.offEvent(\"click.multiselect-list-box\");\n    if (this.dropdownList) {\n      this.onEvent(\"click.multiselect-list-box\", this.dropdownList.listBox, (e) => {\n        e.preventDefault();\n        const option = e.target.nodeName === \"IDS-LIST-BOX-OPTION\" || e.target.closest(\"ids-list-box-option\") ? e.target.closest(\"ids-list-box-option\") ?? e.target : null;\n        this.#optionChecked(option);\n      });\n    }\n    this.offEvent(\"click.multiselect-input\");\n    if (!this.list) {\n      this.onEvent(\"click.multiselect-input\", this.input?.fieldContainer, (e) => {\n        e.stopPropagation();\n        const target = e.target;\n        if (!target?.closest(\"ids-tag\")) {\n          this.labelClicked = false;\n          this.toggle(true);\n        }\n      });\n    }\n    if (this.tags) {\n      this.offEvent(\"beforetagremove.multiselect-tag\");\n      this.onEvent(\"beforetagremove.multiselect-tag\", this.input?.fieldContainer, (e) => {\n        this.#handleTagRemove(e);\n      });\n    }\n  }\n  /**\n   * Establish selection event for keyboard interactions.\n   * Overrides a similiar method from IdsDropdown for Multiselect-specific behavior.\n   */\n  attachKeyboardSelectionEvent() {\n    this.listen([\" \", \"Enter\"], this, () => {\n      if (!this.dropdownList?.popup?.visible)\n        return;\n      if (this.openedByKeyboard) {\n        this.openedByKeyboard = false;\n        return;\n      }\n      this.#optionChecked(this.selected);\n    });\n  }\n  /**\n   * Close the dropdown popup\n   * Rewriting it to add multiselect value update\n   * @param {boolean} noFocus if true do not focus on close\n   */\n  close(noFocus) {\n    if (this.popup && this.input) {\n      this.popup.visible = false;\n      this.input.active = false;\n    }\n    this.setAttribute(\"aria-expanded\", \"false\");\n    this.dropdownList?.listBox?.removeAttribute(\"tabindex\");\n    if (this.selected) {\n      this.deselectOption(this.selected);\n    }\n    if (!noFocus) {\n      this.input?.focus();\n    }\n    this.value = this.#selectedList;\n    this.container?.classList.remove(\"is-open\");\n  }\n  /**\n   * Triggers when dismissible tag is removed\n   * @param {MouseEvent} e click event\n   */\n  #handleTagRemove(e) {\n    this.value = this.#selectedList.filter((value) => value !== e.target?.dataset.value);\n    this.popup?.place();\n  }\n  /**\n   * Check option checkbox and update selected list\n   * @param {HTMLElement} option selected ids-list-box-option element\n   */\n  #optionChecked(option) {\n    if (!option || option?.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL))\n      return;\n    const value = option.getAttribute(\"value\");\n    const isSelected = this.#selectedList.some((item) => value === item);\n    const checkbox = option.querySelector(\"ids-checkbox\");\n    const canSelect = this.max !== this.value.length;\n    if (isSelected || canSelect) {\n      this.#selectedList = isSelected ? this.#selectedList.filter((item) => item !== value) : [...this.#selectedList, value];\n      if (checkbox) {\n        checkbox.checked = !isSelected;\n      }\n      if (this.tags) {\n        this.#updateDisplay();\n        this.popup?.place();\n        this.container?.classList.toggle(\"has-value\", this.#selectedList.length > 0);\n      }\n    }\n    this.clearSelected();\n    this.selectOption(option);\n  }\n  /**\n   * Update value in the input visually\n   */\n  #updateDisplay() {\n    const selected = this.#optionsData.filter((item) => this.#selectedList.includes(item.value));\n    const newValue = selected.map((item) => item.label).join(\", \");\n    this.input?.querySelectorAll(\"ids-tag\").forEach((item) => item.remove());\n    this.input?.querySelector(\"ids-text\")?.remove();\n    if (this.tags) {\n      const tags = selected.map((item) => {\n        const disabled = this.disabled ? ` disabled=\"true\"` : ``;\n        return `<ids-tag\n          class=\"multiselect-tag\"\n          data-value=\"${item.value}\"\n          dismissible=\"true\"\n          ${disabled}\n        >${item.label}</ids-tag>`;\n      }).join(\"\");\n      this.input?.insertAdjacentHTML(\"afterbegin\", tags);\n    } else {\n      this.input?.insertAdjacentHTML(\"afterbegin\", `<ids-text overflow=\"ellipsis\" tooltip=\"true\">${newValue}</ids-text>`);\n      const text = this.input?.querySelector(\"ids-text\");\n      const fieldContainer = this.input?.fieldContainer;\n      if (text?.beforeTooltipShow) {\n        text.beforeTooltipShow = (tooltip) => {\n          tooltip.popup.align = \"top, left\";\n          tooltip.popup.alignTarget = fieldContainer;\n          tooltip.target = fieldContainer;\n          tooltip.popup.style?.setProperty(\"text-align\", \"center\");\n          if (fieldContainer?.clientWidth) {\n            tooltip.popup.width = `${fieldContainer.clientWidth - 14}px`;\n          }\n        };\n      }\n    }\n    if (this.input)\n      this.input.value = newValue;\n  }\n  /**\n   * Render dropdown list with selected options on top\n   */\n  #updateList() {\n    if (!this.dropdownList?.listBox)\n      return;\n    const selected = this.#optionsData.filter((item) => this.#selectedList.includes(item.value)).map((item) => ({\n      ...item,\n      selected: true\n    }));\n    const options = this.#optionsData.filter((item) => !this.#selectedList.includes(item.value)).map((item, index) => ({\n      ...item,\n      border: index === 0 && selected.length !== 0,\n      selected: false\n    })).sort((first, second) => first.index - second.index);\n    this.dropdownList.listBox.innerHTML = \"\";\n    const html = [...selected, ...options].filter((option, index, list) => {\n      const emptyGroup = option.groupLabel && (list[index + 1]?.groupLabel || !list[index + 1]);\n      return !emptyGroup;\n    }).map((option) => this.#templatelistBoxOption(option)).join(\"\");\n    this.dropdownList.listBox.insertAdjacentHTML(\"afterbegin\", html);\n  }\n  /**\n   * Create the list box option template.\n   * @param {IdsDropdownOption} option id, value, label object\n   * @returns {string} ids-list-box-option template\n   */\n  #templatelistBoxOption(option) {\n    const classAttr = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.buildClassAttrib)(\n      !option.groupLabel && \"multiselect-option\",\n      option.border && \"multiselect-border\"\n    );\n    return `\n      <ids-list-box-option\n        ${classAttr}\n        ${option.id ? `id=${option.id}` : \"\"}\n        ${option.value ? `value=\"${option.value}\"` : \"\"}\n        ${option.groupLabel ? \"group-label\" : \"\"}\n      >${option.icon ? `<ids-icon icon=\"${option.icon}\"></ids-icon>` : \"\"}${!option.groupLabel ? `\n        <ids-checkbox\n          no-margin\n          class=\"justify-center multiselect-checkbox\"\n          label=\"${option.label}\"\n          checked=\"${option.selected}\"\n        ></ids-checkbox>\n      ` : option.label}</ids-list-box-option>`;\n  }\n  /**\n   * Update options list on the component mount with classes/attributes\n   */\n  #populateSelected() {\n    this.options.forEach((item) => {\n      const checkbox = item.querySelector(\"ids-checkbox\");\n      if (item.hasAttribute(\"selected\")) {\n        this.#selectedList.push(item.getAttribute(\"value\"));\n        if (checkbox) {\n          checkbox.checked = true;\n        }\n      }\n      checkbox?.setAttribute(\"no-margin\", \"\");\n      checkbox?.classList.add(\"justify-center\", \"multiselect-checkbox\");\n      item.classList.add(\"multiselect-option\");\n    });\n    this.value = this.#selectedList;\n  }\n  /**\n   * Map slotted ids-list-box-option elements to the dataset\n   */\n  #setOptionsData() {\n    this.#optionsData = [...this.options].map((item, index) => ({\n      id: item?.id,\n      label: item?.textContent?.trim() || item?.querySelector(\"ids-checkbox\")?.label || \"\",\n      value: item?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) ?? \"\",\n      groupLabel: item?.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL),\n      selected: item?.hasAttribute(\"selected\"),\n      icon: item?.querySelector(\"ids-icon\")?.icon,\n      index\n    }));\n  }\n};\nIdsMultiselect = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-multiselect\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_multiselect_scss__WEBPACK_IMPORTED_MODULE_7__[\"default\"])\n], IdsMultiselect);\nvar ids_multiselect_default = IdsMultiselect;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-multiselect/ids-multiselect.ts\n");

/***/ }),

/***/ "./src/components/ids-multiselect/ids-multiselect.scss":
/*!*************************************************************!*\
  !*** ./src/components/ids-multiselect/ids-multiselect.scss ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n/* Ids Dropdown Component */ /**\n * Css for validation mixin\n */\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.validation-message {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  margin-top: 4px;\n  display: flex;\n}\n.validation-message.has-custom-icon {\n  color: var(--ids-color-palette-slate-80);\n}\n.validation-message.disabled {\n  color: var(--ids-color-palette-slate-30);\n}\n.validation-message .ids-icon {\n  margin-inline-end: 4px;\n}\n.validation-message.alert {\n  color: var(--ids-color-palette-amber-80);\n}\n.validation-message.alert.disabled {\n  color: var(--ids-color-palette-amber-30);\n}\n.validation-message.error {\n  color: var(--ids-color-palette-ruby-60);\n}\n.validation-message.error.disabled {\n  color: var(--ids-color-palette-ruby-30);\n}\n.validation-message.info {\n  color: var(--ids-color-palette-azure-70);\n}\n.validation-message.info.disabled {\n  color: var(--ids-color-palette-azure-30);\n}\n.validation-message.success {\n  color: var(--ids-color-palette-emerald-80);\n}\n.validation-message.success.disabled {\n  color: var(--ids-color-palette-emerald-30);\n}\n\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: block;\n}\n:host .ids-dropdown {\n  display: inline-block;\n  max-width: 100%;\n}\n\n.ids-dropdown {\n  display: block;\n  position: relative;\n}\n.ids-dropdown ids-trigger-field[size=full] {\n  display: block;\n}\n.ids-dropdown.full {\n  display: block;\n}\n.ids-dropdown.full ids-trigger-field,\n.ids-dropdown.full .ids-trigger-field {\n  display: block;\n}\n\n.icon-container {\n  color: var(--ids-color-palette-slate-100);\n  margin: 0 0 0 8px;\n  position: relative;\n  top: 2px;\n}\n\n:host([mode=light]) .typeahead.is-open ids-trigger-field::part(field-container) {\n  background-color: var(--ids-color-palette-slate-10);\n}\n\n:host([mode=dark]) .icon-container {\n  color: var(--ids-color-palette-slate-10);\n}\n:host([mode=dark]) .typeahead.is-open ids-trigger-field::part(field-container) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n\n:host([dir=rtl]) .icon-container {\n  margin: 0 8px 0 0;\n}\n\n::slotted(.sub-group) {\n  border-top: 1px solid #b7b7ba;\n  padding-top: 4px;\n}\n\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(field-container),\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(field-container) {\n  margin: 0;\n  border-radius: 0;\n}\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(label),\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(label) {\n  display: none;\n}\n\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(container) {\n  margin: 0;\n}\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(field-container) {\n  box-shadow: none !important;\n}\n.ids-dropdown.color-variant-borderless ids-popup[mode=contrast]::part(popup) {\n  box-shadow: 0 0 0 1px var(--ids-color-palette-azure-80);\n  outline: 1px solid var(--ids-color-palette-azure-80);\n}\n.ids-dropdown.color-variant-borderless.field-height-lg ids-trigger-field::part(input) {\n  padding-inline: 16px;\n  height: 50px;\n}\n.ids-dropdown.color-variant-borderless.field-height-md ids-trigger-field::part(input) {\n  padding-inline: 12px;\n  height: 40px;\n}\n.ids-dropdown.color-variant-borderless.field-height-sm ids-trigger-field::part(input) {\n  padding-inline: 8px;\n  height: 35px;\n}\n.ids-dropdown.color-variant-borderless.field-height-xs ids-trigger-field::part(input) {\n  padding-inline: 4px;\n  height: 30px;\n}\n\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(container) {\n  margin: 1px 0;\n}\n\n:host ids-dropdown-list {\n  max-width: 300px;\n}\n\n:host([size=xs]) ids-dropdown-list {\n  max-width: 75px;\n}\n\n:host([size=sm]) ids-dropdown-list {\n  max-width: 150px;\n}\n\n:host([size=mm]) ids-dropdown-list {\n  max-width: 225px;\n}\n\n:host([size=md]) ids-dropdown-list {\n  max-width: 300px;\n}\n\n:host([size=lg]) ids-dropdown-list {\n  max-width: 400px;\n}\n\n:host([size=full]) ids-dropdown-list {\n  max-width: 100%;\n}\n\n:host ids-dropdown-list,\n:host([size=full]) {\n  width: 100%;\n}\n\n:host([list]:not([disabled])) {\n  cursor: pointer;\n}\n\n.ids-checkbox {\n  margin-bottom: 0px;\n}\n\nids-trigger-field ids-tag {\n  display: flex;\n  align-self: center;\n  margin-top: 4px;\n  margin-inline-start: 4px;\n}\nids-trigger-field ids-tag[disabled]::part(tag) {\n  cursor: default;\n}\n\n:host .has-value ids-trigger-field::part(content-area) {\n  display: flex;\n  width: calc(100% - 34px);\n  flex-wrap: wrap;\n}\n:host .has-value ids-trigger-field::part(input) {\n  padding: 0;\n  flex: 1;\n}\n:host .has-value ids-trigger-field ids-text {\n  max-width: 100%;\n}\n:host .has-value ids-trigger-field ids-text::part(text) {\n  padding-inline-start: 8px;\n}\n:host .has-value ids-trigger-field[compact] ids-text::part(text), :host .has-value ids-trigger-field[field-height=xs] ids-text::part(text) {\n  padding-inline-start: 4px;\n  font-size: 14px;\n}\n\n:host(:not([disabled])) .has-value ids-trigger-field::part(field-container) {\n  cursor: pointer;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-multiselect/ids-multiselect.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("5f77bc3ebf205637b850")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"ids-multiselect": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_mixins_ids-focus-capture-mixin_ids-focus-capture-mixin_ts-src_mixins_ids-xss-mixin_ids-xs-3364f3","src_components_ids-trigger-field_ids-trigger-field_ts-src_mixins_ids-label-state-mixin_ids-la-e23ef2","src_components_ids-dropdown_ids-dropdown_ts","src_components_ids-tag_ids-tag_ts"], () => (__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=4300&pathname=%2Fws&logging=error&overlay=true&reconnect=10&hot=false&live-reload=true")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_mixins_ids-focus-capture-mixin_ids-focus-capture-mixin_ts-src_mixins_ids-xss-mixin_ids-xs-3364f3","src_components_ids-trigger-field_ids-trigger-field_ts-src_mixins_ids-label-state-mixin_ids-la-e23ef2","src_components_ids-dropdown_ids-dropdown_ts","src_components_ids-tag_ids-tag_ts"], () => (__webpack_require__("./src/components/ids-multiselect/demos/index.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;