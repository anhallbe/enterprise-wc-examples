"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-switch_ids-switch_ts"],{

/***/ "./src/components/ids-switch/ids-switch.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-switch/ids-switch.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsSwitch)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_switch_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ids-switch.scss */ \"./src/components/ids-switch/ids-switch.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n    )\n  )\n);\nlet IdsSwitch = class extends Base {\n  input;\n  labelEl;\n  /**\n   * Call the constructor and then initialize\n   */\n  constructor() {\n    super();\n  }\n  isFormComponent = true;\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE\n    ];\n  }\n  /**\n   * Custom Element `connectedCallback` implementation\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.input = this.shadowRoot?.querySelector('input[type=\"checkbox\"]');\n    this.labelEl = this.shadowRoot?.querySelector(\"label\");\n    this.#attachEventHandlers();\n  }\n  /**\n   * Custom Element `disconnectedCallback` implementation\n   * @returns {void}\n   */\n  disconnectedCallback() {\n    Base.prototype.disconnectedCallback.apply(this);\n    this.#attachSwitchChangeEvent(\"remove\");\n    this.attachNativeEvents(\"remove\");\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    const disabled = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.disabled) ? \" disabled\" : \"\";\n    const checked = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.checked) ? \" checked\" : \"\";\n    const rootClass = ` class=\"ids-switch${disabled}\"`;\n    const checkboxClass = ` class=\"checkbox\"`;\n    return `\n      <div${rootClass}>\n        <label>\n          <input type=\"checkbox\"${checkboxClass}${disabled}${checked} part=\"checkbox\">\n          <span class=\"slider${checked}\" part=\"slider\"></span>\n          <ids-text class=\"label-text\" part=\"label\">${this.label}</ids-text>\n        </label>\n      </div>\n    `;\n  }\n  /**\n   * Handle switch change event\n   * @private\n   * @param {string} option If 'remove', will remove attached events\n   * @returns {void}\n   */\n  #attachSwitchChangeEvent(option = \"\") {\n    if (this.input) {\n      const eventName = \"change\";\n      if (option === \"remove\") {\n        const handler = this.handledEvents?.get(eventName);\n        if (handler && handler.target === this.input) {\n          this.offEvent(eventName, this.input);\n        }\n      } else {\n        this.onEvent(eventName, this.input, () => {\n          this.checked = !!this.input?.checked;\n        });\n      }\n    }\n  }\n  /**\n   * Establish Internal Event Handlers\n   * @private\n   * @param {string} option If 'remove', will remove attached events\n   * @returns {object} The object for chaining.\n   */\n  attachNativeEvents(option = \"\") {\n    if (this.input) {\n      const events = [\"change\", \"focus\", \"keydown\", \"keypress\", \"keyup\", \"click\", \"dbclick\"];\n      events.forEach((evt) => {\n        if (option === \"remove\") {\n          const handler = this.handledEvents?.get(evt);\n          if (handler && handler.target === this.input) {\n            this.offEvent(evt, this.input);\n          }\n        } else {\n          this.onEvent(evt, this.input, (e) => {\n            this.triggerEvent(e.type, this, {\n              detail: {\n                elem: this,\n                nativeEvent: e,\n                value: this.value,\n                checked: this.input?.checked\n              }\n            });\n          });\n        }\n      });\n    }\n    return this;\n  }\n  /**\n   * Handle events\n   * @private\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.#attachSwitchChangeEvent();\n    this.attachNativeEvents();\n  }\n  /**\n   * Sets the checked state to true or false\n   * @param {boolean|string} value If true will set `checked` attribute\n   */\n  set checked(value) {\n    const slider = this.shadowRoot?.querySelector(\".slider\");\n    this.input = this.shadowRoot?.querySelector('input[type=\"checkbox\"]');\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED, val.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED, val.toString());\n      slider?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED);\n      slider?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED);\n    }\n  }\n  get checked() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CHECKED));\n  }\n  /**\n   * Sets checkbox to disabled\n   * @param {boolean|string} value If true will set `disabled` attribute\n   */\n  set disabled(value) {\n    this.input = this.shadowRoot?.querySelector('input[type=\"checkbox\"]');\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    const labelText = this.shadowRoot?.querySelector(\".label-text\");\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, val.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"\");\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      labelText?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      labelText?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n  }\n  get disabled() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  /**\n   * Set the `label` text\n   * @param {string | null} value of the `label` text property\n   */\n  set label(value) {\n    const labelText = this.shadowRoot?.querySelector(\".label-text\") || document.createElement(\"span\");\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL, value);\n      labelText.innerHTML = value;\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL);\n    labelText.innerHTML = \"\";\n  }\n  get label() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL) || \"\";\n  }\n  /**\n   * Sets the checkbox `value` attribute\n   * @param {string | null} val the value property\n   */\n  set value(val) {\n    this.input = this.shadowRoot?.querySelector('input[type=\"checkbox\"]');\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, val);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n    }\n    this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, val || \"\");\n  }\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n  }\n  /**\n   * Overrides the standard \"focus\" behavior to instead pass focus to the inner HTMLInput element.\n   */\n  focus() {\n    this.input?.focus();\n  }\n};\nIdsSwitch = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-switch\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_switch_scss__WEBPACK_IMPORTED_MODULE_8__[\"default\"])\n], IdsSwitch);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-switch/ids-switch.ts\n");

/***/ }),

/***/ "./src/components/ids-switch/ids-switch.scss":
/*!***************************************************!*\
  !*** ./src/components/ids-switch/ids-switch.scss ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n/**\n * Switch Mixins.\n */\n.ids-switch {\n  margin-bottom: 8px;\n}\n.ids-switch label {\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  -webkit-touch-callout: none;\n  padding-inline-start: 40px;\n  position: relative;\n  display: inline-block;\n}\n.ids-switch label:hover .slider::after {\n  box-shadow: 0 2px 5px var(--ids-color-palette-slate-30);\n}\n.ids-switch label:active .slider::after {\n  box-shadow: 0 0 0 3px var(--ids-color-palette-azure-20), 0 0 0 4px var(--ids-color-palette-azure-60), 0 0 4px 6px var(--ids-color-palette-slate-20);\n}\n.ids-switch.disabled label {\n  cursor: default;\n}\n.ids-switch input[type=checkbox] {\n  position: absolute;\n  cursor: pointer;\n  opacity: 0;\n  height: 0;\n  width: 0;\n}\n.ids-switch input[type=checkbox] ~ .slider {\n  position: absolute;\n  background-color: var(--ids-color-palette-slate-40);\n  border-radius: 4px;\n  display: inline-block;\n  height: 4px;\n  left: 0;\n  top: 10px;\n  width: 31px;\n}\n.ids-switch input[type=checkbox] ~ .slider::after {\n  position: absolute;\n  background-color: var(--ids-color-palette-white);\n  border-width: 1px;\n  border-color: var(--ids-color-palette-slate-30);\n  border-style: solid;\n  border-radius: 50%;\n  -webkit-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -moz-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -o-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -ms-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  content: \"\";\n  height: 14px;\n  left: 0;\n  top: -7px;\n  width: 14px;\n}\n.ids-switch input[type=checkbox]:checked ~ .slider {\n  background-color: var(--ids-color-palette-azure-30);\n  -webkit-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -moz-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -o-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -ms-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n}\n.ids-switch input[type=checkbox]:checked ~ .slider::after {\n  background-color: var(--ids-color-palette-azure-60);\n  border-color: var(--ids-color-palette-azure-60);\n  -webkit-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -moz-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -o-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  -ms-transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  transition: all 200ms cubic-bezier(0.17, 0.04, 0.03, 0.94) 0s;\n  left: 15px;\n}\n.ids-switch input[type=checkbox]:focus ~ .slider::after {\n  box-shadow: 0 0 0 3px var(--ids-color-palette-azure-20), 0 0 0 4px var(--ids-color-palette-azure-60), 0 0 4px 6px var(--ids-color-palette-slate-20);\n}\n.ids-switch input[type=checkbox]:disabled ~ .slider {\n  background-color: var(--ids-color-palette-slate-30);\n  border-color: var(--ids-color-palette-slate-30);\n  cursor: default;\n}\n.ids-switch input[type=checkbox]:disabled ~ .slider::after {\n  background-color: var(--ids-color-palette-slate-20);\n  box-shadow: none;\n}\n.ids-switch input[type=checkbox]:disabled ~ .label-text {\n  cursor: default;\n  color: var(--ids-color-palette-slate-30);\n}\n.ids-switch input[type=checkbox]:disabled:checked ~ .slider {\n  border-color: var(--ids-color-palette-azure-20);\n  background-color: var(--ids-color-palette-azure-20);\n}\n.ids-switch input[type=checkbox]:disabled:checked ~ .slider::after {\n  border-color: var(--ids-color-palette-azure-30);\n  background-color: var(--ids-color-palette-azure-30);\n}\n\n.ids-switch[mode=dark] input[type=checkbox]:disabled ~ .slider:not(.checked) {\n  background-color: var(--ids-color-palette-slate-60);\n  border-color: var(--ids-color-palette-slate-60);\n}\n.ids-switch[mode=dark] input[type=checkbox]:disabled ~ .slider:not(.checked)::after {\n  background-color: var(--ids-color-palette-slate-70);\n  border-color: var(--ids-color-palette-slate-60);\n}\n.ids-switch[mode=dark] input[type=checkbox]:focus ~ .slider::after {\n  box-shadow: 0 0 0 3px var(--ids-color-palette-azure-90), 0 0 0 4px var(--ids-color-palette-azure-60);\n}\n\n.ids-switch[mode=contrast] input[type=checkbox]:not(:disabled) ~ .slider {\n  background-color: var(--ids-color-palette-slate-80);\n  border-color: var(--ids-color-palette-slate-60);\n}\n.ids-switch[mode=contrast] input[type=checkbox]:not(:disabled) ~ .slider::after {\n  background-color: var(--ids-color-palette-white);\n  border-color: var(--ids-color-palette-slate-30);\n}\n.ids-switch[mode=contrast] input[type=checkbox]:not(:disabled) ~ .slider.checked {\n  background-color: var(--ids-color-palette-azure-90);\n  border-color: var(--ids-color-palette-azure-90);\n}\n.ids-switch[mode=contrast] input[type=checkbox]:not(:disabled) ~ .slider.checked::after {\n  background-color: var(--ids-color-palette-azure-90);\n  border-color: var(--ids-color-palette-azure-90);\n}\n.ids-switch[mode=contrast] input[type=checkbox]:disabled ~ .slider:not(.checked) {\n  background-color: var(--ids-color-palette-slate-40);\n  border-color: var(--ids-color-palette-slate-40);\n}\n.ids-switch[mode=contrast] input[type=checkbox]:disabled ~ .slider:not(.checked)::after {\n  background-color: var(--ids-color-palette-slate-20);\n  border-color: var(--ids-color-palette-slate-20);\n}\n\n:host([dir=rtl]) input[type=checkbox] ~ .slider {\n  left: initial;\n  right: 0;\n}\n:host([dir=rtl]) input[type=checkbox]:checked ~ .slider::after {\n  left: 0;\n  right: 15px;\n}\n:host([dir=rtl]) input[type=checkbox] ~ .slider::after {\n  left: initial;\n  right: 0;\n}\n:host([dir=rtl]) label {\n  padding-right: 40px;\n  padding-left: 0;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-switch/ids-switch.scss\n");

/***/ })

}]);