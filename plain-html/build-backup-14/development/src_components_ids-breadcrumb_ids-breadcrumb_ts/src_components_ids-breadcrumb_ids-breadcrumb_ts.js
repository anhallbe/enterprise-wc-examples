"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-breadcrumb_ids-breadcrumb_ts"],{

/***/ "./src/components/ids-breadcrumb/ids-breadcrumb.ts":
/*!*********************************************************!*\
  !*** ./src/components/ids-breadcrumb/ids-breadcrumb.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsBreadcrumb)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_breadcrumb_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ids-breadcrumb.scss */ \"./src/components/ids-breadcrumb/ids-breadcrumb.scss\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_hyperlink_ids_hyperlink__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-hyperlink/ids-hyperlink */ \"./src/components/ids-hyperlink/ids-hyperlink.ts\");\n/* harmony import */ var _ids_menu_button_ids_menu_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ids-menu-button/ids-menu-button */ \"./src/components/ids-menu-button/ids-menu-button.ts\");\n/* harmony import */ var _ids_menu_ids_menu_group__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ids-menu/ids-menu-group */ \"./src/components/ids-menu/ids-menu-group.ts\");\n/* harmony import */ var _ids_menu_ids_menu_item__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ids-menu/ids-menu-item */ \"./src/components/ids-menu/ids-menu-item.ts\");\n/* harmony import */ var _ids_popup_menu_ids_popup_menu__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ids-popup-menu/ids-popup-menu */ \"./src/components/ids-popup-menu/ids-popup-menu.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n    )\n  )\n);\nlet IdsBreadcrumb = class extends Base {\n  onBreadcrumbActivate;\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(\"role\", \"list\");\n    this.#attachEventHandlers();\n    if (this.truncate) {\n      this.#enableTruncation();\n    }\n    this.onColorVariantRefresh();\n    this.setActiveBreadcrumb();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.PADDING,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.TRUNCATE\n    ];\n  }\n  /**\n   * Attach the resize observer.\n   * @private\n   * @type {number}\n   */\n  #resizeObserver = new ResizeObserver(() => this.#resize());\n  /**\n   * @returns {Array<string>} List of available color variants for this component\n   */\n  colorVariants = [\"breadcrumb\", \"alternate\"];\n  /**\n   * Attaches event handlers\n   * @private\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.onEvent(\"click\", this, (e) => {\n      if (e.target.tagName === \"IDS-HYPERLINK\" && typeof this.onBreadcrumbActivate === \"function\" && this.current) {\n        this.onBreadcrumbActivate(e.target, this.current);\n      }\n    });\n    this.onEvent(\"beforeshow\", this.popupMenuEl, (e) => {\n      this.triggerEvent(\"beforeshow\", this, {\n        bubbles: e.bubbles,\n        detail: e.detail\n      });\n      this.refreshOverflowedItems();\n    });\n    this.onEvent(\"selected\", this.popupMenuEl, (e) => {\n      this.triggerEvent(\"beforeshow\", this, {\n        bubbles: e.bubbles,\n        detail: e.detail\n      });\n      if (e.target.overflowTarget && typeof this.onBreadcrumbActivate === \"function\" && this.current) {\n        this.onBreadcrumbActivate(e.target.overflowTarget, this.current);\n      }\n    });\n  }\n  /**\n   * Constructs the overflow\n   */\n  #buildOverflowMenu() {\n    const group = this.popupMenuGroupEl;\n    const menuItemHTML = [...this.children].map(this.#buildOverflowMenuItem).join(\"\");\n    group?.insertAdjacentHTML(\"afterbegin\", menuItemHTML);\n    this.overflowMenuItems.forEach((item, i) => {\n      item.overflowTarget = this.children[i];\n    });\n  }\n  /**\n   * Constructs a single overflow menu item\n   * @param {HTMLElement} elem the breadcrumb element to use for creating the menu item\n   * @returns {string} representation of an IdsMenuItem\n   */\n  #buildOverflowMenuItem(elem) {\n    const disabled = elem.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.DISABLED) ? \" disabled\" : \"\";\n    const hidden = elem.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.HIDDEN) ? \" hidden\" : \"\";\n    return `<ids-menu-item${disabled}${hidden}>${elem.textContent}</ids-menu-item>`;\n  }\n  /**\n   * Destroys the overflow\n   */\n  #emptyOverflowMenu() {\n    if (this.popupMenuGroupEl) {\n      this.popupMenuGroupEl.innerHTML = \"\";\n    }\n  }\n  /**\n   * Resize\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #resize() {\n    this.refreshBreadcrumbMenu();\n    return this;\n  }\n  /**\n   * Returns the Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    const truncated = this.truncate ? \" truncate\" : \"\";\n    return `\n      <div class=\"ids-breadcrumb${truncated}\">\n        <div class=\"ids-breadcrumb-menu hidden\">\n          <ids-menu-button id=\"icon-button\" menu=\"icon-menu\">\n            <ids-icon icon=\"more\"></ids-icon>\n            <span class=\"audible\">Icon Only Button</span>\n          </ids-menu-button>\n          <ids-popup-menu id=\"icon-menu\" target=\"#icon-button\" trigger-type=\"click\">\n            <ids-menu-group>\n            </ids-menu-group>\n          </ids-popup-menu>\n        </div>\n        <nav part=\"breadcrumb\">\n          <slot></slot>\n        </nav>\n      </div>`;\n  }\n  /**\n   * Adds an individual breadcrumb to the end of the bread crumb list\n   * @param {Element} breadcrumb The HTML element to add\n   */\n  add(breadcrumb) {\n    breadcrumb.setAttribute(\"role\", \"listitem\");\n    breadcrumb.setAttribute(\"text-decoration\", \"hover\");\n    breadcrumb.setAttribute(\"color-variant\", this.closest(\"ids-header\") ? \"alternate\" : \"breadcrumb\");\n    breadcrumb.setAttribute(\"hitbox\", \"true\");\n    if (!breadcrumb.getAttribute(\"font-size\")) {\n      breadcrumb.setAttribute(\"font-size\", 14);\n    }\n    const lastBreadcrumb = this.lastElementChild;\n    this.appendChild(breadcrumb);\n    this.setActiveBreadcrumb(breadcrumb, lastBreadcrumb);\n    if (this.truncate) {\n      this.popupMenuGroupEl?.insertAdjacentHTML(\"beforeend\", this.#buildOverflowMenuItem(breadcrumb));\n      const lastElement = this.popupMenuGroupEl?.lastElementChild;\n      if (lastElement) {\n        lastElement.overflowTarget = breadcrumb;\n      }\n    }\n    this.refreshBreadcrumbMenu();\n  }\n  /**\n   * Removes the last breadcrumb from the bread crumb list\n   * @returns {Element | null} The removed element\n   */\n  delete() {\n    if (this.lastElementChild) {\n      const breadcrumb = this.removeChild(this.lastElementChild);\n      if (this.truncate && this.popupMenuGroupEl?.lastElementChild) {\n        this.popupMenuGroupEl?.removeChild(this.popupMenuGroupEl?.lastElementChild);\n      }\n      if (this.lastElementChild) {\n        this.setActiveBreadcrumb();\n      }\n      this.refreshBreadcrumbMenu();\n      return breadcrumb;\n    }\n    return null;\n  }\n  /**\n   * Refreshes the state of the Breadcrumb's overflow menu based on whether its items are overflowed\n   * @returns {void}\n   */\n  refreshBreadcrumbMenu() {\n    this.refreshOverflowedItems();\n    if (this.hasVisibleActions()) {\n      this.#showBreadCrumbMenu();\n    } else {\n      this.#hideBreadCrumbMenu();\n    }\n  }\n  /**\n   * contains the render routine for showing truncation and the breadcrumb overflow menu\n   * @private\n   * @returns {void}\n   */\n  #showBreadCrumbMenu() {\n    this.buttonEl?.removeAttribute(\"hidden\");\n    this.menuContainerEl?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.HIDDEN);\n    this.container?.classList.add(\"truncate\");\n    this.container?.querySelector(\"nav\")?.classList.add(\"truncate\");\n  }\n  /**\n   * contains the render routine for removing truncation and hiding the breadcrumb overflow menu\n   * @private\n   * @returns {void}\n   */\n  #hideBreadCrumbMenu() {\n    this.buttonEl?.setAttribute(\"hidden\", \"\");\n    this.menuContainerEl?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.HIDDEN);\n    this.container?.classList.remove(\"truncate\");\n    this.container?.querySelector(\"nav\")?.classList.remove(\"truncate\");\n  }\n  /**\n   * @returns {HTMLElement} the current breadcrumb\n   */\n  get current() {\n    return this.querySelector('[font-weight=\"bold\"]');\n  }\n  /**\n   * @returns {HTMLElement} reference to the breadcrumb overflow menu button\n   */\n  get buttonEl() {\n    return this.container?.querySelector(\"ids-menu-button\");\n  }\n  /**\n   * @returns {HTMLElement} reference to the breadcrumb overflow menu's container element\n   */\n  get menuContainerEl() {\n    return this.container?.querySelector(\".ids-breadcrumb-menu\");\n  }\n  /**\n   * @returns {HTMLElement} reference to the breadcrumb list's container element\n   */\n  get navElem() {\n    return this.container?.querySelector(\"nav\");\n  }\n  /**\n   * @readonly\n   * @returns {Array<HTMLElement>} list of menu items that mirror Toolbar items\n   */\n  get overflowMenuItems() {\n    if (this.popupMenuGroupEl) {\n      return [...this.popupMenuGroupEl.children];\n    }\n    return [];\n  }\n  get popupMenuEl() {\n    return this.container?.querySelector(\"ids-popup-menu\");\n  }\n  get popupMenuGroupEl() {\n    return this.container?.querySelector(\"ids-menu-group\");\n  }\n  /**\n   * Set if breadcrumb will be truncated if there isn't enough space\n   * @param {boolean|null} value truncate if true\n   */\n  set truncate(value) {\n    const currentValue = this.truncate;\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(value);\n    if (currentValue !== val) {\n      if (val) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.TRUNCATE, String(value));\n        this.#enableTruncation();\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.TRUNCATE);\n        this.#disableTruncation();\n      }\n    }\n  }\n  /**\n   * @returns {boolean} true if this component is currently configured to truncate\n   */\n  get truncate() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.TRUNCATE));\n  }\n  /**\n   * contains the render routine for showing truncation and the breadcrumb overflow menu\n   * @private\n   * @returns {void}\n   */\n  #enableTruncation() {\n    this.#resizeObserver.disconnect();\n    if (this.container)\n      this.#resizeObserver.observe(this.container);\n    this.#buildOverflowMenu();\n    this.#showBreadCrumbMenu();\n    this.container?.classList.add(\"can-truncate\");\n  }\n  /**\n   * contains the render routine for removing truncation and hiding the breadcrumb overflow menu\n   * @private\n   * @returns {void}\n   */\n  #disableTruncation() {\n    this.#resizeObserver.disconnect();\n    this.#hideBreadCrumbMenu();\n    this.#emptyOverflowMenu();\n    this.container?.classList.remove(\"can-truncate\");\n  }\n  /**\n   * If set to number the breadcrumb container will have padding added (in pixels)\n   * @param {string} value sets the padding to the container\n   */\n  set padding(value) {\n    if (value) {\n      this.container?.style.setProperty(\"padding\", `0 ${value}px`);\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.PADDING, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.PADDING);\n    }\n  }\n  get padding() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.PADDING);\n  }\n  /**\n   * @param {HTMLElement} item reference to the toolbar item to be checked for overflow\n   * @returns {boolean} true if the item is a toolbar member and should be displayed by overflow\n   */\n  isOverflowed(item) {\n    if (!this.contains(item)) {\n      return false;\n    }\n    if (item.hidden) {\n      return false;\n    }\n    const itemRect = item.getBoundingClientRect();\n    const sectionRect = this.navElem?.getBoundingClientRect();\n    const isBeyondRightEdge = itemRect.right > (sectionRect?.right || NaN);\n    const isBeyondLeftEdge = itemRect.left < (sectionRect?.left || NaN);\n    return isBeyondLeftEdge || isBeyondRightEdge;\n  }\n  /**\n   * Refreshes the visible state of menu items representing \"overflowed\" elements\n   * @returns {void}\n   */\n  refreshOverflowedItems() {\n    this.overflowMenuItems.forEach((item) => {\n      const doHide = !this.isOverflowed(item.overflowTarget);\n      item.hidden = doHide;\n      if (doHide) {\n        item.overflowTarget?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.OVERFLOWED);\n      } else {\n        item.overflowTarget?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.OVERFLOWED, \"\");\n      }\n    });\n    this.menuContainerEl?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.HIDDEN, String(!this.hasVisibleActions()));\n    this.buttonEl?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.HIDDEN, String(!this.hasVisibleActions()));\n    this.buttonEl?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.DISABLED, String(!this.hasEnabledActions()));\n  }\n  /**\n   * @returns {boolean} true if there are currently visible actions in this menu\n   */\n  hasVisibleActions() {\n    return !!this.container?.querySelectorAll(\"ids-menu-group > ids-menu-item:not([hidden])\").length;\n  }\n  /**\n   * @returns {boolean} true if there are currently enabled (read: not disabled) actions in this menu\n   */\n  hasEnabledActions() {\n    return !!this.container?.querySelectorAll(\"ids-menu-group > ids-menu-item:not([disabled])\").length;\n  }\n  /**\n   * @param {HTMLElement} el the target breadcrumb link\n   * @param {HTMLElement} [previousActiveBreadcrumbEl] a previously-activated Breadcrumb, if applicable\n   */\n  setActiveBreadcrumb(el, previousActiveBreadcrumbEl) {\n    let targetEl = el;\n    if (!this.contains(targetEl)) {\n      targetEl = this.lastElementChild;\n    }\n    if (previousActiveBreadcrumbEl) {\n      previousActiveBreadcrumbEl.fontWeight = null;\n    }\n    if (targetEl) {\n      targetEl.fontWeight = \"bold\";\n    }\n  }\n  /**\n   * Inherited from IdsColorVariantMixin to set child element color variants\n   */\n  onColorVariantRefresh() {\n    const parentHeaderEl = this.closest(\"ids-header\");\n    const breadcrumbVariant = parentHeaderEl ? \"alternate\" : \"breadcrumb\";\n    const menuButtonVariant = parentHeaderEl ? \"alternate\" : null;\n    if (this.buttonEl)\n      this.buttonEl.colorVariant = menuButtonVariant;\n    [...this.children].forEach((link) => {\n      link.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_6__.attributes.COLOR_VARIANT, breadcrumbVariant);\n    });\n  }\n};\nIdsBreadcrumb = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-breadcrumb\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_breadcrumb_scss__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n], IdsBreadcrumb);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-breadcrumb/ids-breadcrumb.ts\n");

/***/ }),

/***/ "./src/components/ids-breadcrumb/ids-breadcrumb.scss":
/*!***********************************************************!*\
  !*** ./src/components/ids-breadcrumb/ids-breadcrumb.scss ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Breadcrumb Component */ /* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.ids-breadcrumb {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  align-items: center;\n  display: flex;\n}\n.ids-breadcrumb [text-decoration] {\n  text-decoration: attr(text-decoration);\n}\n.ids-breadcrumb-menu {\n  position: relative;\n}\n.ids-breadcrumb-menu::after {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--ids-color-palette-slate-60);\n  content: \"/\";\n  font-weight: normal;\n  padding-right: 4px;\n  padding-left: 0;\n  text-decoration: none;\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 10px;\n}\n.ids-breadcrumb.can-truncate {\n  white-space: nowrap;\n}\n.ids-breadcrumb.can-truncate nav {\n  display: flex;\n  position: relative;\n  justify-content: end;\n  overflow: hidden;\n}\n.ids-breadcrumb nav {\n  padding: 8px;\n}\n.ids-breadcrumb nav.truncate::before {\n  transition: width 200ms cubic-bezier(0.4, 0, 0.6, 1), background 200ms cubic-bezier(0.4, 0, 0.6, 1);\n  background-color: transparent;\n  content: \"\";\n  height: 100%;\n  left: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 0;\n  z-index: 20;\n  width: 32px;\n}\n.ids-breadcrumb[mode=light] nav.truncate::before, .ids-breadcrumb:not([mode]) nav.truncate::before {\n  background-image: linear-gradient(to right, var(--ids-color-palette-white), rgba(255, 255, 255, 0));\n}\n.ids-breadcrumb[mode=dark] nav.truncate::before {\n  background-image: linear-gradient(to right, var(--ids-color-palette-slate-90), rgba(255, 255, 255, 0));\n}\n.ids-breadcrumb[mode=contrast] nav.truncate::before {\n  background-image: linear-gradient(to right, var(--ids-color-palette-slate-10), rgba(255, 255, 255, 0));\n}\n.ids-breadcrumb.color-variant-breadcrumb .ids-breadcrumb-menu::after {\n  color: var(--ids-color-palette-slate-60);\n}\n.ids-breadcrumb.color-variant-breadcrumb nav.truncate::before {\n  color: var(--ids-color-palette-slate-60);\n}\n.ids-breadcrumb.color-variant-alternate .ids-breadcrumb-menu::after {\n  color: var(--ids-color-palette-white);\n}\n.ids-breadcrumb.color-variant-alternate nav.truncate::before {\n  color: var(--ids-color-palette-white);\n}\n.ids-breadcrumb.color-variant-alternate[mode=light] nav.truncate::before, .ids-breadcrumb.color-variant-alternate:not([mode]) nav.truncate::before {\n  background-image: linear-gradient(to right, rgb(0, 114, 237), rgba(0, 114, 237, 0));\n}\n.ids-breadcrumb.color-variant-alternate[mode=dark] nav.truncate::before {\n  background-image: linear-gradient(to right, rgb(0, 114, 237), rgba(0, 114, 237, 0));\n}\n.ids-breadcrumb.color-variant-alternate[mode=contrast] nav.truncate::before {\n  background-image: linear-gradient(to right, rgb(0, 74, 153), rgba(0, 74, 153, 0));\n}\n\na.ids-hyperlink,\nspan.ids-breadcrumb-divider {\n  font-size: 14px;\n  color: var(--ids-color-palette-slate-60);\n}\na.ids-hyperlink:not(.ids-hyperlink-color-unset):not([mode]),\nspan.ids-breadcrumb-divider:not(.ids-hyperlink-color-unset):not([mode]) {\n  color: var(--ids-color-palette-slate-60);\n}\n\n::slotted(*),\n.ids-breadcrumb > * {\n  display: inline-block;\n}\n\n::slotted(*:not(:first-child))::before,\nspan.ids-breadcrumb-divider:not(:first-child)::before {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: inherit;\n  content: \"/\";\n  font-weight: normal;\n  padding: 0 6px;\n  text-decoration: none;\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.hidden {\n  display: none !important;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-breadcrumb/ids-breadcrumb.scss\n");

/***/ })

}]);