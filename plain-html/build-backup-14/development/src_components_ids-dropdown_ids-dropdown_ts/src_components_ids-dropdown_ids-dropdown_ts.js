"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-dropdown_ids-dropdown_ts"],{

/***/ "./src/components/ids-dropdown/ids-dropdown-attributes-mixin.ts":
/*!**********************************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown-attributes-mixin.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_dropdown_attributes_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_dropdown_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ids-dropdown-common */ \"./src/components/ids-dropdown/ids-dropdown-common.ts\");\n\n\n\nconst IdsDropdownAttributeMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      ..._ids_dropdown_common__WEBPACK_IMPORTED_MODULE_2__.IdsDropdownCommonAttributes\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n  }\n  /**\n   * Sets allow-blank setting\n   * @param {string|boolean} value adds blank option if true\n   */\n  set allowBlank(value) {\n    const truthyValue = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (truthyValue) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ALLOW_BLANK, \"\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ALLOW_BLANK);\n    }\n    if (typeof this.onAllowBlankChange === \"function\")\n      this.onAllowBlankChange(truthyValue);\n  }\n  /**\n   * Gets allow-blank value\n   * @returns {boolean} allow-blank value\n   */\n  get allowBlank() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ALLOW_BLANK));\n  }\n  /**\n   * When set the value can be cleared with Backspace/Delete\n   * @param {boolean|string|null} value clearable value\n   */\n  set clearable(value) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE, String(boolVal));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE);\n    }\n  }\n  get clearable() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE));\n  }\n  /**\n   * When set the blank option will have a text\n   * @param {string|null} value blank option text\n   */\n  set clearableText(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_TEXT, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_TEXT);\n    }\n    if (typeof this.onClearableTextChange === \"function\")\n      this.onClearableTextChange(value);\n  }\n  get clearableText() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_TEXT);\n  }\n  /**\n   * Set the dropdown size\n   * @param {string} value The value\n   */\n  set size(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE, value);\n      if (value === \"full\")\n        this.container?.classList.add(\"full\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE);\n      this.container?.classList.remove(\"full\");\n    }\n    if (typeof this.onSizeChange === \"function\")\n      this.onSizeChange(value);\n  }\n  get size() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE) ?? \"md\";\n  }\n};\nvar ids_dropdown_attributes_mixin_default = IdsDropdownAttributeMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZHJvcGRvd24vaWRzLWRyb3Bkb3duLWF0dHJpYnV0ZXMtbWl4aW4udHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQjtBQUVFO0FBQ2U7QUFpQjVDLE1BQU0sNEJBQTRCLENBQXdCLGVBQWtCLGNBQWMsV0FBVztBQUFBLEVBQ25HLGVBQWUsTUFBYTtBQUMxQixVQUFNLEdBQUcsSUFBSTtBQUFBLEVBQ2Y7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUksV0FBbUI7QUFBQSxNQUN2QixHQUFHLDZFQUEyQjtBQUEzQixJQUNMO0FBQUEsRUFDRjtBQUFBLEVBRUEsb0JBQW9CO0FBQ2xCLFVBQU0sb0JBQW9CO0FBQUEsRUFDNUI7QUFBQSxFQUVBLHVCQUE2QjtBQUMzQixVQUFNLHVCQUF1QjtBQUFBLEVBQy9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksV0FBVyxPQUFnQjtBQUM3QixVQUFNLGNBQWMsc0ZBQVksQ0FBQyxLQUFLO0FBQ3RDLFFBQUksYUFBYTtBQUNmLFdBQUssYUFBYSx3RUFBc0IsRUFBRSxFQUFFO0FBQUEsSUFDOUMsT0FBTztBQUNMLFdBQUssZ0JBQWdCLHdFQUFzQjtBQUFBLElBQzdDO0FBRUEsUUFBSSxPQUFPLEtBQUssdUJBQXVCO0FBQVksV0FBSyxtQkFBbUIsV0FBVztBQUFBLEVBQ3hGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksYUFBc0I7QUFDeEIsV0FBTyxzRkFBWSxDQUFDLEtBQUssYUFBYSx3RUFBc0IsQ0FBQztBQUFBLEVBQy9EO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksVUFBVSxPQUFnQztBQUM1QyxVQUFNLFVBQVUsc0ZBQVksQ0FBQyxLQUFLO0FBRWxDLFFBQUksU0FBUztBQUNYLFdBQUssYUFBYSxzRUFBb0IsRUFBRSxPQUFPLE9BQU8sQ0FBQztBQUFBLElBQ3pELE9BQU87QUFDTCxXQUFLLGdCQUFnQixzRUFBb0I7QUFBQSxJQUMzQztBQUFBLEVBQ0Y7QUFBQSxFQUVBLElBQUksWUFBWTtBQUFFLFdBQU8sc0ZBQVksQ0FBQyxLQUFLLGFBQWEsc0VBQW9CLENBQUM7QUFBQSxFQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1oRixJQUFJLGNBQWMsT0FBc0I7QUFDdEMsUUFBSSxPQUFPO0FBQ1QsV0FBSyxhQUFhLDJFQUF5QixFQUFFLEtBQUs7QUFBQSxJQUNwRCxPQUFPO0FBQ0wsV0FBSyxnQkFBZ0IsMkVBQXlCO0FBQUEsSUFDaEQ7QUFFQSxRQUFJLE9BQU8sS0FBSywwQkFBMEI7QUFBWSxXQUFLLHNCQUFzQixLQUFLO0FBQUEsRUFDeEY7QUFBQSxFQUVBLElBQUksZ0JBQWdCO0FBQUUsV0FBTyxLQUFLLGFBQWEsMkVBQXlCO0FBQUEsRUFBRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNM0UsSUFBSSxLQUFLLE9BQWU7QUFDdEIsUUFBSSxPQUFPO0FBQ1QsV0FBSyxhQUFhLGlFQUFlLEVBQUUsS0FBSztBQUN4QyxVQUFJLFVBQVU7QUFBUSxhQUFLLFdBQVcsVUFBVSxJQUFJLE1BQU07QUFBQSxJQUM1RCxPQUFPO0FBQ0wsV0FBSyxnQkFBZ0IsaUVBQWU7QUFDcEMsV0FBSyxXQUFXLFVBQVUsT0FBTyxNQUFNO0FBQUEsSUFDekM7QUFFQSxRQUFJLE9BQU8sS0FBSyxpQkFBaUI7QUFBWSxXQUFLLGFBQWEsS0FBSztBQUFBLEVBQ3RFO0FBQUEsRUFFQSxJQUFJLE9BQWU7QUFBRSxXQUFPLEtBQUssYUFBYSxpRUFBZSxLQUFLO0FBQUEsRUFBTTtBQUMxRTtBQUVBLElBQU8sd0NBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kcm9wZG93bi9pZHMtZHJvcGRvd24tYXR0cmlidXRlcy1taXhpbi50cz8zZjI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF0dHJpYnV0ZXMgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1hdHRyaWJ1dGVzJztcbmltcG9ydCB7IElkc0NvbnN0cnVjdG9yIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtZWxlbWVudCc7XG5pbXBvcnQgeyBzdHJpbmdUb0Jvb2wgfSBmcm9tICcuLi8uLi91dGlscy9pZHMtc3RyaW5nLXV0aWxzL2lkcy1zdHJpbmctdXRpbHMnO1xuaW1wb3J0IHsgSWRzRHJvcGRvd25Db21tb25BdHRyaWJ1dGVzIH0gZnJvbSAnLi9pZHMtZHJvcGRvd24tY29tbW9uJztcblxuZXhwb3J0IGludGVyZmFjZSBEcm9wZG93bkF0dHJpYnV0ZU1peGluSW50ZXJmYWNlIHtcbiAgLy8gYXMgaW5zdGFuY2UgZnVuY3Rpb25zXG4gIG9uQWxsb3dCbGFua0NoYW5nZT8obmV3VmFsdWU6IGJvb2xlYW4pOiB2b2lkO1xuICBvbkNsZWFyYWJsZVRleHRDaGFuZ2U/KG5ld1ZhbHVlOiBzdHJpbmcgfCBudWxsKTogdm9pZDtcbiAgb25TaXplQ2hhbmdlPyhuZXdWYWx1ZTogc3RyaW5nKTogdm9pZDtcbn1cblxudHlwZSBDb25zdHJhaW50cyA9IElkc0NvbnN0cnVjdG9yPERyb3Bkb3duQXR0cmlidXRlTWl4aW5JbnRlcmZhY2U+O1xuXG4vKipcbiAqIEEgbWl4aW4gdGhhdCBhZGRzIHNoYXJlZCBhdHRyaWJ1dGUgc2V0dGVycy9nZXR0ZXJzL2NhbGxiYWNrcyByZWxhdGVkIHRvIElkc01vbnRoVmlldyBiZWhhdmlvcnMuXG4gKiBAbWl4aW4gSWRzTW9udGhWaWV3QXR0cmlidXRlTWl4aW5cbiAqIEBwYXJhbSB7YW55fSBzdXBlcmNsYXNzIEFjY2VwdHMgYSBzdXBlcmNsYXNzIGFuZCBjcmVhdGVzIGEgbmV3IHN1YmNsYXNzIGZyb20gaXQuXG4gKiBAcmV0dXJucyB7YW55fSBUaGUgZXh0ZW5kZWQgb2JqZWN0XG4gKi9cbmNvbnN0IElkc0Ryb3Bkb3duQXR0cmlidXRlTWl4aW4gPSA8VCBleHRlbmRzIENvbnN0cmFpbnRzPihzdXBlcmNsYXNzOiBUKSA9PiBjbGFzcyBleHRlbmRzIHN1cGVyY2xhc3Mge1xuICBjb25zdHJ1Y3RvciguLi5hcmdzOiBhbnlbXSkge1xuICAgIHN1cGVyKC4uLmFyZ3MpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgYXR0cmlidXRlcyB3ZSBoYW5kbGUgYXMgZ2V0dGVycy9zZXR0ZXJzXG4gICAqIEByZXR1cm5zIHtBcnJheX0gVGhlIGF0dHJpYnV0ZXMgaW4gYW4gYXJyYXlcbiAgICovXG4gIHN0YXRpYyBnZXQgYXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgLi4uKHN1cGVyY2xhc3MgYXMgYW55KS5hdHRyaWJ1dGVzLFxuICAgICAgLi4uSWRzRHJvcGRvd25Db21tb25BdHRyaWJ1dGVzXG4gICAgXTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrPy4oKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCk6IHZvaWQge1xuICAgIHN1cGVyLmRpc2Nvbm5lY3RlZENhbGxiYWNrPy4oKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzIGFsbG93LWJsYW5rIHNldHRpbmdcbiAgICogQHBhcmFtIHtzdHJpbmd8Ym9vbGVhbn0gdmFsdWUgYWRkcyBibGFuayBvcHRpb24gaWYgdHJ1ZVxuICAgKi9cbiAgc2V0IGFsbG93QmxhbmsodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBjb25zdCB0cnV0aHlWYWx1ZSA9IHN0cmluZ1RvQm9vbCh2YWx1ZSk7XG4gICAgaWYgKHRydXRoeVZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFMTE9XX0JMQU5LLCAnJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuQUxMT1dfQkxBTkspO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdGhpcy5vbkFsbG93QmxhbmtDaGFuZ2UgPT09ICdmdW5jdGlvbicpIHRoaXMub25BbGxvd0JsYW5rQ2hhbmdlKHRydXRoeVZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGFsbG93LWJsYW5rIHZhbHVlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBhbGxvdy1ibGFuayB2YWx1ZVxuICAgKi9cbiAgZ2V0IGFsbG93QmxhbmsoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFMTE9XX0JMQU5LKSk7XG4gIH1cblxuICAvKipcbiAgICogV2hlbiBzZXQgdGhlIHZhbHVlIGNhbiBiZSBjbGVhcmVkIHdpdGggQmFja3NwYWNlL0RlbGV0ZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW58c3RyaW5nfG51bGx9IHZhbHVlIGNsZWFyYWJsZSB2YWx1ZVxuICAgKi9cbiAgc2V0IGNsZWFyYWJsZSh2YWx1ZTogYm9vbGVhbiB8IHN0cmluZyB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcblxuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNMRUFSQUJMRSwgU3RyaW5nKGJvb2xWYWwpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5DTEVBUkFCTEUpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBjbGVhcmFibGUoKSB7IHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5DTEVBUkFCTEUpKTsgfVxuXG4gIC8qKlxuICAgKiBXaGVuIHNldCB0aGUgYmxhbmsgb3B0aW9uIHdpbGwgaGF2ZSBhIHRleHRcbiAgICogQHBhcmFtIHtzdHJpbmd8bnVsbH0gdmFsdWUgYmxhbmsgb3B0aW9uIHRleHRcbiAgICovXG4gIHNldCBjbGVhcmFibGVUZXh0KHZhbHVlOiBzdHJpbmcgfCBudWxsKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNMRUFSQUJMRV9URVhULCB2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuQ0xFQVJBQkxFX1RFWFQpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdGhpcy5vbkNsZWFyYWJsZVRleHRDaGFuZ2UgPT09ICdmdW5jdGlvbicpIHRoaXMub25DbGVhcmFibGVUZXh0Q2hhbmdlKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBjbGVhcmFibGVUZXh0KCkgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5DTEVBUkFCTEVfVEVYVCk7IH1cblxuICAvKipcbiAgICogU2V0IHRoZSBkcm9wZG93biBzaXplXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgdmFsdWVcbiAgICovXG4gIHNldCBzaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0laRSwgdmFsdWUpO1xuICAgICAgaWYgKHZhbHVlID09PSAnZnVsbCcpIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3QuYWRkKCdmdWxsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0laRSk7XG4gICAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZSgnZnVsbCcpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgdGhpcy5vblNpemVDaGFuZ2UgPT09ICdmdW5jdGlvbicpIHRoaXMub25TaXplQ2hhbmdlKHZhbHVlKTtcbiAgfVxuXG4gIGdldCBzaXplKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNJWkUpID8/ICdtZCc7IH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0Ryb3Bkb3duQXR0cmlidXRlTWl4aW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown-attributes-mixin.ts\n");

/***/ }),

/***/ "./src/components/ids-dropdown/ids-dropdown-common.ts":
/*!************************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown-common.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdsDropdownCommonAttributes\": () => (/* binding */ IdsDropdownCommonAttributes)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n\nconst IdsDropdownCommonAttributes = [\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.ALLOW_BLANK,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE_TEXT,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.GROUP,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.GROUP_LABEL,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LIST,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_MARGINS,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.PLACEHOLDER,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.READONLY,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_LOADING_INDICATOR,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TYPEAHEAD,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE\n];\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZHJvcGRvd24vaWRzLWRyb3Bkb3duLWNvbW1vbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQjtBQWVwQixNQUFNLDhCQUE4QjtBQUFBLEVBQ3pDLHdFQUFzQjtBQUFYLEVBQ1gsc0VBQW9CO0FBQVQsRUFDWCwyRUFBeUI7QUFBZCxFQUNYLHFFQUFtQjtBQUFSLEVBQ1gsa0VBQWdCO0FBQUwsRUFDWCx3RUFBc0I7QUFBWCxFQUNYLGlFQUFlO0FBQUosRUFDWCx1RUFBcUI7QUFBVixFQUNYLHdFQUFzQjtBQUFYLEVBQ1gscUVBQW1CO0FBQVIsRUFDWCxtRkFBaUM7QUFBdEIsRUFDWCxpRUFBZTtBQUFKLEVBQ1gsc0VBQW9CO0FBQVQsRUFDWCxrRUFBZ0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kcm9wZG93bi9pZHMtZHJvcGRvd24tY29tbW9uLnRzP2Q1ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuXG5leHBvcnQgdHlwZSBJZHNEcm9wZG93bk9wdGlvbiA9IHtcbiAgaWQ/OiBzdHJpbmcsXG4gIGxhYmVsOiBzdHJpbmcsXG4gIHZhbHVlOiBzdHJpbmcsXG4gIGljb24/OiBzdHJpbmcsXG4gIGdyb3VwTGFiZWw/OiBib29sZWFuLFxuICAvLyBpZHMtbXVsdGlzZWxlY3Qgc2hhcmVkXG4gIHNlbGVjdGVkPzogYm9vbGVhbixcbiAgaW5kZXg/OiBudW1iZXJcbn07XG5cbmV4cG9ydCB0eXBlIElkc0Ryb3Bkb3duT3B0aW9ucyA9IEFycmF5PElkc0Ryb3Bkb3duT3B0aW9uPjtcblxuZXhwb3J0IGNvbnN0IElkc0Ryb3Bkb3duQ29tbW9uQXR0cmlidXRlcyA9IFtcbiAgYXR0cmlidXRlcy5BTExPV19CTEFOSyxcbiAgYXR0cmlidXRlcy5DTEVBUkFCTEUsXG4gIGF0dHJpYnV0ZXMuQ0xFQVJBQkxFX1RFWFQsXG4gIGF0dHJpYnV0ZXMuRElTQUJMRUQsXG4gIGF0dHJpYnV0ZXMuR1JPVVAsXG4gIGF0dHJpYnV0ZXMuR1JPVVBfTEFCRUwsXG4gIGF0dHJpYnV0ZXMuTElTVCxcbiAgYXR0cmlidXRlcy5OT19NQVJHSU5TLFxuICBhdHRyaWJ1dGVzLlBMQUNFSE9MREVSLFxuICBhdHRyaWJ1dGVzLlJFQURPTkxZLFxuICBhdHRyaWJ1dGVzLlNIT1dfTE9BRElOR19JTkRJQ0FUT1IsXG4gIGF0dHJpYnV0ZXMuU0laRSxcbiAgYXR0cmlidXRlcy5UWVBFQUhFQUQsXG4gIGF0dHJpYnV0ZXMuVkFMVUVcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown-common.ts\n");

/***/ }),

/***/ "./src/components/ids-dropdown/ids-dropdown-list.ts":
/*!**********************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown-list.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsDropdownList)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-field-height-mixin/ids-field-height-mixin */ \"./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _ids_picker_popup_ids_picker_popup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ids-picker-popup/ids-picker-popup */ \"./src/components/ids-picker-popup/ids-picker-popup.ts\");\n/* harmony import */ var _ids_dropdown_attributes_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ids-dropdown-attributes-mixin */ \"./src/components/ids-dropdown/ids-dropdown-attributes-mixin.ts\");\n/* harmony import */ var _ids_dropdown_list_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ids-dropdown-list.scss */ \"./src/components/ids-dropdown/ids-dropdown-list.scss\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\nconst Base = (0,_ids_dropdown_attributes_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n  (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    (0,_mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n      (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n        _ids_picker_popup_ids_picker_popup__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n      )\n    )\n  )\n);\nlet IdsDropdownList = class extends Base {\n  isMultiSelect;\n  listBox;\n  constructor() {\n    super();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes\n    ];\n  }\n  template() {\n    return `<ids-popup class=\"ids-dropdown-list\" type=\"menu\" part=\"dropdown-list\" y=\"-1\">\n      <slot slot=\"content\"></slot>\n    </ids-popup>`;\n  }\n  /**\n   * Invoked each time the custom element is appended into a document-connected element.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.configurePopup();\n    this.attachEventHandlers();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.listBox = null;\n  }\n  onHide() {\n    this.setAriaOnMenuClose();\n  }\n  onShow() {\n    this.configurePopup();\n    this.setAriaOnMenuOpen();\n    if (this.value)\n      this.selectOption(this.value);\n  }\n  onTargetChange() {\n    const id = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ID);\n    if (id)\n      this.target?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST, `#${id}`);\n  }\n  attachEventHandlers() {\n    this.offEvent(\"click.dropdown-list-box\");\n    this.onEvent(\"click.dropdown-list-box\", this, (e) => {\n      let target = e.target;\n      if (target && target.nodeName !== \"IDS-LIST-BOX-OPTION\") {\n        target = target.closest(\"ids-list-box-option\");\n      }\n      if (target) {\n        if (target.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL))\n          return;\n        this.value = target.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n        this.triggerSelectedEvent();\n      }\n    });\n  }\n  /**\n   * Override `addOpenEvents` from IdsPopupOpenEventsMixin to include\n   * appending of some keyboard handlers\n   */\n  addOpenEvents() {\n    super.addOpenEvents();\n    this.listen([\"ArrowDown\", \"ArrowUp\"], this, (e) => {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      const selected = this.selected;\n      const next = selected?.nextElementSibling;\n      const prev = selected?.previousElementSibling;\n      if (e.key === \"ArrowUp\" && e.altKey) {\n        if (!this.isMultiSelect) {\n          this.value = selected?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n        }\n        this.triggerCloseEvent(true);\n        return;\n      }\n      if (e.key === \"ArrowDown\" && next) {\n        if (next.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) && !next.nextElementSibling)\n          return;\n        this.deselectOption(selected);\n        this.selectOption(next.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) ? next.nextElementSibling : next);\n      }\n      if (e.key === \"ArrowUp\" && prev) {\n        if (prev.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) && !prev.previousElementSibling)\n          return;\n        this.deselectOption(selected);\n        this.selectOption(prev.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) ? prev.previousElementSibling : prev);\n      }\n    });\n    this.listen([\"Escape\"], this, () => {\n      this.triggerCloseEvent(true);\n    });\n    if (!this.isMultiSelect) {\n      this.listen([\" \", \"Enter\"], this, (e) => {\n        if (e.key === \" \" && this.typeahead)\n          return;\n        if (!this.popup?.visible) {\n          this.triggerOpenEvent();\n          return;\n        }\n        const value = this.selected?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n        this.value = value;\n        this.triggerSelectedEvent();\n      });\n    }\n  }\n  /**\n   * Override `removeOpenEvents` from IdsPopupOpenEventsMixin to include\n   * removal of some keyboard handlers\n   */\n  removeOpenEvents() {\n    super.removeOpenEvents();\n    this.unlisten(\" \");\n    this.unlisten(\"Enter\");\n  }\n  /**\n   * Triggers a `selected` event that propagates to the target element (usually an IdsDropdown)\n   * @param {CustomEvent} [e] optional event handler to pass arguments\n   * @returns {void}\n   */\n  triggerSelectedEvent(e) {\n    let args;\n    if (e)\n      args = e;\n    else {\n      args = {\n        bubbles: true,\n        detail: {\n          elem: this,\n          label: this.selected?.textContent,\n          value: this.value\n        }\n      };\n    }\n    if (this.target) {\n      const event = new CustomEvent(\"selected\", args);\n      this.target.dispatchEvent(event);\n    }\n  }\n  triggerOpenEvent() {\n    this.triggerEvent(\"open.dropdown-list\", this, {\n      bubbles: true,\n      detail: {\n        elem: this\n      }\n    });\n  }\n  triggerCloseEvent(doCancel) {\n    this.triggerEvent(\"close.dropdown-list\", this, {\n      bubbles: true,\n      detail: {\n        elem: this,\n        operation: doCancel ? \"cancel\" : \"default\"\n      }\n    });\n  }\n  configurePopup() {\n    this.listBox = this.querySelector(\"ids-list-box\");\n    if (!this.listBox) {\n      if (this.children[0]?.tagName === \"SLOT\") {\n        this.listBox = this.children[0].assignedElements()?.[0];\n      }\n    }\n    if (this.listBox) {\n      if (this.compact && !this.listBox?.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT)) {\n        this.listBox.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT, \"true\");\n      }\n    }\n    if (this.size === \"full\" && this.target && !this.parentElement?.classList.contains(\"ids-dropdown\")) {\n      const targetWidth = `${this.target.clientWidth}px`;\n      this.style.width = targetWidth;\n      if (this.popup) {\n        this.popup.style.maxWidth = targetWidth;\n        this.popup.style.width = targetWidth;\n      }\n    }\n    if (this.popup) {\n      this.popup.type = \"dropdown\";\n      this.popup.align = \"bottom, left\";\n      this.popup.arrow = \"none\";\n      if (!this.popup.visible) {\n        this.popup.y = -1;\n        this.popup.x = 0;\n        this.setAriaOnMenuClose();\n      } else if (this.popup.visible)\n        this.popup.setPosition(0, -1, false, true);\n    }\n  }\n  /**\n   * Add internal aria attributes while open\n   * @private\n   * @returns {void}\n   */\n  setAriaOnMenuOpen() {\n    this.setAttribute(\"aria-expanded\", \"true\");\n    const selected = this.selectedOption || this.querySelector(\"ids-list-box-option:not([group-label])\");\n    this.listBox?.setAttribute(\"tabindex\", \"0\");\n    if (selected && this.value) {\n      this.selectOption(selected);\n    }\n  }\n  /**\n   * Add internal aria attributes while closed\n   * @private\n   * @returns {void}\n   */\n  setAriaOnMenuClose() {\n    this.setAttribute(\"aria-expanded\", \"false\");\n    this.listBox?.removeAttribute(\"tabindex\");\n    const selected = this.selected;\n    if (selected) {\n      this.deselectOption(selected);\n    }\n  }\n  /**\n   * Returns the currently available options\n   * @returns {Array<any>} the array of options\n   */\n  get options() {\n    return this.querySelectorAll(\"ids-list-box-option\");\n  }\n  /**\n   * Returns the selected Listbox option based on the Dropdown's value.\n   * @returns {IdsListBoxOption| null} the selected option\n   */\n  get selectedOption() {\n    return this.querySelector(`ids-list-box-option[value=\"${this.value}\"]`);\n  }\n  /**\n   * Returns the currently-selected Listbox option\n   * (may be different from the Dropdown's value because of user input)\n   * @readonly\n   * @returns {IdsListBoxOption|null} Reference to a selected Listbox option if one is present\n   */\n  get selected() {\n    const child = this.children[0];\n    if (child?.tagName === \"SLOT\") {\n      return this.listBox?.querySelector(\"ids-list-box-option.is-selected\") || null;\n    }\n    return this.querySelector(\"ids-list-box-option.is-selected\") || null;\n  }\n  /**\n   * Set typeahead attribute\n   * @param {string | boolean | null} value typeahead value\n   */\n  set typeahead(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD, String(val));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD);\n    }\n    this.container?.classList.toggle(\"typeahead\", val);\n  }\n  /**\n   * Get the typeahead attribute\n   * @returns {boolean} typeahead attribute value converted to boolean\n   */\n  get typeahead() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD));\n  }\n  /**\n   * Set the value of the dropdown using the value/id attribute if present\n   * @param {string} value The value/id to use\n   */\n  set value(value) {\n    let selector = `ids-list-box-option[value=\"${value}\"]`;\n    if (value === \" \" || !value)\n      selector = `ids-list-box-option:not([value])`;\n    const elem = this.listBox?.querySelector(selector);\n    if (!elem)\n      return;\n    this.clearSelected();\n    this.selectOption(elem);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, String(value));\n  }\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n  }\n  /**\n   * Remove the aria and state from the currently selected element\n   */\n  clearSelected() {\n    const option = this.listBox?.querySelector(\"ids-list-box-option[aria-selected]\");\n    this.deselectOption(option);\n  }\n  /**\n   * Gets a reference to an IdsDropdownList option based on a provided value\n   * @param {string} val referenced value\n   * @returns {IdsListBoxOption | null} element representing the provided value\n   */\n  getOption(val) {\n    return this.listBox?.querySelector(`ids-list-box-option[value=\"${val}\"]`);\n  }\n  /**\n   * Set the aria and state on the element\n   * @param {HTMLElement} option the option to select\n   * @private\n   */\n  selectOption(option) {\n    if (!this?.popup?.visible)\n      return;\n    let targetOption;\n    if (typeof option === \"string\") {\n      targetOption = this.getOption(option);\n    } else {\n      targetOption = option;\n    }\n    if (!targetOption)\n      return;\n    targetOption.setAttribute(\"aria-selected\", \"true\");\n    targetOption.classList.add(\"is-selected\");\n    targetOption.setAttribute(\"tabindex\", \"0\");\n    targetOption.focus();\n    if (targetOption.id) {\n      this.listBox?.setAttribute(\"aria-activedescendant\", targetOption.id);\n    }\n    if (typeof targetOption.scrollIntoView === \"function\") {\n      targetOption.scrollIntoView({ block: \"center\" });\n    }\n  }\n  /**\n   * Removes selected attributes from an option\n   * @param {HTMLElement} option element to remove attributes\n   */\n  deselectOption(option) {\n    option?.removeAttribute(\"aria-selected\");\n    option?.classList.remove(\"is-selected\");\n    option?.setAttribute(\"tabindex\", \"-1\");\n  }\n  onAllowBlankChange(val) {\n    if (val)\n      this.insertBlank();\n    else\n      this.removeBlank();\n  }\n  onClearableTextChange() {\n    if (this.allowBlank)\n      this.insertBlank();\n  }\n  /**\n   * Insert blank option into list box\n   */\n  insertBlank() {\n    const list = this.listBox;\n    const blankOption = `<ids-list-box-option value=\"blank\" aria-label=\"Blank\">${this.clearableText ?? \"&nbsp;\"}</ids-list-box-option>`;\n    this.removeBlank();\n    list?.insertAdjacentHTML(\"afterbegin\", blankOption);\n  }\n  /**\n   * Remove blank options from list box\n   */\n  removeBlank() {\n    this.getOption(\"blank\")?.remove();\n  }\n  /**\n   * Refreshes the state of the \"blank\" option in the Dropdown list\n   * @returns {void}\n   */\n  configureBlank() {\n    if (this.allowBlank)\n      this.insertBlank();\n    else\n      this.removeBlank();\n  }\n  onFieldHeightChange(val) {\n    const attr = val === _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT ? { name: _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT, val: \"\" } : { name: _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIELD_HEIGHT, val };\n    if (val) {\n      this.listBox?.setAttribute(attr.name, attr.val);\n    } else {\n      this.listBox?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT);\n      this.listBox?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIELD_HEIGHT);\n    }\n  }\n  onSizeChange(value) {\n    if (value)\n      this.listBox?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, value);\n    else\n      this.listBox?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n  }\n};\nIdsDropdownList = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-dropdown-list\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_dropdown_list_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n], IdsDropdownList);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown-list.ts\n");

/***/ }),

/***/ "./src/components/ids-dropdown/ids-dropdown.ts":
/*!*****************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsDropdown)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_dropdown_attributes_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ids-dropdown-attributes-mixin */ \"./src/components/ids-dropdown/ids-dropdown-attributes-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\n/* harmony import */ var _mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-field-height-mixin/ids-field-height-mixin */ \"./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-tooltip-mixin/ids-tooltip-mixin */ \"./src/mixins/ids-tooltip-mixin/ids-tooltip-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin */ \"./src/mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../mixins/ids-validation-mixin/ids-validation-input-mixin */ \"./src/mixins/ids-validation-mixin/ids-validation-input-mixin.ts\");\n/* harmony import */ var _mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../mixins/ids-label-state-mixin/ids-label-state-parent-mixin */ \"./src/mixins/ids-label-state-mixin/ids-label-state-parent-mixin.ts\");\n/* harmony import */ var _mixins_ids_loading_indicator_mixin_ids_loading_indicator_mixin__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin */ \"./src/mixins/ids-loading-indicator-mixin/ids-loading-indicator-mixin.ts\");\n/* harmony import */ var _mixins_ids_xss_mixin_ids_xss_mixin__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../mixins/ids-xss-mixin/ids-xss-mixin */ \"./src/mixins/ids-xss-mixin/ids-xss-mixin.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_field__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-field */ \"./src/components/ids-trigger-field/ids-trigger-field.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_button__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-button */ \"./src/components/ids-trigger-field/ids-trigger-button.ts\");\n/* harmony import */ var _ids_input_ids_input__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../ids-input/ids-input */ \"./src/components/ids-input/ids-input.ts\");\n/* harmony import */ var _ids_dropdown_list__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ids-dropdown-list */ \"./src/components/ids-dropdown/ids-dropdown-list.ts\");\n/* harmony import */ var _ids_list_box_ids_list_box__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../ids-list-box/ids-list-box */ \"./src/components/ids-list-box/ids-list-box.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_dropdown_scss__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./ids-dropdown.scss */ \"./src/components/ids-dropdown/ids-dropdown.scss\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_ids_dropdown_attributes_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n    (0,_mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(\n      (0,_mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(\n        (0,_mixins_ids_loading_indicator_mixin_ids_loading_indicator_mixin__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(\n          (0,_mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(\n            (0,_mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n              (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n                (0,_mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n                  (0,_mixins_ids_xss_mixin_ids_xss_mixin__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(\n                    (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\n                      (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n                        (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n                          _core_ids_element__WEBPACK_IMPORTED_MODULE_12__[\"default\"]\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\nlet IdsDropdown = class extends Base {\n  isFormComponent = true;\n  hasIcons = false;\n  dropdownList;\n  trigger;\n  listBox;\n  labelClicked;\n  labelEl;\n  /** Sets to true when a keyboard operation opens the dropdown (prevents extraneous event triggering) */\n  openedByKeyboard = false;\n  /** Sets to true when a keyboard operation closes the dropdown (prevents extraneous event triggering) */\n  closedByKeyboard = false;\n  constructor() {\n    super();\n    this.state = { selectedIndex: 0 };\n    this.labelClicked = false;\n  }\n  /**\n   * Invoked each time the custom element is appended into a document-connected element.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.trigger = this.container?.querySelector(\"ids-trigger-button\");\n    this.labelEl = this.input?.labelEl;\n    this.configureDropdownList();\n    this.listBox = this.dropdownList?.querySelector(\"ids-list-box\");\n    this.#addAria().#attachEventHandlers().#attachKeyboardListeners();\n    this.value = this.getAttribute(\"value\");\n    this.resetDirtyTracker();\n    this.container?.classList.toggle(\"typeahead\", this.typeahead);\n    this.listBox?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, this.size);\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes\n    ];\n  }\n  #optionsData = [];\n  #isMultiSelect = this.nodeName === \"IDS-MULTISELECT\";\n  /**\n   * List of available color variants for this component\n   * @returns {Array<string>}\n   */\n  colorVariants = [\"alternate-formatter\", \"borderless\", \"in-cell\"];\n  /**\n   * Push color variant to the container element\n   * @returns {void}\n   */\n  onColorVariantRefresh() {\n    if (this.input)\n      this.input.colorVariant = this.colorVariant;\n  }\n  onLabelChange() {\n    if (this.input)\n      this.input.label = this.label;\n  }\n  /**\n   * Push label-state to the container element\n   * @returns {void}\n   */\n  onLabelStateChange() {\n    if (this.input)\n      this.input.labelState = this.labelState;\n  }\n  onLabelRequiredChange() {\n    if (this.input)\n      this.input.labelRequired = this.labelRequired;\n  }\n  /**\n   * Push field-height/compact to the container element\n   * @param {string} val the new field height setting\n   */\n  onFieldHeightChange(val) {\n    if (val) {\n      const attr = val === _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT ? { name: _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT, val: \"\" } : { name: _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIELD_HEIGHT, val };\n      this.input?.setAttribute(attr.name, attr.val);\n      this.dropdownList?.setAttribute(attr.name, attr.val);\n    } else {\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIELD_HEIGHT);\n      this.dropdownList?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPACT);\n      this.dropdownList?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIELD_HEIGHT);\n    }\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    const colorVariant = this.colorVariant ? ` color-variant=\"${this.colorVariant}\"` : \"\";\n    const fieldHeight = this.fieldHeight ? ` field-height=\"${this.fieldHeight}\"` : \"\";\n    const labelState = this.labelState ? ` label-state=\"${this.labelState}\"` : \"\";\n    const compact = this.compact ? \" compact\" : \"\";\n    const noMargins = this.noMargins ? \" no-margins\" : \"\";\n    const builtInDropdown = !this.list ? this.templateDropdownList() : \"\";\n    this.hasIcons = this.querySelector(\"ids-list-box-option ids-icon\") !== null;\n    return `\n    <div class=\"ids-dropdown\">\n      <ids-trigger-field\n        id=\"triggerField-${this.id ? this.id : \"\"}\"\n        ${!this.typeahead && !this.disabled ? ' readonly=\"true\"' : \"\"}\n        ${this.disabled ? ' disabled=\"true\"' : \"\"}\n        ${this.readonly ? \"\" : \" readonly-background\"}\n        cursor=\"pointer\"\n        size=\"${this.size}\"\n        label=\"${this.label}\"\n        placeholder=\"${this.placeholder}\"\n        part=\"trigger-field\"\n        ${colorVariant}${fieldHeight}${compact}${noMargins}${labelState}\n        ${this.validate ? ` validate=\"${this.validate}\"` : \"\"}\n        ${this.validate && this.validationEvents ? ` validation-events=\"${this.validationEvents}\"` : \"\"}\n      >\n        <ids-trigger-button\n          id=\"triggerBtn-${this.id ? this.id : \"\"}\"\n          slot=\"trigger-end\"\n          part=\"trigger-button\"\n          tabbable=\"false\"\n          disabled=\"${this.disabled}\"\n        >\n          <ids-text audible=\"true\" translate-text=\"true\">DropdownTriggerButton</ids-text>\n          <ids-icon icon=\"dropdown\" part=\"icon\"></ids-icon>\n        </ids-trigger-button>\n      </ids-trigger-field>\n      ${builtInDropdown}\n    </div>`;\n  }\n  templateDropdownList() {\n    const fieldHeight = this.fieldHeight && this.fieldHeight !== \"compact\" ? ` field-height=\"${this.fieldHeight}\"` : \"\";\n    const compact = this.compact || this.fieldHeight === \"compact\" ? \" compact\" : \"\";\n    const size = this.size ? ` size=\"${this.size}\"` : \"\";\n    const value = this.value ? ` value=\"${this.value}\"` : \"\";\n    return `<ids-dropdown-list\n      id=\"dropdownList-${this.id ? this.id : \"\"}\"\n      ${fieldHeight}\n      ${compact}\n      ${size}\n      ${value}>\n      <slot></slot>\n    </ids-dropdown-list>`;\n  }\n  /**\n   * Add internal aria attributes\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #addAria() {\n    const targetListboxId = this.listBox?.getAttribute(\"id\") || `ids-list-box-${this.id}`;\n    const attrs = {\n      role: \"combobox\",\n      \"aria-expanded\": \"false\",\n      \"aria-autocomplete\": \"list\",\n      \"aria-haspopup\": \"listbox\",\n      \"aria-description\": this.localeAPI?.translate(\"PressDown\"),\n      \"aria-controls\": targetListboxId\n    };\n    this.dropdownList?.listBox?.setAttribute(\"id\", targetListboxId);\n    this.dropdownList?.listBox?.setAttribute(\"aria-label\", `Listbox`);\n    Object.keys(attrs).forEach((key) => this.setAttribute(key, attrs[key]));\n    return this;\n  }\n  get input() {\n    return this.container?.querySelector(\"ids-trigger-field\");\n  }\n  get popup() {\n    return this.dropdownList?.popup;\n  }\n  /**\n   * Set the value of the dropdown using the value/id attribute if present\n   * @param {string} value The value/id to use\n   */\n  set value(value) {\n    let selector = `ids-list-box-option[value=\"${value}\"]`;\n    if (value === \" \" || !value)\n      selector = `ids-list-box-option:not([value])`;\n    const elem = this.dropdownList?.listBox?.querySelector(selector);\n    if (!elem)\n      return;\n    this.clearSelected();\n    this.selectOption(elem);\n    this.selectIcon(elem);\n    this.selectTooltip(elem);\n    if (this.input)\n      this.input.value = elem.textContent?.trim();\n    this.state.selectedIndex = [...elem?.parentElement?.children || []].indexOf(elem);\n    if (this.value === value) {\n      this.triggerEvent(\"change\", this, {\n        bubbles: true,\n        detail: {\n          elem: this,\n          value: this.value\n        }\n      });\n    }\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, String(value));\n  }\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n  }\n  /**\n   * Returns the selected Listbox option based on the Dropdown's value.\n   * @returns {HTMLElement| null} the selected option\n   */\n  get selectedOption() {\n    return this.dropdownList?.listBox?.querySelector(`ids-list-box-option[value=\"${this.value}\"]`) || null;\n  }\n  /**\n   * Returns the currently-selected Listbox option\n   * (may be different from the Dropdown's value because of user input)\n   * @readonly\n   * @returns {HTMLElement|null} Reference to a selected Listbox option if one is present\n   */\n  get selected() {\n    return this.dropdownList?.selected || null;\n  }\n  /**\n   * Set the selected option by index\n   * @param {number} value the index to use\n   */\n  set selectedIndex(value) {\n    if (Number.isInteger(value) && this.options[value]) {\n      const elem = this.options[value];\n      this.value = elem.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n      this.state.selectedIndex = value;\n    }\n  }\n  get selectedIndex() {\n    return this.state.selectedIndex;\n  }\n  /**\n   * Returns the currently available options\n   * @returns {Array<IdsListBoxOption>} the array of options\n   */\n  get options() {\n    if (!this.dropdownList || !this.dropdownList.listBox)\n      return [];\n    return [...this.dropdownList.listBox.querySelectorAll(\"ids-list-box-option\")];\n  }\n  /**\n   * Sets the readonly attribute\n   * @param {string|boolean} value string value from the readonly attribute\n   */\n  set readonly(value) {\n    const isReadonly = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isReadonly) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      if (this.input) {\n        this.input.disabled = false;\n        this.input.cursor = \"initial\";\n        this.input.readonlyBackground = false;\n      }\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, \"true\");\n      return;\n    }\n    if (this.input) {\n      this.input.disabled = false;\n      this.input.cursor = \"pointer\";\n      this.input.readonlyBackground = true;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n  }\n  get readonly() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY)) || false;\n  }\n  /**\n   * Sets the disabled attribute\n   * @param {string|boolean} value string value from the disabled attribute\n   */\n  set disabled(value) {\n    const isDisabled = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (isDisabled) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      if (this.input) {\n        this.input.disabled = true;\n        this.input.readonly = false;\n        this.input.cursor = \"initial\";\n        this.input.bgTransparent = false;\n      }\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"true\");\n      return;\n    }\n    if (this.input) {\n      this.input.disabled = false;\n      this.input.cursor = \"pointer\";\n      this.input.bgTransparent = true;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n  }\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED)) || false;\n  }\n  onAllowBlankChange(val) {\n    if (this.dropdownList)\n      this.dropdownList.allowBlank = val;\n    if (!val && this.value === \"blank\")\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n  }\n  /**\n   * Set the aria and state on the element\n   * @param {HTMLElement} option the option to select\n   * @private\n   */\n  selectOption(option) {\n    if (this.dropdownList) {\n      this.dropdownList.selectOption(option);\n    }\n  }\n  /**\n   * Removes selected attributes from an option\n   * @param {HTMLElement} option element to remove attributes\n   */\n  deselectOption(option) {\n    this.dropdownList?.deselectOption(option);\n  }\n  /**\n   * Set the icon to be visible (if used)\n   * @private\n   * @param {HTMLElement} option the option to select\n   */\n  selectIcon(option) {\n    let dropdownIcon = this.input?.querySelector('ids-icon[slot=\"trigger-start\"]');\n    if (!dropdownIcon && !option)\n      return;\n    if (!this.hasIcons) {\n      if (dropdownIcon) {\n        dropdownIcon.remove();\n      }\n      return;\n    }\n    const icon = option?.querySelector(\"ids-icon\");\n    if (!dropdownIcon) {\n      const dropdownIconContainer = document.createElement(\"span\");\n      dropdownIconContainer.slot = \"trigger-start\";\n      dropdownIconContainer.classList.add(\"icon-container\");\n      dropdownIcon = document.createElement(\"ids-icon\");\n      dropdownIcon.icon = icon?.icon;\n      dropdownIcon.setAttribute(\"slot\", \"trigger-start\");\n      dropdownIconContainer.append(dropdownIcon);\n      this.input?.appendChild(dropdownIconContainer);\n    } else {\n      dropdownIcon.icon = icon?.icon;\n    }\n  }\n  /**\n   * Set the tooltip to be visible for the selected option\n   * @private\n   * @param {HTMLElement} option the option to select\n   */\n  selectTooltip(option) {\n    const tooltip = option?.getAttribute(\"tooltip\");\n    if (tooltip) {\n      this.tooltip = tooltip;\n    }\n  }\n  /**\n   * Remove the aria and state from the currently selected element\n   */\n  clearSelected() {\n    this.dropdownList?.clearSelected();\n  }\n  /**\n   * Configures the Dropdown component's attached IdsDropdownList/IdsPopup\n   */\n  configurePopup() {\n    if (this.dropdownList?.popup && this.trigger) {\n      this.dropdownList.removeTriggerEvents();\n      this.dropdownList.appendToTargetParent();\n      this.dropdownList.popupOpenEventsTarget = this.list ? this : this.container;\n      this.dropdownList.onOutsideClick = (e) => {\n        if (this.dropdownList) {\n          if (!e.composedPath()?.includes(this.dropdownList)) {\n            this.close(true);\n          }\n        }\n      };\n      this.dropdownList.onTriggerClick = () => {\n        if (this.labelClicked) {\n          this.labelClicked = false;\n          return;\n        }\n        if (!this.disabled && !this.readonly) {\n          this.toggle(this.typeahead);\n        }\n      };\n      const targetElemId = (this.list ? this : this.input?.input)?.getAttribute(\"id\");\n      const triggerElemId = (this.list ? this : this.trigger)?.getAttribute(\"id\");\n      this.dropdownList.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TARGET, `#${targetElemId}`);\n      this.dropdownList.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_ELEM, `#${triggerElemId}`);\n      this.dropdownList.popup.alignTarget = this.input?.fieldContainer || null;\n      this.dropdownList.popupOpenEventsTarget = document.body;\n      const isRTL = this.localeAPI.isRTL();\n      if (this.locale && isRTL) {\n        this.dropdownList.popup?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ALIGN, `bottom, ${isRTL || [\"lg\", \"full\"].includes(this.size) ? \"right\" : \"left\"}`);\n      }\n      if (this.input)\n        this.dropdownList.value = this.input.value;\n      if (this.#isMultiSelect)\n        this.dropdownList.isMultiSelect = true;\n    }\n  }\n  /**\n   * Open the dropdown list\n   * @param {boolean} shouldSelect whether or not the input text should be selected\n   */\n  async open(shouldSelect = false) {\n    if (!this.dropdownList || this.disabled || this.readonly) {\n      return;\n    }\n    if (typeof this.state.beforeShow === \"function\") {\n      const stuff = await this.state.beforeShow();\n      this.loadDataSet(stuff);\n      if (this.typeahead) {\n        this.#optionsData = stuff;\n      }\n    }\n    if (this.value) {\n      this.dropdownList.value = this.value;\n    }\n    this.dropdownList?.show();\n    if (this.input)\n      this.input.active = true;\n    if (this.typeahead) {\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      this.input?.focus();\n    }\n    if (shouldSelect) {\n      this.input?.input?.select();\n    }\n    this.container?.classList.add(\"is-open\");\n    this.attachOpenEvents();\n  }\n  /**\n   * Populate the DOM with the dataset\n   * @param {IdsDropdownOptions} dataset The dataset to use with value, label ect...\n   * @private\n   */\n  loadDataSet(dataset) {\n    let html = \"\";\n    const listbox = this.querySelector(\"ids-list-box\");\n    if (listbox)\n      listbox.innerHTML = \"\";\n    dataset.forEach((option) => {\n      html += this.#templatelistBoxOption(this.#sanitizeOption(option));\n    });\n    listbox?.insertAdjacentHTML(\"afterbegin\", html);\n    this.dropdownList?.configureBlank();\n    const currentValue = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n    if (this.value !== currentValue) {\n      this.value = currentValue;\n    }\n  }\n  /**\n   * An async function that fires as the dropdown is opening allowing you to set contents.\n   * @param {Function} func The async function\n   */\n  set beforeShow(func) {\n    this.state.beforeShow = func;\n  }\n  get beforeShow() {\n    return this.state.beforeShow;\n  }\n  /**\n   * Close the dropdown popup\n   * @param {boolean} noFocus if true do not focus on close\n   */\n  close(noFocus) {\n    this.removeOpenEvents();\n    if (this.dropdownList) {\n      if (this.dropdownList?.popup?.visible)\n        this.dropdownList.hide(!noFocus);\n      if (this.input)\n        this.input.active = false;\n    }\n    if (!noFocus) {\n      this.input?.focus();\n    }\n    if (this.typeahead) {\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, \"true\");\n      const initialValue = this.selectedOption?.textContent?.trim();\n      if (this.input)\n        this.input.value = initialValue || \"\";\n      this.loadDataSet(this.#optionsData);\n      window.getSelection().removeAllRanges();\n      this.#triggerIconChange(\"dropdown\");\n    }\n    this.container?.classList.remove(\"is-open\");\n  }\n  /**\n   * Toggle the dropdown list open/closed state\n   * @param {boolean} shouldSelect whether or not the input text should be selected\n   * @private\n   */\n  toggle(shouldSelect = false) {\n    if (!this.dropdownList)\n      return;\n    if (!this.dropdownList.popup?.visible) {\n      this.open(shouldSelect);\n    } else {\n      this.close();\n    }\n  }\n  /**\n   * Establish Internal Event Handlers\n   * @private\n   * @returns {object} The object for chaining.\n   */\n  #attachEventHandlers() {\n    this.attachClickEvent();\n    this.offEvent(\"click.dropdown-label\");\n    this.onEvent(\"click.dropdown-label\", this.labelEl, (e) => {\n      e.preventDefault();\n      this.labelClicked = true;\n      this.input?.focus();\n    });\n    this.offEvent(\"hide.dropdown-list\");\n    this.onEvent(\"hide.dropdown-list\", this.container, () => {\n      if (this.dropdownList?.popup?.visible)\n        this.close();\n    });\n    this.offEvent(\"focus.dropdown-input\");\n    this.onEvent(\"focus.dropdown-input\", this.input, () => {\n      window.getSelection().removeAllRanges();\n    });\n    this.offEvent(\"languagechange.dropdown-container\");\n    this.onEvent(\"languagechange.dropdown-container\", this.closest(\"ids-container\"), () => {\n      this.#addAria();\n    });\n    this.attachKeyboardOpenEvent();\n    return this;\n  }\n  /**\n   * Attach a keyboard event for Enter/Spacebar that opens the dropdown.\n   * This needs to happen separately from the other event handlers because this\n   * one is rebound every time the list is closed.\n   */\n  attachKeyboardOpenEvent() {\n    this.listen([\" \", \"Enter\"], this, (e) => {\n      if (this.closedByKeyboard) {\n        this.closedByKeyboard = false;\n        return;\n      }\n      this.openedByKeyboard = true;\n      if (this.dropdownList?.popup?.visible)\n        return;\n      if (e.key === \" \" && this.typeahead)\n        return;\n      this.open(this.typeahead);\n    });\n  }\n  /** Handle the Locale Change */\n  onLanguageChange = () => {\n    this.#addAria();\n  };\n  /**\n   * Connects event handlers related to activation of the Dropdown List\n   */\n  attachClickEvent() {\n    this.offEvent(\"click.dropdown-input\");\n    if (!this.list) {\n      this.onEvent(\"click.dropdown-input\", this.input, (e) => {\n        if (!this.dropdownList?.visible) {\n          this.dropdownList?.onTriggerClick?.(e);\n        }\n      });\n    }\n    this.offEvent(\"open.dropdown-list\");\n    this.offEvent(\"close.dropdown-list\");\n    if (this.dropdownList) {\n      this.onEvent(\"open.dropdown-list\", this.dropdownList, (e) => {\n        e.stopPropagation();\n        this.open();\n      });\n      this.onEvent(\"close.dropdown-list\", this.dropdownList, (e) => {\n        e.stopPropagation();\n        this.close(e.detail.operation === \"cancel\");\n      });\n    }\n    this.offEvent(\"selected.dropdown-list\");\n    if (this.input?.fieldContainer) {\n      this.onEvent(\"selected.dropdown-list\", this.input.fieldContainer, (e) => {\n        e.stopPropagation();\n        this.value = e.detail.value;\n        if (this.dropdownList?.popup?.visible)\n          this.close();\n      });\n    }\n    this.offEvent(\"change.list\");\n    this.onEvent(\"change.list\", this, () => {\n      if (this.dropdownList?.popup?.visible) {\n        this.close();\n      }\n    });\n  }\n  /**\n   * Connects interaction events that should only be present when the\n   * dropdown list is open\n   */\n  attachOpenEvents() {\n    this.unlisten(\" \");\n    this.unlisten(\"Enter\");\n    this.attachKeyboardSelectionEvent();\n    this.listen([\"Tab\"], this, (e) => {\n      if (!this.dropdownList?.popup?.visible || this.#isMultiSelect) {\n        return;\n      }\n      if (e.shiftKey) {\n        this.input?.focus();\n      }\n      const selected = this.selected;\n      this.value = selected?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n      this.close(true);\n    });\n  }\n  /**\n   * Establish selection event for keyboard interactions.\n   * Overrides a similiar method from IdsDropdown for Multiselect-specific behavior.\n   */\n  attachKeyboardSelectionEvent() {\n    if (!this.#isMultiSelect) {\n      this.listen([\" \", \"Enter\"], this, () => {\n        if (!this.dropdownList?.popup?.visible)\n          return;\n        if (this.openedByKeyboard) {\n          this.openedByKeyboard = false;\n          return;\n        }\n        const value = this.selected?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n        this.value = value;\n        this.closedByKeyboard = true;\n        this.close();\n      });\n    }\n  }\n  removeOpenEvents() {\n    this.unlisten(\" \");\n    this.unlisten(\"Enter\");\n    this.unlisten(\"Tab\");\n    this.openedByKeyboard = false;\n    this.attachKeyboardOpenEvent();\n  }\n  /**\n   * Establish Internal Keyboard shortcuts\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #attachKeyboardListeners() {\n    this.offEvent(\"keydownend.dropdown-typeahead\");\n    this.onEvent(\"keydownend.dropdown-typeahead\", this, (e) => {\n      if (this.typeahead) {\n        this.#typeAhead(e.detail.keys);\n      } else {\n        this.#selectMatch(e.detail.keys);\n      }\n    });\n    this.listen([\"ArrowDown\", \"ArrowUp\"], this, (e) => {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      if (!this.dropdownList?.popup?.visible) {\n        this.open(this.typeahead);\n        return;\n      }\n      const selected = this.selected;\n      const next = selected?.nextElementSibling;\n      const prev = selected?.previousElementSibling;\n      if (e.key === \"ArrowUp\" && e.altKey) {\n        if (!this.#isMultiSelect) {\n          this.value = selected?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) || \"\";\n        }\n        this.close();\n        return;\n      }\n      if (e.key === \"ArrowDown\" && next) {\n        if (next.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) && !next.nextElementSibling)\n          return;\n        this.deselectOption(selected);\n        this.selectOption(next.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) ? next.nextElementSibling : next);\n      }\n      if (e.key === \"ArrowDown\" && !selected) {\n        this.#selectFirstOption();\n      }\n      if (e.key === \"ArrowUp\" && prev) {\n        if (prev.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) && !prev.previousElementSibling)\n          return;\n        this.deselectOption(selected);\n        this.selectOption(prev.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL) ? prev.previousElementSibling : prev);\n      }\n    });\n    this.listen([\"Escape\"], this, () => {\n      this.close();\n    });\n    this.listen([\"Backspace\", \"Delete\"], this, () => {\n      if (!this.clearable || this.clearable && this.typeahead && this.dropdownList?.popup?.visible)\n        return;\n      if (this.allowBlank) {\n        this.value = \"blank\";\n      } else {\n        this.value = this.#isMultiSelect ? [] : \"\";\n        if (this.input)\n          this.input.value = \"\";\n        this.selectIcon(null);\n        this.selectTooltip(null);\n      }\n      this.input?.focus();\n    });\n    return this;\n  }\n  /**\n   * Handle typeahead functionality\n   * @param {string} text keydownend event detail keys\n   * @returns {void}\n   */\n  #typeAhead(text) {\n    const excludeKeys = [\"Backspace\", \"Delete\"];\n    if (!this.dropdownList?.popup?.visible) {\n      if (!excludeKeys.some((item) => text?.includes(item))) {\n        if (this.input)\n          this.input.value = text;\n        this.open(false);\n      } else {\n        return;\n      }\n    }\n    const inputValue = this.input?.value ?? \"\";\n    const resultsArr = this.#findMatches(inputValue);\n    const results = resultsArr.map((item) => {\n      const regex = new RegExp(inputValue, \"gi\");\n      const optionText = item.groupLabel ? item.label : item.label?.replace(\n        regex,\n        `<span class=\"highlight\">${inputValue?.toLowerCase()}</span>`\n      );\n      return this.#templatelistBoxOption({\n        ...item,\n        label: optionText\n      });\n    }).join(\"\");\n    if (this.dropdownList) {\n      if (this.dropdownList.listBox) {\n        if (results) {\n          this.dropdownList.listBox.innerHTML = results;\n          this.#selectFirstOption();\n        } else {\n          this.dropdownList.listBox.innerHTML = `<ids-list-box-option>${this.localeAPI.translate(\"NoResults\")}</ids-list-box-option>`;\n        }\n      }\n      this.dropdownList.popup?.place();\n    }\n    this.#triggerIconChange(\"search\");\n    this.input?.querySelector(\".icon-container\")?.remove();\n  }\n  /**\n   * Find and select the only option by input text provided\n   * @param {string} input the text to find by\n   */\n  #selectMatch(input) {\n    const term = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.escapeRegExp)(input)?.trim();\n    if (!term)\n      return;\n    const option = this.options.filter((item) => !item.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL)).find((item) => {\n      const regex = new RegExp(`^(${term})`, \"i\");\n      const label = this.#isMultiSelect ? item.querySelector(\"ids-checkbox\")?.label : item.textContent?.trim();\n      return label?.match(regex);\n    });\n    if (this.dropdownList?.popup?.visible && option) {\n      this.deselectOption(this.selected);\n      this.selectOption(option);\n      return;\n    }\n    const value = option?.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n    if (value) {\n      if (this.#isMultiSelect) {\n        const filtered = this.value.filter((item) => item !== value);\n        this.value = [...filtered, value];\n      } else {\n        this.value = value;\n      }\n    }\n  }\n  /**\n   * Helper to replace trigger button icon\n   * @param {string} icon ids-icon icon value\n   */\n  #triggerIconChange(icon) {\n    const triggerIcon = this.container?.querySelector(\"ids-trigger-button\")?.querySelector(\"ids-icon\");\n    if (triggerIcon?.icon && triggerIcon.icon !== icon) {\n      triggerIcon.icon = icon;\n    }\n  }\n  /**\n   * Select first no blank with value option\n   */\n  #selectFirstOption() {\n    this.clearSelected();\n    if (this.options.length > 0) {\n      const firstWithValue = [...this.options].filter((item) => {\n        const value = item.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n        const groupLabel = item.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL);\n        return value && value !== \"blank\" && !groupLabel;\n      })[0];\n      this.selectOption(firstWithValue);\n    }\n  }\n  /**\n   * Create the list box option template.\n   * @param {IdsDropdownOption} option data object\n   * @returns {string} ids-list-box-option template\n   */\n  #templatelistBoxOption(option) {\n    return `<ids-list-box-option\n      ${option.id ? `id=${option.id}` : \"\"}\n      ${option.value ? `value=\"${option.value}\"` : 'value=\"\"'}\n      ${option.groupLabel ? \"group-label\" : \"\"}>${option.icon ? `<ids-icon icon=\"${option.icon}\"></ids-icon>` : \"\"}${option.label || \"\"}</ids-list-box-option>`;\n  }\n  /**\n   * Helper to get group index for given option index in the options list\n   * @param {Array<number>} groupLabels group label indexes in the options list\n   * @param {number} optionIndex option index in the options list\n   * @returns {number} group label index for given option\n   */\n  #getGroupIndex(groupLabels, optionIndex) {\n    return groupLabels.reduce((initialIndex, groupIndex, index) => {\n      if (groupIndex < optionIndex && (groupLabels[index + 1] > optionIndex || !groupLabels[index + 1])) {\n        return groupIndex;\n      }\n      return initialIndex;\n    }, -1);\n  }\n  /**\n   * Helper to get group option for given option index in the options list\n   * @param {number} optionIndex option index in the options list\n   * @returns {IdsDropdownOption | undefined} group label for given option index\n   */\n  #getGroupLabelOption(optionIndex) {\n    const groupLabels = this.#optionsData.reduce(\n      (result, option, index) => {\n        if (option?.groupLabel) {\n          return [...result, index];\n        }\n        return result;\n      },\n      []\n    );\n    const groupLabelIndex = this.#getGroupIndex(groupLabels, optionIndex);\n    return this.#optionsData[groupLabelIndex];\n  }\n  /**\n   * Find matches between the input value and the dataset\n   * @param {string} inputValue value of the input field\n   * @returns {IdsDropdownOptions} containing matched values\n   */\n  #findMatches(inputValue) {\n    return this.#optionsData.reduce((options, option, index) => {\n      const regex = new RegExp(`(${(0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.escapeRegExp)(inputValue)})`, \"gi\");\n      if (option.label?.match(regex) && !option.groupLabel) {\n        const groupLabelOption = this.#getGroupLabelOption(index);\n        const groupLabelAdded = options.some(\n          (item) => item.label === groupLabelOption?.label\n        );\n        if (groupLabelOption && !groupLabelAdded) {\n          return [...options, groupLabelOption, option];\n        }\n        return [...options, option];\n      }\n      return options;\n    }, []);\n  }\n  /**\n   * Map slotted ids-list-box-option elements to the dataset\n   */\n  #setOptionsData() {\n    this.#optionsData = [...this.options].map((item) => ({\n      id: item.id,\n      label: item.textContent?.trim() ?? \"\",\n      value: item.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE),\n      icon: item.querySelector(\"ids-icon\")?.icon,\n      groupLabel: item.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GROUP_LABEL)\n    }));\n  }\n  #sanitizeOption(option) {\n    return {\n      ...option,\n      id: this.xssSanitize(option?.id ?? \"\"),\n      value: this.xssSanitize(option.value),\n      label: this.xssSanitize(option.label)\n    };\n  }\n  /**\n   * Pass down `validate` attribute into IdsTriggerField\n   * @param {string} value The `validate` attribute\n   */\n  set validate(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE, value.toString());\n      if (this.input)\n        this.input.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n      if (this.input)\n        this.input.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n    }\n  }\n  get validate() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n  }\n  /**\n   * Pass down `validation-events` attribute into IdsTriggerField\n   * @param {string} value The `validation-events` attribute\n   */\n  set validationEvents(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, value.toString());\n      if (this.input)\n        this.input.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n      if (this.input)\n        this.input.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n    }\n  }\n  get validationEvents() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS) || \"change\";\n  }\n  /**\n   * Configures the connected Dropdown list component\n   */\n  configureDropdownList() {\n    let targetNode = this.container?.querySelector(\"ids-dropdown-list\");\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST)) {\n      if (this.dropdownList && this.container?.contains(this.dropdownList)) {\n        this.dropdownList.remove();\n        this.dropdownList = null;\n      }\n      const containerNode = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_25__.getClosestContainerNode)(this);\n      targetNode = containerNode.querySelector(`${this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST)}`);\n      if (!targetNode) {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST);\n        this.container?.insertAdjacentHTML(\"beforeend\", this.templateDropdownList());\n        targetNode = this.container?.querySelector(\"ids-dropdown-list\");\n      }\n    }\n    this.dropdownList = targetNode;\n    this.configurePopup();\n    this.attachClickEvent();\n  }\n  /**\n   * Defines the existence of an external IdsDropdownList component, and connects this IdsDropdown\n   * to the component via events.\n   * @param {string | null} val ID attribute name\n   */\n  set list(val) {\n    if (val && typeof val === \"string\") {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST, val);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST);\n    }\n    this.configureDropdownList();\n  }\n  get list() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LIST);\n  }\n  /**\n   * Sets the no margins attribute\n   * @param {boolean} value The value for no margins attribute\n   */\n  set noMargins(value) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, \"\");\n      if (this.input)\n        this.input.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, \"\");\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n    if (this.input)\n      this.input.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n  }\n  get noMargins() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS));\n  }\n  onSizeChange(value) {\n    if (value)\n      this.dropdownList?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, value);\n    else\n      this.dropdownList?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n    this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, value);\n  }\n  /**\n   * Set typeahead attribute\n   * @param {string | boolean | null} value typeahead value\n   */\n  set typeahead(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD, String(val));\n      this.#setOptionsData();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD);\n    }\n    this.container?.classList.toggle(\"typeahead\", val);\n  }\n  /**\n   * Get the typeahead attribute\n   * @returns {boolean} typeahead attribute value converted to boolean\n   */\n  get typeahead() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TYPEAHEAD));\n  }\n  onClearableTextChange(val) {\n    if (this.dropdownList)\n      this.dropdownList.clearableText = val;\n  }\n  /**\n   * Sets the placeholder attribute\n   * @param {string} value - the placeholder's text\n   */\n  set placeholder(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, value);\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n    }\n  }\n  /**\n   * Get the placeholder attribute\n   * @returns {string} default is \"\"\n   */\n  get placeholder() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER) ?? \"\";\n  }\n  /**\n   * Pass focus internally\n   */\n  focus() {\n    this.input?.focus();\n  }\n  /**\n   * Set whether or not to show loading indicator. Disabled by default\n   * @param {boolean|string|null} value show-loading-indicator attribute value\n   */\n  set showLoadingIndicator(value) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_LOADING_INDICATOR, boolVal.toString());\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_LOADING_INDICATOR, boolVal.toString());\n      this.close(true);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_LOADING_INDICATOR);\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_LOADING_INDICATOR);\n    }\n  }\n  /**\n   * show-loading-indicator attribute\n   * @returns {boolean} showLoadingIndicator param converted to boolean from attribute value. Defaults to false\n   */\n  get showLoadingIndicator() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_LOADING_INDICATOR));\n  }\n};\nIdsDropdown = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-dropdown\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_dropdown_scss__WEBPACK_IMPORTED_MODULE_24__[\"default\"])\n], IdsDropdown);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown.ts\n");

/***/ }),

/***/ "./src/components/ids-picker-popup/ids-picker-popup.ts":
/*!*************************************************************!*\
  !*** ./src/components/ids-picker-popup/ids-picker-popup.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_picker_popup_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _mixins_ids_attachment_mixin_ids_attachment_mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../mixins/ids-attachment-mixin/ids-attachment-mixin */ \"./src/mixins/ids-attachment-mixin/ids-attachment-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_focus_capture_mixin_ids_focus_capture_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-focus-capture-mixin/ids-focus-capture-mixin */ \"./src/mixins/ids-focus-capture-mixin/ids-focus-capture-mixin.ts\");\n/* harmony import */ var _mixins_ids_popup_open_events_mixin_ids_popup_open_events_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-popup-open-events-mixin/ids-popup-open-events-mixin */ \"./src/mixins/ids-popup-open-events-mixin/ids-popup-open-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_popup_interactions_mixin_ids_popup_interactions_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-popup-interactions-mixin/ids-popup-interactions-mixin */ \"./src/mixins/ids-popup-interactions-mixin/ids-popup-interactions-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_focus_capture_mixin_ids_focus_capture_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_popup_open_events_mixin_ids_popup_open_events_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    (0,_mixins_ids_popup_interactions_mixin_ids_popup_interactions_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n      (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n        (0,_mixins_ids_attachment_mixin_ids_attachment_mixin__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n          _core_ids_element__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n        )\n      )\n    )\n  )\n);\nlet IdsPickerPopup = class extends Base {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n  }\n  static get attributes() {\n    return [...super.attributes];\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    return `<ids-popup class=\"ids-picker-popup\" type=\"menu\" align=\"bottom, left\" arrow=\"bottom\" tabIndex=\"-1\" y=\"12\" animated>\n      <slot slot=\"content\"></slot>\n    </ids-popup>`;\n  }\n  /**\n   * @returns {Array<string>} Date Picker vetoable events\n   */\n  vetoableEventTypes = [\"beforeshow\"];\n  /**\n   * @readonly\n   * @returns {boolean} true if the inner IdsPopup is visible\n   */\n  get visible() {\n    return this.popup?.visible || false;\n  }\n  /**\n   * Hides this menu and any of its submenus.\n   * @param {boolean} [doFocus] if true, instructs the listening component that focus should change to a different element\n   * @returns {void}\n   */\n  async hide(doFocus) {\n    if (!this.popup?.visible)\n      return;\n    this.removeOpenEvents();\n    this.popup.visible = false;\n    await this.popup.hide();\n    if (typeof this.onHide === \"function\")\n      this.onHide();\n    this.triggerEvent(\"hide\", this, {\n      bubbles: true,\n      detail: {\n        doFocus,\n        elem: this\n      }\n    });\n    this.hidden = true;\n  }\n  /**\n   * @returns {void}\n   */\n  show() {\n    if (!this.popup || this.popup.visible)\n      return;\n    if (!this.triggerVetoableEvent(\"beforeshow\")) {\n      return;\n    }\n    this.hidden = false;\n    this.popup.visible = true;\n    this.popup.show();\n    if (typeof this.onShow === \"function\")\n      this.onShow();\n    this.triggerEvent(\"show\", this, {\n      bubbles: true,\n      detail: {\n        elem: this\n      }\n    });\n    this.addOpenEvents();\n  }\n  /**\n   * Toggles visibility of the popup on/off depending on its current state\n   * @returns {void}\n   */\n  toggleVisibility() {\n    if (!this.popup)\n      return;\n    if (!this.popup.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  onOutsideClick(e) {\n    const target = e.target;\n    if (!this.contains(target)) {\n      this.hide();\n    }\n  }\n  /**\n   * Inherited from `IdsPopupInteractionsMixin`\n   * @param {Event} _ the original click event\n   */\n  // eslint-disable-next-line\n  onTriggerClick(_) {\n    this.toggleVisibility();\n  }\n  /**\n   * Inherited from the Popup Interactions Mixin.\n   * Runs as soon as the Popup is connected to the DOM.\n   * @returns {void}\n   */\n  onTriggerImmediate() {\n    this.show();\n  }\n};\nIdsPickerPopup = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-picker-popup\")\n], IdsPickerPopup);\nvar ids_picker_popup_default = IdsPickerPopup;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-picker-popup/ids-picker-popup.ts\n");

/***/ }),

/***/ "./src/components/ids-dropdown/ids-dropdown-list.scss":
/*!************************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown-list.scss ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Dropdown Component */ /**\n * Css for validation mixin\n */\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.validation-message {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  margin-top: 4px;\n  display: flex;\n}\n.validation-message.has-custom-icon {\n  color: var(--ids-color-palette-slate-80);\n}\n.validation-message.disabled {\n  color: var(--ids-color-palette-slate-30);\n}\n.validation-message .ids-icon {\n  margin-inline-end: 4px;\n}\n.validation-message.alert {\n  color: var(--ids-color-palette-amber-80);\n}\n.validation-message.alert.disabled {\n  color: var(--ids-color-palette-amber-30);\n}\n.validation-message.error {\n  color: var(--ids-color-palette-ruby-60);\n}\n.validation-message.error.disabled {\n  color: var(--ids-color-palette-ruby-30);\n}\n.validation-message.info {\n  color: var(--ids-color-palette-azure-70);\n}\n.validation-message.info.disabled {\n  color: var(--ids-color-palette-azure-30);\n}\n.validation-message.success {\n  color: var(--ids-color-palette-emerald-80);\n}\n.validation-message.success.disabled {\n  color: var(--ids-color-palette-emerald-30);\n}\n\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host ids-popup {\n  max-width: 300px;\n}\n\n:host([size=xs]) ids-popup {\n  max-width: 75px;\n}\n\n:host([size=sm]) ids-popup {\n  max-width: 150px;\n}\n\n:host([size=mm]) ids-popup {\n  max-width: 225px;\n}\n\n:host([size=md]) ids-popup {\n  max-width: 300px;\n}\n\n:host([size=lg]) ids-popup {\n  max-width: 400px;\n}\n\n:host([size=full]) ids-popup {\n  max-width: 100%;\n}\n\n:host ids-popup,\n:host([size=full]) {\n  width: 100%;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown-list.scss\n");

/***/ }),

/***/ "./src/components/ids-dropdown/ids-dropdown.scss":
/*!*******************************************************!*\
  !*** ./src/components/ids-dropdown/ids-dropdown.scss ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Dropdown Component */ /**\n * Css for validation mixin\n */\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.validation-message {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  margin-top: 4px;\n  display: flex;\n}\n.validation-message.has-custom-icon {\n  color: var(--ids-color-palette-slate-80);\n}\n.validation-message.disabled {\n  color: var(--ids-color-palette-slate-30);\n}\n.validation-message .ids-icon {\n  margin-inline-end: 4px;\n}\n.validation-message.alert {\n  color: var(--ids-color-palette-amber-80);\n}\n.validation-message.alert.disabled {\n  color: var(--ids-color-palette-amber-30);\n}\n.validation-message.error {\n  color: var(--ids-color-palette-ruby-60);\n}\n.validation-message.error.disabled {\n  color: var(--ids-color-palette-ruby-30);\n}\n.validation-message.info {\n  color: var(--ids-color-palette-azure-70);\n}\n.validation-message.info.disabled {\n  color: var(--ids-color-palette-azure-30);\n}\n.validation-message.success {\n  color: var(--ids-color-palette-emerald-80);\n}\n.validation-message.success.disabled {\n  color: var(--ids-color-palette-emerald-30);\n}\n\n/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: block;\n}\n:host .ids-dropdown {\n  display: inline-block;\n  max-width: 100%;\n}\n\n.ids-dropdown {\n  display: block;\n  position: relative;\n}\n.ids-dropdown ids-trigger-field[size=full] {\n  display: block;\n}\n.ids-dropdown.full {\n  display: block;\n}\n.ids-dropdown.full ids-trigger-field,\n.ids-dropdown.full .ids-trigger-field {\n  display: block;\n}\n\n.icon-container {\n  color: var(--ids-color-palette-slate-100);\n  margin: 0 0 0 8px;\n  position: relative;\n  top: 2px;\n}\n\n:host([mode=light]) .typeahead.is-open ids-trigger-field::part(field-container) {\n  background-color: var(--ids-color-palette-slate-10);\n}\n\n:host([mode=dark]) .icon-container {\n  color: var(--ids-color-palette-slate-10);\n}\n:host([mode=dark]) .typeahead.is-open ids-trigger-field::part(field-container) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n\n:host([dir=rtl]) .icon-container {\n  margin: 0 8px 0 0;\n}\n\n::slotted(.sub-group) {\n  border-top: 1px solid #b7b7ba;\n  padding-top: 4px;\n}\n\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(field-container),\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(field-container) {\n  margin: 0;\n  border-radius: 0;\n}\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(label),\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(label) {\n  display: none;\n}\n\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(container) {\n  margin: 0;\n}\n.ids-dropdown.color-variant-borderless ids-trigger-field::part(field-container) {\n  box-shadow: none !important;\n}\n.ids-dropdown.color-variant-borderless ids-popup[mode=contrast]::part(popup) {\n  box-shadow: 0 0 0 1px var(--ids-color-palette-azure-80);\n  outline: 1px solid var(--ids-color-palette-azure-80);\n}\n.ids-dropdown.color-variant-borderless.field-height-lg ids-trigger-field::part(input) {\n  padding-inline: 16px;\n  height: 50px;\n}\n.ids-dropdown.color-variant-borderless.field-height-md ids-trigger-field::part(input) {\n  padding-inline: 12px;\n  height: 40px;\n}\n.ids-dropdown.color-variant-borderless.field-height-sm ids-trigger-field::part(input) {\n  padding-inline: 8px;\n  height: 35px;\n}\n.ids-dropdown.color-variant-borderless.field-height-xs ids-trigger-field::part(input) {\n  padding-inline: 4px;\n  height: 30px;\n}\n\n.ids-dropdown.color-variant-in-cell ids-trigger-field::part(container) {\n  margin: 1px 0;\n}\n\n:host ids-dropdown-list {\n  max-width: 300px;\n}\n\n:host([size=xs]) ids-dropdown-list {\n  max-width: 75px;\n}\n\n:host([size=sm]) ids-dropdown-list {\n  max-width: 150px;\n}\n\n:host([size=mm]) ids-dropdown-list {\n  max-width: 225px;\n}\n\n:host([size=md]) ids-dropdown-list {\n  max-width: 300px;\n}\n\n:host([size=lg]) ids-dropdown-list {\n  max-width: 400px;\n}\n\n:host([size=full]) ids-dropdown-list {\n  max-width: 100%;\n}\n\n:host ids-dropdown-list,\n:host([size=full]) {\n  width: 100%;\n}\n\n:host([list]:not([disabled])) {\n  cursor: pointer;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-dropdown/ids-dropdown.scss\n");

/***/ })

}]);