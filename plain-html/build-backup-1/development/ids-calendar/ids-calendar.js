/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/components/ids-calendar/demos/index.ts":
/*!****************************************************!*\
  !*** ./src/components/ids-calendar/demos/index.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ids_calendar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ids-calendar */ \"./src/components/ids-calendar/ids-calendar.ts\");\n/* harmony import */ var _ids_accordion_ids_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ids-accordion/ids-accordion */ \"./src/components/ids-accordion/ids-accordion.ts\");\n/* harmony import */ var _ids_week_view_ids_week_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ids-week-view/ids-week-view */ \"./src/components/ids-week-view/ids-week-view.ts\");\n/* harmony import */ var _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../ids-month-view/ids-month-view */ \"./src/components/ids-month-view/ids-month-view.ts\");\n/* harmony import */ var _ids_checkbox_ids_checkbox__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../ids-checkbox/ids-checkbox */ \"./src/components/ids-checkbox/ids-checkbox.ts\");\n/* harmony import */ var _ids_data_label_ids_data_label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ids-data-label/ids-data-label */ \"./src/components/ids-data-label/ids-data-label.ts\");\n/* harmony import */ var _ids_popup_ids_popup__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ids-popup/ids-popup */ \"./src/components/ids-popup/ids-popup.ts\");\n/* harmony import */ var _ids_input_ids_input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../ids-input/ids-input */ \"./src/components/ids-input/ids-input.ts\");\n/* harmony import */ var _ids_date_picker_ids_date_picker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../ids-date-picker/ids-date-picker */ \"./src/components/ids-date-picker/ids-date-picker.ts\");\n/* harmony import */ var _ids_date_picker_ids_date_picker_popup__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../ids-date-picker/ids-date-picker-popup */ \"./src/components/ids-date-picker/ids-date-picker-popup.ts\");\n/* harmony import */ var _ids_dropdown_ids_dropdown__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../ids-dropdown/ids-dropdown */ \"./src/components/ids-dropdown/ids-dropdown.ts\");\n/* harmony import */ var _ids_list_box_ids_list_box__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../ids-list-box/ids-list-box */ \"./src/components/ids-list-box/ids-list-box.ts\");\n/* harmony import */ var _ids_time_picker_ids_time_picker__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../ids-time-picker/ids-time-picker */ \"./src/components/ids-time-picker/ids-time-picker.ts\");\n/* harmony import */ var _ids_textarea_ids_textarea__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../ids-textarea/ids-textarea */ \"./src/components/ids-textarea/ids-textarea.ts\");\n/* harmony import */ var _ids_demo_app_ids_demo_listing__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../ids-demo-app/ids-demo-listing */ \"./src/components/ids-demo-app/ids-demo-listing.ts\");\n/* harmony import */ var _custom_calendar_event__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./custom-calendar-event */ \"./src/components/ids-calendar/demos/custom-calendar-event.ts\");\n/* harmony import */ var _index_yaml__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./index.yaml */ \"./src/components/ids-calendar/demos/index.yaml\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst demoListing = document.querySelector(\"ids-demo-listing\");\nif (demoListing) {\n  demoListing.data = _index_yaml__WEBPACK_IMPORTED_MODULE_16__[\"default\"].examples;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtY2FsZW5kYXIvZGVtb3MvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU87QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUV0QixNQUFNLGNBQW1CLFNBQVMsY0FBYyxrQkFBa0I7QUFDbEUsSUFBSSxhQUFhO0FBQ2YsY0FBWSxPQUFPLDZEQUFrQjtBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLWNhbGVuZGFyL2RlbW9zL2luZGV4LnRzPzgwMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9pZHMtY2FsZW5kYXInO1xuaW1wb3J0ICcuLi8uLi9pZHMtYWNjb3JkaW9uL2lkcy1hY2NvcmRpb24nO1xuaW1wb3J0ICcuLi8uLi9pZHMtd2Vlay12aWV3L2lkcy13ZWVrLXZpZXcnO1xuaW1wb3J0ICcuLi8uLi9pZHMtbW9udGgtdmlldy9pZHMtbW9udGgtdmlldyc7XG5pbXBvcnQgJy4uLy4uL2lkcy1jaGVja2JveC9pZHMtY2hlY2tib3gnO1xuaW1wb3J0ICcuLi8uLi9pZHMtZGF0YS1sYWJlbC9pZHMtZGF0YS1sYWJlbCc7XG5pbXBvcnQgJy4uLy4uL2lkcy1wb3B1cC9pZHMtcG9wdXAnO1xuaW1wb3J0ICcuLi8uLi9pZHMtaW5wdXQvaWRzLWlucHV0JztcbmltcG9ydCAnLi4vLi4vaWRzLWRhdGUtcGlja2VyL2lkcy1kYXRlLXBpY2tlcic7XG5pbXBvcnQgJy4uLy4uL2lkcy1kYXRlLXBpY2tlci9pZHMtZGF0ZS1waWNrZXItcG9wdXAnO1xuaW1wb3J0ICcuLi8uLi9pZHMtZHJvcGRvd24vaWRzLWRyb3Bkb3duJztcbmltcG9ydCAnLi4vLi4vaWRzLWxpc3QtYm94L2lkcy1saXN0LWJveCc7XG5pbXBvcnQgJy4uLy4uL2lkcy10aW1lLXBpY2tlci9pZHMtdGltZS1waWNrZXInO1xuaW1wb3J0ICcuLi8uLi9pZHMtdGV4dGFyZWEvaWRzLXRleHRhcmVhJztcbmltcG9ydCAnLi4vLi4vaWRzLWRlbW8tYXBwL2lkcy1kZW1vLWxpc3RpbmcnO1xuaW1wb3J0ICcuL2N1c3RvbS1jYWxlbmRhci1ldmVudCc7XG5pbXBvcnQgaW5kZXhZYW1sIGZyb20gJy4vaW5kZXgueWFtbCc7XG5cbmNvbnN0IGRlbW9MaXN0aW5nOiBhbnkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpZHMtZGVtby1saXN0aW5nJyk7XG5pZiAoZGVtb0xpc3RpbmcpIHtcbiAgZGVtb0xpc3RpbmcuZGF0YSA9IGluZGV4WWFtbC5leGFtcGxlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/ids-calendar/demos/index.ts\n");

/***/ }),

/***/ "./src/components/ids-calendar/ids-calendar.ts":
/*!*****************************************************!*\
  !*** ./src/components/ids-calendar/ids-calendar.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsCalendar)\n/* harmony export */ });\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_calendar_events_mixin_ids_calendar_events_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-calendar-events-mixin/ids-calendar-events-mixin */ \"./src/mixins/ids-calendar-events-mixin/ids-calendar-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-date-attribute-mixin/ids-date-attribute-mixin */ \"./src/mixins/ids-date-attribute-mixin/ids-date-attribute-mixin.ts\");\n/* harmony import */ var _ids_date_picker_ids_date_picker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ids-date-picker/ids-date-picker */ \"./src/components/ids-date-picker/ids-date-picker.ts\");\n/* harmony import */ var _ids_date_picker_ids_month_year_picklist__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ids-date-picker/ids-month-year-picklist */ \"./src/components/ids-date-picker/ids-month-year-picklist.ts\");\n/* harmony import */ var _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-month-view/ids-month-view */ \"./src/components/ids-month-view/ids-month-view.ts\");\n/* harmony import */ var _ids_toolbar_ids_toolbar__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ids-toolbar/ids-toolbar */ \"./src/components/ids-toolbar/ids-toolbar.ts\");\n/* harmony import */ var _ids_calendar_scss__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ids-calendar.scss */ \"./src/components/ids-calendar/ids-calendar.scss\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _utils_ids_breakpoint_utils_ids_breakpoint_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/ids-breakpoint-utils/ids-breakpoint-utils */ \"./src/utils/ids-breakpoint-utils/ids-breakpoint-utils.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  (0,_mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n    (0,_mixins_ids_calendar_events_mixin_ids_calendar_events_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n      (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n        (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n          _core_ids_element__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n        )\n      )\n    )\n  )\n);\nlet IdsCalendar = class extends Base {\n  #mobileBreakpoint = parseInt(_utils_ids_breakpoint_utils_ids_breakpoint_utils__WEBPACK_IMPORTED_MODULE_14__.breakpoints.md);\n  #resizeObserver;\n  #selectedEventId = \"\";\n  constructor() {\n    super();\n    if (!this.state)\n      this.state = {};\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.DATE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_DETAILS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_LEGEND\n    ];\n  }\n  /**\n   * Setting for calendar details pane\n   * @param {boolean|string} val show/hides details\n   */\n  set showDetails(val) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_DETAILS, \"\");\n      this.updateEventDetails(this.state.selected);\n      this.container?.classList.add(\"show-details\");\n    } else {\n      const detailsPane = this.container?.querySelector(\".calendar-details-pane\");\n      if (detailsPane)\n        detailsPane.innerHTML = \"\";\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_DETAILS);\n      this.container?.classList.remove(\"show-details\");\n    }\n  }\n  /**\n   * @returns {boolean} true if detail pane enabled\n   */\n  get showDetails() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_DETAILS);\n  }\n  /**\n   * Setting for calendar legend pane\n   * @param {boolean|string} val show/hides legend\n   */\n  set showLegend(val) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_LEGEND, \"\");\n      this.renderLegend(this.eventTypesData);\n      this.container?.classList.add(\"show-legend\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_LEGEND);\n      this.querySelector(\"#event-types-legend\")?.remove();\n      this.container?.classList.remove(\"show-legend\");\n    }\n  }\n  /**\n   * @returns {boolean} true of legend pane enabled\n   */\n  get showLegend() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_LEGEND);\n  }\n  /**\n   * show-today attribute\n   * @returns {boolean} showToday param converted to boolean from attribute value\n   */\n  get showToday() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_TODAY);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(attrVal);\n  }\n  /**\n   * Set whether or not the today button should be shown\n   * @param {string|boolean} val showToday param value\n   */\n  set showToday(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_TODAY, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.SHOW_TODAY);\n    }\n    this.#updateTodayBtn(boolVal);\n  }\n  #updateTodayBtn(val) {\n    const el = this.container?.querySelector(\"ids-toolbar-section\");\n    if (val) {\n      el?.insertAdjacentHTML(\"beforeend\", this.#todayBtnTemplate());\n    } else {\n      this.container?.querySelector(\".btn-today\")?.remove();\n    }\n  }\n  /**\n   * Setting for calendar date\n   * @param {Date|string} val user date input\n   */\n  set date(val) {\n    const date = new Date(val);\n    if ((0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(date)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.DATE, val.toString());\n      if (!this.state.skipRender) {\n        this.changeDate(date, this.state.view === \"day\");\n        this.updateEventDetails();\n      }\n    } else {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.DATE, new Date().toString());\n    }\n  }\n  /**\n   * Returns active date\n   * @returns {Date} date\n   */\n  get date() {\n    const date = new Date(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.DATE) || Date.now());\n    return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(date) ? date : new Date();\n  }\n  /**\n   * Ids Calendar Component connected life-cycle hook\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.setDirection();\n    this.changeView(\"month\");\n    this.#attachEventHandlers();\n    this.#configureResizeObserver();\n    this.viewPickerConnected();\n    this.onLocaleChange(this.localeAPI);\n  }\n  /**\n   * Ids Calendar Component disconnected life-cycle hook\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    if (this.#resizeObserver) {\n      this.#resizeObserver.disconnect();\n      this.#resizeObserver = null;\n    }\n  }\n  /**\n   * Configures IdsCalendar's resize observer\n   */\n  #configureResizeObserver() {\n    this.#resizeObserver = new ResizeObserver((entries) => this.#onResize(entries));\n    this.#resizeObserver.observe((0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_15__.getClosest)(this, \"ids-container\"));\n  }\n  /**\n   * Handle event type data changes\n   * @param {CalendarEventTypeData[]} data event types\n   */\n  onEventTypesChange(data) {\n    this.renderLegend(data);\n    this.#toggleMonthLegend(data, this.state.isMobile);\n  }\n  /**\n   * @param {IdsLocale} locale the new locale object\n   */\n  onLocaleChange = (locale) => {\n    this.updateEventDetails(this.state.selected);\n    this.renderLegend(this.eventTypesData);\n    this.#updateDatePickerPopupTrigger(locale);\n    const monthView = this.container?.querySelector(\"ids-month-view\");\n    if (monthView) {\n      monthView.locale = this.locale;\n      monthView.language = this.language.name;\n    }\n    const weekView = this.container?.querySelector(\"ids-week-view\");\n    if (weekView) {\n      weekView.locale = this.locale;\n      weekView.language = this.language.name;\n    }\n    this.container?.querySelectorAll(\"[translate-text]\").forEach((textElem) => {\n      textElem.language = this.language.name;\n    });\n    requestAnimationFrame(() => {\n      this.querySelectorAll(\"ids-checkbox[data-id]\").forEach((checkElem) => {\n        checkElem.setAttribute(\"language\", this.language.name);\n      });\n    });\n  };\n  /**\n   * Ids Calendar template\n   * @returns {string} html template\n   */\n  template() {\n    return `\n      <div class=\"ids-calendar\">\n        <div class=\"calendar-legend-pane\"><slot name=\"legend\"></slot></div>\n        <div class=\"calendar-contents\">\n          <div class=\"calendar-toolbar-pane\">${this.#createToolbarTemplate()}</div>\n          <div class=\"calendar-view-pane\"></div>\n        </div>\n        <div class=\"calendar-details-pane\"></div>\n      </div>\n    `;\n  }\n  /**\n   * Create accordion template for events detail\n   * @param {CalendarEventDetail[]} data event detail data\n   * @returns {string} html accordion template\n   */\n  detailAccordionTemplate(data) {\n    const panels = data.map((item, idx) => `\n      <ids-accordion-panel expanded=\"${idx === 0}\">\n        <ids-accordion-header color=\"${item.color}\" slot=\"header\">\n          <ids-text font-weight=\"bold\" overflow=\"ellipsis\">${item.shortSubject || item.subject}</ids-text>\n        </ids-accordion-header>\n        <div slot=\"content\" class=\"panel-content\">\n          ${item.status ? `<ids-data-label label=\"${this.localeAPI.translate(\"Status\")}\">${item.status}</ids-data-label><hr>` : \"\"}\n          <ids-data-label label=\"${this.localeAPI.translate(\"Date\")}\">${item.dateRange}</ids-data-label><hr>\n          <ids-data-label label=\"Event Type\">${item.eventType}</ids-data-label><hr>\n          <ids-data-label label=\"${this.localeAPI.translate(\"Duration\")}\">${item.duration}</ids-data-label>\n          ${item.comments ? `<hr><ids-data-label label=\"${this.localeAPI.translate(\"Comments\")}\">${item.comments}</ids-data-label>` : \"\"}\n        </div>\n      </ids-accordion-panel>\n    `).join(\"\");\n    return `<ids-accordion allow-one-pane=\"true\">${panels}</ids-accordion>`;\n  }\n  /**\n   * Create list template for events detail\n   * @param {CalendarEventDetail[]} data event detail data\n   * @returns {string} html accordion template\n   */\n  detailListTemplate(data) {\n    const listItems = data.map((item) => `\n      <li color=\"${item.color}\" class=\"detail-item\" tabindex=\"0\" data-id=\"${item.id}\">\n        <div class=\"calendar-detail-content\">\n          <ids-text font-size=\"18\" font-weight=\"bold\">${item.subject}</ids-text>\n          <ids-text font-size=\"14\">${item.dateRange}</ids-text>\n          <ids-text font-size=\"14\">${item.comments || \"\"}${item.status ? ` | ${item.status}` : \"\"}</ids-text>\n        </div>\n        <ids-text font-size=\"12\" class=\"detail-item-duration\">${item.duration}</ids-text>\n        <ids-icon icon=\"caret-right\"></ids-icon>\n      </li>\n    `).join(\"\");\n    return `<ul class=\"calendar-events-list\">${listItems}</ul>`;\n  }\n  /**\n   * @returns {string} containing the template for the Calendar Toolbar's \"Today\" Button\n   */\n  #todayBtnTemplate() {\n    return this.showToday ? `<ids-button css-class=\"no-padding\" class=\"btn-today\">\n      <ids-text class=\"btn-today-text\" font-size=\"16\" translate-text=\"true\" font-weight=\"bold\">Today</ids-text>\n    </ids-button>` : \"\";\n  }\n  /**\n   * Renders an IdsToolbar component with calendar controls\n   * @returns {string} Calendar's IdsToolbar template\n   */\n  #createToolbarTemplate() {\n    const navBtns = `<ids-button class=\"btn-previous\">\n      <ids-text audible=\"true\" translate-text=\"true\">PreviousMonth</ids-text>\n      <ids-icon icon=\"chevron-left\"></ids-icon>\n    </ids-button>\n    <ids-button class=\"btn-next\">\n      <ids-text audible=\"true\" translate-text=\"true\">NextMonth</ids-text>\n      <ids-icon icon=\"chevron-right\"></ids-icon>\n    </ids-button>`;\n    const datePickerPopup = `<ids-button class=\"btn-picker\" id=\"btn-picker\" css-class=\"no-padding\">\n      <ids-text font-size=\"20\"></ids-text>\n      <ids-icon icon=\"calendar\"></ids-icon>\n    </ids-button>\n    <ids-date-picker-popup\n      show-today=\"true\"\n      target=\"#btn-picker\"\n      trigger-elem=\"#btn-picker\"\n      trigger-type=\"click\"></ids-date-picker-popup>`;\n    const todayBtn = this.#todayBtnTemplate();\n    return `\n      <ids-toolbar slot=\"toolbar\" id=\"calendar-toolbar\" class=\"calendar-toolbar\" tabbable=\"true\">\n        <ids-toolbar-section type=\"buttonset\" class=\"toolbar-buttonset\">\n          ${navBtns}\n          ${datePickerPopup}\n          ${todayBtn}\n        </ids-toolbar-section>\n        <ids-toolbar-section type=\"buttonset\" align=\"end\">\n          ${this.viewPicker ? this.createViewPickerTemplate(\"month\") : \"\"}\n        </ids-toolbar-section>\n      </ids-toolbar>\n    `;\n  }\n  /**\n   * Creates new calendar event\n   * @param {string} id user defined id\n   * @param {boolean} isModal opens modal if true\n   */\n  createNewEvent(id, isModal = false) {\n    const date = new Date(this.date);\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    const event = {\n      id,\n      subject: \"New Event\",\n      isAllDay: \"true\",\n      starts: new Date(year, month, day, 0, 0, 0).toISOString(),\n      ends: new Date(year, month, day, 23, 59, 59, 999).toISOString(),\n      type: \"dto\",\n      comments: \"New Event Comments\"\n    };\n    if (isModal) {\n      const view = this.getView();\n      const target = view instanceof _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_8__[\"default\"] ? view.getSelectedDay() : this.container;\n      if (target)\n        this.#insertFormPopup(target, event);\n    } else {\n      this.addEvent(event);\n    }\n  }\n  /**\n   * Create calendar event form template\n   * @param {CalendarEventData} data event data\n   * @returns {string} event form template\n   */\n  #eventFormTemplate(data) {\n    const start = new Date(data.starts);\n    const end = new Date(data.ends);\n    const eventType = this.getEventTypeById(data.type);\n    const eventTypeOptions = this.eventTypesData.map((item) => `\n      <ids-list-box-option value=\"${item.id}\">\n        <ids-text>${item.label}</ids-text>\n      </ids-list-box-option>\n    `).join(\"\");\n    const datePicker = (id, labelKey, date) => `\n      <ids-date-picker\n        id=\"${id}\"\n        label=\"${this.localeAPI.translate(labelKey)}\"\n        size=\"full\"\n        year=\"${date.getFullYear()}\"\n        month=\"${date.getMonth()}\"\n        day=\"${date.getDate()}\"\n        value=\"${this.localeAPI.formatDate(date)}\"\n        mask>\n      </ids-date-picker>\n    `;\n    const timePicker = (id, date) => `\n      <ids-time-picker\n        id=\"${id}\"\n        label=\"&nbsp\"\n        size=\"full\"\n        disabled=\"${(0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(data.isAllDay)}\"\n        value=\"${this.localeAPI.formatHour(date.getHours() + date.getMinutes() / 60)}\">\n      </ids-time-picker>\n    `;\n    return `\n      <form id=\"event-form\" data-id=\"${data.id}\" slot=\"content\">\n        <div id=\"event-form-header\" class=\"inline-container\" color=\"${eventType?.color || \"azure\"}\">\n          <ids-text font-size=\"16\" font-weight=\"bold\">${eventType?.label || \"\"}</ids-text>\n          <ids-button data-action=\"close\">\n            <ids-icon icon=\"close\"></ids-icon>\n          </ids-button>\n        </div>\n        <div id=\"event-form-content\">\n          <ids-input size=\"full\" id=\"event-subject\" type=\"text\" label=\"${this.localeAPI.translate(\"Subject\")}\" value=\"${data.subject}\"></ids-input>\n          <ids-dropdown size=\"full\" id=\"event-type\" label=\"${this.localeAPI.translate(\"EventType\")}\" value=\"${data.type}\">\n            <ids-list-box>${eventTypeOptions}</ids-list-box>\n          </ids-dropdown>\n          <ids-checkbox id=\"event-is-all-day\" label=\"${this.localeAPI.translate(\"AllDay\")}\" checked=\"${data.isAllDay}\"></ids-checkbox>\n          <div class=\"inline-container\">\n            ${datePicker(\"event-from-date\", \"From\", start)}\n            ${timePicker(\"event-from-hour\", start)}\n          </div>\n          <div class=\"inline-container\">\n            ${datePicker(\"event-to-date\", \"To\", end)}\n            ${timePicker(\"event-to-hour\", end)}\n          </div>\n          <ids-textarea size=\"full\" id=\"event-comments\" label=\"${this.localeAPI.translate(\"Comments\")}\" autoselect=\"true\">${data.comments || \"\"}</ids-textarea>\n        </div>\n        <div id=\"event-form-actions\" class=\"inline-container\">\n          <ids-button data-action=\"close\" no-padding>\n            <ids-text font-weight=\"bold\" translate-text=\"true\">Cancel</ids-text>\n          </ids-button>\n          <ids-button data-action=\"submit\" no-padding>\n            <ids-text font-weight=\"bold\" translate-text=\"true\">Submit</ids-text>\n          </ids-button>\n        </div>\n      </form>\n    `;\n  }\n  /**\n   * Attach calendar event handlers\n   */\n  #attachEventHandlers() {\n    let daySelectTimer;\n    let daySelectCount = 0;\n    let daySelectedDate;\n    this.offEvent(\"dayselected.calendar-container\");\n    this.onEvent(\"dayselected.calendar-container\", this.container, (evt) => {\n      evt.stopPropagation();\n      clearTimeout(daySelectTimer);\n      daySelectCount++;\n      const updateCalendar = () => {\n        this.#updateActiveDate(evt.detail.date);\n        this.state.selected = evt.detail?.events || [];\n        this.updateEventDetails(evt.detail?.events);\n      };\n      const createNewEvent = () => {\n        const id = Date.now().toString() + Math.floor(Math.random() * 100);\n        this.createNewEvent(id, true);\n      };\n      daySelectTimer = setTimeout(() => {\n        updateCalendar();\n        daySelectCount = 0;\n      }, 200);\n      if (daySelectCount === 2 && evt.detail.date.getTime() === daySelectedDate?.getTime()) {\n        clearTimeout(daySelectTimer);\n        updateCalendar();\n        createNewEvent();\n        daySelectCount = 0;\n      }\n      daySelectedDate = evt.detail.date;\n    });\n    this.offEvent(\"viewchange.calendar\");\n    this.onEvent(\"viewchange.calendar\", this, (evt) => {\n      evt.stopPropagation();\n      this.#updateActiveDate(evt.detail.date);\n      this.changeView(evt.detail.view);\n      this.renderEventsData();\n    });\n    this.offEvent(\"datechange.calendar-container\");\n    this.onEvent(\"datechange.calendar-container\", this.container, (evt) => {\n      evt.stopPropagation();\n      this.#updateActiveDate(evt.detail.date);\n      this.renderEventsData();\n    });\n    this.offEvent(\"change.calendar-legend\");\n    this.onEvent(\"change.calendar-legend\", this.container?.querySelector(\".calendar-legend-pane\"), (evt) => {\n      evt.stopPropagation();\n      this.#removePopup();\n      this.#toggleEventType(evt.detail.elem, evt.detail.checked);\n      this.relayCalendarData();\n      this.updateEventDetails(this.state.selected);\n    });\n    this.offEvent(\"overflow-click.calendar-container\");\n    this.onEvent(\"overflow-click.calendar-container\", this.container, (evt) => {\n      evt.stopPropagation();\n      if (evt.detail.date) {\n        this.setViewPickerValue(\"day\");\n        this.updateEventDetails(this.state.selected);\n      }\n    });\n    this.onEvent(\"click.details-item\", this.container?.querySelector(\".calendar-details-pane\"), (evt) => {\n      const detailItem = evt.target.closest(\".detail-item\");\n      if (detailItem) {\n        evt.stopPropagation();\n        evt.stopImmediatePropagation();\n        const id = detailItem.getAttribute(\"data-id\");\n        const eventData = this.getEventById(id);\n        if (eventData) {\n          this.#selectedEventId = id;\n          this.#removePopup();\n          if (this.container)\n            this.#insertFormPopup(this.container, eventData);\n        }\n      }\n    });\n    this.offEvent(\"click-calendar-event\", this);\n    this.onEvent(\"click-calendar-event\", this, (evt) => {\n      const elem = evt.detail.elem;\n      this.#selectedEventId = elem.eventData.id;\n      this.#removePopup();\n      this.#insertFormPopup(elem.container, elem.eventData);\n    });\n    if (this.viewPicker)\n      this.attachViewPickerEvents(\"month\");\n    this.#attachToolbarEventHandlers();\n  }\n  /**\n   * Get IdsPopup containg calendar event form\n   * @returns {IdsPopup} popup component\n   */\n  #getEventFormPopup() {\n    return this.container?.querySelector(\"#event-form-popup\");\n  }\n  /**\n   * Add next/previous/today click events when toolbar is attached\n   */\n  #attachToolbarEventHandlers() {\n    const buttonSet = this.container?.querySelector(\"ids-toolbar-section.toolbar-buttonset\");\n    const toolbarDatepickerPopup = this.container?.querySelector(\"ids-date-picker-popup\");\n    this.offEvent(\"show.popup\");\n    this.onEvent(\"show.popup\", toolbarDatepickerPopup, () => {\n      this.#updateDatePickerPopupTrigger(this.localeAPI);\n    });\n    this.offEvent(\"hide.popup\");\n    this.onEvent(\"hide.popup\", toolbarDatepickerPopup, (e) => {\n      e.stopPropagation();\n      if (e.detail.doFocus) {\n        if (toolbarDatepickerPopup)\n          toolbarDatepickerPopup.target?.focus();\n      }\n    });\n    this.offEvent(\"click.month-view-buttons\");\n    this.onEvent(\"click.month-view-buttons\", buttonSet, (e) => {\n      e.stopPropagation();\n      const target = e.target;\n      const monthView = this.container?.querySelector(\"ids-month-view\");\n      const weekView = this.container?.querySelector(\"ids-week-view\");\n      if (target.classList.contains(\"btn-previous\")) {\n        monthView?.changeDate(\"previous-month\");\n        weekView?.changeDate(\"previous\");\n      }\n      if (target.classList.contains(\"btn-next\")) {\n        monthView?.changeDate(\"next-month\");\n        weekView?.changeDate(\"next\");\n      }\n      if (target.classList.contains(\"btn-today\")) {\n        const targetView = monthView || weekView;\n        targetView?.changeDate(\"today\");\n        targetView?.focus();\n      }\n      if (target.classList.contains(\"btn-apply\")) {\n        const year = toolbarDatepickerPopup?.year ?? null;\n        const month = toolbarDatepickerPopup?.month ?? null;\n        if (monthView) {\n          monthView.year = year;\n          monthView.month = month;\n        }\n        if (toolbarDatepickerPopup)\n          toolbarDatepickerPopup.expanded = false;\n      }\n    });\n    this.offEvent(\"dayselected.month-view-datepicker\");\n    this.onEvent(\"dayselected.month-view-datepicker\", toolbarDatepickerPopup, (e) => {\n      e.stopPropagation();\n      const date = e.detail.date;\n      this.changeDate(date, this.state.view === \"day\");\n    });\n    this.offEvent(\"expanded.month-view-picklist\");\n    this.onEvent(\"expanded.month-view-picklist\", toolbarDatepickerPopup, (e) => {\n      const expanded = e.detail.expanded;\n      this.container?.querySelector(\".btn-today\")?.setAttribute(\"hidden\", expanded.toString());\n      this.container?.querySelector(\".btn-apply\")?.setAttribute(\"hidden\", (!expanded).toString());\n      this.container?.querySelector(\".btn-previous\")?.setAttribute(\"hidden\", expanded.toString());\n      this.container?.querySelector(\".btn-next\")?.setAttribute(\"hidden\", expanded.toString());\n      if (expanded) {\n        this.container?.querySelector(\"td.is-selected\")?.removeAttribute(\"tabindex\");\n      } else {\n        this.container?.querySelector(\"td.is-selected\")?.setAttribute(\"tabindex\", \"0\");\n      }\n    });\n    if (this.showToday) {\n      this.offEvent(\"click.week-view-today\");\n      this.onEvent(\"click.week-view-today\", this.container?.querySelector(\".btn-today\"), () => {\n        this.getView()?.changeDate(\"today\");\n      });\n    } else {\n      this.offEvent(\"click.week-view-today\");\n    }\n  }\n  /**\n   * Attach calendar event form handlers\n   */\n  #attachFormEventHandlers() {\n    const popup = this.#getEventFormPopup();\n    this.offEvent(\"dayselected.calendar-event-form\");\n    this.onEvent(\"dayselected.calendar-event-form\", popup, (evt) => {\n      evt.stopPropagation();\n    });\n    this.offEvent(\"click.calendar-event-form\", popup);\n    this.onEvent(\"click.calendar-event-form\", popup, (evt) => {\n      if (evt.target && evt.target.tagName === \"IDS-BUTTON\") {\n        evt.stopPropagation();\n        const action = evt.target.getAttribute(\"data-action\");\n        if (!action)\n          return;\n        if (action === \"close\") {\n          this.#removePopup();\n          return;\n        }\n        if (action === \"submit\") {\n          const formElem = this.#getEventFormPopup()?.querySelector(\"#event-form\");\n          this.#submitEventForm(formElem);\n          this.#removePopup();\n        }\n      }\n    });\n    this.offEvent(\"change.calendar-event-form\", popup);\n    this.onEvent(\"change.calendar-event-form\", popup, (evt) => {\n      evt.stopPropagation();\n      const checked = evt.detail.checked;\n      this.#toggleTimePickers(checked);\n    });\n  }\n  /**\n   * Insert event form popup into view.\n   * Attach it to provided calendar event\n   * @param {HTMLElement} target target to attach popup to\n   * @param {CalendarEventData} eventData calendar event component\n   */\n  #insertFormPopup(target, eventData) {\n    const popup = this.#getEventFormPopup();\n    if (popup) {\n      popup.innerHTML = `${this.#eventFormTemplate(eventData)}`;\n    } else {\n      this.container?.insertAdjacentHTML(\"beforeend\", `\n        <ids-popup\n          id=\"event-form-popup\"\n          arrow=\"right\"\n          x=\"160\"\n          align=\"center\"\n          animated=\"false\"\n          visible=\"false\"\n          type=\"menu\"\n          position-style=\"absolute\">\n          ${this.#eventFormTemplate(eventData)}\n        </ids-popup>\n      `);\n    }\n    this.positionFormPopup(target);\n    this.#attachFormEventHandlers();\n    this.#getEventFormPopup()?.querySelector(\"#event-subject\")?.focus();\n  }\n  /**\n   * Enables/Disabled time pickers inside event form\n   * @param {boolean} disable boolean\n   */\n  #toggleTimePickers(disable) {\n    const popup = this.#getEventFormPopup();\n    if (popup) {\n      popup.querySelectorAll(\"ids-time-picker\").forEach((elem) => {\n        elem.disabled = disable;\n      });\n    }\n  }\n  /**\n   * Aligns form popup with provided html target element\n   * @param {HTMLElement} target element\n   */\n  positionFormPopup(target) {\n    const popup = this.#getEventFormPopup();\n    if (popup && target) {\n      popup.alignTarget = null;\n      popup.alignTarget = target;\n      popup.place();\n      popup.visible = true;\n    }\n  }\n  /**\n   * Remove calendar event form popup\n   */\n  #removePopup() {\n    const popup = this.#getEventFormPopup();\n    if (popup) {\n      this.offEvent(\"click.calendar-event-form\", popup);\n      popup.remove();\n    }\n  }\n  /**\n   * Gets values from event form and updates event\n   * @param {HTMLElement} formElem form element\n   */\n  #submitEventForm(formElem) {\n    const id = formElem.getAttribute(\"data-id\");\n    const subject = formElem.querySelector(\"#event-subject\")?.value;\n    const type = formElem.querySelector(\"#event-type\")?.value;\n    const isAllDayBool = formElem.querySelector(\"#event-is-all-day\")?.checked;\n    const isAllDay = isAllDayBool === \"true\" ? \"true\" : \"false\";\n    const comments = formElem.querySelector(\"#event-comments\")?.value;\n    const fromDate = formElem.querySelector(\"#event-from-date\");\n    const fromHours = formElem.querySelector(\"#event-from-hour\");\n    const starts = new Date(\n      fromDate.year,\n      fromDate.month,\n      fromDate.day,\n      isAllDayBool ? 0 : fromHours.hours24,\n      isAllDayBool ? 0 : fromHours.minutes,\n      isAllDayBool ? 0 : fromHours.seconds\n    ).toISOString();\n    const toDate = formElem.querySelector(\"#event-to-date\");\n    const toHours = formElem.querySelector(\"#event-to-hour\");\n    const ends = new Date(\n      toDate.year,\n      toDate.month,\n      toDate.day,\n      isAllDayBool ? 23 : toHours.hours24,\n      isAllDayBool ? 59 : toHours.minutes,\n      isAllDayBool ? 59 : toHours.seconds\n    ).toISOString();\n    const eventData = {\n      id,\n      subject,\n      type,\n      isAllDay,\n      starts,\n      ends,\n      comments\n    };\n    this.updateEvent(eventData);\n  }\n  /**\n   * Update event type data checked state\n   * @param {IdsCheckbox} checkbox IdsCheckbox component\n   * @param {boolean} checked true if checked\n   */\n  #toggleEventType(checkbox, checked) {\n    const id = checkbox.getAttribute(\"data-id\");\n    const eventType = this.getEventTypeById(id);\n    if (eventType) {\n      eventType.checked = checked;\n    }\n  }\n  /**\n   * Changes view component\n   * @param {CalendarViewTypes} view month | week | day\n   */\n  changeView(view = \"month\") {\n    if (this.state.view === view)\n      return;\n    const template = view === \"month\" ? this.#createMonthTemplate() : this.#createWeekTemplate(view === \"day\");\n    this.insertViewTemplate(template);\n    this.relayCalendarData();\n    this.state.view = view;\n  }\n  /**\n   * Update date range of current view\n   * @param {Date} date Date\n   * @param {boolean} isDayView true if range is 1 day\n   */\n  changeDate(date, isDayView) {\n    const view = this.getView();\n    if (!view || !(0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(date))\n      return;\n    if (view.tagName === \"IDS-MONTH-VIEW\") {\n      view.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.YEAR, String(date.getFullYear()));\n      view.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.MONTH, String(date.getMonth()));\n      view.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.DAY, String(date.getDate()));\n    } else if (view.tagName === \"IDS-WEEK-VIEW\") {\n      const start = isDayView ? date : (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.firstDayOfWeekDate)(date);\n      const end = isDayView ? date : (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.lastDayOfWeekDate)(date);\n      view.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.START_DATE, String(start));\n      view.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_12__.attributes.END_DATE, String(end));\n    }\n  }\n  /**\n   * Inserts view component template\n   * @param {string} template view component template\n   */\n  insertViewTemplate(template) {\n    const viewPane = this.container?.querySelector(\".calendar-view-pane\");\n    if (viewPane)\n      viewPane.innerHTML = template;\n  }\n  /**\n   * Passes calendar event data to active view\n   */\n  relayCalendarData() {\n    const viewElem = this.getView();\n    const eventsData = this.#filterEventsByType(this.eventsData);\n    viewElem?.offEvent(\"beforeeventrendered\");\n    viewElem?.onEvent(\"beforeeventrendered\", viewElem, (e) => {\n      this.triggerEvent(\"beforeeventrendered\", this, { detail: e.detail });\n    });\n    viewElem?.offEvent(\"aftereventrendered\");\n    viewElem?.onEvent(\"aftereventrendered\", viewElem, (e) => {\n      this.triggerEvent(\"aftereventrendered\", this, { detail: e.detail });\n    });\n    if (viewElem) {\n      viewElem.eventsData = eventsData;\n      viewElem.eventTypesData = this.eventTypesData;\n    }\n  }\n  /**\n   * Updates active date\n   * Reflects date attribute without re-render\n   * @param {Date} date active date\n   */\n  #updateActiveDate(date) {\n    this.state.skipRender = true;\n    date = date || this.date;\n    const dateAttr = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    this.setAttribute(\"date\", dateAttr);\n    this.#updateDatePickerPopupTrigger(void 0, date);\n    this.state.skipRender = false;\n  }\n  /**\n   * Updates the text content of the Date Picker Popup's trigger button\n   * @param {IdsLocale} [locale] if provided, sets a different locale from the currently-set locale\n   * @param {Date} [date] if provided, sets an alternate date from the currently-set date\n   */\n  #updateDatePickerPopupTrigger(locale, date) {\n    const btnEl = this.container?.querySelector(\".btn-picker\");\n    const textEl = btnEl?.querySelector(\"ids-text\");\n    const targetDate = date || this.date;\n    const formattedDate = this.formatMonthRange(locale) || null;\n    if (textEl) {\n      textEl.textContent = formattedDate;\n    }\n    const datePickerPopup = this.container?.querySelector(\"ids-date-picker-popup\");\n    if (datePickerPopup && datePickerPopup?.updateMonthYearPickerTriggerDisplay) {\n      datePickerPopup.day = targetDate.getDate();\n      datePickerPopup.month = targetDate.getMonth();\n      datePickerPopup.year = targetDate.getFullYear();\n      datePickerPopup?.updateMonthYearPickerTriggerDisplay(locale, targetDate);\n    }\n  }\n  #getSelectedEvents() {\n    const view = this.getView();\n    if (view && view instanceof _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n      this.state.selected = view.getActiveDayEvents();\n      return this.state.selected;\n    }\n    return [];\n  }\n  /**\n   * Renders IdsMonthView component\n   * @returns {string} ids month view template\n   */\n  #createMonthTemplate() {\n    const date = this.date;\n    return `\n      <ids-month-view\n        month=\"${date.getMonth()}\"\n        day=\"${date.getDate()}\"\n        year=\"${date.getFullYear()}\">\n        <slot name=\"MonthViewCalendarEventTemplate\" slot=\"customCalendarEvent\"></slot>\n      </ids-month-view>\n    `;\n  }\n  /**\n   * Renders IdsWeekView component\n   * @param {boolean} isDayView show day view\n   * @returns {string} ids week view template\n   */\n  #createWeekTemplate(isDayView = false) {\n    const date = this.date;\n    const start = isDayView ? date : (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.firstDayOfWeekDate)(date);\n    const end = isDayView ? date : (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.lastDayOfWeekDate)(date);\n    return `\n      <ids-week-view\n        start-date=\"${start}\"\n        end-date=\"${end}\"\n      ></ids-week-view>\n    `;\n  }\n  /**\n   * Filters calendar events by checked event types\n   * @param {Array<CalendarEventData>} events Array<CalendarEventData>\n   * @returns {Array<CalendarEventData>} Array<CalendarEventData>\n   */\n  #filterEventsByType(events) {\n    if (!this.eventTypesData?.length)\n      return events;\n    const eventTypes = this.eventTypesData.filter((item) => item.checked).map((item) => item.id);\n    return events.filter((e) => eventTypes.includes(e.type));\n  }\n  /**\n   * Create localized date range string\n   * @param {Date} start start date\n   * @param {Date} end end date\n   * @returns {string} localized date range\n   */\n  formatDateRange(start, end) {\n    const dateTimeOpts = { dateStyle: \"long\", timeStyle: \"short\" };\n    const startDateStr = this.localeAPI.formatDate(start, dateTimeOpts);\n    const endDateStr = this.localeAPI.formatDate(end, dateTimeOpts);\n    return `${startDateStr} - ${endDateStr}`.replace(/ /g, \" \");\n  }\n  /**\n   * Create localized duration string\n   * @param {Date} start start date\n   * @param {Date} end end date\n   * @returns {string} duration string\n   */\n  formatDuration(start, end) {\n    const hours = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.dateDiff)(start, end, true);\n    if (hours >= 24) {\n      const days = Math.round(hours / 24);\n      const dayStr = this.localeAPI.translate(days === 1 ? \"Day\" : \"Days\");\n      return `${this.localeAPI.parseNumber(days.toString())} ${dayStr}`;\n    }\n    if (hours < 1) {\n      const startMinutes = start.getMinutes();\n      const endMinutes = end.getMinutes();\n      const diffMinutes = endMinutes - startMinutes;\n      const minutesStr = this.localeAPI.translate(diffMinutes === 1 ? \"Minute\" : \"Minutes\");\n      return `${this.localeAPI.parseNumber(diffMinutes.toString())} ${minutesStr}`;\n    }\n    const hoursStr = this.localeAPI.translate(hours === 1 ? \"Hour\" : \"Hours\");\n    return `${this.localeAPI.parseNumber(hours.toString())} ${hoursStr}`;\n  }\n  /**\n   * Formats calendar event data for detail views\n   * @param {CalendarEventData} event calendar event data\n   * @returns {CalendarEventDetail} detail data\n   */\n  #formatDetailData(event) {\n    const startDate = new Date(event.starts);\n    const endDate = new Date(event.ends);\n    const eventType = this.getEventTypeById(event.type);\n    return {\n      ...event,\n      dateRange: this.formatDateRange(startDate, endDate),\n      duration: this.formatDuration(startDate, endDate),\n      eventType: event.type,\n      color: eventType?.color || \"azure\"\n    };\n  }\n  /**\n   * Updates detail view with selected day events\n   * @param {CalendarEventData[]} selected selected calendar events data\n   */\n  updateEventDetails(selected) {\n    const container = this.container?.querySelector(\".calendar-details-pane\");\n    if (!this.showDetails || !container)\n      return;\n    const view = this.getView();\n    if (view?.tagName !== \"IDS-MONTH-VIEW\") {\n      container.innerHTML = \"\";\n      return;\n    }\n    selected = selected || this.#getSelectedEvents() || [];\n    selected = this.#filterEventsByType(selected);\n    const details = selected.map((event) => this.#formatDetailData(event));\n    container.innerHTML = this.state.isMobile ? this.detailListTemplate(details) : this.detailAccordionTemplate(details);\n  }\n  /**\n   * Add new calendar event data to collection\n   * @param {CalendarEventData} eventData event data\n   */\n  addEvent(eventData) {\n    this.eventsData = this.eventsData.concat(eventData);\n    this.triggerEvent(\"eventadded\", this, {\n      detail: {\n        elem: this,\n        value: eventData\n      },\n      bubbles: true,\n      cancelable: true,\n      composed: true\n    });\n  }\n  /**\n   * Update existing calendar event and rerender events\n   * If event doesn't exist, it creates new calendar event\n   * @param {CalendarEventData} data event data\n   */\n  updateEvent(data) {\n    const events = this.eventsData.slice(0);\n    const event = events.find((item) => item.id === data.id);\n    if (event) {\n      const eventData = Object.assign(event, data);\n      this.eventsData = events;\n      this.triggerEvent(\"eventupdated\", this, {\n        detail: {\n          elem: this,\n          value: eventData\n        },\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n    } else {\n      this.addEvent(data);\n    }\n  }\n  /**\n   * Remove calendar events data and components\n   */\n  clearEvents() {\n    this.eventsData = [];\n    this.beforeEventsRender = null;\n  }\n  /**\n   * Renders event type legend if none provided\n   * @param {CalendarEventTypeData[]} eventTypes event types\n   */\n  renderLegend(eventTypes = []) {\n    this.querySelector(\"#event-types-legend\")?.remove();\n    if (!this.showLegend || !eventTypes.length || this.querySelector('[slot=\"legend\"]'))\n      return;\n    const checkboxes = eventTypes.map((item) => `\n      <ids-checkbox\n        class=\"event-type-checkbox\"\n        checked=\"${item.checked}\"\n        data-id=\"${item.id}\"\n        label=\"${item.translationKey ? this.localeAPI.translate(item.translationKey) : item.label}\"\n        color=\"${item.color}07\"\n        disabled=\"${item.disabled || \"false\"}\">\n      </ids-checkbox>\n    `).join(\"\");\n    const accordion = `\n      <ids-accordion id=\"event-types-legend\" slot=\"legend\">\n        <ids-accordion-panel expanded=\"true\">\n          <ids-accordion-header slot=\"header\" expander-type=\"caret\">\n            <ids-text translate-text=\"true\">Legend</ids-text>\n          </ids-accordion-header>\n          <div slot=\"content\"><p>${checkboxes}</p></div>\n        </ids-accordion-panel>\n      </ids-accordion>\n    `;\n    this.insertAdjacentHTML(\"afterbegin\", accordion);\n  }\n  /**\n   * Gets current view component\n   * @returns {IdsMonthView|IdsWeekView} current view component\n   */\n  getView() {\n    return this.container?.querySelector(\"ids-month-view\") || this.container?.querySelector(\"ids-week-view\");\n  }\n  /**\n   * Toggle Month View Legend\n   * @param {CalendarEventTypeData[]} eventTypes calendar event types data\n   * @param {boolean} show toggle legend\n   */\n  #toggleMonthLegend(eventTypes, show) {\n    const component = this.getView();\n    if (!(component instanceof _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_8__[\"default\"]))\n      return;\n    let legendData = null;\n    if (show && Array.isArray(eventTypes) && eventTypes.length) {\n      legendData = eventTypes.map((item) => ({\n        name: item.label,\n        color: `${item.color}-60`,\n        dayOfWeek: [],\n        cssClass: \"event-type\",\n        fontSize: 14\n      }));\n    }\n    component.legend = legendData;\n  }\n  /**\n   * Handle resize changes and toggle mobile/desktop elements\n   * @param {ResizeObserverEntry[]} entries resize entries\n   */\n  #onResize(entries) {\n    const width = entries[0].contentRect.width;\n    const isMobile = width <= this.#mobileBreakpoint;\n    if (this.state.isMobile !== isMobile) {\n      this.state.isMobile = isMobile;\n      this.updateEventDetails(this.state.selected);\n      this.#toggleMonthLegend(this.eventTypesData, isMobile);\n      this.positionFormPopup(this.getView()?.getEventElemById(this.#selectedEventId)?.container);\n    }\n  }\n  /**\n   * @returns {Date} start date\n   */\n  get startDate() {\n    const start = this.getView()?.startDate;\n    if (!start) {\n      const date = this.date;\n      date.setDate(1);\n      return date;\n    }\n    return start;\n  }\n  /**\n   * @returns {Date} end date\n   */\n  get endDate() {\n    const end = this.getView()?.endDate;\n    if (!end) {\n      const date = this.date;\n      date.setMonth(date.getMonth() + 1, 0);\n      return date;\n    }\n    return end;\n  }\n  /**\n   * Renders calendar events\n   * @param {boolean} forceRender skip events fetch and render data\n   * @returns {Promise<CalendarEventData>} calendar events\n   */\n  async renderEventsData(forceRender = false) {\n    if (!forceRender && typeof this.state.beforeEventsRender === \"function\") {\n      this.eventsData = await this.state.beforeEventsRender(this.startDate, this.endDate);\n      return;\n    }\n    if (!Array.isArray(this.eventsData))\n      return;\n    this.relayCalendarData();\n    this.updateEventDetails();\n  }\n  /**\n   * Helper to format startDate/endDate to month range\n   * @param {IdsLocale} locale an optional, provided IdsLocale object\n   * @returns {string} locale formatted month range\n   */\n  formatMonthRange(locale) {\n    const targetLocale = locale || this.localeAPI;\n    if (!targetLocale)\n      return \"\";\n    const startDate = this.startDate;\n    const endDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.subtractDate)(this.endDate, 1, \"days\");\n    const startMonth = targetLocale.formatDate(startDate, { month: \"long\" });\n    const endMonth = targetLocale.formatDate(endDate, { month: \"long\" });\n    const startYear = targetLocale.formatDate(startDate, { year: \"numeric\" });\n    const endYear = targetLocale.formatDate(endDate, { year: \"numeric\" });\n    if (endYear !== startYear) {\n      return `${targetLocale.formatDate(startDate, {\n        month: \"short\",\n        year: \"numeric\"\n      })} - ${targetLocale.formatDate(endDate, {\n        month: \"short\",\n        year: \"numeric\"\n      })}`;\n    }\n    if (endMonth !== startMonth) {\n      return `${targetLocale.formatDate(startDate, { month: \"short\" })} - ${endMonth} ${startYear}`;\n    }\n    return targetLocale.formatDate(startDate, { month: \"long\", year: \"numeric\" });\n  }\n};\nIdsCalendar = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_13__.customElement)(\"ids-calendar\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_13__.scss)(_ids_calendar_scss__WEBPACK_IMPORTED_MODULE_10__[\"default\"])\n], IdsCalendar);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-calendar/ids-calendar.ts\n");

/***/ }),

/***/ "./src/components/ids-data-label/ids-data-label.ts":
/*!*********************************************************!*\
  !*** ./src/components/ids-data-label/ids-data-label.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsDataLabel)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _ids_data_label_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ids-data-label.scss */ \"./src/components/ids-data-label/ids-data-label.scss\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\nlet IdsDataLabel = class extends (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(_core_ids_element__WEBPACK_IMPORTED_MODULE_6__[\"default\"]))) {\n  constructor() {\n    super();\n    this.state = {\n      labelClass: \"top-positioned\"\n    };\n  }\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The propertires in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_POSITION,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LANGUAGE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MODE\n    ];\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    return `<div class=\"${this.labelClass}\">\n        <ids-text class=\"label\" font-size=\"16\">${this.label}<span class=\"colon\">${this.colon}</span></ids-text>\n        <ids-text class=\"description\" font-size=\"16\"><slot></slot></ids-text>\n      </div>`;\n  }\n  /**\n   * Sets to label\n   * @param {string} value label string\n   */\n  set label(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL);\n    }\n    const label = this.container?.querySelector(\".label\");\n    if (label) {\n      label.innerHTML = `${value ?? \"\"}<span class=\"colon\">${this.colon}</span>`;\n    }\n  }\n  get label() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL) ?? \"\";\n  }\n  /**\n   * Sets to label\n   * @param {string} value label string\n   */\n  set labelPosition(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_POSITION, value);\n      if (this.container) {\n        this.container.className = `${value}-positioned`;\n      }\n    }\n  }\n  get labelPosition() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_POSITION);\n  }\n  /**\n   * @returns {string} css class for data-label\n   */\n  get labelClass() {\n    if (this.labelPosition) {\n      return `${this.labelPosition}-positioned`;\n    }\n    return \"top-positioned\";\n  }\n  /**\n   * @returns {string} css class for data-label\n   */\n  get colon() {\n    return this.labelPosition === \"left\" ? \":\" : \"\";\n  }\n};\nIdsDataLabel = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-data-label\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_data_label_scss__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n], IdsDataLabel);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0YS1sYWJlbC9pZHMtZGF0YS1sYWJlbC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQztBQUNUO0FBQ1I7QUFDTztBQUNDO0FBQ0E7QUFDSjtBQUNoQjtBQVVQLElBQXFCLGVBQXJCLGNBQTBDLG1GQUFhLENBQUMscUZBQWMsQ0FBQyxxRkFBYyxDQUFDLHlEQUFVLENBQUMsQ0FBQyxFQUFFO0FBQUEsRUFDbEcsY0FBYztBQUNaLFVBQU07QUFFTixTQUFLLFFBQVE7QUFBQSxNQUNYLFlBQVk7QUFBQSxJQUNkO0FBQUEsRUFDRjtBQUFBLEVBRUEsb0JBQW9CO0FBQ2xCLFVBQU0sa0JBQWtCO0FBQUEsRUFDMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLE1BQ1Qsa0VBQWdCO0FBQUwsTUFDWCwyRUFBeUI7QUFBZCxNQUNYLHFFQUFtQjtBQUFSLE1BQ1gsaUVBQWU7QUFBSixJQUNiO0FBQUEsRUFDRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxXQUFtQjtBQUNqQixXQUFPLGVBQWUsS0FBSztBQUFBLGlEQUNrQixLQUFLLDRCQUE0QixLQUFLO0FBQUE7QUFBQTtBQUFBLEVBR3JGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksTUFBTSxPQUFlO0FBQ3ZCLFFBQUksT0FBTztBQUNULFdBQUssYUFBYSxrRUFBZ0IsRUFBRSxLQUFLO0FBQUEsSUFDM0MsT0FBTztBQUNMLFdBQUssZ0JBQWdCLGtFQUFnQjtBQUFBLElBQ3ZDO0FBRUEsVUFBTSxRQUFRLEtBQUssV0FBVyxjQUFjLFFBQVE7QUFDcEQsUUFBSSxPQUFPO0FBQ1QsWUFBTSxZQUFZLEdBQUcsU0FBUyx5QkFBeUIsS0FBSztBQUFBLElBQzlEO0FBQUEsRUFDRjtBQUFBLEVBRUEsSUFBSSxRQUFnQjtBQUNsQixXQUFPLEtBQUssYUFBYSxrRUFBZ0IsS0FBSztBQUFBLEVBQ2hEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksY0FBYyxPQUFzQjtBQUN0QyxRQUFJLE9BQU87QUFDVCxXQUFLLGFBQWEsMkVBQXlCLEVBQUUsS0FBSztBQUNsRCxVQUFJLEtBQUssV0FBVztBQUNsQixhQUFLLFVBQVUsWUFBWSxHQUFHO0FBQUEsTUFDaEM7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUFBLEVBRUEsSUFBSSxnQkFBK0I7QUFDakMsV0FBTyxLQUFLLGFBQWEsMkVBQXlCO0FBQUEsRUFDcEQ7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQUtBLElBQUksYUFBcUI7QUFDdkIsUUFBSSxLQUFLLGVBQWU7QUFDdEIsYUFBTyxHQUFHLEtBQUs7QUFBQSxJQUNqQjtBQUNBLFdBQU87QUFBQSxFQUNUO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQSxJQUFJLFFBQWdCO0FBQ2xCLFdBQU8sS0FBSyxrQkFBa0IsU0FBUyxNQUFNO0FBQUEsRUFDL0M7QUFDRjtBQTVGcUIsZUFBckI7QUFBQSxFQUZDLG1FQUFhLENBQUMsZ0JBQWdCO0FBQUEsRUFDOUIsMERBQUksQ0FBQyw0REFBTTtBQUFBLEdBQ1MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kYXRhLWxhYmVsL2lkcy1kYXRhLWxhYmVsLnRzPzkyYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VzdG9tRWxlbWVudCwgc2NzcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2lkcy1kYXRhLWxhYmVsLnNjc3MnO1xuaW1wb3J0IElkc1RoZW1lTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy10aGVtZS1taXhpbi9pZHMtdGhlbWUtbWl4aW4nO1xuaW1wb3J0IElkc0V2ZW50c01peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtZXZlbnRzLW1peGluL2lkcy1ldmVudHMtbWl4aW4nO1xuaW1wb3J0IElkc0xvY2FsZU1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtbG9jYWxlLW1peGluL2lkcy1sb2NhbGUtbWl4aW4nO1xuaW1wb3J0IElkc0VsZW1lbnQgZnJvbSAnLi4vLi4vY29yZS9pZHMtZWxlbWVudCc7XG5pbXBvcnQgJy4uL2lkcy10ZXh0L2lkcy10ZXh0JztcblxuLyoqXG4gKiBJRFMgRGF0YSBMYWJlbCBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNEYXRhTGFiZWx9XG4gKiBAaW5oZXJpdHMgSWRzRWxlbWVudFxuICogQG1peGVzIElkc1RoZW1lTWl4aW5cbiAqL1xuQGN1c3RvbUVsZW1lbnQoJ2lkcy1kYXRhLWxhYmVsJylcbkBzY3NzKHN0eWxlcylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkc0RhdGFMYWJlbCBleHRlbmRzIElkc1RoZW1lTWl4aW4oSWRzTG9jYWxlTWl4aW4oSWRzRXZlbnRzTWl4aW4oSWRzRWxlbWVudCkpKSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgbGFiZWxDbGFzczogJ3RvcC1wb3NpdGlvbmVkJyxcbiAgICB9O1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGF0dHJpYnV0ZXMgd2UgaGFuZGxlIGFzIGdldHRlcnMvc2V0dGVyc1xuICAgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBwcm9wZXJ0aXJlcyBpbiBhbiBhcnJheVxuICAgKi9cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5MQUJFTCxcbiAgICAgIGF0dHJpYnV0ZXMuTEFCRUxfUE9TSVRJT04sXG4gICAgICBhdHRyaWJ1dGVzLkxBTkdVQUdFLFxuICAgICAgYXR0cmlidXRlcy5NT0RFXG4gICAgXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIFRlbXBsYXRlIGZvciB0aGUgY29udGVudHNcbiAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHRlbXBsYXRlXG4gICAqL1xuICB0ZW1wbGF0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgPGRpdiBjbGFzcz1cIiR7dGhpcy5sYWJlbENsYXNzfVwiPlxuICAgICAgICA8aWRzLXRleHQgY2xhc3M9XCJsYWJlbFwiIGZvbnQtc2l6ZT1cIjE2XCI+JHt0aGlzLmxhYmVsfTxzcGFuIGNsYXNzPVwiY29sb25cIj4ke3RoaXMuY29sb259PC9zcGFuPjwvaWRzLXRleHQ+XG4gICAgICAgIDxpZHMtdGV4dCBjbGFzcz1cImRlc2NyaXB0aW9uXCIgZm9udC1zaXplPVwiMTZcIj48c2xvdD48L3Nsb3Q+PC9pZHMtdGV4dD5cbiAgICAgIDwvZGl2PmA7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0byBsYWJlbFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgbGFiZWwgc3RyaW5nXG4gICAqL1xuICBzZXQgbGFiZWwodmFsdWU6IHN0cmluZykge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5MQUJFTCwgdmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkxBQkVMKTtcbiAgICB9XG5cbiAgICBjb25zdCBsYWJlbCA9IHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yKCcubGFiZWwnKTtcbiAgICBpZiAobGFiZWwpIHtcbiAgICAgIGxhYmVsLmlubmVySFRNTCA9IGAke3ZhbHVlID8/ICcnfTxzcGFuIGNsYXNzPVwiY29sb25cIj4ke3RoaXMuY29sb259PC9zcGFuPmA7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGxhYmVsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTEFCRUwpID8/ICcnO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdG8gbGFiZWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIGxhYmVsIHN0cmluZ1xuICAgKi9cbiAgc2V0IGxhYmVsUG9zaXRpb24odmFsdWU6IHN0cmluZyB8IG51bGwpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTEFCRUxfUE9TSVRJT04sIHZhbHVlKTtcbiAgICAgIGlmICh0aGlzLmNvbnRhaW5lcikge1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5jbGFzc05hbWUgPSBgJHt2YWx1ZX0tcG9zaXRpb25lZGA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0IGxhYmVsUG9zaXRpb24oKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTEFCRUxfUE9TSVRJT04pO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IGNzcyBjbGFzcyBmb3IgZGF0YS1sYWJlbFxuICAgKi9cbiAgZ2V0IGxhYmVsQ2xhc3MoKTogc3RyaW5nIHtcbiAgICBpZiAodGhpcy5sYWJlbFBvc2l0aW9uKSB7XG4gICAgICByZXR1cm4gYCR7dGhpcy5sYWJlbFBvc2l0aW9ufS1wb3NpdGlvbmVkYDtcbiAgICB9XG4gICAgcmV0dXJuICd0b3AtcG9zaXRpb25lZCc7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge3N0cmluZ30gY3NzIGNsYXNzIGZvciBkYXRhLWxhYmVsXG4gICAqL1xuICBnZXQgY29sb24oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5sYWJlbFBvc2l0aW9uID09PSAnbGVmdCcgPyAnOicgOiAnJztcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-data-label/ids-data-label.ts\n");

/***/ }),

/***/ "./src/components/ids-demo-app/ids-demo-listing.ts":
/*!*********************************************************!*\
  !*** ./src/components/ids-demo-app/ids-demo-listing.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsDemoListing)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_data_grid_ids_data_grid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-data-grid/ids-data-grid */ \"./src/components/ids-data-grid/ids-data-grid.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\nlet IdsDemoListing = class extends _core_ids_element__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.#attachColumns();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The propertires in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPONENT_NAME\n    ];\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    return `<ids-data-grid id=\"${this.id}\" list-style=\"true\" label=\"${this.label}\"></ids-data-grid>`;\n  }\n  /**\n   * Set the listing internal label\n   * @param {string} value of the label text\n   */\n  set label(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL);\n    }\n  }\n  get label() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL);\n  }\n  /**\n   * Set the component name\n   * @param {string} value name of the component\n   */\n  set componentName(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPONENT_NAME, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPONENT_NAME);\n    }\n  }\n  get componentName() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COMPONENT_NAME);\n  }\n  /**\n   * Set the yaml on the data grid\n   * @param {string} value of the label text\n   */\n  set data(value) {\n    if (this.container) {\n      this.container.data = value;\n    }\n  }\n  get data() {\n    return this.container.data;\n  }\n  /**\n   * Set the data grid columns\n   */\n  #attachColumns = () => {\n    const columns = [];\n    columns.push({\n      id: \"link\",\n      name: \"Example Name\",\n      field: \"link\",\n      href: `/${this.componentName}/{{value}}`,\n      sortable: true,\n      formatter: this.container?.formatters.hyperlink\n    });\n    columns.push({\n      id: \"type\",\n      name: \"Example Type\",\n      field: \"type\",\n      sortable: true,\n      formatter: this.container?.formatters.text\n    });\n    columns.push({\n      id: \"description\",\n      name: \"Description\",\n      field: \"description\",\n      sortable: true,\n      formatter: this.container?.formatters.text\n    });\n    this.container.columns = columns;\n  };\n};\nIdsDemoListing = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-demo-listing\")\n], IdsDemoListing);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZGVtby1hcHAvaWRzLWRlbW8tbGlzdGluZy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQThCO0FBQ0g7QUFDSjtBQUVoQjtBQVNQLElBQXFCLGlCQUFyQixjQUE0Qyx5REFBVSxDQUFDO0FBQUEsRUFDckQsY0FBYztBQUNaLFVBQU07QUFBQSxFQUNSO0FBQUEsRUFFQSxvQkFBb0I7QUFDbEIsVUFBTSxrQkFBa0I7QUFDeEIsU0FBSyxlQUFlO0FBQUEsRUFDdEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLE1BQ1Qsa0VBQWdCO0FBQUwsTUFDWCwyRUFBeUI7QUFBZCxJQUNiO0FBQUEsRUFDRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxXQUFtQjtBQUNqQixXQUFPLHNCQUFzQixLQUFLLGdDQUFnQyxLQUFLO0FBQUEsRUFDekU7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSxNQUFNLE9BQXNCO0FBQzlCLFFBQUksT0FBTztBQUNULFdBQUssYUFBYSxrRUFBZ0IsRUFBRSxLQUFLO0FBQUEsSUFDM0MsT0FBTztBQUNMLFdBQUssZ0JBQWdCLGtFQUFnQjtBQUFBLElBQ3ZDO0FBQUEsRUFDRjtBQUFBLEVBRUEsSUFBSSxRQUFRO0FBQ1YsV0FBTyxLQUFLLGFBQWEsa0VBQWdCO0FBQUEsRUFDM0M7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSxjQUFjLE9BQXNCO0FBQ3RDLFFBQUksT0FBTztBQUNULFdBQUssYUFBYSwyRUFBeUIsRUFBRSxLQUFLO0FBQUEsSUFDcEQsT0FBTztBQUNMLFdBQUssZ0JBQWdCLDJFQUF5QjtBQUFBLElBQ2hEO0FBQUEsRUFDRjtBQUFBLEVBRUEsSUFBSSxnQkFBZ0I7QUFDbEIsV0FBTyxLQUFLLGFBQWEsMkVBQXlCO0FBQUEsRUFDcEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBTUEsSUFBSSxLQUFLLE9BQW1DO0FBQzFDLFFBQUksS0FBSyxXQUFXO0FBQ2xCLE1BQUMsS0FBSyxVQUEwQixPQUFPO0FBQUEsSUFDekM7QUFBQSxFQUNGO0FBQUEsRUFFQSxJQUFJLE9BQU87QUFDVCxXQUFRLEtBQUssVUFBMEI7QUFBQSxFQUN6QztBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS0EsaUJBQWlCLE1BQU07QUFDckIsVUFBTSxVQUFVLENBQUM7QUFDakIsWUFBUSxLQUFLO0FBQUEsTUFDWCxJQUFJO0FBQUEsTUFDSixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxNQUFNLElBQUksS0FBSztBQUFBLE1BQ2YsVUFBVTtBQUFBLE1BQ1YsV0FBWSxLQUFLLFdBQTJCLFdBQVc7QUFBQSxJQUN6RCxDQUFDO0FBQ0QsWUFBUSxLQUFLO0FBQUEsTUFDWCxJQUFJO0FBQUEsTUFDSixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxVQUFVO0FBQUEsTUFDVixXQUFZLEtBQUssV0FBMkIsV0FBVztBQUFBLElBQ3pELENBQUM7QUFDRCxZQUFRLEtBQUs7QUFBQSxNQUNYLElBQUk7QUFBQSxNQUNKLE1BQU07QUFBQSxNQUNOLE9BQU87QUFBQSxNQUNQLFVBQVU7QUFBQSxNQUNWLFdBQVksS0FBSyxXQUEyQixXQUFXO0FBQUEsSUFDekQsQ0FBQztBQUVELElBQUMsS0FBSyxVQUEwQixVQUFVO0FBQUEsRUFDNUM7QUFDRjtBQTFHcUIsaUJBQXJCO0FBQUEsRUFEQyxtRUFBYSxDQUFDLGtCQUFrQjtBQUFBLEdBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kZW1vLWFwcC9pZHMtZGVtby1saXN0aW5nLnRzPzFjZGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VzdG9tRWxlbWVudCB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IElkc0VsZW1lbnQgZnJvbSAnLi4vLi4vY29yZS9pZHMtZWxlbWVudCc7XG5cbmltcG9ydCAnLi4vaWRzLWRhdGEtZ3JpZC9pZHMtZGF0YS1ncmlkJztcbmltcG9ydCB0eXBlIElkc0RhdGFHcmlkIGZyb20gJy4uL2lkcy1kYXRhLWdyaWQvaWRzLWRhdGEtZ3JpZCc7XG5cbi8qKlxuICogSURTIERlbW8gTGlzdGluZyBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNEZW1vTGlzdGluZ31cbiAqIEBpbmhlcml0cyBJZHNFbGVtZW50XG4gKi9cbkBjdXN0b21FbGVtZW50KCdpZHMtZGVtby1saXN0aW5nJylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkc0RlbW9MaXN0aW5nIGV4dGVuZHMgSWRzRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIHRoaXMuI2F0dGFjaENvbHVtbnMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGF0dHJpYnV0ZXMgd2UgaGFuZGxlIGFzIGdldHRlcnMvc2V0dGVyc1xuICAgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBwcm9wZXJ0aXJlcyBpbiBhbiBhcnJheVxuICAgKi9cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5hdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5MQUJFTCxcbiAgICAgIGF0dHJpYnV0ZXMuQ09NUE9ORU5UX05BTUVcbiAgICBdO1xuICB9XG5cbiAgLyoqXG4gICAqIENyZWF0ZSB0aGUgVGVtcGxhdGUgZm9yIHRoZSBjb250ZW50c1xuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgdGVtcGxhdGVcbiAgICovXG4gIHRlbXBsYXRlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGA8aWRzLWRhdGEtZ3JpZCBpZD1cIiR7dGhpcy5pZH1cIiBsaXN0LXN0eWxlPVwidHJ1ZVwiIGxhYmVsPVwiJHt0aGlzLmxhYmVsfVwiPjwvaWRzLWRhdGEtZ3JpZD5gO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgbGlzdGluZyBpbnRlcm5hbCBsYWJlbFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgb2YgdGhlIGxhYmVsIHRleHRcbiAgICovXG4gIHNldCBsYWJlbCh2YWx1ZTogc3RyaW5nIHwgbnVsbCkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5MQUJFTCwgdmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkxBQkVMKTtcbiAgICB9XG4gIH1cblxuICBnZXQgbGFiZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTEFCRUwpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgY29tcG9uZW50IG5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIG5hbWUgb2YgdGhlIGNvbXBvbmVudFxuICAgKi9cbiAgc2V0IGNvbXBvbmVudE5hbWUodmFsdWU6IHN0cmluZyB8IG51bGwpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ09NUE9ORU5UX05BTUUsIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5DT01QT05FTlRfTkFNRSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGNvbXBvbmVudE5hbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ09NUE9ORU5UX05BTUUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgeWFtbCBvbiB0aGUgZGF0YSBncmlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBvZiB0aGUgbGFiZWwgdGV4dFxuICAgKi9cbiAgc2V0IGRhdGEodmFsdWU6IEFycmF5PFJlY29yZDxzdHJpbmcsIGFueT4+KSB7XG4gICAgaWYgKHRoaXMuY29udGFpbmVyKSB7XG4gICAgICAodGhpcy5jb250YWluZXIgYXMgSWRzRGF0YUdyaWQpLmRhdGEgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBnZXQgZGF0YSgpIHtcbiAgICByZXR1cm4gKHRoaXMuY29udGFpbmVyIGFzIElkc0RhdGFHcmlkKS5kYXRhO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgZGF0YSBncmlkIGNvbHVtbnNcbiAgICovXG4gICNhdHRhY2hDb2x1bW5zID0gKCkgPT4ge1xuICAgIGNvbnN0IGNvbHVtbnMgPSBbXTtcbiAgICBjb2x1bW5zLnB1c2goe1xuICAgICAgaWQ6ICdsaW5rJyxcbiAgICAgIG5hbWU6ICdFeGFtcGxlIE5hbWUnLFxuICAgICAgZmllbGQ6ICdsaW5rJyxcbiAgICAgIGhyZWY6IGAvJHt0aGlzLmNvbXBvbmVudE5hbWV9L3t7dmFsdWV9fWAsXG4gICAgICBzb3J0YWJsZTogdHJ1ZSxcbiAgICAgIGZvcm1hdHRlcjogKHRoaXMuY29udGFpbmVyIGFzIElkc0RhdGFHcmlkKT8uZm9ybWF0dGVycy5oeXBlcmxpbmtcbiAgICB9KTtcbiAgICBjb2x1bW5zLnB1c2goe1xuICAgICAgaWQ6ICd0eXBlJyxcbiAgICAgIG5hbWU6ICdFeGFtcGxlIFR5cGUnLFxuICAgICAgZmllbGQ6ICd0eXBlJyxcbiAgICAgIHNvcnRhYmxlOiB0cnVlLFxuICAgICAgZm9ybWF0dGVyOiAodGhpcy5jb250YWluZXIgYXMgSWRzRGF0YUdyaWQpPy5mb3JtYXR0ZXJzLnRleHRcbiAgICB9KTtcbiAgICBjb2x1bW5zLnB1c2goe1xuICAgICAgaWQ6ICdkZXNjcmlwdGlvbicsXG4gICAgICBuYW1lOiAnRGVzY3JpcHRpb24nLFxuICAgICAgZmllbGQ6ICdkZXNjcmlwdGlvbicsXG4gICAgICBzb3J0YWJsZTogdHJ1ZSxcbiAgICAgIGZvcm1hdHRlcjogKHRoaXMuY29udGFpbmVyIGFzIElkc0RhdGFHcmlkKT8uZm9ybWF0dGVycy50ZXh0XG4gICAgfSk7XG5cbiAgICAodGhpcy5jb250YWluZXIgYXMgSWRzRGF0YUdyaWQpLmNvbHVtbnMgPSBjb2x1bW5zO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-demo-app/ids-demo-listing.ts\n");

/***/ }),

/***/ "./src/utils/ids-breakpoint-utils/ids-breakpoint-utils.ts":
/*!****************************************************************!*\
  !*** ./src/utils/ids-breakpoint-utils/ids-breakpoint-utils.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"breakpoints\": () => (/* binding */ breakpoints),\n/* harmony export */   \"isWidthAbove\": () => (/* binding */ isWidthAbove),\n/* harmony export */   \"isWidthBelow\": () => (/* binding */ isWidthBelow)\n/* harmony export */ });\nconst breakpoints = {\n  xxl: \"1440px\",\n  xl: \"1280px\",\n  lg: \"1024px\",\n  md: \"840px\",\n  sm: \"600px\",\n  xs: \"360px\"\n};\nfunction isWidthBelow(size) {\n  const width = breakpoints[size];\n  return window.matchMedia(`(max-width: ${width})`);\n}\nfunction isWidthAbove(size) {\n  const width = breakpoints[size];\n  return window.matchMedia(`(min-width: ${width})`);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvaWRzLWJyZWFrcG9pbnQtdXRpbHMvaWRzLWJyZWFrcG9pbnQtdXRpbHMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRU8sTUFBTSxjQUEyQjtBQUFBLEVBQ3RDLEtBQUs7QUFBQSxFQUNMLElBQUk7QUFBQSxFQUNKLElBQUk7QUFBQSxFQUNKLElBQUk7QUFBQSxFQUNKLElBQUk7QUFBQSxFQUNKLElBQUk7QUFDTjtBQVFPLFNBQVMsYUFBYSxNQUF5QztBQUNwRSxRQUFNLFFBQVEsWUFBWSxJQUFJO0FBQzlCLFNBQU8sT0FBTyxXQUFXLGVBQWUsUUFBUTtBQUNsRDtBQVFPLFNBQVMsYUFBYSxNQUF5QztBQUNwRSxRQUFNLFFBQVEsWUFBWSxJQUFJO0FBQzlCLFNBQU8sT0FBTyxXQUFXLGVBQWUsUUFBUTtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL3V0aWxzL2lkcy1icmVha3BvaW50LXV0aWxzL2lkcy1icmVha3BvaW50LXV0aWxzLnRzPzg4ODQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQnJlYWtwb2ludHMgPSB7IFtpbmRleDogc3RyaW5nXTogc3RyaW5nIH07XG5cbmV4cG9ydCBjb25zdCBicmVha3BvaW50czogQnJlYWtwb2ludHMgPSB7XG4gIHh4bDogJzE0NDBweCcsXG4gIHhsOiAnMTI4MHB4JyxcbiAgbGc6ICcxMDI0cHgnLFxuICBtZDogJzg0MHB4JyxcbiAgc206ICc2MDBweCcsXG4gIHhzOiAnMzYwcHgnXG59O1xuXG4vKipcbiAqIENoZWNrIGZvciBtYXggd2lkdGggbWVkaWEgcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30gc2l6ZSBzaXplIG9mIHRoZSBicmVha3BvaW50XG4gKiBAcmV0dXJucyB7TWVkaWFRdWVyeUxpc3R9IG1lZGlhIHF1ZXJ5XG4gKiBAbWVtYmVyb2YgSWRzSGlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1dpZHRoQmVsb3coc2l6ZToga2V5b2YgQnJlYWtwb2ludHMpOiBNZWRpYVF1ZXJ5TGlzdCB7XG4gIGNvbnN0IHdpZHRoID0gYnJlYWtwb2ludHNbc2l6ZV07XG4gIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYShgKG1heC13aWR0aDogJHt3aWR0aH0pYCk7XG59XG5cbi8qKlxuICogQ2hlY2sgZm9yIG1pbiB3aWR0aCBtZWRpYSBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBzaXplIHNpemUgb2YgdGhlIGJyZWFrcG9pbnRcbiAqIEByZXR1cm5zIHtNZWRpYVF1ZXJ5TGlzdH0gbWVkaWEgcXVlcnlcbiAqIEBtZW1iZXJvZiBJZHNIaWRkZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzV2lkdGhBYm92ZShzaXplOiBrZXlvZiBCcmVha3BvaW50cyk6IE1lZGlhUXVlcnlMaXN0IHtcbiAgY29uc3Qgd2lkdGggPSBicmVha3BvaW50c1tzaXplXTtcbiAgcmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhKGAobWluLXdpZHRoOiAke3dpZHRofSlgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/ids-breakpoint-utils/ids-breakpoint-utils.ts\n");

/***/ }),

/***/ "./src/components/ids-calendar/ids-calendar.scss":
/*!*******************************************************!*\
  !*** ./src/components/ids-calendar/ids-calendar.scss ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.ids-calendar[mode=dark] .detail-item {\n  border-color: var(--ids-color-palette-slate-70);\n}\n\n.ids-calendar[mode=contrast] .detail-item {\n  border-color: var(--ids-color-palette-slate-60);\n}\n\n.ids-calendar {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.calendar-legend-pane,\n.calendar-details-pane {\n  display: none;\n  width: 220px;\n  height: auto;\n}\n\n.ids-calendar.show-legend .calendar-legend-pane,\n.ids-calendar.show-details .calendar-details-pane {\n  display: block;\n}\n\n.calendar-contents {\n  flex-grow: 1;\n}\n\n.calendar-toolbar-pane {\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--ids-color-palette-slate-20);\n  background-color: var(--ids-color-palette-white);\n  display: block;\n  border-bottom: 0;\n  left: 0;\n  top: 0;\n  z-index: 4;\n  flex-shrink: 0;\n}\n\nids-toolbar-section::part(container),\n.ids-toolbar-section {\n  align-items: center;\n}\n\n.calendar-view-pane {\n  flex-grow: 1;\n}\n\n.calendar-details-pane ids-accordion-header[color=azure]::part(header) {\n  background-color: var(--ids-color-palette-azure-60);\n}\n.calendar-details-pane ids-accordion-header[color=amber]::part(header) {\n  background-color: var(--ids-color-palette-amber-60);\n}\n.calendar-details-pane ids-accordion-header[color=amethyst]::part(header) {\n  background-color: var(--ids-color-palette-amethyst-60);\n}\n.calendar-details-pane ids-accordion-header[color=emerald]::part(header) {\n  background-color: var(--ids-color-palette-emerald-60);\n}\n.calendar-details-pane ids-accordion-header[color=ruby]::part(header) {\n  background-color: var(--ids-color-palette-ruby-60);\n}\n.calendar-details-pane ids-accordion-header[color=turquoise]::part(header) {\n  background-color: var(--ids-color-palette-turquoise-60);\n}\n.calendar-details-pane ids-accordion-header[color=slate]::part(header) {\n  background-color: var(--ids-color-palette-slate-60);\n}\n.calendar-details-pane ids-accordion-header::part(header) {\n  color: var(--ids-color-palette-slate-10);\n}\n.calendar-details-pane ids-accordion-header ids-text::part(text) {\n  overflow: hidden;\n  width: 150px;\n  white-space: nowrap;\n}\n.calendar-details-pane .panel-content {\n  padding-top: 15px;\n  padding-bottom: 15px;\n}\n.calendar-details-pane .panel-content hr {\n  border-bottom: none;\n  margin: 20px 0;\n}\n\nids-accordion-panel::part(content) {\n  padding: 4px 0;\n}\n\n.btn-previous,\n.btn-next {\n  height: 36px;\n}\n\n.btn-today-text {\n  color: var(--ids-color-palette-azure-60);\n}\n\n.calendar-events-list {\n  margin-top: 20px;\n  padding: 0;\n}\n.calendar-events-list .detail-item[color=azure] {\n  border-inline-start-color: var(--ids-color-palette-azure-60);\n}\n.calendar-events-list .detail-item[color=amber] {\n  border-inline-start-color: var(--ids-color-palette-amber-60);\n}\n.calendar-events-list .detail-item[color=amethyst] {\n  border-inline-start-color: var(--ids-color-palette-amethyst-60);\n}\n.calendar-events-list .detail-item[color=emerald] {\n  border-inline-start-color: var(--ids-color-palette-emerald-60);\n}\n.calendar-events-list .detail-item[color=ruby] {\n  border-inline-start-color: var(--ids-color-palette-ruby-60);\n}\n.calendar-events-list .detail-item[color=turquoise] {\n  border-inline-start-color: var(--ids-color-palette-turquoise-60);\n}\n.calendar-events-list .detail-item[color=slate] {\n  border-inline-start-color: var(--ids-color-palette-slate-60);\n}\n.calendar-events-list .detail-item {\n  border-style: solid;\n  border-color: var(--ids-color-palette-slate-20);\n  border-width: 1px;\n  border-inline-start-width: 4px;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  list-style: none;\n  align-items: center;\n  padding: 15px;\n}\n.calendar-events-list .detail-item:focus {\n  border-color: var(--ids-color-palette-azure-60);\n  outline: none;\n}\n.calendar-events-list .calendar-detail-content {\n  flex-grow: 1;\n}\n.calendar-events-list .detail-item-duration {\n  padding: 0 8px;\n}\n\n.event-type-label,\n.event-types-legend {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.event-types-legend {\n  display: none;\n  padding: 10px;\n}\n.event-types-legend .event-type-color[color=azure] {\n  background-color: var(--ids-color-palette-azure-60);\n}\n.event-types-legend .event-type-color[color=amber] {\n  background-color: var(--ids-color-palette-amber-60);\n}\n.event-types-legend .event-type-color[color=amethyst] {\n  background-color: var(--ids-color-palette-amethyst-60);\n}\n.event-types-legend .event-type-color[color=emerald] {\n  background-color: var(--ids-color-palette-emerald-60);\n}\n.event-types-legend .event-type-color[color=ruby] {\n  background-color: var(--ids-color-palette-ruby-60);\n}\n.event-types-legend .event-type-color[color=turquoise] {\n  background-color: var(--ids-color-palette-turquoise-60);\n}\n.event-types-legend .event-type-color[color=slate] {\n  background-color: var(--ids-color-palette-slate-60);\n}\n\n.event-type-label {\n  margin: 0 8px;\n}\n\n.event-type-color {\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 10px;\n  margin: 0 3px;\n}\n\n.inline-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n#event-form-popup {\n  width: 320px;\n}\n#event-form-popup::part(popup) {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n#event-form-header {\n  align-items: center;\n  color: var(--ids-color-palette-slate-10);\n  height: 40px;\n  padding-inline-start: 16px;\n  padding-inline-end: 8px;\n}\n#event-form-header ids-button::part(button) {\n  color: var(--ids-color-palette-slate-10);\n}\n\n#event-form {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n#event-form #event-form-header[color=azure] {\n  background-color: var(--ids-color-palette-azure-60);\n}\n#event-form #event-form-header[color=amber] {\n  background-color: var(--ids-color-palette-amber-60);\n}\n#event-form #event-form-header[color=amethyst] {\n  background-color: var(--ids-color-palette-amethyst-60);\n}\n#event-form #event-form-header[color=emerald] {\n  background-color: var(--ids-color-palette-emerald-60);\n}\n#event-form #event-form-header[color=ruby] {\n  background-color: var(--ids-color-palette-ruby-60);\n}\n#event-form #event-form-header[color=turquoise] {\n  background-color: var(--ids-color-palette-turquoise-60);\n}\n#event-form #event-form-header[color=slate] {\n  background-color: var(--ids-color-palette-slate-60);\n}\n#event-form ids-list-box {\n  max-width: 278px;\n}\n#event-form ids-list-box-option {\n  text-align: left;\n}\n#event-form ids-date-picker,\n#event-form ids-time-picker {\n  max-width: 128px;\n}\n\n#event-form-content {\n  flex-grow: 1;\n  box-sizing: border-box;\n  padding: 12px 20px;\n  position: relative;\n}\n\n#event-form-actions ids-button {\n  flex-grow: 1;\n  border: 1px solid var(--ids-color-palette-slate-40);\n  border-bottom-width: 0;\n}\n#event-form-actions ids-button::part(button) {\n  padding-top: 13px;\n  padding-bottom: 13px;\n}\n#event-form-actions ids-button[data-action=close] {\n  border-inline-start-width: 0;\n}\n#event-form-actions ids-button[data-action=submit] {\n  border-inline-end-width: 0;\n  border-inline-start-width: 0;\n  margin-inline-start: -1px;\n}\n#event-form-actions ids-button[data-action=submit]::part(button) {\n  color: var(--ids-color-palette-azure-70);\n}\n#event-form-actions ids-button[data-action=submit]::part(button):hover {\n  color: var(--ids-color-palette-azure-80);\n}\n\n@media (max-width: 840px) {\n  .ids-calendar {\n    display: block;\n  }\n  .ids-calendar.show-legend .calendar-legend-pane {\n    display: none;\n  }\n  .calendar-view-pane,\n  .calendar-details-pane {\n    width: 100%;\n  }\n  #event-form-popup {\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n  #event-form-popup::part(popup) {\n    height: 100%;\n    width: 100%;\n  }\n  #event-form-content ids-date-picker,\n  #event-form-content ids-time-picker {\n    max-width: unset;\n  }\n  #event-form-content .inline-container {\n    display: block;\n  }\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-calendar/ids-calendar.scss\n");

/***/ }),

/***/ "./src/components/ids-data-label/ids-data-label.scss":
/*!***********************************************************!*\
  !*** ./src/components/ids-data-label/ids-data-label.scss ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host([language*=fr]) .left-positioned .colon {\n  padding-left: 8px;\n}\n\n.left-positioned {\n  display: flex;\n  flex-direction: row;\n}\n.left-positioned .label {\n  color: var(--ids-color-palette-black);\n  margin-bottom: 8px;\n  padding-right: 8px;\n  white-space: nowrap;\n}\n.left-positioned .label[mode=dark] {\n  color: var(--ids-color-palette-white);\n}\n.left-positioned .data {\n  color: var(--ids-color-palette-slate-100);\n}\n\n.top-positioned {\n  display: flex;\n  flex-direction: column;\n}\n.top-positioned .label {\n  color: var(--ids-color-palette-slate-60);\n  margin-bottom: 8px;\n}\n.top-positioned .label[mode=dark] {\n  color: var(--ids-color-palette-slate-30);\n}\n.top-positioned .label[mode=contrast] {\n  color: var(--ids-color-palette-slate-90);\n}\n.top-positioned .data {\n  color: var(--ids-color-palette-slate-100);\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0YS1sYWJlbC9pZHMtZGF0YS1sYWJlbC5zY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUlBO0FDQUk7RUFDRTs7O0FBS047RUFDRTtFQUNBOztBQUVBO0VBQ0U7RUFDQTtFQUNBO0VBQ0E7O0FBRUE7RUFDRTs7QUFJSjtFQUNFOzs7QUFJSjtFQUNFO0VBQ0E7O0FBRUE7RUFDRTtFQUNBOztBQUVBO0VBQ0U7O0FBR0Y7RUFDRTs7QUFJSjtFQUNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29yZS9pZHMtYmFzZS5zY3NzPzFiZjIiLCJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0YS1sYWJlbC9pZHMtZGF0YS1sYWJlbC5zY3NzPzgzNjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyogU2FzcyBzY3NzIHN0eWxlcy4gS2VlcCBCYXNlIHZlcnkgc21hbGwgKi9cbkBpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9pZHMtaWRlbnRpdHkvZGlzdC90aGVtZS1uZXcvdG9rZW5zL3dlYi90aGVtZS1uZXctbWl4aW5zJztcbkBpbXBvcnQgJy4uL21peGlucy9zYXNzL2lkcy1nZW5lcmFsLW1peGlucyc7XG5cbi8qIEdsb2JhbCB2YXJpYWJsZXMgKG1pZ2h0IHdhbnQgdGhlc2UgdG8gYmVjb21lIHRva2VucykgKi9cbiRicmVha3BvaW50LXh4bDogMTQ0MHB4O1xuJGJyZWFrcG9pbnQteGw6IDEyODBweDtcbiRicmVha3BvaW50LWxnOiAxMDI0cHg7XG4kYnJlYWtwb2ludC1tZDogODQwcHg7XG4kYnJlYWtwb2ludC1zbTogNjAwcHg7XG4kYnJlYWtwb2ludC14czogMzYwcHg7XG5cbiR0cmFuc2l0aW9uLWxlbmd0aDogMjAwbXM7XG4kdHJhbnNpdGlvbi1lYXNlOiBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjYsIDEpO1xuXG4vLyBGaWVsZCBTaXplc1xuJGlucHV0LXNpemUteHM6IDc1cHg7XG4kaW5wdXQtc2l6ZS1zbTogMTUwcHg7XG4kaW5wdXQtc2l6ZS1tbTogMjI1cHg7XG4kaW5wdXQtc2l6ZS1tZDogMzAwcHg7XG4kaW5wdXQtc2l6ZS1sZzogNDAwcHg7XG4kaW5wdXQtc2l6ZS1mdWxsOiAxMDAlO1xuXG4vLyBGaWVsZCBIZWlnaHRzXG4kaW5wdXQtZmllbGQtaGVpZ2h0LXhzOiAyOHB4O1xuJGlucHV0LWZpZWxkLWhlaWdodC1zbTogMzBweDtcbiRpbnB1dC1maWVsZC1oZWlnaHQtbWQ6IDM4cHg7XG4kaW5wdXQtZmllbGQtaGVpZ2h0LWxnOiA0OHB4O1xuXG4vLyBTb21ldGltZXMgd2UgbmVlZCB0byBcImZhZGVcIiB3aGl0ZSBpbnRvIHRyYW5zcGFyZW5jeSwgc28gd2UgbmVlZCBhXG4vLyBjb21wbGV0ZWx5LXRyYW5zcGFyZW50IFwid2hpdGVcIiBjb2xvciB0byB1c2UgYXMgb25lIGVuZCBvZiBhIGdyYWRpZW50LlxuJHRyYW5zcGFyZW50LXdoaXRlOiByZ2JhKDI1NSAyNTUgMjU1IC8gMCk7XG4iLCJAaW1wb3J0ICcuLi8uLi9jb3JlL2lkcy1iYXNlJztcblxuOmhvc3QoW2xhbmd1YWdlKj0nZnInXSkge1xuICAubGVmdC1wb3NpdGlvbmVkIHtcbiAgICAuY29sb24ge1xuICAgICAgcGFkZGluZy1sZWZ0OiA4cHg7XG4gICAgfVxuICB9XG59XG5cbi5sZWZ0LXBvc2l0aW9uZWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gIC5sYWJlbCB7XG4gICAgY29sb3I6IHZhcigtLWlkcy1jb2xvci1wYWxldHRlLWJsYWNrKTtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgcGFkZGluZy1yaWdodDogOHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgICAmW21vZGU9J2RhcmsnXSB7XG4gICAgICBjb2xvcjogdmFyKC0taWRzLWNvbG9yLXBhbGV0dGUtd2hpdGUpO1xuICAgIH1cbiAgfVxuXG4gIC5kYXRhIHtcbiAgICBjb2xvcjogdmFyKC0taWRzLWNvbG9yLXBhbGV0dGUtc2xhdGUtMTAwKTtcbiAgfVxufVxuXG4udG9wLXBvc2l0aW9uZWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gIC5sYWJlbCB7XG4gICAgY29sb3I6IHZhcigtLWlkcy1jb2xvci1wYWxldHRlLXNsYXRlLTYwKTtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG5cbiAgICAmW21vZGU9J2RhcmsnXSB7XG4gICAgICBjb2xvcjogdmFyKC0taWRzLWNvbG9yLXBhbGV0dGUtc2xhdGUtMzApO1xuICAgIH1cblxuICAgICZbbW9kZT0nY29udHJhc3QnXSB7XG4gICAgICBjb2xvcjogdmFyKC0taWRzLWNvbG9yLXBhbGV0dGUtc2xhdGUtOTApO1xuICAgIH1cbiAgfVxuXG4gIC5kYXRhIHtcbiAgICBjb2xvcjogdmFyKC0taWRzLWNvbG9yLXBhbGV0dGUtc2xhdGUtMTAwKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-data-label/ids-data-label.scss\n");

/***/ }),

/***/ "./src/components/ids-calendar/demos/index.yaml":
/*!******************************************************!*\
  !*** ./src/components/ids-calendar/demos/index.yaml ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({component:'Calendar',link:'ids-calendar',description:'Displays month, week, day views',category:'Layouts',keywords:'calendar, date, day, week, month, toolbar, time',examples:[{link:'example.html',type:'Main Example',description:'Default Calendar View'},{link:'example-custom.html',type:'Example',description:'Custom Calendar View'}]});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtY2FsZW5kYXIvZGVtb3MvaW5kZXgueWFtbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQyxnTEFBZ0wsNEVBQTRFLEVBQUUsNkVBQTZFLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1jYWxlbmRhci9kZW1vcy9pbmRleC55YW1sP2RiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge2NvbXBvbmVudDonQ2FsZW5kYXInLGxpbms6J2lkcy1jYWxlbmRhcicsZGVzY3JpcHRpb246J0Rpc3BsYXlzIG1vbnRoLCB3ZWVrLCBkYXkgdmlld3MnLGNhdGVnb3J5OidMYXlvdXRzJyxrZXl3b3JkczonY2FsZW5kYXIsIGRhdGUsIGRheSwgd2VlaywgbW9udGgsIHRvb2xiYXIsIHRpbWUnLGV4YW1wbGVzOlt7bGluazonZXhhbXBsZS5odG1sJyx0eXBlOidNYWluIEV4YW1wbGUnLGRlc2NyaXB0aW9uOidEZWZhdWx0IENhbGVuZGFyIFZpZXcnfSx7bGluazonZXhhbXBsZS1jdXN0b20uaHRtbCcsdHlwZTonRXhhbXBsZScsZGVzY3JpcHRpb246J0N1c3RvbSBDYWxlbmRhciBWaWV3J31dfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-calendar/demos/index.yaml\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("c372f59fb5be38f43bb9")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"ids-calendar": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-menu_ids-menu-group_scss-src_components_ids-menu_ids-menu-header_scss-src_-787682","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-menu_ids-menu-group_ts-src_components_ids-menu_ids-menu-item_ts-src_compon-420212","src_components_ids-menu_ids-menu_ts","src_components_ids-popup-menu_ids-popup-menu_ts","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_mixins_ids-focus-capture-mixin_ids-focus-capture-mixin_ts-src_mixins_ids-xss-mixin_ids-xs-3364f3","src_components_ids-trigger-field_ids-trigger-field_ts-src_mixins_ids-label-state-mixin_ids-la-e23ef2","src_components_ids-dropdown_ids-dropdown_ts","src_components_ids-toolbar_ids-toolbar_ts","src_components_ids-hyperlink_ids-hyperlink_ts","src_components_ids-card_ids-card_ts","src_components_ids-pager_ids-pager_ts","src_components_ids-virtual-scroll_ids-virtual-scroll_ts","src_components_ids-time-picker_ids-time-picker-popup_ts","src_components_ids-time-picker_ids-time-picker_ts","src_components_ids-month-view_ids-month-view_scss","src_components_ids-calendar_ids-calendar-event_ts","src_components_ids-expandable-area_ids-expandable-area_ts-src_components_ids-toggle-button_id-24819b","src_components_ids-month-view_ids-month-view_ts","src_components_ids-date-picker_ids-date-picker_ts","src_components_ids-tag_ids-tag_ts","src_components_ids-image_ids-image_ts","src_components_ids-slider_ids-slider_ts","src_components_ids-alert_ids-alert_ts-src_components_ids-step-chart_ids-step-chart_ts","src_components_ids-data-grid_ids-data-grid_scss","src_components_ids-data-grid_ids-data-grid_ts","src_components_ids-textarea_ids-textarea_scss","src_components_ids-textarea_ids-textarea_ts","src_components_ids-accordion_ids-accordion_ts","src_components_ids-week-view_ids-week-view_ts","src_components_ids-calendar_demos_custom-calendar-event_ts"], () => (__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=4300&pathname=%2Fws&logging=error&overlay=true&reconnect=10&hot=false&live-reload=true")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_webpack-dev-server_client_index_js_protocol_ws_3A_hostname_0_0_0_0_port_-ebf8ca","vendors-node_modules_ids-identity_dist_theme-new_icons_empty_path-data_json","vendors-node_modules_ids-identity_dist_theme-new_icons_standard_path-data_json","src_core_ids-attributes_ts-src_core_ids-decorators_ts-src_core_ids-element_ts","src_mixins_ids-events-mixin_ids-events-mixin_ts","src_components_ids-locale_ids-locale_ts","src_components_ids-popup_ids-popup_scss","src_mixins_ids-locale-mixin_ids-locale-mixin_ts-src_utils_ids-dom-utils_ids-dom-utils_ts-src_-0d5e42","src_components_ids-popup_ids-popup_ts","src_mixins_ids-tooltip-mixin_ids-tooltip-mixin_ts","src_components_ids-icon_ids-icon_ts","src_components_ids-button_ids-button_scss","src_components_ids-text_ids-text_ts","src_components_ids-loading-indicator_ids-loading-indicator_ts","src_components_ids-button_ids-button_ts","src_core_ids-data-source_ts","src_mixins_ids-dirty-tracker-mixin_ids-dirty-tracker-mixin_ts-src_mixins_ids-validation-mixin-f0445e","src_components_ids-trigger-field_ids-trigger-button_scss","src_components_ids-input_ids-input_scss","src_components_ids-input_ids-input_ts","src_mixins_ids-attachment-mixin_ids-attachment-mixin_ts-src_mixins_ids-popup-interactions-mix-9b7040","src_components_ids-menu_ids-menu-group_scss-src_components_ids-menu_ids-menu-header_scss-src_-787682","src_components_ids-trigger-field_ids-trigger-field_scss","src_components_ids-menu_ids-menu-group_ts-src_components_ids-menu_ids-menu-item_ts-src_compon-420212","src_components_ids-menu_ids-menu_ts","src_components_ids-popup-menu_ids-popup-menu_ts","src_components_ids-checkbox_ids-checkbox_scss","src_components_ids-checkbox_ids-checkbox_ts","src_mixins_ids-focus-capture-mixin_ids-focus-capture-mixin_ts-src_mixins_ids-xss-mixin_ids-xs-3364f3","src_components_ids-trigger-field_ids-trigger-field_ts-src_mixins_ids-label-state-mixin_ids-la-e23ef2","src_components_ids-dropdown_ids-dropdown_ts","src_components_ids-toolbar_ids-toolbar_ts","src_components_ids-hyperlink_ids-hyperlink_ts","src_components_ids-card_ids-card_ts","src_components_ids-pager_ids-pager_ts","src_components_ids-virtual-scroll_ids-virtual-scroll_ts","src_components_ids-time-picker_ids-time-picker-popup_ts","src_components_ids-time-picker_ids-time-picker_ts","src_components_ids-month-view_ids-month-view_scss","src_components_ids-calendar_ids-calendar-event_ts","src_components_ids-expandable-area_ids-expandable-area_ts-src_components_ids-toggle-button_id-24819b","src_components_ids-month-view_ids-month-view_ts","src_components_ids-date-picker_ids-date-picker_ts","src_components_ids-tag_ids-tag_ts","src_components_ids-image_ids-image_ts","src_components_ids-slider_ids-slider_ts","src_components_ids-alert_ids-alert_ts-src_components_ids-step-chart_ids-step-chart_ts","src_components_ids-data-grid_ids-data-grid_scss","src_components_ids-data-grid_ids-data-grid_ts","src_components_ids-textarea_ids-textarea_scss","src_components_ids-textarea_ids-textarea_ts","src_components_ids-accordion_ids-accordion_ts","src_components_ids-week-view_ids-week-view_ts","src_components_ids-calendar_demos_custom-calendar-event_ts"], () => (__webpack_require__("./src/components/ids-calendar/demos/index.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;