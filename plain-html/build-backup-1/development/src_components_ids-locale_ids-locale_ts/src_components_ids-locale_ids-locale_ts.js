"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-locale_ids-locale_ts"],{

/***/ "./src/components/ids-locale/data/en-US.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-locale/data/en-US.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"locale\": () => (/* binding */ locale)\n/* harmony export */ });\nconst locale = {\n  // layout/language\n  language: \"en\",\n  englishName: \"English (United States)\",\n  nativeName: \"English (United States)\",\n  // layout/orientation/@characters\n  direction: \"left-to-right\",\n  // ca-gregorian\n  calendars: [{\n    name: \"gregorian\",\n    // ca-gregorian/main/dates/calendars/gregorian/dateFormats/\n    dateFormat: {\n      separator: \"/\",\n      // Infered\n      timeSeparator: \":\",\n      short: \"M/d/yyyy\",\n      // use four digit year\n      medium: \"MMM d, yyyy\",\n      long: \"MMMM d, yyyy\",\n      full: \"EEEE, MMMM d, y\",\n      month: \"MMMM d\",\n      year: \"MMMM yyyy\",\n      dayOfWeek: \"d EEE\",\n      timestamp: \"h:mm:ss a\",\n      timestampMillis: \"h:mm:ss:SSS a\",\n      hour: \"h:mm a\",\n      datetime: \"M/d/yyyy h:mm a\",\n      datetimeMillis: \"M/d/yyyy h:mm:ss:SSS a\",\n      timezone: \"M/d/yyyy h:mm a zz\",\n      timezoneLong: \"M/d/yyyy h:mm a zzzz\"\n    },\n    // Infered short + short gregorian/dateTimeFormats\n    // ca-gregorian/main/dates/calendars/gregorian/days/format/short or abbreviated (2 digit)\n    days: {\n      wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\n    },\n    // ca-gregorian/main/dates/calendars/gregorian/months/format/wide\n    months: {\n      wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    },\n    // ca-gregorian/main/dates/calendars/gregorian/timeFormats/short\n    timeFormat: \"h:mm a\",\n    // ca-gregorian/main/dates/calendars/gregorian/dayPeriods/wide\n    dayPeriods: [\"AM\", \"PM\"],\n    firstDayofWeek: 0\n    // Starts on Sunday\n  }],\n  // numbers/currencyFormats-numberSystem-latn/standard\n  currencySign: \"$\",\n  // (Replace Sign http://www.currencysymbols.in)\n  currencyFormat: \"\\xA4###\",\n  // numbers/symbols-numberSystem-latn\n  numbers: {\n    percentSign: \"%\",\n    percentFormat: \"### %\",\n    percentSuffix: \" %\",\n    percentPrefix: \"\",\n    minusSign: \"-\",\n    decimal: \".\",\n    group: \",\",\n    groupSizes: [3, 3]\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbG9jYWxlL2RhdGEvZW4tVVMudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE1BQU0sU0FBUztBQUFBO0FBQUEsRUFFYixVQUFVO0FBQUEsRUFDVixhQUFhO0FBQUEsRUFDYixZQUFZO0FBQUE7QUFBQSxFQUVaLFdBQVc7QUFBQTtBQUFBLEVBRVgsV0FBVyxDQUFDO0FBQUEsSUFDVixNQUFNO0FBQUE7QUFBQSxJQUVOLFlBQVk7QUFBQSxNQUNWLFdBQVc7QUFBQTtBQUFBLE1BQ1gsZUFBZTtBQUFBLE1BQ2YsT0FBTztBQUFBO0FBQUEsTUFDUCxRQUFRO0FBQUEsTUFDUixNQUFNO0FBQUEsTUFDTixNQUFNO0FBQUEsTUFDTixPQUFPO0FBQUEsTUFDUCxNQUFNO0FBQUEsTUFDTixXQUFXO0FBQUEsTUFDWCxXQUFXO0FBQUEsTUFDWCxpQkFBaUI7QUFBQSxNQUNqQixNQUFNO0FBQUEsTUFDTixVQUFVO0FBQUEsTUFDVixnQkFBZ0I7QUFBQSxNQUNoQixVQUFVO0FBQUEsTUFDVixjQUFjO0FBQUEsSUFDaEI7QUFBQTtBQUFBO0FBQUEsSUFFQSxNQUFNO0FBQUEsTUFDSixNQUFNLENBQUMsVUFBVSxVQUFVLFdBQVcsYUFBYSxZQUFZLFVBQVUsVUFBVTtBQUFBLE1BQ25GLGFBQWEsQ0FBQyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxLQUFLO0FBQUEsTUFDN0QsUUFBUSxDQUFDLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEdBQUc7QUFBQSxJQUM1QztBQUFBO0FBQUEsSUFFQSxRQUFRO0FBQUEsTUFDTixNQUFNLENBQUMsV0FBVyxZQUFZLFNBQVMsU0FBUyxPQUFPLFFBQVEsUUFBUSxVQUFVLGFBQWEsV0FBVyxZQUFZLFVBQVU7QUFBQSxNQUMvSCxhQUFhLENBQUMsT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLE9BQU8sT0FBTyxPQUFPLEtBQUs7QUFBQSxJQUNsRztBQUFBO0FBQUEsSUFFQSxZQUFZO0FBQUE7QUFBQSxJQUVaLFlBQVksQ0FBQyxNQUFNLElBQUk7QUFBQSxJQUN2QixnQkFBZ0I7QUFBQTtBQUFBLEVBQ2xCLENBQUM7QUFBQTtBQUFBLEVBR0QsY0FBYztBQUFBO0FBQUEsRUFDZCxnQkFBZ0I7QUFBQTtBQUFBLEVBRWhCLFNBQVM7QUFBQSxJQUNQLGFBQWE7QUFBQSxJQUNiLGVBQWU7QUFBQSxJQUNmLGVBQWU7QUFBQSxJQUNmLGVBQWU7QUFBQSxJQUNmLFdBQVc7QUFBQSxJQUNYLFNBQVM7QUFBQSxJQUNULE9BQU87QUFBQSxJQUNQLFlBQVksQ0FBQyxHQUFHLENBQUM7QUFBQSxFQUNuQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtbG9jYWxlL2RhdGEvZW4tVVMudHM/NzA4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbmZvIENvbWVzIGZyb20gaHR0cDovL3d3dy51bmljb2RlLm9yZy9QdWJsaWMvY2xkci8yNS9cbmNvbnN0IGxvY2FsZSA9IHtcbiAgLy8gbGF5b3V0L2xhbmd1YWdlXG4gIGxhbmd1YWdlOiAnZW4nLFxuICBlbmdsaXNoTmFtZTogJ0VuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpJyxcbiAgbmF0aXZlTmFtZTogJ0VuZ2xpc2ggKFVuaXRlZCBTdGF0ZXMpJyxcbiAgLy8gbGF5b3V0L29yaWVudGF0aW9uL0BjaGFyYWN0ZXJzXG4gIGRpcmVjdGlvbjogJ2xlZnQtdG8tcmlnaHQnLFxuICAvLyBjYS1ncmVnb3JpYW5cbiAgY2FsZW5kYXJzOiBbe1xuICAgIG5hbWU6ICdncmVnb3JpYW4nLFxuICAgIC8vIGNhLWdyZWdvcmlhbi9tYWluL2RhdGVzL2NhbGVuZGFycy9ncmVnb3JpYW4vZGF0ZUZvcm1hdHMvXG4gICAgZGF0ZUZvcm1hdDoge1xuICAgICAgc2VwYXJhdG9yOiAnLycsIC8vIEluZmVyZWRcbiAgICAgIHRpbWVTZXBhcmF0b3I6ICc6JyxcbiAgICAgIHNob3J0OiAnTS9kL3l5eXknLCAvLyB1c2UgZm91ciBkaWdpdCB5ZWFyXG4gICAgICBtZWRpdW06ICdNTU0gZCwgeXl5eScsXG4gICAgICBsb25nOiAnTU1NTSBkLCB5eXl5JyxcbiAgICAgIGZ1bGw6ICdFRUVFLCBNTU1NIGQsIHknLFxuICAgICAgbW9udGg6ICdNTU1NIGQnLFxuICAgICAgeWVhcjogJ01NTU0geXl5eScsXG4gICAgICBkYXlPZldlZWs6ICdkIEVFRScsXG4gICAgICB0aW1lc3RhbXA6ICdoOm1tOnNzIGEnLFxuICAgICAgdGltZXN0YW1wTWlsbGlzOiAnaDptbTpzczpTU1MgYScsXG4gICAgICBob3VyOiAnaDptbSBhJyxcbiAgICAgIGRhdGV0aW1lOiAnTS9kL3l5eXkgaDptbSBhJyxcbiAgICAgIGRhdGV0aW1lTWlsbGlzOiAnTS9kL3l5eXkgaDptbTpzczpTU1MgYScsXG4gICAgICB0aW1lem9uZTogJ00vZC95eXl5IGg6bW0gYSB6eicsXG4gICAgICB0aW1lem9uZUxvbmc6ICdNL2QveXl5eSBoOm1tIGEgenp6eidcbiAgICB9LCAvLyBJbmZlcmVkIHNob3J0ICsgc2hvcnQgZ3JlZ29yaWFuL2RhdGVUaW1lRm9ybWF0c1xuICAgIC8vIGNhLWdyZWdvcmlhbi9tYWluL2RhdGVzL2NhbGVuZGFycy9ncmVnb3JpYW4vZGF5cy9mb3JtYXQvc2hvcnQgb3IgYWJicmV2aWF0ZWQgKDIgZGlnaXQpXG4gICAgZGF5czoge1xuICAgICAgd2lkZTogWydTdW5kYXknLCAnTW9uZGF5JywgJ1R1ZXNkYXknLCAnV2VkbmVzZGF5JywgJ1RodXJzZGF5JywgJ0ZyaWRheScsICdTYXR1cmRheSddLFxuICAgICAgYWJicmV2aWF0ZWQ6IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J10sXG4gICAgICBuYXJyb3c6IFsnUycsICdNJywgJ1QnLCAnVycsICdUJywgJ0YnLCAnUyddXG4gICAgfSxcbiAgICAvLyBjYS1ncmVnb3JpYW4vbWFpbi9kYXRlcy9jYWxlbmRhcnMvZ3JlZ29yaWFuL21vbnRocy9mb3JtYXQvd2lkZVxuICAgIG1vbnRoczoge1xuICAgICAgd2lkZTogWydKYW51YXJ5JywgJ0ZlYnJ1YXJ5JywgJ01hcmNoJywgJ0FwcmlsJywgJ01heScsICdKdW5lJywgJ0p1bHknLCAnQXVndXN0JywgJ1NlcHRlbWJlcicsICdPY3RvYmVyJywgJ05vdmVtYmVyJywgJ0RlY2VtYmVyJ10sXG4gICAgICBhYmJyZXZpYXRlZDogWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddXG4gICAgfSxcbiAgICAvLyBjYS1ncmVnb3JpYW4vbWFpbi9kYXRlcy9jYWxlbmRhcnMvZ3JlZ29yaWFuL3RpbWVGb3JtYXRzL3Nob3J0XG4gICAgdGltZUZvcm1hdDogJ2g6bW0gYScsXG4gICAgLy8gY2EtZ3JlZ29yaWFuL21haW4vZGF0ZXMvY2FsZW5kYXJzL2dyZWdvcmlhbi9kYXlQZXJpb2RzL3dpZGVcbiAgICBkYXlQZXJpb2RzOiBbJ0FNJywgJ1BNJ10sXG4gICAgZmlyc3REYXlvZldlZWs6IDAgLy8gU3RhcnRzIG9uIFN1bmRheVxuICB9XSxcblxuICAvLyBudW1iZXJzL2N1cnJlbmN5Rm9ybWF0cy1udW1iZXJTeXN0ZW0tbGF0bi9zdGFuZGFyZFxuICBjdXJyZW5jeVNpZ246ICckJywgLy8gKFJlcGxhY2UgU2lnbiBodHRwOi8vd3d3LmN1cnJlbmN5c3ltYm9scy5pbilcbiAgY3VycmVuY3lGb3JtYXQ6ICfCpCMjIycsXG4gIC8vIG51bWJlcnMvc3ltYm9scy1udW1iZXJTeXN0ZW0tbGF0blxuICBudW1iZXJzOiB7XG4gICAgcGVyY2VudFNpZ246ICclJyxcbiAgICBwZXJjZW50Rm9ybWF0OiAnIyMjICUnLFxuICAgIHBlcmNlbnRTdWZmaXg6ICcgJScsXG4gICAgcGVyY2VudFByZWZpeDogJycsXG4gICAgbWludXNTaWduOiAnLScsXG4gICAgZGVjaW1hbDogJy4nLFxuICAgIGdyb3VwOiAnLCcsXG4gICAgZ3JvdXBTaXplczogWzMsIDNdXG4gIH1cbn07XG5cbmV4cG9ydCB7IGxvY2FsZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-locale/data/en-US.ts\n");

/***/ }),

/***/ "./src/components/ids-locale/data/en-messages.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-locale/data/en-messages.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"messages\": () => (/* binding */ messages)\n/* harmony export */ });\nconst messages = {\n  AboutText: { id: \"AboutText\", value: \"Copyright &copy; {0} Infor. All rights reserved. The word and design marks set forth herein are trademarks and/or registered trademarks of Infor and/or its affiliates and subsidiaries. All other trademarks listed herein are the property of their respective owners\" },\n  Actions: { id: \"Actions\", value: \"Actions\", comment: \"Tooltip text for the action button with additional in context actions\" },\n  Add: { id: \"Add\", value: \"Add\", comment: \"Add\" },\n  AddComments: { id: \"AddComments\", value: \"Add Comments\", comment: \"Add comments to a form of data\" },\n  AddNewTab: { id: \"AddNewTab\", value: \"Add New Tab\", comment: \"Attached to a button that adds new tabs\" },\n  AdministrativeLeave: { id: \"AdministrativeLeave\", value: \"Administrative Leave\", comment: \"As in vacation time from work\" },\n  AdvancedFilter: { id: \"AdvancedFilter\", value: \"Create Advanced Filter\", comment: \"In a data grid active an advanced filtering feature\" },\n  Afrikaans: { id: \"Afrikaans\", value: \"Afrikaans\", comment: \"Language name for Afrikaans (South Africa)\" },\n  Alabaster: { id: \"Alabaster\", value: \"Alabaster\", comment: \"Color in our color palette\" },\n  Alert: { id: \"Alert\", value: \"Alert\", comment: \"Alert\" },\n  AlertOnPage: { id: \"AlertOnPage\", value: \"Alert message(s) on page\", comment: \"Alert message(s) on page n\" },\n  AlignCenterHorizontally: { id: \"AlignCenterHorizontally\", value: \"Horizontal Align Center\", comment: \"Align Center Horizontally tooltip\" },\n  AligntoBottom: { id: \"AligntoBottom\", value: \"Align Bottom\", comment: \"Align to Bottom tooltip\" },\n  All: { id: \"All\", value: \"All\", comment: \"All items in the context of a filter\" },\n  AllDay: { id: \"AllDay\", value: \"All Day\", comment: \"Label for an event which lasts all day\" },\n  AllResults: { id: \"AllResults\", value: \"All results for\", comment: \"Search Results Text\" },\n  Amber: { id: \"Amber\", value: \"Amber\", comment: \"Color in our color palette\" },\n  Amethyst: { id: \"Amethyst\", value: \"Amethyst\", comment: \"Color in our color palette\" },\n  And: { id: \"And\", value: \"and\", comment: \"Text use in calendar\" },\n  AppMenuTriggerText: { id: \"AppMenuTriggerText\", value: \"Menu\", comment: \"Text in a special Module Tab used to trigger an Application Menu open or closed\" },\n  AppMenuTriggerTextAlt: { id: \"AppMenuTriggerTextAlt\", value: \"Application Menu Trigger\", comment: \"Default text used inside of Application Menu trigger buttons\" },\n  Apply: { id: \"Apply\", value: \"Apply\", comment: \"Text in a button to apply an action\" },\n  Arabic: { id: \"Arabic\", value: \"Arabic\", comment: \"Language name for Arabic (general)\" },\n  AreaChart: { id: \"AreaChart\", value: \"Area Chart\", comment: \"A chart type\" },\n  Attach: { id: \"Attach\", value: \"Attach\", comment: \"Attach\" },\n  Available: { id: \"Available\", value: \"Available\", comment: \"Button tooltip used in a list of movable items\" },\n  Azure: { id: \"Azure\", value: \"Azure\", comment: \"Color in our color palette\" },\n  BackgroundColor: { id: \"BackgroundColor\", value: \"Background color\", comment: \"add or edit text background color in the editor\" },\n  BarChart: { id: \"BarChart\", value: \"Bar Chart\", comment: \"A chart type\" },\n  Between: { id: \"Between\", value: \"Between\", comment: \"Between in icons for filtering\" },\n  BillionsAbbrev: { id: \"BillionsAbbrev\", value: \"{0}b\", comment: \"Refers to a value in a chart in billions. i.e. 1B, 100B\" },\n  Blockquote: { id: \"Blockquote\", value: \"Block quote\", comment: \"Term for Block Quotations in editing\" },\n  Bold: { id: \"Bold\", value: \"Bold\", comment: \"Make text Bold\" },\n  BookmarkThis: { id: \"BookmarkThis\", value: \"Bookmark this\", comment: \"Bookmark an element\" },\n  Bookmarked: { id: \"Bookmarked\", value: \"Bookmarked\", comment: \"Bookmark filled - Element is already bookmarked\" },\n  Breadcrumb: { id: \"Breadcrumb\", value: \"Breadcrumb\", comment: \"Text describing the Breadcrumb\" },\n  Browser: { id: \"Browser\", value: \"Browser\", comment: \"As in a Web Browser\" },\n  BrowserLanguage: { id: \"BrowserLanguage\", value: \"Browser Language\", comment: \"Language in the current Web Browser\" },\n  Bulgarian: { id: \"Bulgarian\", value: \"Bulgarian\", comment: \"Language name for Bulgarian (Bulgaria)\" },\n  BulletedList: { id: \"BulletedList\", value: \"Bulleted list\", comment: \"Bulleted List tooltip\" },\n  Calendar: { id: \"Calendar\", value: \"Calendar\", comment: \"Inline Text for the title of the Calendar control\" },\n  Camera: { id: \"Camera\", value: \"Camera\", comment: \"Camera tooltip\" },\n  Cancel: { id: \"Cancel\", value: \"Cancel\", comment: \"Cancel tooltip\" },\n  CapsLockOn: { id: \"CapsLockOn\", value: \"Caps Lock On\", comment: \"Caps Lock On message\" },\n  Cart: { id: \"Cart\", value: \"Cart\", comment: \"Cart tooltip\" },\n  CenterText: { id: \"CenterText\", value: \"Center\", comment: \"An Icon Tooltip\" },\n  ChangeSelection: { id: \"ChangeSelection\", value: \"To change the selected item, use the arrow keys.\", comment: \"Audible Text for drop down list help\" },\n  ChangeView: { id: \"ChangeView\", value: \"Change View\", comment: \"Change the current page from a list of options\" },\n  CharactersLeft: { id: \"CharactersLeft\", value: \"Characters left {0}\", comment: \"indicator showing how many more characters you can type.\" },\n  CharactersMax: { id: \"CharactersMax\", value: \"Character count maximum of \", comment: \"indicator showing how many max characters you can type.\" },\n  Checkbox: { id: \"Checkbox\", value: \"Checkbox\", comment: \"Checkbox tooltip\" },\n  Checked: { id: \"Checked\", value: \"Checked\", comment: \"Checked tooltip\" },\n  Chinese: { id: \"Chinese\", value: \"Chinese\", comment: \"Chinese language in general form\" },\n  ChooseFont: { id: \"ChooseFont\", value: \"Choose Font Style\", comment: \"Choose a font style\" },\n  Classic: { id: \"Classic\", value: \"Classic\", comment: \"This is the name of the older styling of all components (theme name)\" },\n  ClassicDarkTheme: { id: \"ClassicDarkTheme\", value: \"Classic Dark\", comment: \"The name of an application Theme\" },\n  ClassicHighContrastTheme: { id: \"ClassicHighContrastTheme\", value: \"Classic High Contrast\", comment: \"The name of an application Theme\" },\n  ClassicLightTheme: { id: \"ClassicLightTheme\", value: \"Classic Light\", comment: \"The name of an application Theme\" },\n  Clear: { id: \"Clear\", value: \"Clear\", comment: \"Tooltip for a Clear Action\" },\n  ClearFilter: { id: \"ClearFilter\", value: \"Clear Filter\", comment: \"Clear the current filter criteria\" },\n  ClearFormatting: { id: \"ClearFormatting\", value: \"Clear Formatting\", comment: \"Clear the formatting in editor\" },\n  ClearSelection: { id: \"ClearSelection\", value: \"(Clear Selection)\", comment: \"clear dropdown selection\" },\n  Clickable: { id: \"Clickable\", value: \"Clickable in editor\", comment: \"Clickable in editor\" },\n  Clock: { id: \"Clock\", value: \"Clock\", comment: \"Clock tooltip\" },\n  Close: { id: \"Close\", value: \"Close\", comment: \"Tooltip for a Close Button Action\" },\n  Collapse: { id: \"Collapse\", value: \"Collapse\", comment: \"Collapse / close a tree/submenu\" },\n  CollapseAppTray: { id: \"CollapseAppTray\", value: \"Collapse App Tray\", comment: \"Collapse App Tray tooltip\" },\n  Color: { id: \"Color\", value: \"Color\", comment: \"Color\" },\n  ColorPickerSelection: { id: \"ColorPickerSelection\", value: \"Pick a Custom Color\", comment: \"Used in accessible labels to describe a color picker field's trigger button to assistive technology\" },\n  ColorPickerTriggerButton: { id: \"ColorPickerTriggerButton\", value: \"Click to Open Color Picker\", comment: \"Used in accessible labels to describe a color picker field's trigger button to assistive technology\" },\n  Colors: { id: \"Colors\", value: \"Colors\", comment: \"Color (plural)\" },\n  Columns: { id: \"Columns\", value: \"Columns\", comment: \"Columns tooltip\" },\n  Comments: { id: \"Comments\", value: \"Comments\", comment: \"Comments on an form\" },\n  CompanyHoliday: { id: \"CompanyHoliday\", value: \"Company Holiday\", comment: \"A holiday provided by work.\" },\n  Completed: { id: \"Completed\", value: \"Completed\", comment: \"Text For a Completed Status\" },\n  Component: { id: \"Component\", value: \"Component\", comment: \"As in a UI component - building block.\" },\n  Compose: { id: \"Compose\", value: \"Compose\", comment: \"Compose tooltip\" },\n  Confirm: { id: \"Confirm\", value: \"Confirm\", comment: \"Confirm tooltip\" },\n  ConfirmOnPage: { id: \"ConfirmOnPage\", value: \"Confirm message(s) on page\", comment: \"Confirm message(s) on page n\" },\n  Contains: { id: \"Contains\", value: \"Contains\", comment: \"Contains in icons for filtering\" },\n  Contrast: { id: \"Contrast\", value: \"Contrast\", comment: \"Name of the high contrast theme\" },\n  CookiesEnabled: { id: \"CookiesEnabled\", value: \"Cookies Enabled\", comment: \"Returns if browser cookies are enabled or not.\" },\n  Copy: { id: \"Copy\", value: \"Copy\", comment: \"Copy tooltip\" },\n  Croatian: { id: \"Croatian\", value: \"Croatian\", comment: \"Croatian (Croatia) language\" },\n  CssClass: { id: \"CssClass\", value: \"Css Class\", comment: \"Label for entering a Css Class name\" },\n  Cut: { id: \"Cut\", value: \"Cut\", comment: \"Cut tooltip\" },\n  Czech: { id: \"Czech\", value: \"Czech\", comment: \"Language name for Czech Language\" },\n  Danish: { id: \"Danish\", value: \"Danish\", comment: \"Language name for Danish\" },\n  Dark: { id: \"Dark\", value: \"Dark\", comment: \"The name of one of the application theme variants.\" },\n  Datagrid: { id: \"Datagrid\", value: \"Datagrid\", comment: \"Name of the datagrid component\" },\n  Date: { id: \"Date\", value: \"Date\", comment: \"Describes filtering by a date data type\" },\n  DatePickerTriggerButton: { id: \"DatePickerTriggerButton\", value: \"Date Picker Trigger\", comment: \"Used in accessible labels to describe a date picker field's trigger button to assistive technology\" },\n  Day: { id: \"Day\", value: \"Day\", comment: \"Shows view with day events\" },\n  DayAbbreviatedFri: { id: \"DayAbbreviatedFri\", value: \"Fri\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedMon: { id: \"DayAbbreviatedMon\", value: \"Mon\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedSat: { id: \"DayAbbreviatedSat\", value: \"Sat\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedSun: { id: \"DayAbbreviatedSun\", value: \"Sun\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedThu: { id: \"DayAbbreviatedThu\", value: \"Thu\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedTue: { id: \"DayAbbreviatedTue\", value: \"Tue\", comment: \"Day of the week in abbreviated form\" },\n  DayAbbreviatedWed: { id: \"DayAbbreviatedWed\", value: \"Wed\", comment: \"Day of the week in abbreviated form\" },\n  DayNarrowFri: { id: \"DayNarrowFri\", value: \"F\", comment: \"Day of the week in shortest form\" },\n  DayNarrowMon: { id: \"DayNarrowMon\", value: \"M\", comment: \"Day of the week in shortest form\" },\n  DayNarrowSat: { id: \"DayNarrowSat\", value: \"S\", comment: \"Day of the week in shortest form\" },\n  DayNarrowSun: { id: \"DayNarrowSun\", value: \"S\", comment: \"Day of the week in shortest form\" },\n  DayNarrowThu: { id: \"DayNarrowThu\", value: \"T\", comment: \"Day of the week in shortest form\" },\n  DayNarrowTue: { id: \"DayNarrowTue\", value: \"T\", comment: \"Day of the week in shortest form\" },\n  DayNarrowWed: { id: \"DayNarrowWed\", value: \"W\", comment: \"Day of the week in shortest form\" },\n  DayPeriod0: { id: \"DayPeriod0\", value: \"AM\", comment: \"The am part of a date\" },\n  DayPeriod1: { id: \"DayPeriod1\", value: \"PM\", comment: \"The pm part of a date\" },\n  DayWideFri: { id: \"DayWideFri\", value: \"Friday\", comment: \"Day of the week in long form\" },\n  DayWideMon: { id: \"DayWideMon\", value: \"Monday\", comment: \"Day of the week in long form\" },\n  DayWideSat: { id: \"DayWideSat\", value: \"Saturday\", comment: \"Day of the week in long form\" },\n  DayWideSun: { id: \"DayWideSun\", value: \"Sunday\", comment: \"Day of the week in long form\" },\n  DayWideThu: { id: \"DayWideThu\", value: \"Thursday\", comment: \"Day of the week in long form\" },\n  DayWideTue: { id: \"DayWideTue\", value: \"Tuesday\", comment: \"Day of the week in long form\" },\n  DayWideWed: { id: \"DayWideWed\", value: \"Wednesday\", comment: \"Day of the week in long form\" },\n  Days: { id: \"Days\", value: \"Days \", comment: \"Show how many days until an event\" },\n  DaysOverdue: { id: \"DaysOverdue\", value: \"{0} Days Overdue\", comment: \"For a task /date UI\" },\n  DaysRemaining: { id: \"DaysRemaining\", value: \"{0} Days Remaining\", comment: \"For a task /date UI\" },\n  Default: { id: \"Default\", value: \"Default\", comment: \"Refers to a default object of a generic type\" },\n  Delete: { id: \"Delete\", value: \"Delete\", comment: \"Delete Toolbar Action Tooltip\" },\n  DeleteEvent: { id: \"DeleteEvent\", value: \"Delete Event\", comment: \"Delete an Event (from a calendar)\" },\n  Device: { id: \"Device\", value: \"Device\", comment: \"Name of the Device\" },\n  Dirty: { id: \"Dirty\", value: \"Row has changed\", comment: \"Record is dirty / modified\" },\n  DiscretionaryTimeOff: { id: \"DiscretionaryTimeOff\", value: \"Discretionary Time Off\", comment: \"As in work time off\" },\n  DistributeHoriz: { id: \"DistributeHoriz\", value: \"Distribute Horizontally\", comment: \"Icon button tooltip for action that distributes elements across Horizontally\" },\n  Document: { id: \"Document\", value: \"Document\", comment: \"Document tooltip\" },\n  DoesNotContain: { id: \"DoesNotContain\", value: \"Does Not Contain\", comment: \"Does Not Contain in icons for filtering\" },\n  DoesNotEndWith: { id: \"DoesNotEndWith\", value: \"Does Not End With\", comment: \"For condition filtering\" },\n  DoesNotEqual: { id: \"DoesNotEqual\", value: \"Does Not Equal\", comment: \"Does Not Equal in icons for filtering\" },\n  DoesNotStartWith: { id: \"DoesNotStartWith\", value: \"Does Not Start With\", comment: \"For condition filtering\" },\n  Down: { id: \"Down\", value: \"Down\", comment: \"Down tooltip\" },\n  Download: { id: \"Download\", value: \"Download\", comment: \"Download tooltip\" },\n  Drilldown: { id: \"Drilldown\", value: \"Drill down\", comment: \"Drill by moving page flow into a record\" },\n  Drillup: { id: \"Drillup\", value: \"Drill Up\", comment: \"Opposite of Drilldown, move back up to a larger set of records\" },\n  Dropdown: { id: \"Dropdown\", value: \"Dropdown\", comment: \"Dropdown\" },\n  DropdownTriggerButton: { id: \"DropdownTriggerButton\", value: \"Click to Open Dropdown\", comment: \"Used in accessible labels to describe a dropdown's trigger button to assistive technology\" },\n  Duplicate: { id: \"Duplicate\", value: \"Duplicate\", comment: \"Duplicate tooltip\" },\n  Duration: { id: \"Duration\", value: \"Duration\", comment: \"The length of a time span between two times\" },\n  Dutch: { id: \"Dutch\", value: \"Dutch\", comment: \"Language name for Dutch (Netherlands)\" },\n  EarlyOrEquals: { id: \"EarlyOrEquals\", value: \"Earlier Than Or Equals\", comment: \"Earlier Than Or Equals in icons for filtering\" },\n  EarlyOrUntil: { id: \"EarlyOrUntil\", value: \"Earlier Than Or Until\", comment: \"Earlier Than Or Equals in icons for filtering\" },\n  EarlyThan: { id: \"EarlyThan\", value: \"Earlier Than\", comment: \"Early Than in icons for filtering\" },\n  Edit: { id: \"Edit\", value: \"Edit\", comment: \"Edit tooltip\" },\n  EitherSelectedOrNotSelected: { id: \"EitherSelectedOrNotSelected\", value: \"Either Selected Or Not Selected\", comment: \"Either Selected Or NotSelected in icons for filtering\" },\n  EmailValidation: { id: \"EmailValidation\", value: \"Email address not valid\", comment: \"This the rule for email validation\" },\n  Emerald: { id: \"Emerald\", value: \"Emerald\", comment: \"Color in our color palette\" },\n  EndsWith: { id: \"EndsWith\", value: \"Ends With\", comment: \"for condition filtering\" },\n  English: { id: \"English\", value: \"English (United States)\", comment: \"Language name for English\" },\n  EnterComments: { id: \"EnterComments\", value: \"Enter comments here...\", comment: \"Placeholder text for a text input (comments)\" },\n  Equals: { id: \"Equals\", value: \"Equals\", comment: \"Equals in icons for filtering\" },\n  Error: { id: \"Error\", value: \"Error\", comment: \"Title, Spoken Text describing fact an error has occured\" },\n  ErrorAllowedTypes: { id: \"ErrorAllowedTypes\", value: \"File type is not allowed\", comment: \"Error string for file-upload\" },\n  ErrorMaxFileSize: { id: \"ErrorMaxFileSize\", value: \"Exceeded file size limit\", comment: \"Error string for file-upload\" },\n  ErrorMaxFiles: { id: \"ErrorMaxFiles\", value: \"Cannot upload more than the maximum number of files ({n}).\", comment: \"Error string for file-upload\" },\n  ErrorMaxFilesInProcess: { id: \"ErrorMaxFilesInProcess\", value: \"Exceeded maximum files allowed limit\", comment: \"Error string for file-upload\" },\n  ErrorOnPage: { id: \"ErrorOnPage\", value: \"Error message(s) on page\", comment: \"Error message(s) on page n\" },\n  Estonian: { id: \"Estonian\", value: \"Estonian\", comment: \"Language name for Estonian\" },\n  Event: { id: \"Event\", value: \"Event\", comment: \"As in an event that would be in a calendar\" },\n  EventType: { id: \"EventType\", value: \"Event Type\", comment: \"The kind of event, for action vacation or sick time\" },\n  ExampleData: { id: \"ExampleData\", value: \"Example Data\", comment: \"Translated text for an example piece of data instance\" },\n  ExampleLabel: { id: \"ExampleLabel\", value: \"Example Label\", comment: \"Translated text for an example label instance\" },\n  ExamplePlaceholder: { id: \"ExamplePlaceholder\", value: \"Example Placeholder\", comment: \"Translated text for an example form placeholder text\" },\n  ExitFullView: { id: \"ExitFullView\", value: \"Exit Full View\", comment: \"Exit Full View tooltip\" },\n  Expand: { id: \"Expand\", value: \"Expand\", comment: \"Expand open a tree/submenu\" },\n  ExpandAppTray: { id: \"ExpandAppTray\", value: \"Expand App Tray\", comment: \"ExpandAppTray tooltip\" },\n  ExpandCollapse: { id: \"ExpandCollapse\", value: \"Expand / Collapse\", comment: \"Text to toggle a button in a container.\" },\n  Export: { id: \"Export\", value: \"Export\", comment: \"Export tooltip\" },\n  ExportAsSpreadsheet: { id: \"ExportAsSpreadsheet\", value: \"Export as Spreadsheet\", comment: \"Export as Spreadsheet tooltip\" },\n  ExportToCsv: { id: \"ExportToCsv\", value: \"Export To CSV\", comment: \"Export To CSV menu option in datagrid\" },\n  ExportToExcel: { id: \"ExportToExcel\", value: \"Export To Excel\", comment: \"Export To Excel menu option in datagrid\" },\n  ExtraSmall: { id: \"ExtraSmall\", value: \"Extra Small\", comment: \"A smaller font size and compressed mode for datagrid rows.\" },\n  Favorite: { id: \"Favorite\", value: \"Favorite\", comment: \"A favorite item\" },\n  FieldFilter: { id: \"FieldFilter\", value: \"Field Filter\", comment: \"Used for Field Filter\" },\n  FileUpload: { id: \"FileUpload\", value: \"File Upload. Press Enter to Browse for a file\", comment: \"Screen Reader instructions\" },\n  Filter: { id: \"Filter\", value: \"Filter\", comment: \"Filter tooltip\" },\n  Finnish: { id: \"Finnish\", value: \"Finnish\", comment: \"Language name for Finnish\" },\n  FirstPage: { id: \"FirstPage\", value: \"First Page\", comment: \"First Page tooltip\" },\n  Folder: { id: \"Folder\", value: \"Folder\", comment: \"Folder tooltip\" },\n  FontPickerHeader: { id: \"FontPickerHeader\", value: \"Header {0}\", comment: \"Description of header text style on Fontpicker components\" },\n  FontPickerNormal: { id: \"FontPickerNormal\", value: \"Normal Text\", comment: \"Description of default text style on Fontpicker components\" },\n  FontPickerStyle: { id: \"FontPickerStyle\", value: \"Font Style\", comment: \"Description of font style on Fontpicker components\" },\n  Forms: { id: \"Forms\", value: \"Forms\", comment: \"Describing a data form of fields and data labels\" },\n  French: { id: \"French\", value: \"French\", comment: \"Language name for French\" },\n  From: { id: \"From\", value: \"From\", comment: \"Start of a range (of dates)\" },\n  FullView: { id: \"FullView\", value: \"Full View\", comment: \"Full View tooltip\" },\n  German: { id: \"German\", value: \"German\", comment: \"Language name for german\" },\n  Go: { id: \"Go\", value: \"Go\", comment: 'Go, perform a movement, start a search, move to the next \"thing\" in a workflow.' },\n  GoBack: { id: \"GoBack\", value: \"Go Back\", comment: \"Move Page / object this directionp\" },\n  GoDown: { id: \"GoDown\", value: \"Go Down\", comment: \"Move Page / object this directionp\" },\n  GoForward: { id: \"GoForward\", value: \"Go Forward\", comment: \"Move Page / object this direction\" },\n  GoUp: { id: \"GoUp\", value: \"Go Up\", comment: \"Move Page / object this direction\" },\n  Graphite: { id: \"Graphite\", value: \"Graphite\", comment: \"Color in our color palette\" },\n  GreaterOrEquals: { id: \"GreaterOrEquals\", value: \"Greater Than Or Equals\", comment: \"Greater Than Or Equals in icons for filtering\" },\n  GreaterThan: { id: \"GreaterThan\", value: \"Greater Than\", comment: \"Greater Than in icons for filtering\" },\n  Grid: { id: \"Grid\", value: \"Grid\", comment: \"Grid tooltip\" },\n  Group: { id: \"Group\", value: \"Group\", comment: \"Group of data in a datagrid with grouped rows\" },\n  Groups: { id: \"Groups\", value: \"Groups\", comment: \"Plural for group\" },\n  GroupsPerPage: { id: \"GroupsPerPage\", value: \"{0} Groups per page\", comment: \"Dropdown allows the user to select how many visible Groups the {} placeholder shows value. NOTE: Please change japanese to \\u30DA\\u30FC\\u30B8\\u3042\\u305F\\u308A\\u306E\\u30B0\\u30EB\\u30FC\\u30D7\\u6570 for next time\" },\n  HeadingFour: { id: \"HeadingFour\", value: \"Heading Four\", comment: \"Heading Four tooltip\" },\n  HeadingThree: { id: \"HeadingThree\", value: \"Heading Three\", comment: \"Heading Three tooltip\" },\n  Hebrew: { id: \"Hebrew\", value: \"Hebrew\", comment: \"Language name for Hebrew\" },\n  Hide: { id: \"Hide\", value: \"Hide\", comment: \"On a Button for revealing text that is hidden\" },\n  HighContrast: { id: \"HighContrast\", value: \"High Contrast\", comment: \"The name of a theme variant\" },\n  Highest: { id: \"Highest\", value: \"Highest\", comment: \"Highest Four tooltip\" },\n  Highlight: { id: \"Highlight\", value: \"Highlight\", comment: \"Used to highlight (select) a chart item\" },\n  Hindi: { id: \"Hindi\", value: \"Hindi\", comment: \"Language name for Hindi\" },\n  Home: { id: \"Home\", value: \"Home\", comment: \"Home tooltip\" },\n  Hour: { id: \"Hour\", value: \"Hour\", comment: \"the hour portion of a time\" },\n  Hours: { id: \"Hours\", value: \"Hours\", comment: \"the hour portion of a time (plural)\" },\n  HtmlView: { id: \"HtmlView\", value: \"Html View\", comment: \"Html View tooltip\" },\n  Hungarian: { id: \"Hungarian\", value: \"Hungarian\", comment: \"Language name for Hungarian\" },\n  Id: { id: \"Id\", value: \"Id\", comment: \"Short for of identification\" },\n  Image: { id: \"Image\", value: \"Image\", comment: \"Image of something\" },\n  Import: { id: \"Import\", value: \"Import\", comment: \"Import tooltip\" },\n  InProgress: { id: \"In Progress\", value: \"In Progress\", comment: \"Info tooltip that an action is in progress\" },\n  InRange: { id: \"InRange\", value: \"In Range\", comment: \"In Range in icons for filtering\" },\n  Indonesian: { id: \"Indonesian\", value: \"Indonesian\", comment: \"Language name for Indonesian\" },\n  Info: { id: \"Info\", value: \"Info\", comment: \"Info tooltip\" },\n  InfoOnPage: { id: \"InfoOnPage\", value: \"Information message(s) on page\", comment: \"Information message(s) on page n\" },\n  Insert: { id: \"Insert\", value: \"Insert\", comment: \"Insert Modal Dialog Button\" },\n  InsertAnchor: { id: \"InsertAnchor\", value: \"Insert Anchor\", comment: \"Insert a hyperlink in an editor\" },\n  InsertHyperlink: { id: \"InsertHyperlink\", value: \"Insert Hyperlink\", comment: \"Insert a hyperlink (synonymous with link or anchor tag) into an editor. Please recheck this as it was renamed from anchor.\" },\n  InsertImage: { id: \"InsertImage\", value: \"Insert Image\", comment: \"Insert Image in an editor\" },\n  InsertLink: { id: \"InsertLink\", value: \"Insert Link\", comment: \"Insert Link in an editor\" },\n  InsertUrl: { id: \"InsertUrl\", value: \"Insert Url\", comment: \"Insert a Url in an editor\" },\n  InvalidDate: { id: \"InvalidDate\", value: \"Invalid Date\", comment: \"validation message for wrong date format (short)\" },\n  InvalidDateTime: { id: \"InvalidDateTime\", value: \"Invalid Date or Time\", comment: \"validation message for wrong date and time format\" },\n  InvalidTime: { id: \"InvalidTime\", value: \"Invalid Time\", comment: \"validation message for wrong time format\" },\n  Inventory: { id: \"Inventory\", value: \"Inventory\", comment: \"Icon button tooltop for Inventory Action\" },\n  IsEmpty: { id: \"IsEmpty\", value: \"Is Empty\", comment: \"Is Empty in icons for filtering\" },\n  IsNotEmpty: { id: \"IsNotEmpty\", value: \"Is Not Empty\", comment: \"Is Not Empty in icons for filtering\" },\n  Italic: { id: \"Italic\", value: \"Italic\", comment: \"Make Text Italic\" },\n  ItemsSelected: { id: \"ItemsSelected\", value: \"Items selected\", comment: \"Num of Items selected for swaplist\" },\n  Japanese: { id: \"Japanese\", value: \"Japanese\", comment: \"Language name for Japanese\" },\n  JustifyCenter: { id: \"JustifyCenter\", value: \"Center\", comment: \"justify text to center in the editor\" },\n  JustifyLeft: { id: \"JustifyLeft\", value: \"Align Left\", comment: \"justify text to left in the editor\" },\n  JustifyRight: { id: \"JustifyRight\", value: \"Align Right\", comment: \"justify text to right in the editor\" },\n  Keyword: { id: \"Keyword\", value: \"Keyword\", comment: \"Describes filtering by a keyword search\" },\n  Korean: { id: \"Korean\", value: \"Korean\", comment: \"Language name for Korean\" },\n  Language: { id: \"Language\", value: \"Language\", comment: \"The currently used Language\" },\n  Large: { id: \"Large\", value: \"Large\", comment: \"A larger row sizes with taller rows. NOTE: Please change french to Grande (Moyenne form)\" },\n  LastPage: { id: \"LastPage\", value: \"Last Page\", comment: \"Last Page tooltip\" },\n  LaterOrEquals: { id: \"LaterOrEquals\", value: \"Later Than Or Equals\", comment: \"Later Than Or Equals in icons for filtering\" },\n  LaterOrOn: { id: \"LaterOrOn\", value: \"Later Than Or On\", comment: \"Later Than Or Equals in icons for filtering\" },\n  LaterThan: { id: \"LaterThan\", value: \"Later Than\", comment: \"Later Than in icons for filtering\" },\n  Latvian: { id: \"Latvian\", value: \"Latvian\", comment: \"Language name for Latvian\" },\n  Launch: { id: \"Launch\", value: \"Launch\", comment: \"Launch\" },\n  Left: { id: \"Left\", value: \"Left\", comment: \"Left tooltip\" },\n  Legend: { id: \"Legend\", value: \"Legend\", comment: \"As in a chart legend\" },\n  LessOrEquals: { id: \"LessOrEquals\", value: \"Less Than Or Equals\", comment: \"Less Than Or Equals in icons for filtering\" },\n  LessThan: { id: \"LessThan\", value: \"Less Than\", comment: \"Less Than in icons for filtering\" },\n  Light: { id: \"Light\", value: \"Light\", comment: \"The name of one of the application theme variants.\" },\n  Link: { id: \"Link\", value: \"Link\", comment: \"Link - as in hyperlink - icon tooltop\" },\n  LineChart: { id: \"LineChart\", value: \"Line Chart\", comment: \"A chart type\" },\n  Lithuanian: { id: \"Lithuanian\", value: \"Lithuanian\", comment: \"Language name for Lithuanian\" },\n  Load: { id: \"Load\", value: \"Load\", comment: \"Load icon tooltip\" },\n  Loading: { id: \"Loading\", value: \"Loading\", comment: \"Text below spinning indicator to indicate loading\" },\n  Locale: { id: \"Locale\", value: \"Locale\", comment: \"A place or locality for example en-US, it-It\" },\n  Locked: { id: \"Locked\", value: \"Locked\", comment: \"Locked tooltip\" },\n  Logout: { id: \"Logout\", value: \"Log Out\", comment: \"Log out of the application\" },\n  Lookup: { id: \"Lookup\", value: \"Lookup\", comment: \"Lookup - As in looking up a record or value\" },\n  LookupTriggerButton: { id: \"LookupTriggerButton\", value: \"Lookup Trigger\", comment: \"Used in accessible labels to describe a lookup field's trigger button to assistive technology\" },\n  Lowest: { id: \"Lowest\", value: \"Lowest\", comment: \"Lowest - As in Lowest value\" },\n  Mail: { id: \"Mail\", value: \"Mail\", comment: \"Mail tooltip\" },\n  Malay: { id: \"Malay\", value: \"Malay\", comment: \"Language name for Malay\" },\n  MapPin: { id: \"MapPin\", value: \"Pin\", comment: \"Map Pin tooltip\" },\n  Maximize: { id: \"Maximize\", value: \"Maximize\", comment: \"Maximize a screen or dialog in the UI\" },\n  Median: { id: \"Median\", value: \"Median\", comment: \"Median in Mathematics\" },\n  Medium: { id: \"Medium\", value: \"Medium\", comment: \"Describes a Medium sized Row Height in a grid/list. NOTE: Please change french to Petite (Moyenne form)\" },\n  Menu: { id: \"Menu\", value: \"Menu\", comment: \"Menu tooltip\" },\n  MenuGroup: { id: \"MenuGroup\", value: \"Menu group containing {0} item(s)\", comment: \"Describes the number of menu items contained inside the group (accessibility when items are focused)\" },\n  MillionsAbbrev: { id: \"MillionsAbbrev\", value: \"{0}M\", comment: \"Refers to a value in a chart in millions. i.e. 1M, 100M\" },\n  MingleShare: { id: \"MingleShare\", value: \"Share with Ming.le\", comment: \"Share the contextual object/action in the mingle system\" },\n  Minimize: { id: \"Minimize\", value: \"Minimize\", comment: \"Minimize tooltip\" },\n  Minus: { id: \"Minus\", value: \"Minus\", comment: \"Minus tooltip\" },\n  Minute: { id: \"Minute\", value: \"Minute\", comment: \"Text use in calendar\" },\n  Minutes: { id: \"Minutes\", value: \"Minutes\", comment: \"the minutes portion of a time\" },\n  Mobile: { id: \"Mobile\", value: \"Mobile\", comment: \"Indicates a mobile device (phone tablet ect)\" },\n  Mode: { id: \"Mode\", value: \"Mode\", comment: \"Indicates a Mode of a theme (like dark or light mode)\" },\n  Modes: { id: \"Modes\", value: \"Modes\", comment: \"Indicates a selection of Modes of a theme (like dark or light mode)\" },\n  Month: { id: \"Month\", value: \"Month\", comment: \"As in a date month\" },\n  MonthAbbreviatedApr: { id: \"MonthAbbreviatedApr\", value: \"Apr\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedAug: { id: \"MonthAbbreviatedAug\", value: \"Aug\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedDec: { id: \"MonthAbbreviatedDec\", value: \"Dec\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedFeb: { id: \"MonthAbbreviatedFeb\", value: \"Feb\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedJan: { id: \"MonthAbbreviatedJan\", value: \"Jan\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedJuly: { id: \"MonthAbbreviatedJuly\", value: \"Jul\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedJune: { id: \"MonthAbbreviatedJune\", value: \"Jun\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedLowerCaseApr: { id: \"MonthAbbreviatedApr\", value: \"Apr\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseDec: { id: \"MonthAbbreviatedDec\", value: \"Dec\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseFeb: { id: \"MonthAbbreviatedFeb\", value: \"Feb\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseJan: { id: \"MonthAbbreviatedJan\", value: \"Jan\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseJuly: { id: \"MonthAbbreviatedJuly\", value: \"Jul\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseJune: { id: \"MonthAbbreviatedJune\", value: \"Jun\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseLowerCaseAug: { id: \"MonthAbbreviatedAug\", value: \"Aug\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseMar: { id: \"MonthAbbreviatedMar\", value: \"Mar\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseMay: { id: \"MonthAbbreviatedMay\", value: \"May\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseNov: { id: \"MonthAbbreviatedNov\", value: \"Nov\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseOct: { id: \"MonthAbbreviatedOct\", value: \"Oct\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedLowerCaseSep: { id: \"MonthAbbreviatedSep\", value: \"Sep\", comment: \"Month in abbreviated form lower case - in some languages/situations this must be lower case (but not english)\" },\n  MonthAbbreviatedMar: { id: \"MonthAbbreviatedMar\", value: \"Mar\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedMay: { id: \"MonthAbbreviatedMay\", value: \"May\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedNov: { id: \"MonthAbbreviatedNov\", value: \"Nov\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedOct: { id: \"MonthAbbreviatedOct\", value: \"Oct\", comment: \"Month in abbreviated form\" },\n  MonthAbbreviatedSep: { id: \"MonthAbbreviatedSep\", value: \"Sep\", comment: \"Month in abbreviated form\" },\n  MonthWideApr: { id: \"MonthWideApr\", value: \"April\", comment: \"Month in Wide form\" },\n  MonthWideAug: { id: \"MonthWideAug\", value: \"August\", comment: \"Month in Wide form\" },\n  MonthWideDec: { id: \"MonthWideDec\", value: \"December\", comment: \"Month in Wide form\" },\n  MonthWideFeb: { id: \"MonthWideFeb\", value: \"February\", comment: \"Month in Wide form\" },\n  MonthWideJan: { id: \"MonthWideJan\", value: \"January\", comment: \"Month in Wide form\" },\n  MonthWideJuly: { id: \"MonthWideJuly\", value: \"July\", comment: \"Month in Wide form\" },\n  MonthWideJune: { id: \"MonthWideJune\", value: \"June\", comment: \"Month in Wide form\" },\n  MonthWideLowerCaseApr: { id: \"MonthWideApr\", value: \"april\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseAug: { id: \"MonthWideAug\", value: \"august\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseDec: { id: \"MonthWideDec\", value: \"december\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseFeb: { id: \"MonthWideFeb\", value: \"february\", comment: \"Month in Wide form  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseJan: { id: \"MonthWideJan\", value: \"january\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseJuly: { id: \"MonthWideJuly\", value: \"july\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseJune: { id: \"MonthWideJune\", value: \"june\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseMar: { id: \"MonthWideMar\", value: \"march\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseMay: { id: \"MonthWideMay\", value: \"may\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseNov: { id: \"MonthWideNov\", value: \"november\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseOct: { id: \"MonthWideOct\", value: \"october\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideLowerCaseSep: { id: \"MonthWideSep\", value: \"september\", comment: \"Month in Wide form lower case  - in some languages/situations this must be lower case (but not english)\" },\n  MonthWideMar: { id: \"MonthWideMar\", value: \"March\", comment: \"Month in Wide form\" },\n  MonthWideMay: { id: \"MonthWideMay\", value: \"May\", comment: \"Month in Wide form\" },\n  MonthWideNov: { id: \"MonthWideNov\", value: \"November\", comment: \"Month in Wide form\" },\n  MonthWideOct: { id: \"MonthWideOct\", value: \"October\", comment: \"Month in Wide form\" },\n  MonthWideSep: { id: \"MonthWideSep\", value: \"September\", comment: \"Month in Wide form\" },\n  More: { id: \"More\", value: \"More\", comment: \"Text Indicating More Buttons or form content\" },\n  MoreActions: { id: \"MoreActions\", value: \"More Actions\", comment: \"Text on the More Actions button indictating hidden functions\" },\n  MoveToLeft: { id: \"MoveToLeft\", value: \"Move to left\", comment: \"Button tooltip used in a list of movable items\" },\n  MoveToRight: { id: \"MoveToRight\", value: \"Move to right\", comment: \"Button tooltip used in a list of movable items\" },\n  MsgDirty: { id: \"MsgDirty\", value: \", Modified\", comment: \"for modified form fields\" },\n  New: { id: \"New\", value: \"New\", comment: \"Any generic new thing\" },\n  NewDarkTheme: { id: \"NewDarkTheme\", value: \"New Dark\", comment: \"The name of an application Theme\" },\n  NewDocument: { id: \"NewDocument\", value: \"New Document\", comment: \"New Document tooltip\" },\n  NewEvent: { id: \"NewEvent\", value: \"New Event\", comment: \"Menu item for adding a new calendar event.\" },\n  NewEventDetails: { id: \"NewEventDetails\", value: \"New Event Details\", comment: \"Placholder text for adding a new calendar event.\" },\n  NewHighContrastTheme: { id: \"NewHighContrastTheme\", value: \"New High Contrast\", comment: \"The name of an application Theme\" },\n  NewItem: { id: \"NewItem\", value: \"New item\", comment: \"New item in listbuilder\" },\n  NewLightTheme: { id: \"NewLightTheme\", value: \"New Light\", comment: \"The name of an application Theme\" },\n  NewRow: { id: \"New\", value: \"New\", comment: \"Indicates a new row added in the datagrid\" },\n  NewWindow: { id: \"NewWindow\", value: \"New Window\", comment: \"Contents open in a new browser window.\" },\n  Next: { id: \"Next\", value: \"Next\", comment: \"Generic Next for a tooltip, see Next Record and Next Page for more specific\" },\n  NextMonth: { id: \"NextMonth\", value: \"Next Month\", comment: \"the label for the button that moves calendar to next/prev\" },\n  NextPage: { id: \"NextPage\", value: \"Next Page\", comment: \"Move to next item on Pager component\" },\n  NextRecord: { id: \"NextRecord\", value: \"Next Record\", comment: \"Can be used as a tooltip for arrow navigation on a form moving between records\" },\n  NextWeek: { id: \"NextWeek\", value: \"Next Week\", comment: \"the label for the button that moves calendar to next/prev\" },\n  NextYear: { id: \"NextYear\", value: \"Next Year\", comment: \"the label for the button that moves calendar to next/prev\" },\n  No: { id: \"No\", value: \"No\", comment: \"On a dialog button\" },\n  NoCommentsEntered: { id: \"NoCommentsEntered\", value: \"No Comments Entered\", comment: \"Placeholder for where no comments are added.\" },\n  NoData: { id: \"NoData\", value: \"No Data Available\", comment: \"Shown when there is no rows shown in a list\" },\n  NoDataFilter: { id: \"NoDataFilter\", value: \"No data available, make a new filter selection to see more results.\", comment: \"Shown when there is no rows shown in a list\" },\n  NoDataList: { id: \"NoDataList\", value: \"No data available, make a selection in the list above to see more results.\", comment: \"Shown when there is no rows shown in a list\" },\n  NoResults: { id: \"NoResults\", value: \"No results\", comment: \"Search Results Text\" },\n  NoRecordSelected: { id: \"NoRecordSelected\", value: \"0 Records Selected\", comment: \"Text showing no records selected\" },\n  NoTitle: { id: \"NoTitle\", value: \"(No Title)\", comment: \"Placeholder text for when you add an event to the calendar with no title typed.\" },\n  None: { id: \"None\", value: \"None\", comment: \"None to pick clear color\" },\n  Normal: { id: \"Normal\", value: \"Normal\", comment: \"Normal row height\" },\n  Norwegian: { id: \"Norwegian\", value: \"Norwegian\", comment: \"Language name for Norwegian\" },\n  NotSelected: { id: \"NotSelected\", value: \"Not Selected\", comment: \"Not Selected in icons for filtering\" },\n  Notes: { id: \"Notes\", value: \"Notes\", comment: \"Notes icon tooltip\" },\n  NumberList: { id: \"NumberList\", value: \"Number List\", comment: \"Number List tooltip\" },\n  Ok: { id: \"Ok\", value: \"Ok\", comment: \"Ok button on a dialog\" },\n  OpenBackClose: { id: \"OpenBackClose\", value: \"Open / Back / Close\", comment: \"Open / Back / Close tooltip\" },\n  OpenClose: { id: \"OpenClose\", value: \"Open / Close\", comment: \"Open / Close tooltip\" },\n  OperatingSystem: { id: \"OperatingSystem\", value: \"Operating System\", comment: \"Device Operating System\" },\n  OrderedList: { id: \"OrderedList\", value: \"Insert/Remove Numbered List\", comment: \"Insert an Ordered list in the editor\" },\n  Page: { id: \"Page\", value: \"page \", comment: \"Text on the pager links\" },\n  PageOf: { id: \"PageOf\", value: \"Page {0} of {1}\", comment: \"Pager Text Showing current and number of pages\" },\n  PageOn: { id: \"PageOn\", value: \"You are currently on page \", comment: \"Text on the pager links\" },\n  Pagination: { id: \"Pagination\", value: \"Pagination\", comment: \"Text for a pager region on the page\" },\n  PaidTimeOff: { id: \"PaidTimeOff\", value: \"Paid Time Off\", comment: \"As in vacation from work\" },\n  PasswordConfirmValidation: { id: \"PasswordConfirmValidation\", value: \"Password must match\", comment: \"Password Confirm validation\" },\n  PasswordValidation: { id: \"PasswordValidation\", value: \"<strong>Password must</strong><br>Be at least 10 characters long<br>Have at least one upper case character<br>Have at least one lower case character<br>Contain one special character<br>Not contain your username<br>Can not be a Previously used password<br>\", comment: \"Password validation requirements\" },\n  Paste: { id: \"Paste\", value: \"Paste\", comment: \"Paste icon tooltip\" },\n  Peak: { id: \"Peak\", value: \"Peak\", comment: \"the max or peak value in a chart\" },\n  Pending: { id: \"Pending\", value: \"Pending\", comment: \"An event or task is pending\" },\n  Period: { id: \"Period\", value: \"Period\", comment: \"the am/pm portion of a time\" },\n  Personalization: { id: \"Personalization\", value: \"Personalization\", comment: \"Refers to changing a personalization in the application like a color.\" },\n  PersonalizeColumns: { id: \"PersonalizeColumns\", value: \"Personalize Columns\", comment: \"Customize Columns in a Grid\" },\n  Plan: { id: \"Plan\", value: \"Plan\", comment: \"As in type of vacation plan\" },\n  Platform: { id: \"Platform\", value: \"Platform\", comment: \"The users operating system i.e. mac, windows\" },\n  Polish: { id: \"Polish\", value: \"Polish\", comment: \"Language name for Polish\" },\n  Portuguese: { id: \"Portuguese\", value: \"Portuguese\", comment: \"Language name for Portuguese\" },\n  PressDown: { id: \"PressDown\", value: \"Press Down arrow to select\", comment: \"the audible label for Tooltip about how to operate a picker\" },\n  PressShiftF10: { id: \"PressShiftF10\", value: \"Press Shift+F10 to open the context menu.\", comment: \"the audible infor for screen readers on how to use a field with a popup menu\" },\n  Previous: { id: \"Previous\", value: \"Previous\", comment: \"Generic Previous for a tooltip, see Next Record and Next Page for more specific\" },\n  PreviousMonth: { id: \"PreviousMonth\", value: \"Previous Month\", comment: \"the label for the button that moves calendar to next/prev\" },\n  PreviousPage: { id: \"PreviousPage\", value: \"Previous Page\", comment: \"Move to next item on Pager component\" },\n  PreviousRecord: { id: \"PreviousRecord\", value: \"Previous Record\", comment: \"Can be used as a tooltip for arrow navigation on a form moving between records\" },\n  PreviousWeek: { id: \"PreviousWeek\", value: \"Previous Week\", comment: \"the label for the button that moves calendar to next/prev\" },\n  PreviousYear: { id: \"PreviousYear\", value: \"Previous Year\", comment: \"the label for the button that moves calendar to next/prev\" },\n  Print: { id: \"Print\", value: \"Print\", comment: \"Print tooltip\" },\n  Range: { id: \"Range\", value: \"Range\", comment: \"Range for tooltip\" },\n  RecordsPerPage: { id: \"RecordsPerPage\", value: \"{0} Records per page\", comment: \"Shows an actual number of pages in the pager\" },\n  RecordsPerPageNoToken: { id: \"RecordsPerPageNoToken\", value: \"Records per page\", comment: \"Shows as a title list of values for page number (without the slot/token value)\" },\n  RecordSelected: { id: \"RecordSelected\", value: \"{0} Record Selected\", comment: \"Text showing current total of record selected\" },\n  RecordsSelected: { id: \"RecordsSelected\", value: \"{0} Records Selected\", comment: \"Text showing current total of records selected\" },\n  Redo: { id: \"Redo\", value: \"Redo\", comment: \"Redo tooltip\" },\n  Refresh: { id: \"Refresh\", value: \"Refresh\", comment: \"Refresh tooltip\" },\n  ReorderRows: { id: \"ReorderRows\", value: \"Reorder Rows\", comment: \"Drag and Reorder Grid Rows\" },\n  RequestTimeOff: { id: \"RequestTimeOff\", value: \"Request Time Off\", comment: \"Making a request for time off work.\" },\n  Required: { id: \"Required\", value: \"Required\", comment: \"indicates a form field is manditory\" },\n  Reset: { id: \"Reset\", value: \"Reset\", comment: \"Reset tooltip\" },\n  ResetDefault: { id: \"ResetDefault\", value: \"Reset to Default\", comment: \"Reset Datagrid Columns, Filter and other Layout\" },\n  Result: { id: \"Result\", value: \"({0} result)\", comment: \"Showing a single result in a List\" },\n  ResultOf: { id: \"ResultOf\", value: \"{0} of {1} result\", comment: \"Text Showing current and total number of Result\" },\n  Results: { id: \"Results\", value: \"({0} results)\", comment: \"As in showing N Results (plural) in a List\" },\n  ResultsOf: { id: \"ResultsOf\", value: \"{0} of {1} results\", comment: \"Text Showing current and total number of Results\" },\n  Right: { id: \"Right\", value: \"Right\", comment: \"Right\" },\n  RightAlign: { id: \"RightAlign\", value: \"Align Right\", comment: \"Right Align tooltip\" },\n  RightAlignText: { id: \"RightAlignText\", value: \"Align Right\", comment: \"Right Align Text tooltip\" },\n  Roles: { id: \"Roles\", value: \"Roles\", comment: \"Roles tooltip\" },\n  Romanian: { id: \"Romanian\", value: \"Romanian\", comment: \"Language name for Romanian\" },\n  RowHeight: { id: \"RowHeight\", value: \"Row Height\", comment: \"Describes the Height for Rows in a Data Grid\" },\n  Ruby: { id: \"Ruby\", value: \"Ruby\", comment: \"Color in our color palette\" },\n  RunFilter: { id: \"RunFilter\", value: \"Run Filter\", comment: \"Execute the current filter criteria\" },\n  Russian: { id: \"Russian\", value: \"Russian\", comment: \"Language name for Russian\" },\n  SameWindow: { id: \"SameWindow\", value: \"Same Window\", comment: \"Contents open in the same browser window.\" },\n  Save: { id: \"Save\", value: \"Save\", comment: \"Save tooltip\" },\n  SaveCurrentView: { id: \"SaveCurrentView\", value: \"Save Current View\", comment: \"Datagrids contain view sets. This menu option saves them\" },\n  SavedViews: { id: \"SavedViews\", value: \"Saved Views\", comment: \"Label for a list of Views\" },\n  Schedule: { id: \"Schedule\", value: \"Schedule\", comment: \"Shows a schedule view\" },\n  Search: { id: \"Search\", value: \"Search\", comment: \"Search tooltip\" },\n  SearchColumnName: { id: \"SearchColumnName\", value: \"Search for a column name\", comment: \"Search for a datagrid column by name\" },\n  SearchFolder: { id: \"SearchFolder\", value: \"Search in Folder\", comment: \"Search Folder tooltip\" },\n  SearchList: { id: \"SearchList\", value: \"Search List\", comment: \"Search List tooltip\" },\n  Second: { id: \"Second\", value: \"Second\", comment: \"Test use in calendar\" },\n  Seconds: { id: \"Seconds\", value: \"Seconds\", comment: \"the seconds portion of a time\" },\n  Select: { id: \"Select\", value: \"Select\", comment: \"text describing a select action\" },\n  SelectAll: { id: \"SelectAll\", value: \"Select All\", comment: \"describes the action of selecting all items available in a list\" },\n  SelectDay: { id: \"SelectDay\", value: \"Select a Day\", comment: \"Select a day in the calendar picker\" },\n  Selected: { id: \"Selected\", value: \"Selected\", comment: \"text describing a selected object\" },\n  SelectedOptions: { id: \"SelectedOptions\", value: \"Selected Options\", comment: \"shown on a list of selected dropdown options (generic)\" },\n  Selection: { id: \"Selection\", value: \"Selection\", comment: \"text describing current selections in a field\" },\n  Send: { id: \"Send\", value: \"Send\", comment: \"Send tooltip\" },\n  SetTime: { id: \"SetTime\", value: \"Set Time\", comment: \"button the sets time in a field\" },\n  Settings: { id: \"Settings\", value: \"Settings\", comment: \"Settings tooltip\" },\n  Short: { id: \"Short\", value: \"Short\", comment: \"Describes a Shorted Row Height in a grid/list\" },\n  Show: { id: \"Show\", value: \"Show\", comment: \"On a Button for revealing text that is hidden\" },\n  ShowEvent: { id: \"ShowEvent\", value: \"Show Event\", comment: \"Show an event (in a calendar)\" },\n  ShowFilterRow: { id: \"ShowFilterRow\", value: \"Show Filter Row\", comment: \"Toggle a row with filer info above a list\" },\n  ShowLess: { id: \"ShowLess\", value: \"Show Less\", comment: \"Show less form content\" },\n  ShowMore: { id: \"ShowMore\", value: \"Show More\", comment: \"Show more form content\" },\n  SickTime: { id: \"SickTime\", value: \"Sick Time\", comment: \"Time off sick from work\" },\n  SkipToMain: { id: \"SkipToMain\", value: \"Skip to Main Content\", comment: \"Skip link in header, jumps when clicked on to main area\" },\n  Slate: { id: \"Slate\", value: \"Slate\", comment: \"Color in our color palette\" },\n  SlideOf: { id: \"SlideOf\", value: \"Slide {0} of {1}\", comment: \"Slide Text Showing current and total number of slides\" },\n  SliderHandle: { id: \"SliderHandle\", value: \"Handle for\", comment: \"Description of the portion of a Slider control that is focusable and changes its value, followed in code by the name of the control\" },\n  SliderMaximumHandle: { id: \"SliderMaximumHandle\", value: \"Maximum range handle for\", comment: \"Describes a maximum value handle in a Range (double slider), followed in code by the name of the control\" },\n  SliderMinimumHandle: { id: \"SliderMinimumHandle\", value: \"Minimum range handle for\", comment: \"Describes a minimum value handle in a Range (double slider), followed in code by the name of the control\" },\n  SlidesOf: { id: \"SlidesOf\", value: \"Slides {0} and {1} of {2}\", comment: \"Slides Text Showing current slides and total number of slides\" },\n  Slovak: { id: \"Slovak\", value: \"Slovak\", comment: \"Language name for Slovak (Slovakia)\" },\n  Slovenian: { id: \"Slovenian\", value: \"Slovenian\", comment: \"Language name for Slovenian\" },\n  Small: { id: \"Small\", value: \"Small\", comment: \"A more small grid setting for rows and sizes. NOTE: Please change french to Petite (Masculine form)\" },\n  SohoDarkTheme: { id: \"SohoDarkTheme\", value: \"Soho Dark\", comment: \"The name of an application Theme\" },\n  SohoHighContrastTheme: { id: \"SohoHighContrastTheme\", value: \"Soho High Contrast\", comment: \"The name of an application Theme\" },\n  SohoLightTheme: { id: \"SohoLightTheme\", value: \"Soho Light\", comment: \"The name of an application Theme\" },\n  SortAtoZ: { id: \"SortAtoZ\", value: \"Sort Ascending\", comment: \"Sort A to Z in icons for filtering\" },\n  SortDown: { id: \"SortDown\", value: \"Sort Down\", comment: \"Sort Down tooltip\" },\n  SortUp: { id: \"SortUp\", value: \"Sort Up\", comment: \"Sort Up tooltip\" },\n  SortZtoA: { id: \"SortZtoA\", value: \"Sort Descending\", comment: \"Sort Z to A in icons for filtering\" },\n  Spanish: { id: \"Spanish\", value: \"Spanish\", comment: \"Language name for Spanish\" },\n  SplitterCollapseButton: { id: \"SplitterCollapseButton\", value: \"Collapse Splitter\", comment: \"Action to move the position of splitter either to left or right\" },\n  SplitterDragHandle: { id: \"SplitterDragHandle\", value: \"Drag To Adjust\", comment: \"Drags the splitter handle\" },\n  StartsWith: { id: \"StartsWith\", value: \"Starts With\", comment: \"for condition filtering\" },\n  Status: { id: \"Status\", value: \"Status\", comment: \"Status of someting thats submitted fx in progress, approved\" },\n  StepsCompleted: { id: \"StepsCompleted\", value: \"{0} of {1} Steps Completed\", comment: \"steps of a wizard/chart\" },\n  StrikeThrough: { id: \"StrikeThrough\", value: \"Strike Through\", comment: \"Edit text to have a strike through it in an editor\" },\n  String: { id: \"String\", value: \"String\", comment: \"As in a text string\" },\n  Strings: { id: \"Strings\", value: \"Strings\", comment: \"As in a text strings\" },\n  Subject: { id: \"Subject\", value: \"Subject\", comment: \"The subject of an calendar event.\" },\n  Submit: { id: \"Submit\", value: \"Submit\", comment: \"Submit on a modal dialog\" },\n  Subscript: { id: \"Subscript\", value: \"Subscript\", comment: \"Turn on and off Subscript text in text editor (like word)\" },\n  Subtle: { id: \"Subtle\", value: \"Subtle\", comment: \"The title of one of the application themes.\" },\n  Superscript: { id: \"Superscript\", value: \"Superscript\", comment: \"Turn on and off Superscript text in text editor (like word)\" },\n  Swedish: { id: \"Swedish\", value: \"Swedish\", comment: \"Language name for Swedish\" },\n  Tabs: { id: \"Tabs\", value: \"Tabs...\", comment: \"Used in the Tabs Control's more menu, preceeded by a number that describes how many tabs are in the spillover menu\" },\n  Tack: { id: \"Tack\", value: \"Pin\", comment: \"Pin an object\" },\n  Tagalog: { id: \"Tagalog\", value: \"Tagalog\", comment: \"Language name for Tagalog (Philippines)\" },\n  Tall: { id: \"Tall\", value: \"Tall\", comment: \"Describes a Taller Row Height in a grid/list\" },\n  Target: { id: \"Target\", value: \"Target\", comment: \"Label for an input to enter a Target (Url Attribute)\" },\n  TeamEvent: { id: \"TeamEvent\", value: \"Team Event\", comment: \"Having an event with a work team\" },\n  TestLocaleDefaults: { id: \"TestLocaleDefaults\", value: \"Test Locale Defaults\", comment: \"Do not translate\" },\n  TextBtnCancel: { id: \"TextBtnCancel\", value: \"Cancel uploading this file\", comment: \"text for cancel button for advanced fileupload\" },\n  TextBtnCloseError: { id: \"TextBtnCloseError\", value: \"Close this error\", comment: \"text for error close button for advanced fileupload\" },\n  TextBtnRemove: { id: \"TextBtnRemove\", value: \"Close this error\", comment: \"text for remove button for advanced fileupload\" },\n  TextColor: { id: \"TextColor\", value: \"Text color\", comment: \"add or edit text color in the editor\" },\n  TextDropArea: { id: \"DropArea\", value: \"Drag and Drop Files to Upload\", comment: \"text for drop area for advanced fileupload\" },\n  TextDropAreaWithBrowse: { id: \"TextDropAreaWithBrowse\", value: 'Drag and Drop or <span class=\"hyperlink\">Select Files</span> to Upload' },\n  Thai: { id: \"Thai\", value: \"Thai\", comment: \"Language name for Thai\" },\n  Theme: { id: \"Theme\", value: \"Theme\", comment: \"Refers to an application Theme\" },\n  ThousandsAbbrev: { id: \"ThousandsAbbrev\", value: \"{0}k\", comment: \"Refers to a value in a chart in thousands. i.e. 1K, 100K\" },\n  Time: { id: \"Time\", value: \"Time\", comment: \"The time part of a date.\" },\n  TimepickerPopup: { id: \"TimepickerPopup\", value: \"Timepicker Popup\", comment: \"text read out by assistive technology that explains that the user is interacting with a Timepicker popup.\" },\n  TimepickerTriggerButton: { id: \"TimepickerTriggerButton\", value: \"Click to Open Time Picker\", comment: \"Used in accessible labels to describe a time picker field's trigger button to assistive technology\" },\n  Timer: { id: \"Timer\", value: \"Timer\", comment: \"Timer tooltip\" },\n  To: { id: \"To\", value: \"To\", comment: \"End of a range (of dates)\" },\n  Today: { id: \"Today\", value: \"Today\", comment: \"refering to today on a calendar\" },\n  ToggleBold: { id: \"ToggleBold\", value: \"Toggle Bold Text\", comment: \"turn on and off bold in text editor (like word) please check this for thai see https://github.com/infor-design/enterprise/issues/4738\" },\n  ToggleH3: { id: \"ToggleH3\", value: \"Toggle Heading 3\", comment: \"turn on and off heading 3 text\" },\n  ToggleH4: { id: \"ToggleH4\", value: \"Toggle Heading 4\", comment: \"turn on and off heading 4 text\" },\n  ToggleItalic: { id: \"ToggleItalic\", value: \"Toggle Italic Text\", comment: \"turn on and off Italic in text editor (like word)\" },\n  ToggleUnderline: { id: \"ToggleUnderline\", value: \"Toggle Underline Text\", comment: \"turn on and off Underline in text editor (like word) please check this for thai https://github.com/infor-design/enterprise/issues/4738\" },\n  Toolbar: { id: \"Toolbar\", value: \"Toolbar\", comment: \"describing the toolbar component\" },\n  TopAlign: { id: \"TopAlign\", value: \"Top Align\", comment: \"Top Align tooltip\" },\n  Total: { id: \"Total\", value: \"Total\", comment: \"Mathematic total of a calculation\" },\n  Totals: { id: \"Totals\", value: \"Totals\", comment: \"Mathematic total of a calculation (plural)\" },\n  TreeCollapse: { id: \"TreeCollapse\", value: \"Collapse Tree\", comment: \"Tree Collapse tooltip\" },\n  TreeExpand: { id: \"TreeExpand\", value: \"Expand Tree\", comment: \"Tree Expand tooltip\" },\n  TrillionsAbbrev: { id: \"TrillionsAbbrev\", value: \"{0}T\", comment: \"Refers to a value in a chart in billions. i.e. 1B, 100B\" },\n  Turkish: { id: \"Turkish\", value: \"Turkish\", comment: \"Language name for Turkish\" },\n  Turquoise: { id: \"Turquoise\", value: \"Turquoise\", comment: \"Color in our color palette\" },\n  Type: { id: \"Type\", value: \"Type\", comment: \"The type of event.\" },\n  TypeToFilter: { id: \"TypeToFilter\", value: \"Type to filter\", comment: \"Screen reader hit for screen reader users.\" },\n  Ukrainian: { id: \"Ukrainian\", value: \"Ukrainian\", comment: \"Language name for Ukrainian\" },\n  UnavailableDate: { id: \"UnavailableDate\", value: \"Unavailable Date\", comment: \"Unavailable Date Text\" },\n  Underline: { id: \"Underline\", value: \"Underline\", comment: \"Make text Underlined\" },\n  Undo: { id: \"Undo\", value: \"Undo\", comment: \"Undo tooltip\" },\n  Unlocked: { id: \"Unlocked\", value: \"Unlocked\", comment: \"Unlocked tooltip\" },\n  UnorderedList: { id: \"UnorderedList\", value: \"Insert/Remove Bulleted List\", comment: \"Insert an Unordered list in the editor\" },\n  Unsupported: { id: \"Unsupported\", value: \"This content is not available because it uses features not supported in your current browser version.\", comment: \"Suggesting browser upgrade for missing features.\" },\n  Up: { id: \"Up\", value: \"Up\", comment: \"Up tooltip\" },\n  UpComing: { id: \"UpComing\", value: \"Upcoming\", comment: \"List of upcoming things (general)\" },\n  UpComingEvents: { id: \"UpComingEvents\", value: \"Upcoming Events\", comment: \"List of upcoming calendar events\" },\n  UpComingTimeOff: { id: \"UpComingTimeOff\", value: \"Upcoming Time Off\", comment: \"As in time off work\" },\n  UpliftDarkTheme: { id: \"UpliftDarkTheme\", value: \"Uplift Dark\", comment: \"The name of an application Theme\" },\n  UpliftHighContrastTheme: { id: \"UpliftHighContrastTheme\", value: \"Uplift High Contrast\", comment: \"The name of an application Theme\" },\n  UpliftLightTheme: { id: \"UpliftLightTheme\", value: \"Uplift Light\", comment: \"The name of an application Theme\" },\n  Upload: { id: \"Upload\", value: \"Upload\", comment: \"Upload tooltip\" },\n  Url: { id: \"Url\", value: \"Url\", comment: \"Universal Resource Locator (Web internet)\" },\n  UseArrow: { id: \"UseArrow\", value: \". Use arrow keys to select.\", comment: \"Instructional comments for screen readers\" },\n  UseEnter: { id: \"UseEnter\", value: \". Use enter or down arrow to lookup.\", comment: \"Instructional comments for screen readers\" },\n  User: { id: \"User\", value: \"User\", comment: \"User tooltip\" },\n  UserProfile: { id: \"UserProfile\", value: \"User Profile\", comment: \"User Profile tooltip\" },\n  Variant: { id: \"Variant\", value: \"Variant\", comment: \"Refers to an application variant (a slight UI change/variation)\" },\n  Version: { id: \"Version\", value: \"IDS Version\", comment: \"Version of IDS\" },\n  Versions: { id: \"Versions\", value: \"Versions\", comment: \"A selection of versions of the styles\" },\n  VerticalMiddleAlign: { id: \"VerticalMiddleAlign\", value: \"Vertical Align Center\", comment: \"Vertical Align tooltip\" },\n  Vibrant: { id: \"Vibrant\", value: \"Vibrant\", comment: \"The title of one of the application themes.\" },\n  Vietnamese: { id: \"Vietnamese\", value: \"Vietnamese\", comment: \"Language name for Vietnamese\" },\n  ViewSource: { id: \"ViewSource\", value: \"View Source\", comment: \"Toggle between the source view and visual view\" },\n  ViewVisual: { id: \"ViewVisual\", value: \"View Visual\", comment: \"Toggle between the source view and visual view\" },\n  Week: { id: \"Week\", value: \"Week\", comment: \"Shows a view of the current weeks events\" },\n  WeekNumber: { id: \"WeekNumber\", value: \"W#\", comment: \"Week view number header on the datepicker\" },\n  Year: { id: \"Year\", value: \"Year\", comment: \"As in a date year\" },\n  Yes: { id: \"Yes\", value: \"Yes\", comment: \"On a dialog button\" }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-locale/data/en-messages.ts\n");

/***/ }),

/***/ "./src/components/ids-locale/ids-locale-data.ts":
/*!******************************************************!*\
  !*** ./src/components/ids-locale/ids-locale-data.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_locale_data_default)\n/* harmony export */ });\nclass IdsLocaleData {\n  static loadedLocales = /* @__PURE__ */ new Map();\n  // The lang files that have been loaded up\n  static loadedLanguages = /* @__PURE__ */ new Map();\n}\nvar ids_locale_data_default = IdsLocaleData;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbG9jYWxlL2lkcy1sb2NhbGUtZGF0YS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQ0EsTUFBZSxjQUFjO0FBQUEsRUFDM0IsT0FBTyxnQkFBZ0Isb0JBQUksSUFBSTtBQUFBO0FBQUEsRUFHL0IsT0FBTyxrQkFBa0Isb0JBQUksSUFBSTtBQUNuQztBQUVBLElBQU8sMEJBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1sb2NhbGUvaWRzLWxvY2FsZS1kYXRhLnRzP2E4ZGIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFN0YXRpYyBIb2xkZXIgb2YgbG9jYWxlIGluZm9ybWF0aW9uICovXG5hYnN0cmFjdCBjbGFzcyBJZHNMb2NhbGVEYXRhIHtcbiAgc3RhdGljIGxvYWRlZExvY2FsZXMgPSBuZXcgTWFwKCk7XG5cbiAgLy8gVGhlIGxhbmcgZmlsZXMgdGhhdCBoYXZlIGJlZW4gbG9hZGVkIHVwXG4gIHN0YXRpYyBsb2FkZWRMYW5ndWFnZXMgPSBuZXcgTWFwKCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IElkc0xvY2FsZURhdGE7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-locale/ids-locale-data.ts\n");

/***/ }),

/***/ "./src/components/ids-locale/ids-locale.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-locale/ids-locale.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_locale_default)\n/* harmony export */ });\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\n/* harmony import */ var _data_en_US__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data/en-US */ \"./src/components/ids-locale/data/en-US.ts\");\n/* harmony import */ var _data_en_messages__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data/en-messages */ \"./src/components/ids-locale/data/en-messages.ts\");\n/* harmony import */ var _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ids-locale-data */ \"./src/components/ids-locale/ids-locale-data.ts\");\n\n\n\n\nclass IdsLocale {\n  // State object\n  state;\n  // Holds a single instance of Intl\n  dateFormatter;\n  constructor() {\n    _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.set(\"en-US\", _data_en_US__WEBPACK_IMPORTED_MODULE_1__.locale);\n    _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.set(\"en\", _data_en_messages__WEBPACK_IMPORTED_MODULE_2__.messages);\n    this.state = {\n      defaultLocale: {\n        language: \"en\",\n        localeName: \"en-US\"\n      },\n      language: \"en\",\n      localeName: \"en-US\",\n      localeOptions: {}\n    };\n    this.setDefaults();\n  }\n  /**\n   * Set the Defaut language and locale\n   */\n  async setDefaults() {\n    const defaultLang = \"en\";\n    const defaultLocale = \"en-US\";\n    await this.setLanguage(defaultLang);\n    await this.setLocale(\"en-US\");\n    this.state.defaultLocale.messages = this.language.messages;\n    this.state.defaultLocale.language = defaultLang;\n    this.state.defaultLocale.localeName = defaultLocale;\n    this.state.defaultLocale.localeOptions = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(defaultLocale);\n  }\n  /**\n   * Load a locale or message file\n   * @private\n   * @param {string} value The script file name\n   * @returns {Promise} A promise that will resolve when complete\n   */\n  loadLanguageScript(value) {\n    const promise = import(\n      /* webpackIgnore: true */\n      `../locale-data/${value}-messages.js`\n    );\n    promise.then((module) => {\n      _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.set(value, module.messages);\n    });\n    return promise;\n  }\n  /**\n   * Sets the dir (direction) tag on an element\n   * @param {HTMLElement} elem The element to set it on.\n   * @param {string} value The value to check\n   */\n  updateDirectionAttribute(elem, value) {\n    if (this.isRTL(value)) {\n      elem.setAttribute(\"dir\", \"rtl\");\n      return;\n    }\n    elem.removeAttribute(\"dir\");\n  }\n  /**\n   * Sets the lang (langauge) tag on an element\n   * @param {HTMLElement} elem The element to set it on.\n   * @param {string} value The value to check\n   */\n  setDocumentLangAttribute(elem, value) {\n    if (value) {\n      document?.querySelector(\"html\")?.setAttribute(\"lang\", value);\n      return;\n    }\n    document?.querySelector(\"html\")?.removeAttribute(\"lang\");\n  }\n  /** Reset the language attribute to clean up */\n  removeLangAttribute() {\n    document?.querySelector(\"html\")?.removeAttribute(\"lang\");\n  }\n  /**\n   * Set the language for a component\n   * @param {string} value The language string value\n   */\n  set language(value) {\n    const lang = this.correctLanguage(value);\n    if (value && lang !== this.state.language) {\n      this.setLanguage(lang);\n    }\n  }\n  /**\n   * Get the language data\n   * @returns {object} The language data\n   */\n  get language() {\n    return {\n      name: this.state.language,\n      messages: _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.get(this.state.language) || {}\n    };\n  }\n  /**\n   * Set the language for a component and wait for it to finish (async)\n   * @param {string} value The language string value\n   */\n  async setLanguage(value) {\n    const lang = this.correctLanguage(value);\n    if (this.state.language !== lang) {\n      this.state.language = lang;\n    }\n    if (this.state.language === lang && _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.get(this.state.language)) {\n      return;\n    }\n    await this.loadLanguageScript(lang);\n  }\n  /**\n   * Maps a language value to a more correct one\n   * @private\n   * @param {string} value the starting language string\n   * @returns {string} the updated language string\n   */\n  correctLanguage(value) {\n    let lang = value?.replace(\"-messages\", \"\");\n    const translated = /* @__PURE__ */ new Set([\"fr-CA\", \"fr-FR\", \"pt-BR\", \"pt-PT\", \"zh-CN\", \"zh-Hans\", \"zh-Hant\", \"zh-TW\"]);\n    if (translated.has(lang)) {\n      return lang;\n    }\n    lang = lang.substring(0, 2);\n    if (lang === \"in\") {\n      lang = \"id\";\n    }\n    if (lang === \"iw\") {\n      lang = \"he\";\n    }\n    return lang;\n  }\n  /**\n   * Takes a translation key and returns the translation in the current locale\n   * @param {string} key  The key to search for on the string\n   * @param {object} [options] Supports showBrackets and maybe more in the future\n   * @returns {string|undefined} a translated string, or nothing, depending on configuration\n   */\n  translate(key, options = { showAsUndefined: false, showBrackets: true }) {\n    if (key === \"&nsbp;\") {\n      return \"\";\n    }\n    if (!options?.showAsUndefined && options?.showBrackets === void 0) {\n      options.showBrackets = true;\n    }\n    let messages = this.language.messages;\n    if (options?.language) {\n      messages = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.get(options?.language) || messages;\n    }\n    if (!messages[key]) {\n      if (options.showAsUndefined) {\n        return void 0;\n      }\n      messages = this.state.defaultLocale?.messages;\n      if (!messages || !messages[key]) {\n        return `${options.showBrackets ? \"[\" : \"\"}${key}${options.showBrackets ? \"]\" : \"\"}`;\n      }\n      return this.state.defaultLocale.messages[key].value;\n    }\n    return messages[key].value;\n  }\n  /**\n   * Add an object full of translations to the given locale.\n   * @param {string} lang The language to add them to.\n   * @param {object} messages Strings in the form of\n   */\n  extendTranslations(lang, messages) {\n    if (!_ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.has(lang)) {\n      return;\n    }\n    const base = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.get(lang);\n    Object.keys(messages).forEach((key) => {\n      base[key] = messages[key];\n    });\n    _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLanguages.set(lang, base);\n  }\n  /**\n   * Load a locale file\n   * @private\n   * @param {string} value The script file name\n   * @returns {Promise} A promise that will resolve when complete\n   */\n  loadLocaleScript(value) {\n    const promise = import(\n      /* webpackIgnore: true */\n      `../locale-data/${value}.js`\n    );\n    promise.then((module) => {\n      _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.set(value, module.locale);\n    });\n    return promise;\n  }\n  /**\n   * Set the locale for a component\n   * @param {string} value The locale string value\n   */\n  set locale(value) {\n    const locale = this.#correctLocale(value);\n    if (value && locale !== this.state.localeName) {\n      this.setLocale(locale);\n    }\n  }\n  /**\n   * Get the locale data\n   * @returns {object} The language data\n   */\n  get locale() {\n    return {\n      name: this.state.localeName,\n      options: _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(this.state.localeName) || {}\n    };\n  }\n  /**\n   * Set the locale for a component and wait for it to finish (async)\n   * @param {string} value The locale string value\n   */\n  async setLocale(value) {\n    if (!value) {\n      return;\n    }\n    const locale = this.#correctLocale(value);\n    if (this.state.localeName !== locale) {\n      this.state.localeName = locale;\n      this.setLanguage(locale);\n    }\n    if (this.state.localeName === locale && _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(this.state.localeName)) {\n      return;\n    }\n    await this.loadLocaleScript(locale);\n  }\n  /**\n   * Maps a locale value to a more correct one\n   * @private\n   * @param {string} value the starting locale string\n   * @returns {string} the updated locale string\n   */\n  #correctLocale(value) {\n    let locale = value;\n    if (locale === \"in-ID\") {\n      locale = \"id-ID\";\n    }\n    if (locale?.substr(0, 2) === \"iw\") {\n      locale = \"he-IL\";\n    }\n    return locale;\n  }\n  /**\n   * Format a number using the locale information\n   * @param {string} value the starting locale string\n   * @param {object} [options] the objects to use for formatting\n   * @returns {string} the formatted number\n   */\n  formatNumber(value, options) {\n    let opts = options;\n    let val = value;\n    const usedLocale = opts?.locale || this.state.localeName;\n    if (!opts) {\n      opts = {};\n    }\n    if (opts?.minimumFractionDigits === void 0 && !opts?.maximumFractionDigits) {\n      opts.minimumFractionDigits = 2;\n    }\n    if (opts?.group || opts.group === \"\") {\n      opts.useGrouping = opts.group !== \"\";\n    }\n    if (opts?.style === \"integer\") {\n      opts.style = void 0;\n      opts.maximumFractionDigits = 0;\n      opts.minimumFractionDigits = 0;\n    }\n    if (typeof value === \"string\") {\n      val = this.parseNumber(value, opts);\n    }\n    if (typeof value === \"string\" && value.length >= 18 && value.indexOf(\".\") === -1 && value.indexOf(\",\") === -1) {\n      return BigInt(value).toLocaleString(usedLocale, opts);\n    }\n    if (typeof value === \"string\" && value.length >= 18 && value.indexOf(\".\") > -1) {\n      const index = value.indexOf(\".\");\n      let decimalPart = value.substr(index);\n      const intPart = value.substr(0, index);\n      const bigInt = BigInt(intPart).toLocaleString(usedLocale);\n      decimalPart = Number(decimalPart).toLocaleString(usedLocale, opts);\n      return bigInt + decimalPart.substr(1);\n    }\n    return Number(val).toLocaleString(usedLocale, opts);\n  }\n  /**\n   * Takes a locale formatted number string and converts it back to a real number object.\n   * @param {string} input  The source number normally as a string.\n   * @param {object} options Any special options to pass in such as the original locale\n   * @returns {number} The number as an actual Number type unless the number\n   * is a big int (19 significant digits), in this case a string will be returned\n   */\n  parseNumber(input, options) {\n    const localeData = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(options?.locale || this.locale.name);\n    const numSettings = localeData.numbers;\n    let numString = input;\n    if (!numString) {\n      return NaN;\n    }\n    if (typeof input === \"number\") {\n      numString = numString.toString();\n    }\n    const group = options?.group ? options.group : numSettings.group;\n    const decimal = options?.decimal ? options.decimal : numSettings.decimal;\n    const percentSign = options?.percentSign ? options.percentSign : numSettings.percentSign;\n    const currencySign = options?.currencySign ? options.currencySign : localeData.currencySign;\n    const exp = group === \" \" ? new RegExp(/\\s/g) : new RegExp(`\\\\${group}`, \"g\");\n    numString = numString.replace(exp, \"\");\n    numString = numString.replace(decimal, \".\");\n    numString = numString.replace(percentSign, \"\");\n    numString = numString.replace(currencySign, \"\");\n    numString = numString.replace(\"$\", \"\");\n    numString = numString.replace(\" \", \"\");\n    if (numString.indexOf(\".\") === -1 && numString.length >= 18) {\n      return numString;\n    }\n    return numString.length >= 19 ? numString : parseFloat(numString);\n  }\n  /**\n   * Convert a number in arabic/chinese or hindi numerals to an \"english\" number.\n   * @param {string} string The string number in arabic/chinese or hindi\n   * @returns {number} The english number.\n   */\n  convertNumberToEnglish(string) {\n    const arabic = [\"\\u0660\", \"\\u0661\", \"\\u0662\", \"\\u0663\", \"\\u0664\", \"\\u0665\", \"\\u0666\", \"\\u0667\", \"\\u0668\", \"\\u0669\"];\n    const devanagari = [\"\\u0966\", \"\\u0967\", \"\\u0968\", \"\\u0969\", \"\\u096A\", \"\\u096B\", \"\\u096C\", \"\\u096D\", \"\\u096E\", \"\\u096F\"];\n    const chineseFinancialTraditional = [\"\\u96F6\", \"\\u58F9\", \"\\u8CB3\", \"\\u53C4\", \"\\u8086\", \"\\u4F0D\", \"\\u9678\", \"\\u67D2\", \"\\u634C\", \"\\u7396\"];\n    const chineseFinancialSimplified = [\"\\u96F6\", \"\\u58F9\", \"\\u8D30\", \"\\u53C1\", \"\\u8086\", \"\\u4F0D\", \"\\u9646\", \"\\u67D2\", \"\\u634C\", \"\\u7396\"];\n    const chinese = [\"\\u3007\", \"\\u4E00\", \"\\u4E8C\", \"\\u4E09\", \"\\u56DB\", \"\\u4E94\", \"\\u516D\", \"\\u4E03\", \"\\u516B\", \"\\u4E5D\"];\n    for (let i = 0; i <= 9; i++) {\n      string = string.replace(arabic[i], i);\n      string = string.replace(\"\\u066C\", \"\");\n      string = string.replace(\",\", \"\");\n      string = string.replace(devanagari[i], i);\n      string = string.replace(chineseFinancialTraditional[i], i);\n      string = string.replace(chineseFinancialSimplified[i], i);\n      string = string.replace(chinese[i], i);\n      if (i === 0) {\n        string = string.replace(\"\\u96F6\", i);\n      }\n    }\n    return parseFloat(string);\n  }\n  /**\n   * Formats a date object using the current locale or specified settings\n   * to a string for Internationalization\n   * @param {Date} value The date to show in the current locale.\n   * @param {object} options Additional date formatting settings.\n   * @returns {string} the formatted date.\n   */\n  formatDate(value, options) {\n    const usedOptions = options;\n    const usedLocale = usedOptions?.locale || this.locale.name;\n    if (options?.pattern && value instanceof Date) {\n      const calendar = this.calendar(usedLocale);\n      let year = value.getFullYear();\n      let month = value.getMonth();\n      let day = value.getDate();\n      if (calendar.name === \"islamic-umalqura\") {\n        const umalquraParts = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_0__.gregorianToUmalqura)(value);\n        year = umalquraParts?.year;\n        month = umalquraParts?.month;\n        day = umalquraParts?.day;\n      }\n      const dayOfWeek = value.getDay();\n      const hours = value.getHours();\n      const mins = value.getMinutes();\n      const seconds = value.getSeconds();\n      const millis = value.getMilliseconds();\n      const pattern = options.pattern;\n      let result = \"\";\n      result = pattern.replace(\"de\", \"nnnnn\").replace(\"ng\\xE0y\", \"nnnn\").replace(\"th\\xE1ng\", \"t1\\xE1ng\").replace(\"den\", \"nnn\").replace(\"dd\", `${day}`.padStart(2, \"0\")).replace(\"d\", day).replace(\"yyyy\", year).replace(\"y\", year);\n      const showDayPeriods = pattern.indexOf(\" a\") > -1 || pattern.indexOf(\"a\") === 0;\n      if (showDayPeriods && hours === 0) {\n        result = result.replace(\"hh\", \"12\");\n        result = result.replace(\"h\", \"12\");\n      }\n      result = result.replace(\"hh\", hours > 12 ? `${hours - 12}`.padStart(2, \"0\") : `${hours}`.padStart(2, \"0\")).replace(\"h\", hours > 12 ? `${hours - 12}` : `${hours}`).replace(\"HH\", `${hours}`.padStart(2, \"0\")).replace(\"H\", `${hours}`).replace(\"mm\", `${mins}`.padStart(2, \"0\")).replace(\"ss\", `${seconds}`.padStart(2, \"0\")).replace(\"SSS\", `${millis}`.padStart(3, \"0\"));\n      if (pattern.includes(\"MMM\")) {\n        result = result.replace(\"MMMM\", calendar?.months.wide[month] || `${month + 1}`.padStart(2, \"0\")).replace(\"MMM\", calendar?.months.abbreviated[month] || `${month + 1}`.padStart(2, \"0\"));\n      } else {\n        result = result.replace(\"MM\", `${month + 1}`.padStart(2, \"0\")).replace(\"M\", `${month + 1}`);\n      }\n      if (showDayPeriods && calendar) {\n        result = result.replace(\" a\", ` ${hours >= 12 ? calendar.dayPeriods[1] : calendar.dayPeriods[0]}`);\n        if (pattern.indexOf(\"a\") === 0) {\n          result = result.replace(\" a\", ` ${hours >= 12 ? calendar.dayPeriods[1] : calendar.dayPeriods[0]}`);\n        }\n      }\n      if (calendar) {\n        result = result.replace(\"EEEE\", calendar.days.wide[dayOfWeek]).replace(\"EEE\", calendar.days.abbreviated[dayOfWeek]).replace(\"EE\", calendar.days.narrow[dayOfWeek]);\n      }\n      result = result.replace(\"nnnnn\", \"de\").replace(\"nnnn\", \"ng\\xE0y\").replace(\"t1\\xE1ng\", \"th\\xE1ng\").replace(\"nnn\", \"den\");\n      return result.replace(/&lrm;|\\u200E/gi, \" \").trim();\n    }\n    let sourceDate = value;\n    this.dateFormatter = new Intl.DateTimeFormat(\n      usedLocale,\n      usedOptions\n    );\n    if (/^0*$/.test(value)) {\n      return \"\";\n    }\n    if (typeof value === \"string\") {\n      sourceDate = this.parseDate(sourceDate, options);\n    }\n    let formattedDate = this.dateFormatter.formatToParts(sourceDate).map(({ type, value: value2 }) => {\n      switch (type) {\n        case \"year\":\n          return `${this.twoToFourDigitYear(value2)}`;\n        default:\n          return value2;\n      }\n    }).join(\"\");\n    if (!options || options?.dateStyle === \"short\" || options?.year === \"numeric\") {\n      formattedDate = formattedDate.replace(\", \", \" \");\n    }\n    formattedDate = formattedDate.replace(/ /g, \" \");\n    return formattedDate;\n  }\n  /**\n   * Convert the two digit year year to the correct four digit year.\n   * @param {number} twoDigitYear The two digit year.\n   * @returns {number} Converted 3 digit year.\n   */\n  twoToFourDigitYear(twoDigitYear) {\n    if (twoDigitYear.length === 2) {\n      return parseInt((twoDigitYear > 39 ? \"19\" : \"20\") + twoDigitYear, 10);\n    }\n    if (twoDigitYear.length === 3) {\n      return parseInt((twoDigitYear.substr(1, 3) > 39 ? \"19\" : \"20\") + twoDigitYear.substr(1, 3), 10);\n    }\n    return twoDigitYear;\n  }\n  /**\n   * Formats a number into the locale hour format\n   * @param {number} hour The hours to show in the current locale\n   * @param {object} options Additional date formatting settings\n   * @returns {string} the hours in either 24 h or 12 h format\n   */\n  formatHour(hour, options) {\n    let timeSeparator = this.calendar(options?.locale || this.locale.name).dateFormat.timeSeparator;\n    if (typeof hour === \"string\" && hour.indexOf(timeSeparator) === -1) {\n      timeSeparator = \":\";\n    }\n    const date = new Date();\n    if (typeof hour === \"number\") {\n      const split = hour.toString().split(\".\");\n      date.setHours(parseInt(split[0]));\n      date.setMinutes(split[1] ? parseFloat(`0.${split[1]}`) * 60 : 0);\n    } else {\n      const parts = hour.split(timeSeparator);\n      date.setHours(parts[0]);\n      date.setMinutes(parts[1] || 0);\n    }\n    return this.formatDate(date, { hour: \"numeric\", minute: \"numeric\" });\n  }\n  /**\n   * Formats a number into the locales hour format.\n   * @param {number} startHour The hours to show in the current locale.\n   * @param {number} endHour The hours to show in the current locale.\n   * @param {object} options Additional date formatting settings.\n   * @returns {string} the hours in either 24 h or 12 h format\n   */\n  formatHourRange(startHour, endHour, options) {\n    const dayPeriods = this.calendar(options?.locale || this.locale.name).dayPeriods;\n    let removePeriod = false;\n    let range = `${this.formatHour(startHour, options)} - ${this.formatHour(endHour, options)}`;\n    if (range.indexOf(\":00 AM -\") > -1 || range.indexOf(\":00 PM -\") > -1) {\n      removePeriod = true;\n    }\n    if (range.split(dayPeriods[0]).length - 1 > 1) {\n      range = range.replace(dayPeriods[0], \"\");\n    }\n    if (range.split(dayPeriods[1]).length - 1 > 1) {\n      range = range.replace(` ${dayPeriods[1]}`, \"\");\n    }\n    range = range.replace(\"  \", \" \");\n    range = range.replace(\"\\u202F\", \" \");\n    range = range.replace(\"\\u202F\", \" \");\n    if (removePeriod) {\n      range = range.replace(\":00 -\", \" -\");\n    }\n    return range;\n  }\n  /**\n   * Returns whether or not the default calendar is islamic\n   * @param {string} locale The locale to check if not the current\n   * @returns {boolean} True if this locale uses islamic as the primary calendar\n   */\n  isIslamic(locale) {\n    const testLocale = locale || this.locale.name;\n    return testLocale === \"ar-SA\";\n  }\n  /**\n   * Describes whether or not this locale is one that is read in \"right-to-left\" fashion\n   * @param {string} language The language to check if not the current\n   * @returns {boolean} Whether or not this locale is \"right-to-left\"\n   */\n  isRTL(language) {\n    const lang = this.correctLanguage(language || this.language.name);\n    return lang === \"ar\" || lang === \"he\";\n  }\n  /**\n   * Get the timezone part of a date\n   * @param {Date} date The date object to use.\n   * @param {string} timeZoneName Can be short or long.\n   * @returns {string} The time zone as a string.\n   */\n  #getTimeZone(date, timeZoneName) {\n    const currentLocale = this.locale.name || \"en-US\";\n    const short = date.toLocaleDateString(currentLocale);\n    const full = date.toLocaleDateString(currentLocale, { timeZoneName: timeZoneName === \"long\" ? \"long\" : \"short\" });\n    const shortIndex = full.indexOf(short);\n    if (shortIndex >= 0) {\n      const trimmed = full.substring(0, shortIndex) + full.substring(shortIndex + short.length);\n      return trimmed.replace(/^[\\s,.\\-:;]+|[\\s,.\\-:;]+$/g, \"\");\n    }\n    return full;\n  }\n  /**\n   * Takes a formatted date string and parses back it into a date object\n   * @param {string} dateString The string to parse in the current format\n   * @param {string|object} options Additional options like locale and dateFormat\n   * @param {boolean} isStrict If true missing date parts will be considered invalid. If false the current month/day.\n   * @returns {Date | Array | undefined} The date object it could calculate from the string\n   */\n  parseDate(dateString, options, isStrict) {\n    if (!dateString) {\n      return void 0;\n    }\n    if (dateString.indexOf(\"T\") > -1 && dateString.substr(dateString.length - 1) === \"Z\") {\n      return new Date(dateString);\n    }\n    let dateFormat = options;\n    let locale = this.locale.name;\n    let thisLocaleCalendar = this.calendar(locale);\n    const dirtyDateString = dateString;\n    if (typeof options === \"object\") {\n      locale = options.locale || locale;\n      dateFormat = options.dateFormat || this.calendar(locale).dateFormat[dateFormat.date];\n    }\n    if (typeof options === \"object\" && options.pattern) {\n      dateFormat = options.dateFormat || options.pattern;\n    }\n    if (typeof options === \"object\" && options.calendarName && options.locale) {\n      thisLocaleCalendar = this.calendar(options.locale);\n    }\n    if (!dateFormat) {\n      dateFormat = this.calendar(locale).dateFormat.short;\n    }\n    const orgDatestring = dateString;\n    if (dateString === \"0000\" || dateString === \"000000\" || dateString === \"00000000\") {\n      return void 0;\n    }\n    if (dateFormat.pattern) {\n      dateFormat = dateFormat.pattern;\n    }\n    let formatParts;\n    let dateStringParts;\n    const dateObj = {};\n    const isDateTime = dateFormat.toLowerCase().indexOf(\"h\") > -1;\n    const isUTC = dateString.toLowerCase().indexOf(\"z\") > -1;\n    let i;\n    let l;\n    const ampmHasDot = !!thisLocaleCalendar.dayPeriods.filter((x) => x.indexOf(\".\") > -1).length && dateFormat.indexOf(\"a\") > -1 && dateFormat.indexOf(\"ah\") < 0 && dateFormat.indexOf(\"H\") < 0;\n    const hasDot = (dateFormat.match(/M/g) || []).length === 3 && thisLocaleCalendar && thisLocaleCalendar.months && thisLocaleCalendar.months.abbreviated && thisLocaleCalendar.months.abbreviated.filter((v) => /\\./.test(v)).length;\n    if (isDateTime) {\n      const shortTimeZone = this.#getTimeZone(new Date(), \"short\");\n      const longTimeZone = this.#getTimeZone(new Date(), \"long\");\n      dateString = dateString.replace(` ${shortTimeZone}`, \"\");\n      dateString = dateString.replace(` ${longTimeZone}`, \"\");\n      dateFormat = dateFormat.replace(\" zzzz\", \"\").replace(\" zz\", \"\");\n      const regex = hasDot ? /[T\\s:-]/g : /[T\\s:.-]/g;\n      dateFormat = dateFormat.replace(regex, \"/\").replace(/z/i, \"\");\n      dateFormat = ampmHasDot ? dateFormat.replace(\"//\", \"/\") : dateFormat;\n      dateString = dateString.replace(ampmHasDot ? /[T\\s:-]/g : regex, \"/\").replace(/z/i, \"\");\n    }\n    dateFormat = dateFormat.replace(\" de \", \" \");\n    dateString = dateString.replace(\" de \", \" \");\n    dateFormat = dateFormat.replace(\"/ah/\", \"/a/h/\");\n    dateString = dateString.replace(\"\\u5348\", \"\\u5348/\");\n    dateFormat = dateFormat.replace(\",\", \"\");\n    dateString = dateString.replace(\",\", \"\");\n    const getStartIndex = (hasMdyyyy2, hasdMyyyy2) => {\n      if (hasMdyyyy2 > -1) {\n        return hasMdyyyy2;\n      }\n      if (hasdMyyyy2 > -1) {\n        return hasdMyyyy2;\n      }\n      return 0;\n    };\n    const hasMdyyyy = dateFormat.indexOf(\"Mdyyyy\");\n    const hasdMyyyy = dateFormat.indexOf(\"dMyyyy\");\n    let startIndex = -1;\n    let endIndex = -1;\n    if (hasMdyyyy > -1 || hasdMyyyy > -1) {\n      startIndex = getStartIndex(hasMdyyyy, hasdMyyyy);\n      endIndex = startIndex + dateString.indexOf(\"/\") > -1 ? dateString.indexOf(\"/\") : dateString.length;\n      dateString = `${dateString.substr(startIndex, endIndex - 4)}/${dateString.substr(endIndex - 4, dateString.length)}`;\n      dateString = `${dateString.substr(startIndex, dateString.indexOf(\"/\") / 2)}/${dateString.substr(dateString.indexOf(\"/\") / 2, dateString.length)}`;\n    }\n    if (hasMdyyyy > -1) {\n      dateFormat = dateFormat.replace(\"Mdyyyy\", \"M/d/yyyy\");\n    }\n    if (hasdMyyyy > -1) {\n      dateFormat = dateFormat.replace(\"dMyyyy\", \"d/M/yyyy\");\n    }\n    if (dateFormat.indexOf(\" \") !== -1) {\n      const regex = hasDot ? /[\\s:]/g : /[\\s:.]/g;\n      dateFormat = dateFormat.replace(regex, \"/\");\n      dateString = dateString.replace(regex, \"/\");\n    }\n    if (dateFormat.indexOf(\"MMMM\") > -1 && this.isRTL() && dateFormat && dateFormat !== \"MMMM/dd\" && dateFormat !== \"dd/MMMM\") {\n      const lastIdx = dateString.lastIndexOf(\"/\");\n      dateString = dateString.substr(0, lastIdx - 1).replace(\"/\", \" \") + dateString.substr(lastIdx);\n    }\n    if (dateFormat.indexOf(\" \") === -1 && dateFormat.indexOf(\".\") === -1 && dateFormat.indexOf(\"/\") === -1 && dateFormat.indexOf(\"-\") === -1) {\n      if (dateString.indexOf(\" \") !== -1) {\n        dateString = dateString.split(\" \").join(\"\");\n      } else if (dateString.indexOf(\".\") !== -1) {\n        dateString = dateString.split(\".\").join(\"\");\n      } else if (dateString.indexOf(\"/\") !== -1) {\n        dateString = dateString.split(\"/\").join(\"\");\n      } else if (dateString.indexOf(\"-\") !== -1) {\n        dateString = dateString.split(\"-\").join(\"\");\n      }\n      let lastChar = dateFormat[0];\n      let newFormat = \"\";\n      let newDateString = \"\";\n      for (i = 0, l = dateFormat.length; i < l; i++) {\n        newDateString += dateFormat[i] !== lastChar ? `/${dateString[i]}` : dateString[i];\n        newFormat += dateFormat[i] !== lastChar ? `/${dateFormat[i]}` : dateFormat[i];\n        if (i > 1) {\n          lastChar = dateFormat[i];\n        }\n      }\n      dateString = newDateString;\n      dateFormat = newFormat;\n    }\n    formatParts = dateFormat.split(\"/\");\n    dateStringParts = dateString.split(\"/\");\n    if (formatParts.length === 1) {\n      formatParts = dateFormat.split(\".\");\n    }\n    if (dateStringParts.length === 1) {\n      dateStringParts = dateString.split(\".\");\n    }\n    if (formatParts.length === 1) {\n      formatParts = dateFormat.split(\"-\");\n    }\n    if (dateStringParts.length === 1) {\n      dateStringParts = dateString.split(\"-\");\n    }\n    if (formatParts.length === 1) {\n      formatParts = dateFormat.split(\" \");\n    }\n    if (dateStringParts.length === 1) {\n      dateStringParts = dateString.split(\" \");\n    }\n    const month = this.#determineDatePart(formatParts, dateStringParts, \"M\", \"MM\", \"MMM\", \"MMMM\");\n    const year = this.#determineDatePart(formatParts, dateStringParts, \"y\", \"yy\", \"yyyy\");\n    let hasDays = false;\n    let hasDayPeriodsFirst = false;\n    for (i = 0, l = dateStringParts.length; i < l; i++) {\n      const pattern = `${formatParts[i]}`;\n      const value = dateStringParts[i];\n      const numberValue = parseInt(value, 10);\n      if (!hasDays) {\n        hasDays = pattern.toLowerCase().indexOf(\"d\") > -1;\n      }\n      let lastDay;\n      let abrMonth;\n      let textMonths;\n      switch (pattern) {\n        case \"d\":\n          lastDay = new Date(year, month, 0).getDate();\n          if (numberValue < 1 || numberValue > 31 || numberValue > lastDay) {\n            return void 0;\n          }\n          dateObj.day = value;\n          break;\n        case \"dd\":\n          if (numberValue < 1 || numberValue > 31 || numberValue < 10 && value.substr(0, 1) !== \"0\") {\n            return void 0;\n          }\n          dateObj.day = value;\n          break;\n        case \"M\": {\n          if (numberValue < 1 || numberValue > 12) {\n            return void 0;\n          }\n          dateObj.month = numberValue - 1;\n          break;\n        }\n        case \"MM\":\n          if (numberValue < 1 || numberValue > 12 || numberValue < 10 && value.substr(0, 1) !== \"0\") {\n            return void 0;\n          }\n          dateObj.month = numberValue - 1;\n          break;\n        case \"MMM\":\n          abrMonth = this.calendar(locale).months.abbreviated;\n          for (let len = 0; len < abrMonth.length; len++) {\n            if (orgDatestring.indexOf(abrMonth[len]) > -1) {\n              dateObj.month = len;\n            }\n          }\n          break;\n        case \"MMMM\":\n          textMonths = this.calendar(locale).months.wide;\n          for (let k = 0; k < textMonths.length; k++) {\n            if (orgDatestring.indexOf(textMonths[k]) > -1) {\n              dateObj.month = k;\n            }\n          }\n          break;\n        case \"yy\":\n          dateObj.year = this.twoToFourDigitYear(value);\n          break;\n        case \"y\":\n        case \"yyyy\":\n          dateObj.year = value.length === 2 ? this.twoToFourDigitYear(value) : value;\n          break;\n        case \"h\":\n          if (numberValue < 0 || numberValue > 12) {\n            return void 0;\n          }\n          dateObj.h = hasDayPeriodsFirst ? dateObj.h : value;\n          break;\n        case \"hh\":\n          if (numberValue < 0 || numberValue > 12) {\n            return void 0;\n          }\n          dateObj.h = hasDayPeriodsFirst ? dateObj.h : value.length === 1 ? `0${value}` : value;\n          break;\n        case \"H\":\n          if (numberValue < 0 || numberValue > 24) {\n            return void 0;\n          }\n          dateObj.h = hasDayPeriodsFirst ? dateObj.h : value;\n          break;\n        case \"HH\":\n          if (numberValue < 0 || numberValue > 24) {\n            return void 0;\n          }\n          dateObj.h = hasDayPeriodsFirst ? dateObj.h : value.length === 1 ? `0${value}` : value;\n          break;\n        case \"ss\":\n          if (numberValue < 0 || numberValue >= 60) {\n            if (!options?.strictTime) {\n              dateObj.ss = 0;\n              break;\n            } else {\n              return void 0;\n            }\n          }\n          dateObj.ss = value;\n          break;\n        case \"SSS\":\n          dateObj.ms = value;\n          break;\n        case \"mm\":\n          if (Number.isNaN(numberValue) || numberValue < 0 || numberValue >= 60) {\n            if (!options?.strictTime) {\n              dateObj.mm = 0;\n              break;\n            } else {\n              return void 0;\n            }\n          }\n          dateObj.mm = value;\n          break;\n        case \"a\": {\n          if (!dateObj.h && formatParts[i + 1] && formatParts[i + 1].toLowerCase().substr(0, 1) === \"h\") {\n            dateObj.h = dateStringParts[i + 1];\n            hasDayPeriodsFirst = true;\n          }\n          const isAM = dirtyDateString?.toLowerCase()?.includes(thisLocaleCalendar.dayPeriods[0]?.toLowerCase());\n          const isPM = dirtyDateString?.toLowerCase()?.includes(thisLocaleCalendar.dayPeriods[1]?.toLowerCase());\n          if (!(isAM || isPM) && options?.strictTime) {\n            return void 0;\n          }\n          if (dirtyDateString?.toLowerCase()?.includes(thisLocaleCalendar.dayPeriods[0]?.toLowerCase())) {\n            dateObj.a = \"AM\";\n            if (dateObj.h) {\n              if (dateObj.h === 12 || dateObj.h === \"12\") {\n                dateObj.h = 0;\n              }\n            }\n          }\n          if (dirtyDateString?.toLowerCase()?.includes(thisLocaleCalendar.dayPeriods[1]?.toLowerCase())) {\n            dateObj.a = \"PM\";\n            if (dateObj.h) {\n              if (Number(dateObj.h) < 12) {\n                dateObj.h = parseInt(dateObj.h, 10) + 12;\n              }\n            }\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n    const isLeap = (y) => y % 4 === 0 && y % 100 !== 0 || y % 400 === 0;\n    const closestLeap = (y) => {\n      let closestLeapYear = typeof y === \"number\" && !Number.isNaN(y) ? y : new Date().getFullYear();\n      for (let i2 = 0; i2 < 4; i2++) {\n        if (isLeap(closestLeapYear)) {\n          break;\n        }\n        closestLeapYear--;\n      }\n      return closestLeapYear;\n    };\n    dateObj.return = void 0;\n    dateObj.leapYear = isLeap(dateObj.year);\n    if (isDateTime && !dateObj.h && !dateObj.mm) {\n      return void 0;\n    }\n    if (!dateObj.year && dateObj.year !== 0 && !isStrict) {\n      dateObj.isUndefinedYear = true;\n      for (i = 0, l = formatParts.length; i < l; i++) {\n        if (formatParts[i].indexOf(\"y\") > -1 && dateStringParts[i] !== void 0) {\n          dateObj.isUndefinedYear = false;\n          break;\n        }\n      }\n      if (dateObj.isUndefinedYear) {\n        const isFeb29 = parseInt(dateObj.day, 10) === 29 && parseInt(dateObj.month, 10) === 1;\n        dateObj.year = isFeb29 ? closestLeap() : new Date().getFullYear();\n        if (thisLocaleCalendar.name === \"islamic-umalqura\") {\n          const umDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_0__.gregorianToUmalqura)(new Date(dateObj.year, 0, 1));\n          dateObj.year = umDate[0];\n        }\n      } else {\n        delete dateObj.year;\n      }\n    }\n    if (dateObj.year && dateObj.year.length === 2) {\n      dateObj.year = `20${dateObj.year}`;\n    }\n    if (dateObj.year === \"\" || dateObj.year && !(`${dateObj.year}`.length === 2 || `${dateObj.year}`.length === 4)) {\n      delete dateObj.year;\n    }\n    if (!dateObj.month && dateObj.month !== 0 && !isStrict) {\n      dateObj.isUndefinedMonth = true;\n      for (i = 0, l = formatParts.length; i < l; i++) {\n        if (formatParts[i].indexOf(\"M\") > -1 && dateStringParts[i] !== void 0) {\n          dateObj.isUndefinedMonth = false;\n          break;\n        }\n      }\n      if (dateObj.isUndefinedMonth) {\n        dateObj.month = new Date().getMonth();\n      }\n    }\n    if (!dateObj.day && dateObj.day !== 0 && (!isStrict || !hasDays)) {\n      dateObj.isUndefindedDay = true;\n      for (i = 0, l = formatParts.length; i < l; i++) {\n        if (formatParts[i].indexOf(\"d\") > -1 && dateStringParts[i] !== void 0) {\n          dateObj.isUndefindedDay = false;\n          break;\n        }\n      }\n      if (dateObj.isUndefindedDay) {\n        dateObj.day = 1;\n      } else {\n        delete dateObj.day;\n      }\n    }\n    if (isDateTime) {\n      if (isUTC) {\n        if (dateObj.h !== void 0) {\n          dateObj.return = new Date(\n            Date.UTC(\n              dateObj.year,\n              dateObj.month,\n              dateObj.day,\n              dateObj.h,\n              dateObj.mm\n            )\n          );\n        }\n        if (dateObj.ss !== void 0) {\n          dateObj.return = new Date(\n            Date.UTC(\n              dateObj.year,\n              dateObj.month,\n              dateObj.day,\n              dateObj.h,\n              dateObj.mm,\n              dateObj.ss\n            )\n          );\n        }\n        if (dateObj.ms !== void 0) {\n          dateObj.return = new Date(\n            Date.UTC(\n              dateObj.year,\n              dateObj.month,\n              dateObj.day,\n              dateObj.h,\n              dateObj.mm,\n              dateObj.ss,\n              dateObj.ms\n            )\n          );\n        }\n      } else {\n        if (dateObj.h !== void 0) {\n          dateObj.return = new Date(\n            dateObj.year,\n            dateObj.month,\n            dateObj.day,\n            dateObj.h,\n            dateObj.mm\n          );\n        }\n        if (dateObj.ss !== void 0) {\n          dateObj.return = new Date(\n            dateObj.year,\n            dateObj.month,\n            dateObj.day,\n            dateObj.h,\n            dateObj.mm,\n            dateObj.ss\n          );\n        }\n        if (dateObj.ms !== void 0) {\n          dateObj.return = new Date(\n            dateObj.year,\n            dateObj.month,\n            dateObj.day,\n            dateObj.h,\n            dateObj.mm,\n            dateObj.ss,\n            dateObj.ms\n          );\n        }\n      }\n    } else {\n      dateObj.return = new Date(dateObj.year, dateObj.month, dateObj.day);\n    }\n    if (thisLocaleCalendar.name === \"islamic-umalqura\") {\n      return [\n        parseInt(dateObj.year, 10),\n        parseInt(dateObj.month, 10),\n        parseInt(dateObj.day, 10),\n        parseInt(dateObj.h || \"0\", 10),\n        parseInt(dateObj.mm || \"0\", 10),\n        parseInt(dateObj.ss || \"0\", 10),\n        parseInt(dateObj.ms || \"0\", 10)\n      ];\n    }\n    return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_0__.isValidDate)(dateObj.return) ? dateObj.return : void 0;\n  }\n  /**\n   * Format out the date into parts.\n   * @private\n   * @param {Array} formatParts An array of the format bits.\n   * @param {Array} dateStringParts An array of the date parts.\n   * @param {string} filter1 The first option to filter.\n   * @param {string} filter2 The second option to filter.\n   * @param {string} filter3 The third option to filter.\n   * @param {string} filter4 The fourth option to filter.\n   * @param {string} filter5 The fifth option to filter.\n   * @returns {string} The filtered out date part.\n   */\n  #determineDatePart(formatParts, dateStringParts, filter1, filter2, filter3, filter4, filter5) {\n    let ret = \"\";\n    for (let i = 0; i < dateStringParts.length; i++) {\n      if (filter1 === formatParts[i] || filter2 === formatParts[i] || filter3 === formatParts[i] || filter4 === formatParts[i] || filter5 === formatParts[i]) {\n        ret = dateStringParts[i];\n      }\n    }\n    return ret;\n  }\n  /**\n   * Shortcut function to get the default or any calendar\n   * @param {string} locale The locale to use\n   * @param {string} name the name of the calendar (fx: \"gregorian\", \"islamic-umalqura\")\n   * @returns {object} containing calendar data\n   */\n  calendar(locale, name) {\n    const localeData = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(locale || this.locale.name);\n    const calendars = localeData?.calendars;\n    if (name && calendars) {\n      for (let i = 0; i < calendars.length; i++) {\n        const cal = calendars[i];\n        if (cal.name === name) {\n          return cal;\n        }\n      }\n    }\n    return calendars[0];\n  }\n  /**\n   * Shortcut function to get the current locales numbers\n   * @param {string} locale The locale to use\n   * @returns {object} containing calendar data for numbers\n   */\n  numbers(locale) {\n    const localeData = _ids_locale_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadedLocales.get(locale || this.locale.name);\n    return localeData.numbers;\n  }\n}\nvar ids_locale_default = IdsLocale;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-locale/ids-locale.ts\n");

/***/ }),

/***/ "./src/utils/ids-date-utils/ids-date-utils.ts":
/*!****************************************************!*\
  !*** ./src/utils/ids-date-utils/ids-date-utils.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addDate\": () => (/* binding */ addDate),\n/* harmony export */   \"dateDiff\": () => (/* binding */ dateDiff),\n/* harmony export */   \"daysDiff\": () => (/* binding */ daysDiff),\n/* harmony export */   \"daysInMonth\": () => (/* binding */ daysInMonth),\n/* harmony export */   \"firstDayOfMonthDate\": () => (/* binding */ firstDayOfMonthDate),\n/* harmony export */   \"firstDayOfWeekDate\": () => (/* binding */ firstDayOfWeekDate),\n/* harmony export */   \"gregorianToUmalqura\": () => (/* binding */ gregorianToUmalqura),\n/* harmony export */   \"hoursTo12\": () => (/* binding */ hoursTo12),\n/* harmony export */   \"hoursTo24\": () => (/* binding */ hoursTo24),\n/* harmony export */   \"isDaylightSavingTime\": () => (/* binding */ isDaylightSavingTime),\n/* harmony export */   \"isTodaysDate\": () => (/* binding */ isTodaysDate),\n/* harmony export */   \"isValidDate\": () => (/* binding */ isValidDate),\n/* harmony export */   \"lastDayOfMonthDate\": () => (/* binding */ lastDayOfMonthDate),\n/* harmony export */   \"lastDayOfWeekDate\": () => (/* binding */ lastDayOfWeekDate),\n/* harmony export */   \"monthDiff\": () => (/* binding */ monthDiff),\n/* harmony export */   \"removeDateRange\": () => (/* binding */ removeDateRange),\n/* harmony export */   \"subtractDate\": () => (/* binding */ subtractDate),\n/* harmony export */   \"umalquraToGregorian\": () => (/* binding */ umalquraToGregorian),\n/* harmony export */   \"weekNumber\": () => (/* binding */ weekNumber),\n/* harmony export */   \"weekNumberToDate\": () => (/* binding */ weekNumberToDate),\n/* harmony export */   \"weeksInMonth\": () => (/* binding */ weeksInMonth),\n/* harmony export */   \"weeksInRange\": () => (/* binding */ weeksInRange)\n/* harmony export */ });\n/* harmony import */ var _ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\nfunction isTodaysDate(date) {\n  const today = new Date();\n  return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n}\nfunction firstDayOfWeekDate(date, startsOn = 0, showRange = false) {\n  const dayOfWeek = date.getDay();\n  const firstDay = new Date(date);\n  const diff = dayOfWeek >= startsOn || showRange ? dayOfWeek - startsOn : 6 - dayOfWeek;\n  firstDay.setDate(date.getDate() - diff);\n  firstDay.setHours(0, 0, 0, 0);\n  return firstDay;\n}\nfunction lastDayOfWeekDate(date, startsOn = 0) {\n  const lastDay = firstDayOfWeekDate(date, startsOn);\n  lastDay.setDate(lastDay.getDate() + 6);\n  lastDay.setHours(23, 59, 59, 999);\n  return lastDay;\n}\nfunction dateDiff(first, second, useHours) {\n  const dtoday = new Date();\n  return Math.round(\n    (second - first) / (1e3 * 60 * 60 * (useHours ? 1 : Math.abs(dtoday.getTimezoneOffset())))\n  );\n}\nfunction monthDiff(first, second) {\n  let months;\n  months = (second.getFullYear() - first.getFullYear()) * 12;\n  months -= first.getMonth();\n  months += second.getMonth();\n  return months <= 0 ? 0 : months;\n}\nfunction daysDiff(startDate, endDate) {\n  return Math.round((endDate - startDate) / (1e3 * 60 * 60 * 24));\n}\nfunction addDate(date, number, unit) {\n  let newDate = null;\n  const originalDate = date instanceof Date ? new Date(date.toISOString()) : new Date(date);\n  switch (unit) {\n    case \"days\":\n      newDate = new Date(originalDate.setDate(originalDate.getDate() + number));\n      break;\n    default:\n      break;\n  }\n  return newDate;\n}\nfunction subtractDate(date, number, unit) {\n  let newDate = null;\n  const originalDate = date instanceof Date ? new Date(date.toISOString()) : new Date(date);\n  switch (unit) {\n    case \"days\":\n      newDate = new Date(originalDate.setDate(originalDate.getDate() - number));\n      break;\n    default:\n      break;\n  }\n  return newDate;\n}\nfunction isDaylightSavingTime(date) {\n  const jan = new Date(date.getFullYear(), 0, 1).getTimezoneOffset();\n  const jul = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n  return Math.max(jan, jul) !== date.getTimezoneOffset();\n}\nfunction isValidDate(date) {\n  return date instanceof Date && !Number.isNaN(date) && date.toString() !== \"Invalid Date\";\n}\nfunction umalquraToGregorian(year, month, day, hours = 0, mins = 0, secs = 0, mills = 0) {\n  const ummalquraData = [\n    // eslint-disable-next-line max-len\n    20,\n    50,\n    79,\n    109,\n    138,\n    168,\n    197,\n    227,\n    256,\n    286,\n    315,\n    345,\n    374,\n    404,\n    433,\n    463,\n    492,\n    522,\n    551,\n    581,\n    611,\n    641,\n    670,\n    700,\n    729,\n    759,\n    788,\n    818,\n    847,\n    877,\n    906,\n    936,\n    965,\n    995,\n    1024,\n    1054,\n    1083,\n    1113,\n    1142,\n    1172,\n    1201,\n    1231,\n    1260,\n    1290,\n    1320,\n    1350,\n    1379,\n    1409,\n    1438,\n    1468,\n    1497,\n    1527,\n    1556,\n    1586,\n    1615,\n    1645,\n    1674,\n    1704,\n    1733,\n    1763,\n    1792,\n    1822,\n    1851,\n    1881,\n    1910,\n    1940,\n    1969,\n    1999,\n    2028,\n    2058,\n    2087,\n    2117,\n    2146,\n    2176,\n    2205,\n    2235,\n    2264,\n    2294,\n    2323,\n    2353,\n    2383,\n    2413,\n    2442,\n    2472,\n    2501,\n    2531,\n    2560,\n    2590,\n    2619,\n    2649,\n    2678,\n    2708,\n    2737,\n    2767,\n    2796,\n    2826,\n    2855,\n    2885,\n    2914,\n    2944,\n    2973,\n    3003,\n    3032,\n    3062,\n    3091,\n    3121,\n    3150,\n    3180,\n    3209,\n    3239,\n    3268,\n    3298,\n    3327,\n    3357,\n    3386,\n    3416,\n    3446,\n    3476,\n    3505,\n    3535,\n    3564,\n    3594,\n    3623,\n    3653,\n    3682,\n    3712,\n    3741,\n    3771,\n    3800,\n    3830,\n    3859,\n    3889,\n    3918,\n    3948,\n    3977,\n    4007,\n    4036,\n    4066,\n    4095,\n    4125,\n    4155,\n    4185,\n    4214,\n    4244,\n    4273,\n    4303,\n    4332,\n    4362,\n    4391,\n    4421,\n    4450,\n    4480,\n    4509,\n    4539,\n    4568,\n    4598,\n    4627,\n    4657,\n    4686,\n    4716,\n    4745,\n    4775,\n    4804,\n    4834,\n    4863,\n    4893,\n    4922,\n    4952,\n    4981,\n    5011,\n    5040,\n    5070,\n    5099,\n    5129,\n    5158,\n    5188,\n    5218,\n    5248,\n    5277,\n    5307,\n    5336,\n    5366,\n    5395,\n    5425,\n    5454,\n    5484,\n    5513,\n    5543,\n    5572,\n    5602,\n    5631,\n    5661,\n    5690,\n    5720,\n    5749,\n    5779,\n    5808,\n    5838,\n    5867,\n    5897,\n    5926,\n    5956,\n    5985,\n    6015,\n    6044,\n    6074,\n    6103,\n    6133,\n    6162,\n    6192,\n    6221,\n    6251,\n    6281,\n    6311,\n    6340,\n    6370,\n    6399,\n    6429,\n    6458,\n    6488,\n    6517,\n    6547,\n    6576,\n    6606,\n    6635,\n    6665,\n    6694,\n    6724,\n    6753,\n    6783,\n    6812,\n    6842,\n    6871,\n    6901,\n    6930,\n    6960,\n    6989,\n    7019,\n    7048,\n    7078,\n    7107,\n    7137,\n    7166,\n    7196,\n    7225,\n    7255,\n    7284,\n    7314,\n    7344,\n    7374,\n    7403,\n    7433,\n    7462,\n    7492,\n    7521,\n    7551,\n    7580,\n    7610,\n    7639,\n    7669,\n    7698,\n    7728,\n    7757,\n    7787,\n    7816,\n    7846,\n    7875,\n    7905,\n    7934,\n    7964,\n    7993,\n    8023,\n    8053,\n    8083,\n    8112,\n    8142,\n    8171,\n    8201,\n    8230,\n    8260,\n    8289,\n    8319,\n    8348,\n    8378,\n    8407,\n    8437,\n    8466,\n    8496,\n    8525,\n    8555,\n    8584,\n    8614,\n    8643,\n    8673,\n    8702,\n    8732,\n    8761,\n    8791,\n    8821,\n    8850,\n    8880,\n    8909,\n    8938,\n    8968,\n    8997,\n    9027,\n    9056,\n    9086,\n    9115,\n    9145,\n    9175,\n    9205,\n    9234,\n    9264,\n    9293,\n    9322,\n    9352,\n    9381,\n    9410,\n    9440,\n    9470,\n    9499,\n    9529,\n    9559,\n    9589,\n    9618,\n    9648,\n    9677,\n    9706,\n    9736,\n    9765,\n    9794,\n    9824,\n    9853,\n    9883,\n    9913,\n    9943,\n    9972,\n    10002,\n    10032,\n    10061,\n    10090,\n    10120,\n    10149,\n    10178,\n    10208,\n    10237,\n    10267,\n    10297,\n    10326,\n    10356,\n    10386,\n    10415,\n    10445,\n    10474,\n    10504,\n    10533,\n    10562,\n    10592,\n    10621,\n    10651,\n    10680,\n    10710,\n    10740,\n    10770,\n    10799,\n    10829,\n    10858,\n    10888,\n    10917,\n    10947,\n    10976,\n    11005,\n    11035,\n    11064,\n    11094,\n    11124,\n    11153,\n    11183,\n    11213,\n    11242,\n    11272,\n    11301,\n    11331,\n    11360,\n    11389,\n    11419,\n    11448,\n    11478,\n    11507,\n    11537,\n    11567,\n    11596,\n    11626,\n    11655,\n    11685,\n    11715,\n    11744,\n    11774,\n    11803,\n    11832,\n    11862,\n    11891,\n    11921,\n    11950,\n    11980,\n    12010,\n    12039,\n    12069,\n    12099,\n    12128,\n    12158,\n    12187,\n    12216,\n    12246,\n    12275,\n    12304,\n    12334,\n    12364,\n    12393,\n    12423,\n    12453,\n    12483,\n    12512,\n    12542,\n    12571,\n    12600,\n    12630,\n    12659,\n    12688,\n    12718,\n    12747,\n    12777,\n    12807,\n    12837,\n    12866,\n    12896,\n    12926,\n    12955,\n    12984,\n    13014,\n    13043,\n    13072,\n    13102,\n    13131,\n    13161,\n    13191,\n    13220,\n    13250,\n    13280,\n    13310,\n    13339,\n    13368,\n    13398,\n    13427,\n    13456,\n    13486,\n    13515,\n    13545,\n    13574,\n    13604,\n    13634,\n    13664,\n    13693,\n    13723,\n    13752,\n    13782,\n    13811,\n    13840,\n    13870,\n    13899,\n    13929,\n    13958,\n    13988,\n    14018,\n    14047,\n    14077,\n    14107,\n    14136,\n    14166,\n    14195,\n    14224,\n    14254,\n    14283,\n    14313,\n    14342,\n    14372,\n    14401,\n    14431,\n    14461,\n    14490,\n    14520,\n    14550,\n    14579,\n    14609,\n    14638,\n    14667,\n    14697,\n    14726,\n    14756,\n    14785,\n    14815,\n    14844,\n    14874,\n    14904,\n    14933,\n    14963,\n    14993,\n    15021,\n    15051,\n    15081,\n    15110,\n    15140,\n    15169,\n    15199,\n    15228,\n    15258,\n    15287,\n    15317,\n    15347,\n    15377,\n    15406,\n    15436,\n    15465,\n    15494,\n    15524,\n    15553,\n    15582,\n    15612,\n    15641,\n    15671,\n    15701,\n    15731,\n    15760,\n    15790,\n    15820,\n    15849,\n    15878,\n    15908,\n    15937,\n    15966,\n    15996,\n    16025,\n    16055,\n    16085,\n    16114,\n    16144,\n    16174,\n    16204,\n    16233,\n    16262,\n    16292,\n    16321,\n    16350,\n    16380,\n    16409,\n    16439,\n    16468,\n    16498,\n    16528,\n    16558,\n    16587,\n    16617,\n    16646,\n    16676,\n    16705,\n    16734,\n    16764,\n    16793,\n    16823,\n    16852,\n    16882,\n    16912,\n    16941,\n    16971,\n    17001,\n    17030,\n    17060,\n    17089,\n    17118,\n    17148,\n    17177,\n    17207,\n    17236,\n    17266,\n    17295,\n    17325,\n    17355,\n    17384,\n    17414,\n    17444,\n    17473,\n    17502,\n    17532,\n    17561,\n    17591,\n    17620,\n    17650,\n    17679,\n    17709,\n    17738,\n    17768,\n    17798,\n    17827,\n    17857,\n    17886,\n    17916,\n    17945,\n    17975,\n    18004,\n    18034,\n    18063,\n    18093,\n    18122,\n    18152,\n    18181,\n    18211,\n    18241,\n    18270,\n    18300,\n    18330,\n    18359,\n    18388,\n    18418,\n    18447,\n    18476,\n    18506,\n    18535,\n    18565,\n    18595,\n    18625,\n    18654,\n    18684,\n    18714,\n    18743,\n    18772,\n    18802,\n    18831,\n    18860,\n    18890,\n    18919,\n    18949,\n    18979,\n    19008,\n    19038,\n    19068,\n    19098,\n    19127,\n    19156,\n    19186,\n    19215,\n    19244,\n    19274,\n    19303,\n    19333,\n    19362,\n    19392,\n    19422,\n    19452,\n    19481,\n    19511,\n    19540,\n    19570,\n    19599,\n    19628,\n    19658,\n    19687,\n    19717,\n    19746,\n    19776,\n    19806,\n    19836,\n    19865,\n    19895,\n    19924,\n    19954,\n    19983,\n    20012,\n    20042,\n    20071,\n    20101,\n    20130,\n    20160,\n    20190,\n    20219,\n    20249,\n    20279,\n    20308,\n    20338,\n    20367,\n    20396,\n    20426,\n    20455,\n    20485,\n    20514,\n    20544,\n    20573,\n    20603,\n    20633,\n    20662,\n    20692,\n    20721,\n    20751,\n    20780,\n    20810,\n    20839,\n    20869,\n    20898,\n    20928,\n    20957,\n    20987,\n    21016,\n    21046,\n    21076,\n    21105,\n    21135,\n    21164,\n    21194,\n    21223,\n    21253,\n    21282,\n    21312,\n    21341,\n    21371,\n    21400,\n    21430,\n    21459,\n    21489,\n    21519,\n    21548,\n    21578,\n    21607,\n    21637,\n    21666,\n    21696,\n    21725,\n    21754,\n    21784,\n    21813,\n    21843,\n    21873,\n    21902,\n    21932,\n    21962,\n    21991,\n    22021,\n    22050,\n    22080,\n    22109,\n    22138,\n    22168,\n    22197,\n    22227,\n    22256,\n    22286,\n    22316,\n    22346,\n    22375,\n    22405,\n    22434,\n    22464,\n    22493,\n    22522,\n    22552,\n    22581,\n    22611,\n    22640,\n    22670,\n    22700,\n    22730,\n    22759,\n    22789,\n    22818,\n    22848,\n    22877,\n    22906,\n    22936,\n    22965,\n    22994,\n    23024,\n    23054,\n    23083,\n    23113,\n    23143,\n    23173,\n    23202,\n    23232,\n    23261,\n    23290,\n    23320,\n    23349,\n    23379,\n    23408,\n    23438,\n    23467,\n    23497,\n    23527,\n    23556,\n    23586,\n    23616,\n    23645,\n    23674,\n    23704,\n    23733,\n    23763,\n    23792,\n    23822,\n    23851,\n    23881,\n    23910,\n    23940,\n    23970,\n    23999,\n    24029,\n    24058,\n    24088,\n    24117,\n    24147,\n    24176,\n    24206,\n    24235,\n    24265,\n    24294,\n    24324,\n    24353,\n    24383,\n    24413,\n    24442,\n    24472,\n    24501,\n    24531,\n    24560,\n    24590,\n    24619,\n    24648,\n    24678,\n    24707,\n    24737,\n    24767,\n    24796,\n    24826,\n    24856,\n    24885,\n    24915,\n    24944,\n    24974,\n    25003,\n    25032,\n    25062,\n    25091,\n    25121,\n    25150,\n    25180,\n    25210,\n    25240,\n    25269,\n    25299,\n    25328,\n    25358,\n    25387,\n    25416,\n    25446,\n    25475,\n    25505,\n    25534,\n    25564,\n    25594,\n    25624,\n    25653,\n    25683,\n    25712,\n    25742,\n    25771,\n    25800,\n    25830,\n    25859,\n    25888,\n    25918,\n    25948,\n    25977,\n    26007,\n    26037,\n    26067,\n    26096,\n    26126,\n    26155,\n    26184,\n    26214,\n    26243,\n    26272,\n    26302,\n    26332,\n    26361,\n    26391,\n    26421,\n    26451,\n    26480,\n    26510,\n    26539,\n    26568,\n    26598,\n    26627,\n    26656,\n    26686,\n    26715,\n    26745,\n    26775,\n    26805,\n    26834,\n    26864,\n    26893,\n    26923,\n    26952,\n    26982,\n    27011,\n    27041,\n    27070,\n    27099,\n    27129,\n    27159,\n    27188,\n    27218,\n    27248,\n    27277,\n    27307,\n    27336,\n    27366,\n    27395,\n    27425,\n    27454,\n    27484,\n    27513,\n    27542,\n    27572,\n    27602,\n    27631,\n    27661,\n    27691,\n    27720,\n    27750,\n    27779,\n    27809,\n    27838,\n    27868,\n    27897,\n    27926,\n    27956,\n    27985,\n    28015,\n    28045,\n    28074,\n    28104,\n    28134,\n    28163,\n    28193,\n    28222,\n    28252,\n    28281,\n    28310,\n    28340,\n    28369,\n    28399,\n    28428,\n    28458,\n    28488,\n    28517,\n    28547,\n    28577,\n    // From 1356\n    // eslint-disable-next-line max-len\n    28607,\n    28636,\n    28665,\n    28695,\n    28724,\n    28754,\n    28783,\n    28813,\n    28843,\n    28872,\n    28901,\n    28931,\n    28960,\n    28990,\n    29019,\n    29049,\n    29078,\n    29108,\n    29137,\n    29167,\n    29196,\n    29226,\n    29255,\n    29285,\n    29315,\n    29345,\n    29375,\n    29404,\n    29434,\n    29463,\n    29492,\n    29522,\n    29551,\n    29580,\n    29610,\n    29640,\n    29669,\n    29699,\n    29729,\n    29759,\n    29788,\n    29818,\n    29847,\n    29876,\n    29906,\n    29935,\n    29964,\n    29994,\n    30023,\n    30053,\n    30082,\n    30112,\n    30141,\n    30171,\n    30200,\n    30230,\n    30259,\n    30289,\n    30318,\n    30348,\n    30378,\n    30408,\n    30437,\n    30467,\n    30496,\n    30526,\n    30555,\n    30585,\n    30614,\n    30644,\n    30673,\n    30703,\n    30732,\n    30762,\n    30791,\n    30821,\n    30850,\n    30880,\n    30909,\n    30939,\n    30968,\n    30998,\n    31027,\n    31057,\n    31086,\n    31116,\n    31145,\n    31175,\n    31204,\n    31234,\n    31263,\n    31293,\n    31322,\n    31352,\n    31381,\n    31411,\n    31441,\n    31471,\n    31500,\n    31530,\n    31559,\n    31589,\n    31618,\n    31648,\n    31676,\n    31706,\n    31736,\n    31766,\n    31795,\n    31825,\n    31854,\n    31884,\n    31913,\n    31943,\n    31972,\n    32002,\n    32031,\n    32061,\n    32090,\n    32120,\n    32150,\n    32180,\n    32209,\n    32239,\n    32268,\n    32298,\n    32327,\n    32357,\n    32386,\n    32416,\n    32445,\n    32475,\n    32504,\n    32534,\n    32563,\n    32593,\n    32622,\n    32652,\n    32681,\n    32711,\n    32740,\n    32770,\n    32799,\n    32829,\n    32858,\n    32888,\n    32917,\n    32947,\n    32976,\n    33006,\n    33035,\n    33065,\n    33094,\n    33124,\n    33153,\n    33183,\n    33213,\n    33243,\n    33272,\n    33302,\n    33331,\n    33361,\n    33390,\n    33420,\n    33450,\n    33479,\n    33509,\n    33539,\n    33568,\n    33598,\n    33627,\n    33657,\n    33686,\n    33716,\n    33745,\n    33775,\n    33804,\n    33834,\n    33863,\n    33893,\n    33922,\n    33952,\n    33981,\n    34011,\n    34040,\n    34069,\n    34099,\n    34128,\n    34158,\n    34187,\n    34217,\n    34247,\n    34277,\n    34306,\n    34336,\n    34365,\n    34395,\n    34424,\n    34454,\n    34483,\n    34512,\n    34542,\n    34571,\n    34601,\n    34631,\n    34660,\n    34690,\n    34719,\n    34749,\n    34778,\n    34808,\n    34837,\n    34867,\n    34896,\n    34926,\n    34955,\n    34985,\n    35015,\n    35044,\n    35074,\n    35103,\n    35133,\n    35162,\n    35192,\n    35222,\n    35251,\n    35280,\n    35310,\n    35340,\n    35370,\n    35399,\n    35429,\n    35458,\n    35488,\n    35517,\n    35547,\n    35576,\n    35605,\n    35635,\n    35665,\n    35694,\n    35723,\n    35753,\n    35782,\n    35811,\n    35841,\n    35871,\n    35901,\n    35930,\n    35960,\n    35989,\n    36019,\n    36048,\n    36078,\n    36107,\n    36136,\n    36166,\n    36195,\n    36225,\n    36254,\n    36284,\n    36314,\n    36343,\n    36373,\n    36403,\n    36433,\n    36462,\n    36492,\n    36521,\n    36551,\n    36580,\n    36610,\n    36639,\n    36669,\n    36698,\n    36728,\n    36757,\n    36786,\n    36816,\n    36845,\n    36875,\n    36904,\n    36934,\n    36963,\n    36993,\n    37022,\n    37052,\n    37081,\n    37111,\n    37141,\n    37170,\n    37200,\n    37229,\n    37259,\n    37288,\n    37318,\n    37347,\n    37377,\n    37406,\n    37436,\n    37465,\n    37495,\n    37524,\n    37554,\n    37584,\n    37613,\n    37643,\n    37672,\n    37701,\n    37731,\n    37760,\n    37790,\n    37819,\n    37849,\n    37878,\n    37908,\n    37938,\n    37967,\n    37997,\n    38027,\n    38056,\n    38085,\n    38115,\n    38144,\n    38174,\n    38203,\n    38233,\n    38262,\n    38292,\n    38322,\n    38351,\n    38381,\n    38410,\n    38440,\n    38469,\n    38499,\n    38528,\n    38558,\n    38587,\n    38617,\n    38646,\n    38676,\n    38705,\n    38735,\n    38764,\n    38794,\n    38823,\n    38853,\n    38882,\n    38912,\n    38941,\n    38971,\n    39001,\n    39030,\n    39059,\n    39089,\n    39118,\n    39148,\n    39178,\n    39208,\n    39237,\n    39267,\n    39297,\n    39326,\n    39355,\n    39385,\n    39414,\n    39444,\n    39473,\n    39503,\n    39532,\n    39562,\n    39592,\n    39621,\n    39650,\n    39680,\n    39709,\n    39739,\n    39768,\n    39798,\n    39827,\n    39857,\n    39886,\n    39916,\n    39946,\n    39975,\n    40005,\n    40035,\n    40064,\n    40094,\n    40123,\n    40153,\n    40182,\n    40212,\n    40241,\n    40271,\n    40300,\n    40330,\n    40359,\n    40389,\n    40418,\n    40448,\n    40477,\n    40507,\n    40536,\n    40566,\n    40595,\n    40625,\n    40655,\n    40685,\n    40714,\n    40744,\n    40773,\n    40803,\n    40832,\n    40862,\n    40892,\n    40921,\n    40951,\n    40980,\n    41009,\n    41039,\n    41068,\n    41098,\n    41127,\n    41157,\n    41186,\n    41216,\n    41245,\n    41275,\n    41304,\n    41334,\n    41364,\n    41393,\n    41422,\n    41452,\n    41481,\n    41511,\n    41540,\n    41570,\n    41599,\n    41629,\n    41658,\n    41688,\n    41718,\n    41748,\n    41777,\n    41807,\n    41836,\n    41865,\n    41894,\n    41924,\n    41953,\n    41983,\n    42012,\n    42042,\n    42072,\n    42102,\n    42131,\n    42161,\n    42190,\n    42220,\n    42249,\n    42279,\n    42308,\n    42337,\n    42367,\n    42397,\n    42426,\n    42456,\n    42485,\n    42515,\n    42545,\n    42574,\n    42604,\n    42633,\n    42662,\n    42692,\n    42721,\n    42751,\n    42780,\n    42810,\n    42839,\n    42869,\n    42899,\n    42929,\n    42958,\n    42988,\n    43017,\n    43046,\n    43076,\n    43105,\n    43135,\n    43164,\n    43194,\n    43223,\n    43253,\n    43283,\n    43312,\n    43342,\n    43371,\n    43401,\n    43430,\n    43460,\n    43489,\n    43519,\n    43548,\n    43578,\n    43607,\n    43637,\n    43666,\n    43696,\n    43726,\n    43755,\n    43785,\n    43814,\n    43844,\n    43873,\n    43903,\n    43932,\n    43962,\n    43991,\n    44021,\n    44050,\n    44080,\n    44109,\n    44139,\n    44169,\n    44198,\n    44228,\n    44258,\n    44287,\n    44317,\n    44346,\n    44375,\n    44405,\n    44434,\n    44464,\n    44493,\n    44523,\n    44553,\n    44582,\n    44612,\n    44641,\n    44671,\n    44700,\n    44730,\n    44759,\n    44788,\n    44818,\n    44847,\n    44877,\n    44906,\n    44936,\n    44966,\n    44996,\n    45025,\n    45055,\n    45084,\n    45114,\n    45143,\n    45172,\n    45202,\n    45231,\n    45261,\n    45290,\n    45320,\n    45350,\n    45380,\n    45409,\n    45439,\n    45468,\n    45498,\n    45527,\n    45556,\n    45586,\n    45615,\n    45644,\n    45674,\n    45704,\n    45733,\n    45763,\n    45793,\n    45823,\n    45852,\n    45882,\n    45911,\n    45940,\n    45970,\n    45999,\n    46028,\n    46058,\n    46088,\n    46117,\n    46147,\n    46177,\n    46206,\n    46236,\n    46265,\n    46295,\n    46324,\n    46354,\n    46383,\n    46413,\n    46442,\n    46472,\n    46501,\n    46531,\n    46560,\n    46590,\n    46620,\n    46649,\n    46679,\n    46708,\n    46738,\n    46767,\n    46797,\n    46826,\n    46856,\n    46885,\n    46915,\n    46944,\n    46974,\n    47003,\n    47033,\n    47063,\n    47092,\n    47122,\n    47151,\n    47181,\n    47210,\n    47240,\n    47269,\n    47298,\n    47328,\n    47357,\n    47387,\n    47417,\n    47446,\n    47476,\n    47506,\n    47535,\n    47565,\n    47594,\n    47624,\n    47653,\n    47682,\n    47712,\n    47741,\n    47771,\n    47800,\n    47830,\n    47860,\n    47890,\n    47919,\n    47949,\n    47978,\n    48008,\n    48037,\n    48066,\n    48096,\n    48125,\n    48155,\n    48184,\n    48214,\n    48244,\n    48273,\n    48303,\n    48333,\n    48362,\n    48392,\n    48421,\n    48450,\n    48480,\n    48509,\n    48538,\n    48568,\n    48598,\n    48627,\n    48657,\n    48687,\n    48717,\n    48746,\n    48776,\n    48805,\n    48834,\n    48864,\n    48893,\n    48922,\n    48952,\n    48982,\n    49011,\n    49041,\n    49071,\n    49100,\n    49130,\n    49160,\n    49189,\n    49218,\n    49248,\n    49277,\n    49306,\n    49336,\n    49365,\n    49395,\n    49425,\n    49455,\n    49484,\n    49514,\n    49543,\n    49573,\n    49602,\n    49632,\n    49661,\n    49690,\n    49720,\n    49749,\n    49779,\n    49809,\n    49838,\n    49868,\n    49898,\n    49927,\n    49957,\n    49986,\n    50016,\n    50045,\n    50075,\n    50104,\n    50133,\n    50163,\n    50192,\n    50222,\n    50252,\n    50281,\n    50311,\n    50340,\n    50370,\n    50400,\n    50429,\n    50459,\n    50488,\n    50518,\n    50547,\n    50576,\n    50606,\n    50635,\n    50665,\n    50694,\n    50724,\n    50754,\n    50784,\n    50813,\n    50843,\n    50872,\n    50902,\n    50931,\n    50960,\n    50990,\n    51019,\n    51049,\n    51078,\n    51108,\n    51138,\n    51167,\n    51197,\n    51227,\n    51256,\n    51286,\n    51315,\n    51345,\n    51374,\n    51403,\n    51433,\n    51462,\n    51492,\n    51522,\n    51552,\n    51582,\n    51611,\n    51641,\n    51670,\n    51699,\n    51729,\n    51758,\n    51787,\n    51816,\n    51846,\n    51876,\n    51906,\n    51936,\n    51965,\n    51995,\n    52025,\n    52054,\n    52083,\n    52113,\n    52142,\n    52171,\n    52200,\n    52230,\n    52260,\n    52290,\n    52319,\n    52349,\n    52379,\n    52408,\n    52438,\n    52467,\n    52497,\n    52526,\n    52555,\n    52585,\n    52614,\n    52644,\n    52673,\n    52703,\n    52733,\n    52762,\n    52792,\n    52822,\n    52851,\n    52881,\n    52910,\n    52939,\n    52969,\n    52998,\n    53028,\n    53057,\n    53087,\n    53116,\n    53146,\n    53176,\n    53205,\n    53235,\n    53264,\n    53294,\n    53324,\n    53353,\n    53383,\n    53412,\n    53441,\n    53471,\n    53500,\n    53530,\n    53559,\n    53589,\n    53619,\n    53648,\n    53678,\n    53708,\n    53737,\n    53767,\n    53796,\n    53825,\n    53855,\n    53884,\n    53914,\n    53943,\n    53973,\n    54003,\n    54032,\n    54062,\n    54092,\n    54121,\n    54151,\n    54180,\n    54209,\n    54239,\n    54268,\n    54297,\n    54327,\n    54357,\n    54387,\n    54416,\n    54446,\n    54476,\n    54505,\n    54535,\n    54564,\n    54593,\n    54623,\n    54652,\n    54681,\n    54711,\n    54741,\n    54770,\n    54800,\n    54830,\n    54859,\n    54889,\n    54919,\n    54948,\n    54977,\n    55007,\n    55036,\n    55066,\n    55095,\n    55125,\n    55154,\n    55184,\n    55213,\n    55243,\n    55273,\n    55302,\n    55332,\n    55361,\n    55391,\n    55420,\n    55450,\n    55479,\n    55508,\n    55538,\n    55567,\n    55597,\n    55627,\n    55657,\n    55686,\n    55716,\n    55745,\n    55775,\n    55804,\n    55834,\n    55863,\n    55892,\n    55922,\n    55951,\n    55981,\n    56011,\n    56040,\n    56070,\n    56100,\n    56129,\n    56159,\n    56188,\n    56218,\n    56247,\n    56276,\n    56306,\n    56335,\n    56365,\n    56394,\n    56424,\n    56454,\n    56483,\n    56513,\n    56543,\n    56572,\n    56601,\n    56631,\n    56660,\n    56690,\n    56719,\n    56749,\n    56778,\n    56808,\n    56837,\n    56867,\n    56897,\n    56926,\n    56956,\n    56985,\n    57015,\n    57044,\n    57074,\n    57103,\n    57133,\n    57162,\n    57192,\n    57221,\n    57251,\n    57280,\n    57310,\n    57340,\n    57369,\n    57399,\n    57429,\n    57458,\n    57487,\n    57517,\n    57546,\n    57576,\n    57605,\n    57634,\n    57664,\n    57694,\n    57723,\n    57753,\n    57783,\n    57813,\n    57842,\n    57871,\n    57901,\n    57930,\n    57959,\n    57989,\n    58018,\n    58048,\n    58077,\n    58107,\n    58137,\n    58167,\n    58196,\n    58226,\n    58255,\n    58285,\n    58314,\n    58343,\n    58373,\n    58402,\n    58432,\n    58461,\n    58491,\n    58521,\n    58551,\n    58580,\n    58610,\n    58639,\n    58669,\n    58698,\n    58727,\n    58757,\n    58786,\n    58816,\n    58845,\n    58875,\n    58905,\n    58934,\n    58964,\n    58994,\n    59023,\n    59053,\n    59082,\n    59111,\n    59141,\n    59170,\n    59200,\n    59229,\n    59259,\n    59288,\n    59318,\n    59348,\n    59377,\n    59407,\n    59436,\n    59466,\n    59495,\n    59525,\n    59554,\n    59584,\n    59613,\n    59643,\n    59672,\n    59702,\n    59731,\n    59761,\n    59791,\n    59820,\n    59850,\n    59879,\n    59909,\n    59939,\n    59968,\n    59997,\n    60027,\n    60056,\n    60086,\n    60115,\n    60145,\n    60174,\n    60204,\n    60234,\n    60264,\n    60293,\n    60323,\n    60352,\n    60381,\n    60411,\n    60440,\n    60469,\n    60499,\n    60528,\n    60558,\n    60588,\n    60618,\n    60647,\n    60677,\n    60707,\n    60736,\n    60765,\n    60795,\n    60824,\n    60853,\n    60883,\n    60912,\n    60942,\n    60972,\n    61002,\n    61031,\n    61061,\n    61090,\n    61120,\n    61149,\n    61179,\n    61208,\n    61237,\n    61267,\n    61296,\n    61326,\n    61356,\n    61385,\n    61415,\n    61445,\n    61474,\n    61504,\n    61533,\n    61563,\n    61592,\n    61621,\n    61651,\n    61680,\n    61710,\n    61739,\n    61769,\n    61799,\n    61828,\n    61858,\n    61888,\n    61917,\n    61947,\n    61976,\n    62006,\n    62035,\n    62064,\n    62094,\n    62123,\n    62153,\n    62182,\n    62212,\n    62242,\n    62271,\n    62301,\n    62331,\n    62360,\n    62390,\n    62419,\n    62448,\n    62478,\n    62507,\n    62537,\n    62566,\n    62596,\n    62625,\n    62655,\n    62685,\n    62715,\n    62744,\n    62774,\n    62803,\n    62832,\n    62862,\n    62891,\n    62921,\n    62950,\n    62980,\n    63009,\n    63039,\n    63069,\n    63099,\n    63128,\n    63157,\n    63187,\n    63216,\n    63246,\n    63275,\n    63305,\n    63334,\n    63363,\n    63393,\n    63423,\n    63453,\n    63482,\n    63512,\n    63541,\n    63571,\n    63600,\n    63630,\n    63659,\n    63689,\n    63718,\n    63747,\n    63777,\n    63807,\n    63836,\n    63866,\n    63895,\n    63925,\n    63955,\n    63984,\n    64014,\n    64043,\n    64073,\n    64102,\n    64131,\n    64161,\n    64190,\n    64220,\n    64249,\n    64279,\n    64309,\n    64339,\n    64368,\n    64398,\n    64427,\n    64457,\n    64486,\n    64515,\n    64545,\n    64574,\n    64603,\n    64633,\n    64663,\n    64692,\n    64722,\n    64752,\n    64782,\n    64811,\n    64841,\n    64870,\n    64899,\n    64929,\n    64958,\n    64987,\n    65017,\n    65047,\n    65076,\n    65106,\n    65136,\n    65166,\n    65195,\n    65225,\n    65254,\n    65283,\n    65313,\n    65342,\n    65371,\n    65401,\n    65431,\n    65460,\n    65490,\n    65520,\n    65549,\n    65579,\n    65608,\n    65638,\n    65667,\n    65697,\n    65726,\n    65755,\n    65785,\n    65815,\n    65844,\n    65874,\n    65903,\n    65933,\n    65963,\n    65992,\n    66022,\n    66051,\n    66081,\n    66110,\n    66140,\n    66169,\n    66199,\n    66228,\n    66258,\n    66287,\n    66317,\n    66346,\n    66376,\n    66405,\n    66435,\n    66465,\n    66494,\n    66524,\n    66553,\n    66583,\n    66612,\n    66641,\n    66671,\n    66700,\n    66730,\n    66760,\n    66789,\n    66819,\n    66849,\n    66878,\n    66908,\n    66937,\n    66967,\n    66996,\n    67025,\n    67055,\n    67084,\n    67114,\n    67143,\n    67173,\n    67203,\n    67233,\n    67262,\n    67292,\n    67321,\n    67351,\n    67380,\n    67409,\n    67439,\n    67468,\n    67497,\n    67527,\n    67557,\n    67587,\n    67617,\n    67646,\n    67676,\n    67705,\n    67735,\n    67764,\n    67793,\n    67823,\n    67852,\n    67882,\n    67911,\n    67941,\n    67971,\n    68e3,\n    68030,\n    68060,\n    68089,\n    68119,\n    68148,\n    68177,\n    68207,\n    68236,\n    68266,\n    68295,\n    68325,\n    68354,\n    68384,\n    68414,\n    68443,\n    68473,\n    68502,\n    68532,\n    68561,\n    68591,\n    68620,\n    68650,\n    68679,\n    68708,\n    68738,\n    68768,\n    68797,\n    68827,\n    68857,\n    68886,\n    68916,\n    68946,\n    68975,\n    69004,\n    69034,\n    69063,\n    69092,\n    69122,\n    69152,\n    69181,\n    69211,\n    69240,\n    69270,\n    69300,\n    69330,\n    69359,\n    69388,\n    69418,\n    69447,\n    69476,\n    69506,\n    69535,\n    69565,\n    69595,\n    69624,\n    69654,\n    69684,\n    69713,\n    69743,\n    69772,\n    69802,\n    69831,\n    69861,\n    69890,\n    69919,\n    69949,\n    69978,\n    70008,\n    70038,\n    70067,\n    70097,\n    70126,\n    70156,\n    70186,\n    70215,\n    70245,\n    70274,\n    70303,\n    70333,\n    70362,\n    70392,\n    70421,\n    70451,\n    70481,\n    70510,\n    70540,\n    70570,\n    70599,\n    70629,\n    70658,\n    70687,\n    70717,\n    70746,\n    70776,\n    70805,\n    70835,\n    70864,\n    70894,\n    70924,\n    70954,\n    70983,\n    71013,\n    71042,\n    71071,\n    71101,\n    71130,\n    71159,\n    71189,\n    71218,\n    71248,\n    71278,\n    71308,\n    71337,\n    71367,\n    71397,\n    71426,\n    71455,\n    71485,\n    71514,\n    71543,\n    71573,\n    71602,\n    71632,\n    71662,\n    71691,\n    71721,\n    71751,\n    71781,\n    71810,\n    71839,\n    71869,\n    71898,\n    71927,\n    71957,\n    71986,\n    72016,\n    72046,\n    72075,\n    72105,\n    72135,\n    72164,\n    72194,\n    72223,\n    72253,\n    72282,\n    72311,\n    72341,\n    72370,\n    72400,\n    72429,\n    72459,\n    72489,\n    72518,\n    72548,\n    72577,\n    72607,\n    72637,\n    72666,\n    72695,\n    72725,\n    72754,\n    72784,\n    72813,\n    72843,\n    72872,\n    72902,\n    72931,\n    72961,\n    72991,\n    73020,\n    73050,\n    73080,\n    73109,\n    73139,\n    73168,\n    73197,\n    73227,\n    73256,\n    73286,\n    73315,\n    73345,\n    73375,\n    73404,\n    73434,\n    73464,\n    73493,\n    73523,\n    73552,\n    73581,\n    73611,\n    73640,\n    73669,\n    73699,\n    73729,\n    73758,\n    73788,\n    73818,\n    73848,\n    73877,\n    73907,\n    73936,\n    73965,\n    73995,\n    74024,\n    74053,\n    74083,\n    74113,\n    74142,\n    74172,\n    74202,\n    74231,\n    74261,\n    74291,\n    74320,\n    74349,\n    74379,\n    74408,\n    74437,\n    74467,\n    74497,\n    74526,\n    74556,\n    74585,\n    74615,\n    74645,\n    74675,\n    74704,\n    74733,\n    74763,\n    74792,\n    74822,\n    74851,\n    74881,\n    74910,\n    74940,\n    74969,\n    74999,\n    75029,\n    75058,\n    75088,\n    75117,\n    75147,\n    75176,\n    75206,\n    75235,\n    75264,\n    75294,\n    75323,\n    75353,\n    75383,\n    75412,\n    75442,\n    75472,\n    75501,\n    75531,\n    75560,\n    75590,\n    75619,\n    75648,\n    75678,\n    75707,\n    75737,\n    75766,\n    75796,\n    75826,\n    75856,\n    75885,\n    75915,\n    75944,\n    75974,\n    76003,\n    76032,\n    76062,\n    76091,\n    76121,\n    76150,\n    76180,\n    76210,\n    76239,\n    76269,\n    76299,\n    76328,\n    76358,\n    76387,\n    76416,\n    76446,\n    76475,\n    76505,\n    76534,\n    76564,\n    76593,\n    76623,\n    76653,\n    76682,\n    76712,\n    76741,\n    76771,\n    76801,\n    76830,\n    76859,\n    76889,\n    76918,\n    76948,\n    76977,\n    77007,\n    77036,\n    77066,\n    77096,\n    77125,\n    77155,\n    77185,\n    77214,\n    77243,\n    77273,\n    77302,\n    77332,\n    77361,\n    77390,\n    77420,\n    77450,\n    77479,\n    77509,\n    77539,\n    77569,\n    77598,\n    77627,\n    77657,\n    77686,\n    77715,\n    77745,\n    77774,\n    77804,\n    77833,\n    77863,\n    77893,\n    77923,\n    77952,\n    77982,\n    78011,\n    78041,\n    78070,\n    78099,\n    78129,\n    78158,\n    78188,\n    78217,\n    78247,\n    78277,\n    78307,\n    78336,\n    78366,\n    78395,\n    78425,\n    78454,\n    78483,\n    78513,\n    78542,\n    78572,\n    78601,\n    78631,\n    78661,\n    78690,\n    78720,\n    78750,\n    78779,\n    78808,\n    78838,\n    78867,\n    78897,\n    78926,\n    78956,\n    78985,\n    79015,\n    79044,\n    79074,\n    79104,\n    79133,\n    79163,\n    79192,\n    79222,\n    79251,\n    79281,\n    79310,\n    79340,\n    79369,\n    79399,\n    79428,\n    79458,\n    79487,\n    79517,\n    79546,\n    79576,\n    79606,\n    79635,\n    79665,\n    79695,\n    79724,\n    79753,\n    79783,\n    79812,\n    79841,\n    79871,\n    79900,\n    79930,\n    79960,\n    79990\n  ];\n  const getJd = (y, m, d) => {\n    const index = 12 * (y - 1) + m - 15292;\n    const mcjdn = d + ummalquraData[index - 1] - 1;\n    return mcjdn + 24e5 - 0.5;\n  };\n  const jd = getJd(year, month + 1, day);\n  const julianToGregorian = (julianDate) => {\n    const z = Math.floor(julianDate + 0.5);\n    let a = Math.floor((z - 186721625e-2) / 36524.25);\n    a = z + 1 + a - Math.floor(a / 4);\n    const b = a + 1524;\n    const c = Math.floor((b - 122.1) / 365.25);\n    const d = Math.floor(365.25 * c);\n    const e = Math.floor((b - d) / 30.6001);\n    const gday = b - d - Math.floor(e * 30.6001);\n    const gmonth = e - (e > 13.5 ? 13 : 1);\n    const gyear = c - (gmonth > 2.5 ? 4716 : 4715);\n    return { year: gyear, month: gmonth - 1, day: gday };\n  };\n  const gregorianDateObj = julianToGregorian(jd);\n  const gregorianDate = new Date(\n    gregorianDateObj.year,\n    gregorianDateObj.month,\n    gregorianDateObj.day,\n    hours,\n    mins,\n    secs,\n    mills\n  );\n  return gregorianDate;\n}\nfunction gregorianToUmalqura(date) {\n  const umalquraParts = new Intl.DateTimeFormat(\"en-US\", { calendar: \"islamic-umalqura\" }).formatToParts(isValidDate(date) ? date : new Date()).reduce((acc, item) => ({ ...acc, [item.type]: (0,_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_0__.stringToNumber)(item.value) }), {});\n  return {\n    year: umalquraParts.year,\n    month: umalquraParts.month - 1,\n    day: umalquraParts.day\n  };\n}\nfunction firstDayOfMonthDate(year, month, day, isIslamic) {\n  if (isIslamic) {\n    const umalqura = gregorianToUmalqura(new Date(year, month, day));\n    return umalquraToGregorian(umalqura.year, umalqura.month, 1);\n  }\n  return new Date(year, month, 1);\n}\nfunction lastDayOfMonthDate(year, month, day, isIslamic) {\n  if (isIslamic) {\n    const umalqura = gregorianToUmalqura(new Date(year, month, day));\n    return umalquraToGregorian(umalqura.year, umalqura.month + 1, 0);\n  }\n  return new Date(year, month + 1, 0);\n}\nfunction daysInMonth(year, month, day, isIslamic) {\n  const lastDayOfMonth = lastDayOfMonthDate(year, month, day, isIslamic);\n  if (isIslamic) {\n    const firstDayOfMonth = firstDayOfMonthDate(year, month, day, isIslamic);\n    return daysDiff(firstDayOfMonth, lastDayOfMonth) + 1;\n  }\n  return lastDayOfMonth.getDate();\n}\nfunction weeksInMonth(year, month, day, startsOn, isIslamic) {\n  const firstDayOfMonth = firstDayOfMonthDate(year, month, day, isIslamic);\n  const numberOfDaysInMonth = daysInMonth(year, month, day, isIslamic);\n  const firstDayOfWeekIndex = (firstDayOfMonth.getDay() - (startsOn || 0) + 7) % 7;\n  return Math.ceil((firstDayOfWeekIndex + numberOfDaysInMonth) / 7);\n}\nfunction weeksInRange(startDate, endDate, startsOn = 0) {\n  const daysInRange = daysDiff(startDate, endDate);\n  const firstDayOfWeekIndex = (startDate.getDay() - startsOn + 7) % 7;\n  return Math.ceil((firstDayOfWeekIndex + daysInRange) / 7);\n}\nfunction weekNumberToDate(year, week, startsOn = 0) {\n  const daysInRange = (week - 1) * 7 + startsOn;\n  const firstDayOfYearDate = new Date(year, 0, 1);\n  const fristDayIndex = firstDayOfYearDate.getDay();\n  const days = fristDayIndex > 4 ? daysInRange + (8 - fristDayIndex) : daysInRange - (fristDayIndex - 1);\n  return new Date(year, 0, days);\n}\nfunction weekNumber(date, startsOn = 0) {\n  const weekDayIndex = (date.getDay() + 7 - startsOn) % 7;\n  date.setDate(date.getDate() - weekDayIndex + 3);\n  const rangeEnd = date.getTime();\n  date.setMonth(0, 1);\n  if (date.getDay() !== 4) {\n    date.setMonth(0, 1 + (4 - date.getDay() + 7) % 7);\n  }\n  const rangeStart = date.getTime();\n  const msInWeek = 6048e5;\n  return 1 + Math.ceil((rangeEnd - rangeStart) / msInWeek);\n}\nfunction hoursTo24(hours, dayPeriodIndex) {\n  const hasDayPeriod = dayPeriodIndex >= 0;\n  if (hours === 12 && hasDayPeriod) {\n    if (dayPeriodIndex === 0) {\n      return 0;\n    }\n    return hours;\n  }\n  return hours + (!hasDayPeriod ? 0 : dayPeriodIndex) * 12;\n}\nfunction hoursTo12(hours) {\n  return hours === 0 || hours === 12 ? 12 : hours % 12;\n}\nfunction removeDateRange(val, sep) {\n  const i = val.indexOf(sep);\n  if (i !== -1)\n    return val.replace(val.slice(i, val.length), \"\");\n  return val;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/ids-date-utils/ids-date-utils.ts\n");

/***/ })

}]);