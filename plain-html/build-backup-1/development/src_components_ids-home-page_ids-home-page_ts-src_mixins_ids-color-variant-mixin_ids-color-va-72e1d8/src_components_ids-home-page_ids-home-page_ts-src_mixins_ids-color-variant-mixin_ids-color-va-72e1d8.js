"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-home-page_ids-home-page_ts-src_mixins_ids-color-variant-mixin_ids-color-va-72e1d8"],{

/***/ "./src/components/ids-home-page/ids-home-page-attributes.ts":
/*!******************************************************************!*\
  !*** ./src/components/ids-home-page/ids-home-page-attributes.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EVENTS\": () => (/* binding */ EVENTS),\n/* harmony export */   \"HOME_PAGE_DEFAULTS\": () => (/* binding */ HOME_PAGE_DEFAULTS)\n/* harmony export */ });\nconst HOME_PAGE_DEFAULTS = {\n  animated: true,\n  cardHeight: 370,\n  cardWidth: 360,\n  cols: 3,\n  gap: 20,\n  gapX: 20,\n  gapY: 20\n};\nconst EVENTS = { resized: \"resized\" };\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtaG9tZS1wYWdlL2lkcy1ob21lLXBhZ2UtYXR0cmlidXRlcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU0scUJBQXFCO0FBQUEsRUFDekIsVUFBVTtBQUFBLEVBQ1YsWUFBWTtBQUFBLEVBQ1osV0FBVztBQUFBLEVBQ1gsTUFBTTtBQUFBLEVBQ04sS0FBSztBQUFBLEVBQ0wsTUFBTTtBQUFBLEVBQ04sTUFBTTtBQUNSO0FBRUEsTUFBTSxTQUFTLEVBQUUsU0FBUyxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtaG9tZS1wYWdlL2lkcy1ob21lLXBhZ2UtYXR0cmlidXRlcy50cz9hNTM2Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEhPTUVfUEFHRV9ERUZBVUxUUyA9IHtcbiAgYW5pbWF0ZWQ6IHRydWUsXG4gIGNhcmRIZWlnaHQ6IDM3MCxcbiAgY2FyZFdpZHRoOiAzNjAsXG4gIGNvbHM6IDMsXG4gIGdhcDogMjAsXG4gIGdhcFg6IDIwLFxuICBnYXBZOiAyMFxufTtcblxuY29uc3QgRVZFTlRTID0geyByZXNpemVkOiAncmVzaXplZCcgfTtcblxuZXhwb3J0IHsgSE9NRV9QQUdFX0RFRkFVTFRTLCBFVkVOVFMgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/ids-home-page/ids-home-page-attributes.ts\n");

/***/ }),

/***/ "./src/components/ids-home-page/ids-home-page.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-home-page/ids-home-page.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsHomePage)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_home_page_attributes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ids-home-page-attributes */ \"./src/components/ids-home-page/ids-home-page-attributes.ts\");\n/* harmony import */ var _ids_card_ids_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ids-card/ids-card */ \"./src/components/ids-card/ids-card.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_home_page_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ids-home-page.scss */ \"./src/components/ids-home-page/ids-home-page.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_8__[\"default\"]\n    )\n  )\n);\nlet IdsHomePage = class extends Base {\n  constructor() {\n    super();\n  }\n  /**\n   * Invoked each time the custom element is appended into a document-connected element.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.#init();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ANIMATED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_HEIGHT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_WIDTH,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_X,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_Y\n    ];\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    return `\n      <div class=\"ids-home-page\" part=\"home-page\">\n        <div class=\"cards\" part=\"cards\">\n          <slot name=\"card\"></slot>\n        </div>\n      </div>`;\n  }\n  /**\n   * Refresh will resize calculations to update any changes.\n   * @param {boolean} animated False will disable animation during refresh\n   * @returns {void}\n   */\n  refresh(animated) {\n    this.#resize(animated);\n  }\n  /**\n   * List of blocks to manage cards width/height and position.\n   * @private\n   */\n  #blocks = [];\n  /**\n   * List of cards attached to home page.\n   * @private\n   */\n  #cards = [];\n  /**\n   * Number of current columns.\n   * @private\n   */\n  #columns = 0;\n  /**\n   * Container current height.\n   * @private\n   */\n  #containerHeight = 0;\n  /**\n   * Column gap\n   * @private\n   */\n  #gapX = 0;\n  /**\n   * Row gap\n   * @private\n   */\n  #gapY = 0;\n  /**\n   * Keep all the blocks as rows and columns.\n   * @private\n   */\n  #rowsAndCols = [];\n  /**\n   * Attach the resize observer.\n   * @private\n   */\n  #resizeObserver = new ResizeObserver(() => this.#resize());\n  /**\n   * Initialize the component\n   * @private\n   * @returns {void}\n   */\n  #init() {\n    this.#setGap();\n    this.#initCards();\n    this.#resize();\n    this.#attachEventHandlers();\n  }\n  /**\n   * Initialize attached cards.\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #initCards() {\n    this.#cards = this.shadowRoot?.querySelector('slot[name=\"card\"]')?.assignedNodes() ?? [];\n    this.#cards.forEach((card) => {\n      const colspan = this.#getNumberVal(\"colspan\", card);\n      const rowspan = this.#getNumberVal(\"rowspan\", card);\n      const w = colspan > 0 ? colspan : 1;\n      const h = rowspan > 0 ? rowspan : 1;\n      card.style.width = `${this.cardWidth * w + this.#gapX * (w - 1)}px`;\n      card.style.height = `${this.cardHeight * h + this.#gapY * (h - 1)}px`;\n      card.autoFit = true;\n    });\n    return this;\n  }\n  /**\n   * Initialize rows and cols.\n   * @private\n   * @returns {void}\n   */\n  #initRowsAndCols() {\n    this.#rowsAndCols = [];\n    this.#initColumns();\n  }\n  /**\n   * Initialize columns.\n   * @private\n   * @param {number} row to be initialize.\n   * @returns {void}\n   */\n  #initColumns(row = 0) {\n    this.#rowsAndCols[row] = [];\n    for (let i = 0, l = this.#columns; i < l; i++) {\n      this.#rowsAndCols[row][i] = true;\n    }\n  }\n  /**\n   * Set the gap between each card,\n   * will look into three values gap, gap-x, gap-y to sync into gapX and gapY\n   * will not use the gap value if used gap along with gap-x or/and gap-y\n   * for example if user add gap=\"10\", gap-x=\"15\" then will use the gap-x value,\n   * but gap-y will be use as gap value, it will be { x: 15, y: 10 }\n   * since the gap, gap-x, gap-y all three default values \"20\"\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #setGap() {\n    const d = _ids_home_page_attributes__WEBPACK_IMPORTED_MODULE_3__.HOME_PAGE_DEFAULTS;\n    const gap = this.gap;\n    const gapX = this.gapX;\n    const gapY = this.gapY;\n    let x = d.gapX;\n    let y = d.gapY;\n    if (gap !== null && gapX === null && gapY === null) {\n      x = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gap);\n      y = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gap);\n    } else if (gap === null && gapX !== null && gapY === null) {\n      x = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapX);\n    } else if (gap === null && gapX === null && gapY !== null) {\n      y = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapY);\n    } else if (gap !== null && gapX !== null && gapY === null) {\n      x = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapX);\n      y = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gap);\n    } else if (gap !== null && gapX === null && gapY !== null) {\n      x = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gap);\n      y = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapY);\n    } else if (gapX !== null && gapY !== null) {\n      x = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapX);\n      y = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(gapY);\n    }\n    this.#gapX = x;\n    this.#gapY = y;\n    return this;\n  }\n  /**\n   * Refresh the gap to set gap and cards\n   * @private\n   * @returns {void}\n   */\n  #refreshGap() {\n    this.#setGap();\n    this.#resize();\n  }\n  /**\n   * Setup each block sizes, based on card width and height provided from markup\n   * @private\n   * @returns {void}\n   */\n  #setBlocks() {\n    this.#blocks = [];\n    this.#cards.forEach((card) => {\n      const colspan = this.#getNumberVal(\"colspan\", card);\n      const rowspan = this.#getNumberVal(\"rowspan\", card);\n      const w = colspan > 0 ? colspan : 1;\n      const h = rowspan > 0 ? rowspan : 1;\n      this.#blocks.push({ w, h, elem: card });\n    });\n    if (this.#columns > 1) {\n      for (let i = 0, j = 0, w = 0, l = this.#blocks.length; i < l; i++) {\n        if (this.#blocks[i].w >= this.#columns && i && w && w <= this.#columns / 2) {\n          this.#arrayIndexMove(this.#blocks, i, j);\n        }\n        w += this.#blocks[i].w;\n        if (w >= this.#columns) {\n          w = 0;\n          j = this.#blocks[j].w >= this.#columns ? j + 1 : i;\n        }\n      }\n    }\n  }\n  /**\n   * Move an array element position\n   * @private\n   * @param {Array} arr The array\n   * @param {number} from index\n   * @param {number} to index\n   * @returns {void}\n   */\n  #arrayIndexMove(arr, from, to) {\n    arr.splice(to, 0, arr.splice(from, 1)[0]);\n  }\n  /**\n   * Make all spots as unavailable, depends on block's width and height\n   * Soon we used this block\n   * @private\n   * @param {number} r as row.\n   * @param {number} c as col.\n   * @param {IdsHomePageBlock} block to fit.\n   * @returns {void}\n   */\n  #fitBlock(r, c, block) {\n    let addRow = true;\n    block.x = c;\n    block.y = r;\n    if (block.w === 1 && block.h === 1) {\n      this.#rowsAndCols[r][c] = false;\n    } else if (block.w !== 1) {\n      for (let i = r, l = block.h + r; i < l; i++) {\n        for (let j = c, l2 = block.w + c; j < l2; j++) {\n          if (!this.#rowsAndCols[i]) {\n            this.#initColumns(i);\n          }\n          this.#rowsAndCols[i][j] = false;\n        }\n      }\n    } else {\n      for (let i = r, l = block.h + r; i < l; i++) {\n        for (let j = c, l2 = block.h + c; j < l2; j++) {\n          if (!this.#rowsAndCols[i]) {\n            this.#initColumns(i);\n          }\n          this.#rowsAndCols[i][c] = false;\n        }\n      }\n    }\n    for (let i = 0, l = this.#rowsAndCols[r].length; i < l; i++) {\n      if (this.#rowsAndCols[r][i]) {\n        addRow = false;\n      }\n    }\n    if (addRow) {\n      if (!this.#rowsAndCols[r + 1]) {\n        this.#initColumns(r + 1);\n      }\n    }\n  }\n  /**\n   * Get availability where we can fit this given block.\n   * @private\n   * @param {IdsHomePageBlock} block to get availability.\n   * @returns {IdsHomePageAavailable} [x and y] where we can fit this block\n   */\n  #getAvailability(block) {\n    let abort = false;\n    const smallest = {};\n    const rows = this.#rowsAndCols.length;\n    for (let i = 0, l = rows; i < l && !abort; i++) {\n      for (let j = 0, innerCheck = true, cols = this.#rowsAndCols[i].length; j < cols && !abort; j++) {\n        if (this.#rowsAndCols[i][j] && block.w + j <= cols) {\n          if (block.w > 1 && cols > j + 1) {\n            for (let n = 0; n < block.w; n++) {\n              if (!this.#rowsAndCols[i][j + n]) {\n                innerCheck = false;\n                break;\n              }\n            }\n          }\n          if (block.h > 1 && rows > i + 1) {\n            for (let n = 0; n < block.h; n++) {\n              if (!this.#rowsAndCols[i + n][j]) {\n                innerCheck = false;\n                break;\n              }\n            }\n          }\n          if (innerCheck) {\n            smallest.row = i;\n            smallest.col = j;\n            abort = true;\n          }\n        }\n      }\n    }\n    if (!Object.getOwnPropertyNames(smallest).length) {\n      this.#initColumns(rows);\n      smallest.row = rows;\n      smallest.col = 0;\n    }\n    return smallest;\n  }\n  /**\n   * Apply cubic-bezier effects\n   * @private\n   * @param {any} elem The element.\n   * @param {string} effect effect to apply.\n   * @returns {void}\n   */\n  #applyCubicBezier(elem, effect) {\n    const value = effect ? `all .3s cubic-bezier(${effect})` : \"none\";\n    elem.style[\"-webkit-transition\"] = value;\n    elem.style[\"-moz-transition\"] = value;\n    elem.style[\"-ms-transition\"] = value;\n    elem.style[\"-o-transition\"] = value;\n    elem.style.transition = value;\n  }\n  /**\n   * Resize and adjust width/height for cards\n   * @private\n   * @param {boolean} animated False will disable animation during refresh\n   * @returns {object} This API object for chaining\n   */\n  #resize(animated = this.animated) {\n    window.requestAnimationFrame(() => {\n      this.#columns = 0;\n      const cardWidth = this.cardWidth;\n      const gapX = this.#gapX;\n      const bpXl3 = cardWidth * 6 + gapX * 5;\n      const bpXl2 = cardWidth * 5 + gapX * 4;\n      const bpXl = cardWidth * 4 + gapX * 3;\n      const bpDesktop = cardWidth * 3 + gapX * 2;\n      const bpTablet = cardWidth * 2 + gapX;\n      const bpPhone = cardWidth;\n      let bp = bpXl3;\n      const elemWidth = this.container?.offsetWidth ?? NaN;\n      const xl3 = elemWidth >= bpXl3;\n      const xl2 = elemWidth >= bpXl2 && elemWidth <= bpXl3;\n      const xl = elemWidth >= bpXl && elemWidth <= bpXl2;\n      const desktop = elemWidth >= bpDesktop && elemWidth <= bpXl;\n      const tablet = elemWidth >= bpTablet && elemWidth <= bpDesktop;\n      const phone = elemWidth <= bpTablet;\n      let columns = 0;\n      if (xl3 || this.cols === 6) {\n        columns = 6;\n        bp = bpXl3;\n      }\n      if (xl2 || this.cols === 5) {\n        columns = 5;\n        bp = bpXl2;\n      }\n      if (xl || this.cols === 4) {\n        columns = 4;\n        bp = bpXl;\n      }\n      if (desktop || this.cols === 3) {\n        columns = 3;\n        bp = bpDesktop;\n      }\n      if (tablet || this.cols === 2) {\n        columns = 2;\n        bp = bpTablet;\n      }\n      if (phone || this.cols === 1) {\n        columns = 1;\n        bp = bpPhone;\n      }\n      this.#columns = columns;\n      const cardsEl = this.shadowRoot?.querySelector(\".cards\");\n      cardsEl?.style.setProperty(\"margin-left\", `-${bp / 2}px`);\n      this.#setBlocks();\n      this.#initRowsAndCols();\n      let rowsCounter = 0;\n      for (let i = 0, l = this.#blocks.length; i < l; i++) {\n        const block = this.#blocks[i];\n        const setWidth = (span) => {\n          block.elem.style.width = `${this.cardWidth * span + this.#gapX * (span - 1)}px`;\n        };\n        let colspan = this.#getNumberVal(\"colspan\", block.elem);\n        colspan = colspan > 0 ? colspan : 1;\n        setWidth(colspan);\n        if (block.w > this.#columns) {\n          block.w = this.#columns;\n          setWidth(this.#columns);\n        }\n        const available = this.#getAvailability(block);\n        const box = this.cardWidth + this.#gapX;\n        const totalWidth = box * this.#columns;\n        const top = (this.cardHeight + this.#gapY) * available.row;\n        const left = this.localeAPI?.isRTL() ? totalWidth - (box * block.w + box * available.col) : box * available.col;\n        const pos = { left, top };\n        const blockslide = animated ? [0.09, 0.11, 0.24, 0.91] : null;\n        this.#applyCubicBezier(block.elem, blockslide);\n        block.elem.style.left = `${pos.left}px`;\n        block.elem.style.top = `${pos.top}px`;\n        this.#fitBlock(available.row, available.col, block);\n        rowsCounter = available.row + 1;\n      }\n      this.#containerHeight = (this.cardHeight + this.#gapY) * rowsCounter;\n      this.container?.style.setProperty(\"height\", `${this.#containerHeight}px`);\n      this.triggerEvent(_ids_home_page_attributes__WEBPACK_IMPORTED_MODULE_3__.EVENTS.resized, this, { detail: { elem: this, ...this.status } });\n    });\n    return this;\n  }\n  /**\n   * Establish Internal Event Handlers\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #attachEventHandlers() {\n    const slot = this.shadowRoot?.querySelector(`slot[name=\"card\"]`);\n    this.offEvent(\"slotchange\", slot);\n    this.onEvent(\"slotchange\", slot, () => {\n      this.#init();\n    });\n    this.#resizeObserver.disconnect();\n    if (this.container)\n      this.#resizeObserver.observe(this.container);\n    return this;\n  }\n  /** Handle Languages Changes */\n  onLanguageChange = () => {\n    this.#resize();\n  };\n  /**\n   * Get the boolean value for given attribute.\n   * @private\n   * @param {string} attr The attribute name to get the value.\n   * @param {any} defaultVal The default value if not found in list.\n   * @returns {any} The value\n   */\n  #getDefaultVal(attr, defaultVal) {\n    const val = _ids_home_page_attributes__WEBPACK_IMPORTED_MODULE_3__.HOME_PAGE_DEFAULTS[(0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.camelCase)(attr)];\n    return typeof val !== \"undefined\" ? val : defaultVal;\n  }\n  /**\n   * Check the given value is boolean.\n   * @param {boolean|string} val The value.\n   * @returns {boolean} true if the value boolean\n   */\n  #isBool(val) {\n    return val === true || val === \"true\" || val === false || val === \"false\";\n  }\n  /**\n   * Get the boolean value for given attribute.\n   * @private\n   * @param {string} attr The attribute name to get the value.\n   * @param {HTMLElement} elem The element.\n   * @returns {boolean} The value\n   */\n  #getBoolVal(attr, elem = this) {\n    const val = elem.getAttribute(attr);\n    return val !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val) : this.#getDefaultVal(attr, false);\n  }\n  /**\n   * Get the number value for given attribute.\n   * @private\n   * @param {string} attr The attribute name to get the value.\n   * @param {HTMLElement} elem The element.\n   * @returns {number} The value\n   */\n  #getNumberVal(attr, elem = this) {\n    let val = elem.getAttribute(attr);\n    if (val === null)\n      return this.#getDefaultVal(attr, 0);\n    val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(val);\n    return val > 0 ? val : this.#getDefaultVal(attr, 0);\n  }\n  /**\n   * Get the current status of home page\n   * @returns {object} containing information about the current status of the home page\n   */\n  get status() {\n    let rows = this.#rowsAndCols.length;\n    const cols = rows ? this.#rowsAndCols[0].length : 0;\n    const lastRow = this.#rowsAndCols[rows - 1];\n    if (lastRow?.indexOf(false) === -1) {\n      rows -= 1;\n    }\n    return {\n      rows,\n      cols,\n      containerHeight: this.#containerHeight,\n      blocks: this.#blocks\n    };\n  }\n  /**\n   * Set to animated or not the home page cards on resize.\n   * @param {boolean|string} value If true, allows animate the home page cards.\n   */\n  set animated(value) {\n    if (this.#isBool(value)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ANIMATED, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ANIMATED);\n    }\n  }\n  get animated() {\n    return this.#getBoolVal(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ANIMATED);\n  }\n  /**\n   * Set card height for single span\n   * @param {number|string} value The height\n   */\n  set cardHeight(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_HEIGHT, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_HEIGHT);\n    }\n  }\n  get cardHeight() {\n    return this.#getNumberVal(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_HEIGHT);\n  }\n  /**\n   * Set card width for single span\n   * @param {number|string} value The width\n   */\n  set cardWidth(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_WIDTH, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_WIDTH);\n    }\n  }\n  get cardWidth() {\n    return this.#getNumberVal(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CARD_WIDTH);\n  }\n  /**\n   * Set number of columns to display\n   * @param {number|string} value Number of columns\n   */\n  set cols(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLS, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLS);\n    }\n  }\n  get cols() {\n    return this.#getNumberVal(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.COLS);\n  }\n  /**\n   * Set card gap for single span, apply same for both horizontal and vertical sides\n   * @param {number|string} value The row gap\n   */\n  set gap(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP);\n    }\n    this.#refreshGap();\n  }\n  get gap() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP);\n  }\n  /**\n   * Set card horizontal gap for single span\n   * @param {number|string} value The gap-x\n   */\n  set gapX(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_X, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_X);\n    }\n    this.#refreshGap();\n  }\n  get gapX() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_X);\n  }\n  /**\n   * Set card vertical gap for single span\n   * @param {number|string} value The gap-y\n   */\n  set gapY(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_Y, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_Y);\n    }\n    this.#refreshGap();\n  }\n  get gapY() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.GAP_Y);\n  }\n};\nIdsHomePage = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-home-page\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_home_page_scss__WEBPACK_IMPORTED_MODULE_9__[\"default\"])\n], IdsHomePage);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-home-page/ids-home-page.ts\n");

/***/ }),

/***/ "./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts":
/*!***********************************************************************!*\
  !*** ./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_color_variant_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-xss-utils/ids-xss-utils */ \"./src/utils/ids-xss-utils/ids-xss-utils.ts\");\n\n\nconst IdsColorVariantMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n    if (!this.state) {\n      this.state = {};\n    }\n    this.state.colorVariant = null;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.colorVariant)\n      this.#refreshColorVariant(null, this.colorVariant);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COLOR_VARIANT\n    ];\n  }\n  /**\n   * @returns {Array<string>} List of available color variants for this component\n   */\n  colorVariants = [];\n  /**\n   * @returns {string|null} the name of the color variant currently applied\n   */\n  get colorVariant() {\n    return this.state?.colorVariant;\n  }\n  /**\n   * @param {string | null} val the name of the color variant to be applied\n   */\n  set colorVariant(val) {\n    let safeValue = null;\n    if (typeof val === \"string\") {\n      safeValue = (0,_utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__.stripHTML)(val);\n    }\n    const currentValue = this.state.colorVariant;\n    if (safeValue && currentValue !== safeValue) {\n      if (this.colorVariants.includes(safeValue)) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COLOR_VARIANT, `${safeValue}`);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.COLOR_VARIANT);\n        safeValue = null;\n      }\n      this.state.colorVariant = safeValue;\n      this.#refreshColorVariant(currentValue, safeValue);\n    }\n  }\n  /**\n   * Refreshes the component's color variant state, driven by\n   * a CSS class on the WebComponent's `container` element\n   *\n   * @param {string} oldVariantName the variant name to \"remove\" from the style\n   * @param {string} newVariantName the variant name to \"add\" to the style\n   * @returns {void}\n   */\n  #refreshColorVariant(oldVariantName, newVariantName) {\n    if (!this.container) {\n      return;\n    }\n    const cl = this.container?.classList;\n    if (oldVariantName)\n      cl?.remove(`color-variant-${oldVariantName}`);\n    if (newVariantName)\n      cl?.add(`color-variant-${newVariantName}`);\n    if (typeof this.onColorVariantRefresh === \"function\") {\n      this.onColorVariantRefresh(newVariantName);\n    }\n  }\n};\nvar ids_color_variant_mixin_default = IdsColorVariantMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1jb2xvci12YXJpYW50LW1peGluL2lkcy1jb2xvci12YXJpYW50LW1peGluLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUVEO0FBa0IxQixNQUFNLHVCQUF1QixDQUF3QixlQUFrQixjQUFjLFdBQVc7QUFBQSxFQUM5RixlQUFlLE1BQWE7QUFDMUIsVUFBTSxHQUFHLElBQUk7QUFFYixRQUFJLENBQUMsS0FBSyxPQUFPO0FBQ2YsV0FBSyxRQUFRLENBQUM7QUFBQSxJQUNoQjtBQUNBLFNBQUssTUFBTSxlQUFlO0FBQUEsRUFDNUI7QUFBQSxFQUVBLG9CQUFvQjtBQUNsQixVQUFNLGtCQUFrQjtBQUN4QixRQUFJLEtBQUs7QUFBYyxXQUFLLHFCQUFxQixNQUFNLEtBQUssWUFBWTtBQUFBLEVBQzFFO0FBQUEsRUFFQSxXQUFXLGFBQWE7QUFDdEIsV0FBTztBQUFBLE1BQ0wsR0FBSSxXQUFtQjtBQUFBLE1BQ3ZCLDBFQUF3QjtBQUFiLElBQ2I7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQSxnQkFBK0IsQ0FBQztBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS2hDLElBQUksZUFBZTtBQUNqQixXQUFPLEtBQUssT0FBTztBQUFBLEVBQ3JCO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQSxJQUFJLGFBQWEsS0FBb0I7QUFDbkMsUUFBSSxZQUFpQjtBQUNyQixRQUFJLE9BQU8sUUFBUSxVQUFVO0FBQzNCLGtCQUFZLDZFQUFTLENBQUMsR0FBRztBQUFBLElBQzNCO0FBRUEsVUFBTSxlQUFlLEtBQUssTUFBTTtBQUNoQyxRQUFJLGFBQWEsaUJBQWlCLFdBQVc7QUFDM0MsVUFBSSxLQUFLLGNBQWMsU0FBUyxTQUFTLEdBQUc7QUFDMUMsYUFBSyxhQUFhLDBFQUF3QixFQUFFLEdBQUcsV0FBVztBQUFBLE1BQzVELE9BQU87QUFDTCxhQUFLLGdCQUFnQiwwRUFBd0I7QUFDN0Msb0JBQVk7QUFBQSxNQUNkO0FBRUEsV0FBSyxNQUFNLGVBQWU7QUFDMUIsV0FBSyxxQkFBcUIsY0FBYyxTQUFTO0FBQUEsSUFDbkQ7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBVUEscUJBQXFCLGdCQUFnQyxnQkFBc0M7QUFDekYsUUFBSSxDQUFDLEtBQUssV0FBVztBQUNuQjtBQUFBLElBQ0Y7QUFFQSxVQUFNLEtBQUssS0FBSyxXQUFXO0FBRTNCLFFBQUk7QUFBZ0IsVUFBSSxPQUFPLGlCQUFpQixnQkFBZ0I7QUFDaEUsUUFBSTtBQUFnQixVQUFJLElBQUksaUJBQWlCLGdCQUFnQjtBQUc3RCxRQUFJLE9BQU8sS0FBSywwQkFBMEIsWUFBWTtBQUNwRCxXQUFLLHNCQUFzQixjQUFjO0FBQUEsSUFDM0M7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxJQUFPLGtDQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvbWl4aW5zL2lkcy1jb2xvci12YXJpYW50LW1peGluL2lkcy1jb2xvci12YXJpYW50LW1peGluLnRzP2FlZWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgSWRzQ29uc3RydWN0b3IgfSBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcbmltcG9ydCB7IHN0cmlwSFRNTCB9IGZyb20gJy4uLy4uL3V0aWxzL2lkcy14c3MtdXRpbHMvaWRzLXhzcy11dGlscyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29sb3JWYXJpYW50SGFuZGxlciB7XG4gIC8vIGFzIGluc3RhbmNlIGZ1bmN0aW9uXG4gIG9uQ29sb3JWYXJpYW50UmVmcmVzaD8odmFyaWFudE5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGwpOiB2b2lkO1xuICAvLyBhcyBpbnN0YW5jZSBwcm9wZXJ0eVxuICBvbkNvbG9yVmFyaWFudFJlZnJlc2g/OiAodmFyaWFudE5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGwpID0+IHZvaWQ7XG59XG5cbnR5cGUgQ29uc3RyYWludHMgPSBJZHNDb25zdHJ1Y3RvcjxDb2xvclZhcmlhbnRIYW5kbGVyPjtcblxuLyoqXG4gKiBBIG1peGluIHRoYXQgd2lsbCBwcm92aWRlIHRoZSBjb250YWluZXIgZWxlbWVudCBvZiBhbiBJRFMgQ29tcG9uZW50IHdpdGggYSBjbGFzc1xuICogcmVzZXJ2ZWQgZm9yIGZsaXBwaW5nIHRoZSBmb3JlZ3JvdW5kIGNvbG9yICh0ZXh0IGNvbG9yLCBpY29uIGZpbGwsIGV0YykgdG8gYW4gYWx0ZXJuYXRlLFxuICogY29udHJhc3RpbmcgY29sb3IuICBUaGlzIGFsbG93cyBlYXN5IGludGVncmF0aW9uIHdpdGggYWx0ZXJuYXRlIGxheW91dHMsIGhlYWRlcnMsIGFwcCBtZW51LCBldGMuXG4gKiBAcGFyYW0ge2FueX0gc3VwZXJjbGFzcyBBY2NlcHRzIGEgc3VwZXJjbGFzcyBhbmQgY3JlYXRlcyBhIG5ldyBzdWJjbGFzcyBmcm9tIGl0XG4gKiBAcmV0dXJucyB7YW55fSBUaGUgZXh0ZW5kZWQgb2JqZWN0XG4gKi9cbmNvbnN0IElkc0NvbG9yVmFyaWFudE1peGluID0gPFQgZXh0ZW5kcyBDb25zdHJhaW50cz4oc3VwZXJjbGFzczogVCkgPT4gY2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgY29uc3RydWN0b3IoLi4uYXJnczogYW55W10pIHtcbiAgICBzdXBlciguLi5hcmdzKTtcblxuICAgIGlmICghdGhpcy5zdGF0ZSkge1xuICAgICAgdGhpcy5zdGF0ZSA9IHt9O1xuICAgIH1cbiAgICB0aGlzLnN0YXRlLmNvbG9yVmFyaWFudCA9IG51bGw7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIGlmICh0aGlzLmNvbG9yVmFyaWFudCkgdGhpcy4jcmVmcmVzaENvbG9yVmFyaWFudChudWxsLCB0aGlzLmNvbG9yVmFyaWFudCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLihzdXBlcmNsYXNzIGFzIGFueSkuYXR0cmlidXRlcyxcbiAgICAgIGF0dHJpYnV0ZXMuQ09MT1JfVkFSSUFOVFxuICAgIF07XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge0FycmF5PHN0cmluZz59IExpc3Qgb2YgYXZhaWxhYmxlIGNvbG9yIHZhcmlhbnRzIGZvciB0aGlzIGNvbXBvbmVudFxuICAgKi9cbiAgY29sb3JWYXJpYW50czogQXJyYXk8c3RyaW5nPiA9IFtdO1xuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IHRoZSBuYW1lIG9mIHRoZSBjb2xvciB2YXJpYW50IGN1cnJlbnRseSBhcHBsaWVkXG4gICAqL1xuICBnZXQgY29sb3JWYXJpYW50KCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlPy5jb2xvclZhcmlhbnQ7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmcgfCBudWxsfSB2YWwgdGhlIG5hbWUgb2YgdGhlIGNvbG9yIHZhcmlhbnQgdG8gYmUgYXBwbGllZFxuICAgKi9cbiAgc2V0IGNvbG9yVmFyaWFudCh2YWw6IHN0cmluZyB8IG51bGwpIHtcbiAgICBsZXQgc2FmZVZhbHVlOiBhbnkgPSBudWxsO1xuICAgIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgICAgc2FmZVZhbHVlID0gc3RyaXBIVE1MKHZhbCk7XG4gICAgfVxuXG4gICAgY29uc3QgY3VycmVudFZhbHVlID0gdGhpcy5zdGF0ZS5jb2xvclZhcmlhbnQ7XG4gICAgaWYgKHNhZmVWYWx1ZSAmJiBjdXJyZW50VmFsdWUgIT09IHNhZmVWYWx1ZSkge1xuICAgICAgaWYgKHRoaXMuY29sb3JWYXJpYW50cy5pbmNsdWRlcyhzYWZlVmFsdWUpKSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuQ09MT1JfVkFSSUFOVCwgYCR7c2FmZVZhbHVlfWApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5DT0xPUl9WQVJJQU5UKTtcbiAgICAgICAgc2FmZVZhbHVlID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zdGF0ZS5jb2xvclZhcmlhbnQgPSBzYWZlVmFsdWU7XG4gICAgICB0aGlzLiNyZWZyZXNoQ29sb3JWYXJpYW50KGN1cnJlbnRWYWx1ZSwgc2FmZVZhbHVlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVmcmVzaGVzIHRoZSBjb21wb25lbnQncyBjb2xvciB2YXJpYW50IHN0YXRlLCBkcml2ZW4gYnlcbiAgICogYSBDU1MgY2xhc3Mgb24gdGhlIFdlYkNvbXBvbmVudCdzIGBjb250YWluZXJgIGVsZW1lbnRcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IG9sZFZhcmlhbnROYW1lIHRoZSB2YXJpYW50IG5hbWUgdG8gXCJyZW1vdmVcIiBmcm9tIHRoZSBzdHlsZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmV3VmFyaWFudE5hbWUgdGhlIHZhcmlhbnQgbmFtZSB0byBcImFkZFwiIHRvIHRoZSBzdHlsZVxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gICNyZWZyZXNoQ29sb3JWYXJpYW50KG9sZFZhcmlhbnROYW1lPzogc3RyaW5nIHwgbnVsbCwgbmV3VmFyaWFudE5hbWU/OiBzdHJpbmcgfCBudWxsKTogdm9pZCB7XG4gICAgaWYgKCF0aGlzLmNvbnRhaW5lcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGNsID0gdGhpcy5jb250YWluZXI/LmNsYXNzTGlzdDtcblxuICAgIGlmIChvbGRWYXJpYW50TmFtZSkgY2w/LnJlbW92ZShgY29sb3ItdmFyaWFudC0ke29sZFZhcmlhbnROYW1lfWApO1xuICAgIGlmIChuZXdWYXJpYW50TmFtZSkgY2w/LmFkZChgY29sb3ItdmFyaWFudC0ke25ld1ZhcmlhbnROYW1lfWApO1xuXG4gICAgLy8gRmlyZSBvcHRpb25hbCBjYWxsYmFja1xuICAgIGlmICh0eXBlb2YgdGhpcy5vbkNvbG9yVmFyaWFudFJlZnJlc2ggPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMub25Db2xvclZhcmlhbnRSZWZyZXNoKG5ld1ZhcmlhbnROYW1lKTtcbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IElkc0NvbG9yVmFyaWFudE1peGluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-label-state-mixin/ids-label-state-common.ts":
/*!********************************************************************!*\
  !*** ./src/mixins/ids-label-state-mixin/ids-label-state-common.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdsLabelStateAttributes\": () => (/* binding */ IdsLabelStateAttributes),\n/* harmony export */   \"isLabelRequiredValid\": () => (/* binding */ isLabelRequiredValid),\n/* harmony export */   \"isLabelStateValid\": () => (/* binding */ isLabelStateValid)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n\n\nconst IdsLabelStateAttributes = [\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_REQUIRED,\n  _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE\n];\nconst isLabelStateValid = (value) => value === null || [\"hidden\", \"collapsed\"].includes(value);\nconst isLabelRequiredValid = (value) => {\n  const isValid = typeof value !== \"undefined\" && value !== null;\n  return isValid ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(value) : true;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWl4aW5zL2lkcy1sYWJlbC1zdGF0ZS1taXhpbi9pZHMtbGFiZWwtc3RhdGUtY29tbW9uLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJCO0FBQ0U7QUFJdEIsTUFBTSwwQkFBMEI7QUFBQSxFQUNyQyxrRUFBZ0I7QUFBTCxFQUNYLDJFQUF5QjtBQUFkLEVBQ1gsd0VBQXNCO0FBQ3hCO0FBRU8sTUFBTSxvQkFBb0IsQ0FBQyxVQUF5QixVQUFVLFFBQVEsQ0FBQyxVQUFVLFdBQVcsRUFBRSxTQUFTLEtBQUs7QUFFNUcsTUFBTSx1QkFBdUIsQ0FBQyxVQUE0QztBQUMvRSxRQUFNLFVBQVUsT0FBTyxVQUFVLGVBQWUsVUFBVTtBQUMxRCxTQUFPLFVBQVUsc0ZBQVksQ0FBQyxLQUFLLElBQUk7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9taXhpbnMvaWRzLWxhYmVsLXN0YXRlLW1peGluL2lkcy1sYWJlbC1zdGF0ZS1jb21tb24udHM/YWY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBzdHJpbmdUb0Jvb2wgfSBmcm9tICcuLi8uLi91dGlscy9pZHMtc3RyaW5nLXV0aWxzL2lkcy1zdHJpbmctdXRpbHMnO1xuXG5leHBvcnQgdHlwZSBJZHNMYWJlbFN0YXRlTW9kZSA9IG51bGwgfCAnaGlkZGVuJyB8ICdjb2xsYXBzZWQnO1xuXG5leHBvcnQgY29uc3QgSWRzTGFiZWxTdGF0ZUF0dHJpYnV0ZXMgPSBbXG4gIGF0dHJpYnV0ZXMuTEFCRUwsXG4gIGF0dHJpYnV0ZXMuTEFCRUxfUkVRVUlSRUQsXG4gIGF0dHJpYnV0ZXMuTEFCRUxfU1RBVEVcbl07XG5cbmV4cG9ydCBjb25zdCBpc0xhYmVsU3RhdGVWYWxpZCA9ICh2YWx1ZTogc3RyaW5nIHwgbnVsbCkgPT4gdmFsdWUgPT09IG51bGwgfHwgWydoaWRkZW4nLCAnY29sbGFwc2VkJ10uaW5jbHVkZXModmFsdWUpO1xuXG5leHBvcnQgY29uc3QgaXNMYWJlbFJlcXVpcmVkVmFsaWQgPSAodmFsdWU6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKTogYm9vbGVhbiA9PiB7XG4gIGNvbnN0IGlzVmFsaWQgPSB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlICE9PSBudWxsO1xuICByZXR1cm4gaXNWYWxpZCA/IHN0cmluZ1RvQm9vbCh2YWx1ZSkgOiB0cnVlO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/mixins/ids-label-state-mixin/ids-label-state-common.ts\n");

/***/ }),

/***/ "./src/mixins/ids-label-state-mixin/ids-label-state-mixin.ts":
/*!*******************************************************************!*\
  !*** ./src/mixins/ids-label-state-mixin/ids-label-state-mixin.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_label_state_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-xss-utils/ids-xss-utils */ \"./src/utils/ids-xss-utils/ids-xss-utils.ts\");\n/* harmony import */ var _ids_label_state_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ids-label-state-common */ \"./src/mixins/ids-label-state-mixin/ids-label-state-common.ts\");\n\n\n\nconst IdsLabelStateMixin = (superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n    if (!this.state) {\n      this.state = {};\n    }\n    this.state.label = \"\";\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    this.state.labelState = null;\n    if (this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE)) {\n      this.labelState = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE);\n    }\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      ..._ids_label_state_common__WEBPACK_IMPORTED_MODULE_2__.IdsLabelStateAttributes\n    ];\n  }\n  /**\n   * Set the `label` text\n   * @param {string} value of the `label` text property\n   */\n  set label(value) {\n    const newValue = (0,_utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__.stripHTML)(value);\n    const currentValue = this.label;\n    if (newValue !== currentValue) {\n      if (this.state)\n        this.state.label = newValue;\n      if (newValue) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL, `${newValue}`);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL);\n      }\n      this.setLabelText(newValue);\n    }\n  }\n  get label() {\n    return this.state?.label || \"\";\n  }\n  /**\n   * Used for setting the text contents of the shadowroot label\n   * @param {string} [value] of label\n   * @param {string} [selector] used to target a specific element in the shadowroot by CSS selector\n   * @returns {void}\n   */\n  setLabelText(value = this.state?.label, selector = \"label\") {\n    const sanitizedValue = (0,_utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__.stripHTML)(value);\n    const labelEl = this.shadowRoot?.querySelector(selector);\n    if (labelEl) {\n      const textEl = labelEl.querySelector(\"ids-text\");\n      if (!this.labelState) {\n        if (textEl)\n          textEl.innerHTML = sanitizedValue || \"\";\n        labelEl.classList[sanitizedValue ? \"remove\" : \"add\"](\"empty\");\n      } else {\n        if (textEl)\n          textEl.innerHTML = \"\";\n        labelEl.classList.add(\"empty\");\n      }\n    }\n  }\n  /**\n   * Set `label-required` attribute\n   * @param {string} value The `label-required` attribute\n   */\n  set labelRequired(value) {\n    const safeValue = (0,_ids_label_state_common__WEBPACK_IMPORTED_MODULE_2__.isLabelRequiredValid)(value);\n    if (value !== null) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_REQUIRED, safeValue.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_REQUIRED);\n    }\n    this.labelEl?.classList[!safeValue ? \"add\" : \"remove\"](\"no-required-indicator\");\n    if (this.textInput)\n      this.textInput.labelRequired = this.labelRequired;\n  }\n  get labelRequired() {\n    return (0,_ids_label_state_common__WEBPACK_IMPORTED_MODULE_2__.isLabelRequiredValid)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_REQUIRED));\n  }\n  /**\n   * @returns {Array<IdsLabelStateMode>} List of available hidden label states\n   */\n  labelStates = [\"hidden\", \"collapsed\"];\n  /**\n   * @returns {IdsLabelStateMode} the current state of the field label's visibility\n   */\n  get labelState() {\n    return this.state?.labelState || null;\n  }\n  /**\n   * @param {IdsLabelStateMode} val the type of label visibility to apply to the field\n   */\n  set labelState(val) {\n    let safeValue = null;\n    if (typeof val === \"string\") {\n      safeValue = (0,_utils_ids_xss_utils_ids_xss_utils__WEBPACK_IMPORTED_MODULE_1__.stripTags)(val, \"\");\n    }\n    const currentValue = this.state.labelState;\n    if (currentValue !== safeValue) {\n      if (safeValue !== null && this.labelStates.includes(safeValue)) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE, `${safeValue}`);\n      } else {\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LABEL_STATE);\n        safeValue = null;\n      }\n      this.state.labelState = safeValue;\n      this.#refreshLabelState(currentValue, safeValue);\n    }\n  }\n  /**\n   * Refreshes the component's label state, driven by\n   * a CSS class on the WebComponent's `container` element\n   *\n   * @param {string} oldVariantName the variant name to \"remove\" from the style\n   * @param {string} newVariantName the variant name to \"add\" to the style\n   * @returns {void}\n   */\n  #refreshLabelState(oldVariantName, newVariantName) {\n    if (!this.container)\n      return;\n    const cl = this.container.classList;\n    if (oldVariantName)\n      cl.remove(`label-state-${oldVariantName}`);\n    if (newVariantName)\n      cl.add(`label-state-${newVariantName}`);\n    this.#setlabelState(newVariantName);\n    if (typeof this.onLabelStateChange === \"function\") {\n      this.onLabelStateChange(newVariantName);\n    }\n  }\n  #setlabelState(doHide = null) {\n    if (doHide) {\n      this.#hideLabel();\n      this.input?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ARIA_LABEL, this.label);\n    } else {\n      this.#showLabel();\n      this.input?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ARIA_LABEL);\n    }\n  }\n  #hideLabel() {\n    this.setLabelText?.(\"\");\n  }\n  #showLabel() {\n    const existingLabel = this.shadowRoot?.querySelector(\"label\");\n    const thisAsInput = this;\n    if (!existingLabel && !thisAsInput.labelEl) {\n      if (thisAsInput.fieldContainer) {\n        thisAsInput.fieldContainer?.insertAdjacentHTML(\"beforebegin\", `<label for=\"${this.id}-input\" class=\"ids-label-text\">\n          <ids-text part=\"label\" label=\"true\" color-unset>${this.label}</ids-text>\n        </label>`);\n      }\n    } else {\n      this.setLabelText?.(this.label);\n    }\n  }\n};\nvar ids_label_state_mixin_default = IdsLabelStateMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/mixins/ids-label-state-mixin/ids-label-state-mixin.ts\n");

/***/ }),

/***/ "./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts":
/*!*********************************************************!*\
  !*** ./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_ripple_mixin_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n\n\n\nconst IdsRippleMixin = (superclass) => class IdsRippleMixiner extends superclass {\n  // HTMLElement containing ripple, typically component container\n  rippleTarget;\n  // Radius of ripple, defaults to 50\n  rippleRadius = 50;\n  constructor(...args) {\n    super(...args);\n  }\n  static get attributes() {\n    return [\n      ...superclass.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE\n    ];\n  }\n  /**\n   * If set to true the ripple effect will be disabled.\n   * @param {boolean} val The ripple value\n   */\n  set noRipple(val) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_1__.stringToBool)(val)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE, \"\");\n      this.#removeRippleListeners();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE);\n      this.#attachRippleListeners();\n    }\n  }\n  /**\n   * @returns {boolean} true if ripple disabled\n   */\n  get noRipple() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.NO_RIPPLE);\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.removeRipples();\n    this.#removeRippleListeners();\n  }\n  /**\n   * @public\n   * @param {HTMLElement} rippleTarget Element containing ripple, default to component container\n   * @param {number} rippleRadius Used to calc ripple size and coordinates, defaults to 50\n   * @returns {void}\n   */\n  setupRipple(rippleTarget, rippleRadius) {\n    this.rippleTarget = rippleTarget || this.container;\n    this.rippleRadius = rippleRadius || this.rippleRadius;\n    this.#attachRippleListeners();\n  }\n  removeRipples() {\n    const rippleTarget = this.rippleTarget;\n    const otherRippleEls = rippleTarget?.querySelectorAll(\".ripple-effect\");\n    otherRippleEls?.forEach((rippleEl) => {\n      rippleEl.remove();\n    });\n  }\n  /**\n   * Remove event listeners\n   * @private\n   * @returns {void}\n   */\n  #removeRippleListeners() {\n    this.offEvent(\"click.ripple\");\n    this.offEvent(\"touchstart.ripple\");\n  }\n  /**\n   * Sets up event listeners\n   * @private\n   * @returns {void}\n   */\n  #attachRippleListeners() {\n    if (this.noRipple)\n      return;\n    let x;\n    let y;\n    let preceededByTouchstart = false;\n    this.onEvent(\"click.ripple\", this.rippleTarget, (e) => {\n      if (preceededByTouchstart) {\n        preceededByTouchstart = false;\n        return;\n      }\n      x = e.clientX !== 0 ? e.clientX : void 0;\n      y = e.clientY !== 0 ? e.clientY : void 0;\n      this.createRipple(x, y);\n    });\n    this.onEvent(\"touchstart.ripple\", this.rippleTarget, (e) => {\n      if (e.touches && e.touches.length > 0) {\n        const touch = e.touches[0];\n        x = touch.clientX !== 0 ? touch.clientX : void 0;\n        y = touch.clientY !== 0 ? touch.clientY : void 0;\n        this.createRipple(x, y);\n        preceededByTouchstart = true;\n      }\n    }, { passive: true });\n  }\n  /**\n   * Generates a \"ripple\" effect on a specified location inside the element's boundaries.\n   * The coordinates defined are actual page coordinates, using the top/left of the page as [0,0],\n   * which allows this to connect easily to mouse/touch events.\n   * @private\n   * @param {number} x the X coordinate\n   * @param {number} y the Y coordinate\n   * @returns {void}\n   */\n  async createRipple(x, y) {\n    if (this.noRipple || this.disabled)\n      return;\n    this.removeRipples();\n    const rippleTarget = this.rippleTarget;\n    const rippleEl = document.createElement(\"span\");\n    rippleEl.classList.add(\"ripple-effect\");\n    rippleEl.setAttribute(\"aria-hidden\", \"true\");\n    rippleEl.setAttribute(\"focusable\", \"false\");\n    rippleEl.style.width = `${this.rippleRadius * 2}px`;\n    rippleEl.style.height = `${this.rippleRadius * 2}px`;\n    const btnOffsets = this.getRippleOffsets(x, y);\n    rippleTarget?.classList.add(\"is-rippling\");\n    rippleTarget?.prepend(rippleEl);\n    rippleEl.style.left = `${btnOffsets.x}px`;\n    rippleEl.style.top = `${btnOffsets.y}px`;\n    rippleEl.classList.add(\"animating\");\n    await (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_2__.waitForAnimationEnd)(rippleEl, \"ripple-animation\");\n    rippleTarget?.classList.remove(\"is-rippling\");\n    rippleEl.remove();\n    this.#triggerRippleEndEvent(rippleEl);\n  }\n  /**\n   * Dispatches a `rippleend` event on the host element that can notify parent Web Components\n   * that a ripple animation has completed.\n   * @param {HTMLElement} rippleEl reference to the removed ripple element\n   * @returns {void}\n   */\n  #triggerRippleEndEvent(rippleEl) {\n    this.triggerEvent(\"rippleend\", this, {\n      detail: {\n        element: rippleEl\n      }\n    });\n  }\n  /**\n   * The math used for getting the ripple offsets\n   * @private\n   * @param {number} x the X coordinate\n   * @param {number} y the Y coordinate\n   * @returns {object} containing x/y coordinates of the ripple\n   */\n  getRippleOffsets(x, y) {\n    const rect = this.getBoundingClientRect();\n    let elemX;\n    let elemY;\n    if (!x) {\n      elemX = rect.width / 2;\n    } else {\n      elemX = x - rect.left;\n    }\n    if (!y) {\n      elemY = rect.height / 2;\n    } else {\n      elemY = y - rect.top;\n    }\n    elemX -= this.rippleRadius;\n    elemY -= this.rippleRadius;\n    return { x: elemX, y: elemY };\n  }\n};\nvar ids_ripple_mixin_default = IdsRippleMixin;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/mixins/ids-ripple-mixin/ids-ripple-mixin.ts\n");

/***/ }),

/***/ "./src/components/ids-home-page/ids-home-page.scss":
/*!*********************************************************!*\
  !*** ./src/components/ids-home-page/ids-home-page.scss ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Home page Component */ /* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.ids-home-page {\n  position: relative;\n}\n.ids-home-page .cards {\n  position: absolute;\n  left: 50%;\n}\n.ids-home-page ::slotted(ids-card) {\n  position: absolute;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-home-page/ids-home-page.scss\n");

/***/ })

}]);