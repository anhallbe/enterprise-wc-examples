"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-week-view_ids-week-view_ts"],{

/***/ "./src/components/ids-week-view/ids-week-view.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-week-view/ids-week-view.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsWeekView)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _mixins_ids_calendar_events_mixin_ids_calendar_events_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-calendar-events-mixin/ids-calendar-events-mixin */ \"./src/mixins/ids-calendar-events-mixin/ids-calendar-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-date-attribute-mixin/ids-date-attribute-mixin */ \"./src/mixins/ids-date-attribute-mixin/ids-date-attribute-mixin.ts\");\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_date_picker_ids_date_picker__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ids-date-picker/ids-date-picker */ \"./src/components/ids-date-picker/ids-date-picker.ts\");\n/* harmony import */ var _ids_button_ids_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ids-button/ids-button */ \"./src/components/ids-button/ids-button.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_week_view_scss__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ids-week-view.scss */ \"./src/components/ids-week-view/ids-week-view.scss\");\n/* harmony import */ var _ids_calendar_ids_calendar_event__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ids-calendar/ids-calendar-event */ \"./src/components/ids-calendar/ids-calendar-event.ts\");\n/* harmony import */ var _utils_ids_timer_utils_ids_timer_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utils/ids-timer-utils/ids-timer-utils */ \"./src/utils/ids-timer-utils/ids-timer-utils.ts\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n    (0,_mixins_ids_calendar_events_mixin_ids_calendar_events_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n      (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n        (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n          _core_ids_element__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n        )\n      )\n    )\n  )\n);\nlet IdsWeekView = class extends Base {\n  dayMap = [];\n  vetoableEventTypes = [\"beforeweekrendered\"];\n  ro = null;\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setDirection();\n    this.#renderWeek();\n    this.#attachEventHandlers();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.timer?.destroy();\n    this.timer = null;\n    this.state = {};\n    this.ro?.unobserve(this.container);\n    this.ro = null;\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_DATE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_HOUR,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIRST_DAY_OF_WEEK,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TIMELINE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_DATE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_HOUR,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TIMELINE_INTERVAL\n    ];\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    return `<div class=\"ids-week-view\"></div>`;\n  }\n  /**\n   * Establish internal event handlers\n   * @returns {object} The object for chaining\n   * @private\n   */\n  #attachEventHandlers() {\n    this.ro = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.contentRect.width > 0) {\n          this.#attachOffsetTop();\n        }\n      }\n    });\n    this.ro.observe(this.container);\n    return this;\n  }\n  /** Respond to locale changes */\n  onLocaleChange = () => {\n    this.#renderWeek();\n  };\n  /** Respond to language changes */\n  onLanguageChange = () => {\n    this.#renderWeek();\n    this.#attachOffsetTop();\n  };\n  /**\n   * Change startDate/endDate by event type\n   * @param {'next'|'previous'|'today'} type of event to be called\n   */\n  changeDate(type) {\n    const diff = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.daysDiff)(this.startDate, this.endDate);\n    const hasIrregularDays = diff !== 7;\n    let startDate;\n    let endDate;\n    if (type === \"next\") {\n      startDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.addDate)(this.startDate, diff, \"days\");\n      endDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.addDate)(this.endDate, diff - 1, \"days\");\n    }\n    if (type === \"previous\") {\n      startDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.subtractDate)(this.startDate, diff, \"days\");\n      endDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.subtractDate)(this.endDate, diff + 1, \"days\");\n    }\n    if (type === \"today\") {\n      startDate = hasIrregularDays ? new Date() : (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.firstDayOfWeekDate)(new Date(), this.firstDayOfWeek);\n      endDate = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.addDate)(startDate, diff - 1, \"days\");\n    }\n    this.#batchBeforeRender(() => {\n      this.startDate = startDate;\n      this.endDate = endDate;\n    });\n    this.state.activeDate = this.startDate;\n    this.triggerDateChange(this.startDate, type);\n  }\n  /**\n   * Allows execution of multiple operations before rendering week\n   * Ex. setting startDate & endDate before triggering #renderWeek\n   * @param {Function} fn Function containg batched operations\n   */\n  #batchBeforeRender(fn) {\n    this.state.wait = true;\n    fn();\n    this.state.wait = false;\n    this.#renderWeek();\n  }\n  /**\n   * Add week HTML to shadow including day/weekday header, hour rows, event cells\n   */\n  #renderWeek() {\n    if (!this.locale || this.state.wait || !this.container) {\n      return;\n    }\n    const canRender = this.triggerVetoableEvent(\"beforeweekrendered\");\n    if (!canRender)\n      return;\n    const diff = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.daysDiff)(this.startDate, this.endDate);\n    const hoursDiff = this.endHour - this.startHour + 1;\n    const isDayView = diff === 1 || diff === 0;\n    const calendars = this.localeAPI.locale.options.calendars;\n    const dayOfWeekSetting = calendars[0]?.dateFormat?.dayOfWeek;\n    const emphasis = dayOfWeekSetting && dayOfWeekSetting.split(\" \")[0] === \"EEE\";\n    const getTextFontSize = (isEmphasis) => {\n      if (!isEmphasis)\n        return 16;\n      return isDayView ? 32 : 20;\n    };\n    this.dayMap = [];\n    const daysTemplate = Array.from({ length: diff }, (_, index) => {\n      const date = this.startDate.setDate(this.startDate.getDate() + index);\n      const dayNumeric = this.localeAPI.formatDate(date, { day: \"numeric\" });\n      const weekday = this.localeAPI.formatDate(date, { weekday: \"short\" });\n      const isToday = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.isTodaysDate)(new Date(date));\n      const dataKey = this.generateDateKey(new Date(date));\n      return `\n        <th data-key=\"${dataKey}\">\n          <div class=\"week-view-header-wrapper${isToday ? \" is-today\" : \"\"}${isDayView ? \" is-day-view\" : \"\"}\">\n            <ids-text\n              class=\"week-view-header-day-of-week${emphasis ? \"\" : \" is-emphasis\"}\"\n              font-size=\"${getTextFontSize(!emphasis)}\"\n              ${isToday ? 'font-weight=\"bold\"' : \"\"}\n            >${emphasis ? weekday : dayNumeric}</ids-text>\n            <ids-text\n              class=\"week-view-header-day-of-week${emphasis ? \" is-emphasis\" : \"\"}\"\n              font-size=\"${getTextFontSize(emphasis)}\"\n              ${isToday ? 'font-weight=\"bold\"' : \"\"}\n            >${emphasis ? dayNumeric : weekday}</ids-text>\n          </div>\n          <div class=\"week-view-all-day-wrapper\"></div>\n        </th>\n      `;\n    }).join(\"\");\n    const cellTemplate = Array.from({ length: diff }).map((_, index) => {\n      const cellDate = this.startDate;\n      cellDate.setDate(cellDate.getDate() + index);\n      return `<td data-date=\"${cellDate.getDate()}\">\n        <div class=\"week-view-cell-wrapper\"></div>\n      </td>`;\n    }).join(\"\");\n    const startHour = this.startHour;\n    const hoursTemplate = Array.from({ length: hoursDiff }).map((_, index) => {\n      const hour = startHour + index;\n      const hoursHTML = `\n      <tr class=\"week-view-hour-row\" data-hour=\"${hour}\">\n        <td>\n          <div class=\"week-view-cell-wrapper\">\n            <ids-text font-size=\"12\">${calendars ? this.localeAPI.formatHour(this.startHour + index) : \"\"}</ids-text>\n          </div>\n        </td>\n        ${cellTemplate}\n      </tr>\n      <tr class=\"week-view-half-hour-row\" data-hour=\"${hour}.5\">\n        <td>\n          <div class=\"week-view-cell-wrapper\"></div>\n        </td>\n        ${cellTemplate}\n      </tr>`;\n      return hoursHTML;\n    }).join(\"\");\n    const weekTemplate = `<div class=\"week-view-container\">\n      <table class=\"week-view-table\">\n        <thead class=\"week-view-table-header\">\n          <tr>\n            <th>\n              <div class=\"week-view-header-wrapper${isDayView ? \" is-day-view\" : \"\"}\">\n                <ids-text translate-text=\"true\" audible=\"true\">Hour</ids-text>\n              </div>\n              <div class=\"week-view-all-day-wrapper\">\n                <ids-text font-size=\"12\" translate-text=\"true\">AllDay</ids-text>\n              </div>\n            </th>\n            ${daysTemplate}\n          </tr>\n        </thead>\n        <tbody>\n          ${hoursTemplate}\n        </tbody>\n      </table>\n    </div>`;\n    this.container.querySelector(\".week-view-container\")?.remove();\n    this.container.insertAdjacentHTML(\"beforeend\", weekTemplate);\n    this.state.hasRendered = true;\n    this.triggerEvent(\"afterweekrendered\", this);\n    this.container.querySelectorAll(\"th\").forEach((elem) => {\n      const dateKey = elem.getAttribute(\"data-key\");\n      if (dateKey) {\n        const key = parseInt(dateKey);\n        this.dayMap.push({ key, elem });\n      }\n    });\n    this.#renderTimeline();\n    this.renderEventsData();\n  }\n  /**\n   * Add/remove timeline HTML to hour row\n   * Update timeline position every 30 seconds\n   */\n  #renderTimeline() {\n    this.container?.querySelectorAll(\".week-view-time-marker\").forEach((item) => item.remove());\n    if (this.timer)\n      this.timer?.destroy(true);\n    if (!this.showTimeline || !this.state.hasRendered) {\n      return;\n    }\n    this.container?.querySelectorAll(\".week-view-hour-row:nth-child(1) td\").forEach((item) => item.insertAdjacentHTML(\n      \"afterbegin\",\n      '<div class=\"week-view-time-marker\"></div>'\n    ));\n    const hoursDiff = this.endHour - this.startHour + 1;\n    const hourRowElement = this.container?.querySelector(\".week-view-hour-row\");\n    const timelineInterval = this.timelineInterval;\n    const setTimelinePosition = () => {\n      const now = new Date();\n      const hours = now.getHours();\n      const mins = now.getMinutes();\n      const diff = hours - this.startHour + mins / 60;\n      const diffInMilliseconds = now.getTime() - this.startDate.getTime();\n      const position = diff > 0 && diff <= hoursDiff ? diff * 52 : 0;\n      if (hourRowElement) {\n        hourRowElement.style.setProperty(\"--timeline-shift\", `${position}px`);\n        hourRowElement.dataset.diffInMilliseconds = diffInMilliseconds.toString();\n      }\n    };\n    setTimelinePosition();\n    this.#clearInterval();\n    this.#timelinePositionInterval = (0,_utils_ids_timer_utils_ids_timer_utils__WEBPACK_IMPORTED_MODULE_16__.requestAnimationInterval)(() => setTimelinePosition(), timelineInterval);\n  }\n  /**\n   * Removes a previously-set interval that controls timeline position\n   */\n  #clearInterval() {\n    if (this.#timelinePositionInterval)\n      (0,_utils_ids_timer_utils_ids_timer_utils__WEBPACK_IMPORTED_MODULE_16__.clearAnimationInterval)(this.#timelinePositionInterval);\n  }\n  /**\n   * Stored interval used to control timeline position\n   */\n  #timelinePositionInterval;\n  /**\n   * Add CSS variable of the container offset top\n   * to be used in CSS to fit the component to the viewport height\n   */\n  #attachOffsetTop() {\n    const offsetTop = this.container?.offsetTop;\n    this.container?.style.setProperty(`--offset-top`, `${offsetTop}px`);\n  }\n  /**\n   * Gets number of hours of Date (ex. 3:15am => 3.25)\n   * @param {Date} date Date object\n   * @param {boolean} rounded If true, rounds down to nearest half hour\n   * @returns {number} number of hours\n   */\n  #getDateHours(date, rounded) {\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    if (rounded) {\n      return hours + (minutes >= 30 ? 0.5 : 0);\n    }\n    return hours + minutes / 60 + seconds / 600;\n  }\n  /**\n   * Renders all events currently set or returned in beforeEventsRender function\n   * @param {boolean} forceRender if true, skips beforeEventRender\n   */\n  async renderEventsData(forceRender = false) {\n    if (!forceRender && typeof this.state.beforeEventsRender === \"function\") {\n      this.eventsData = await this.state.beforeEventsRender(this.startDate, this.endDate);\n      return;\n    }\n    this.removeAllEvents();\n    if (!this.state.hasRendered || !this.eventsData?.length)\n      return;\n    this.eventsData.forEach((event) => {\n      const eventStart = new Date(event.starts);\n      const eventEnd = new Date(event.ends);\n      if (this.startDate <= eventEnd && eventStart < this.endDate) {\n        this.#renderEvent(event);\n      }\n    });\n  }\n  /**\n   * Finds week view table cell element for intraday event\n   * @param {CalendarEventData} eventData event data\n   * @returns {HTMLTableCellElement | null} td element in week view\n   */\n  #findHourContainer(eventData) {\n    const eventStart = new Date(eventData.starts);\n    const startDate = eventStart.getDate();\n    const startHour = this.#getDateHours(eventStart, true);\n    return this.container?.querySelector(`[data-hour=\"${startHour}\"] [data-date=\"${startDate}\"]`) || null;\n  }\n  /**\n   * Creates IdsCalendarEvent and assigns event data and event type\n   * @param {CalendarEventData} eventData event data for calendar event\n   * @param {Array<string>} cssClass optional css classes for calendar event\n   * @returns {IdsCalendarEvent} IdsCalendarEvent component\n   */\n  #createCalendarEvent(eventData, cssClass) {\n    const calendarEvent = new _ids_calendar_ids_calendar_event__WEBPACK_IMPORTED_MODULE_15__[\"default\"]();\n    const eventType = this.eventTypesData?.find((et) => et.id === eventData.type);\n    calendarEvent.eventTypeData = eventType;\n    calendarEvent.eventData = eventData;\n    if (cssClass?.length) {\n      calendarEvent.cssClass = cssClass;\n    }\n    return calendarEvent;\n  }\n  /**\n   * Creates IdsCalendarEvent and finds its appropriate container\n   * @param {CalendarEventData} eventData Data to create calendar event\n   */\n  #renderEvent(eventData) {\n    let calendarEvent;\n    let container;\n    const startDate = new Date(eventData.starts);\n    const endDate = new Date(eventData.ends);\n    const startKey = this.generateDateKey(startDate);\n    const endKey = this.generateDateKey(endDate);\n    const days = this.dayMap.filter((day) => day.key >= startKey && day.key <= endKey);\n    const isAllDay = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToBool)(eventData.isAllDay);\n    if (days.length === 1 && !isAllDay) {\n      calendarEvent = this.#createCalendarEvent(eventData);\n      container = this.#findHourContainer(eventData);\n      if (container)\n        this.#appendIntradayEvent(container, calendarEvent);\n      return;\n    }\n    if (days.length === 1 && isAllDay) {\n      calendarEvent = this.#createCalendarEvent(eventData, [\"all-day\"]);\n      container = days[0].elem.querySelector(\".week-view-all-day-wrapper\");\n      if (container)\n        this.#appendAllDayEvent(container, calendarEvent);\n      return;\n    }\n    if (days.length > 1 && isAllDay) {\n      for (let i = 0; i < days.length; i++) {\n        let cssClass = i === 0 ? \"calendar-event-start\" : \"calendar-event-continue\";\n        if (i === days.length - 1)\n          cssClass = \"calendar-event-ends\";\n        calendarEvent = this.#createCalendarEvent(eventData, [\"all-day\", cssClass]);\n        container = days[i].elem.querySelector(\".week-view-all-day-wrapper\");\n        if (container)\n          this.#appendAllDayEvent(container, calendarEvent);\n      }\n    }\n  }\n  /**\n   * Appends IdsCalendarEvent to hour container\n   * Adjust styles to reflect event duration and accomodate multiple events\n   * @param {HTMLElement} container HTMLElement containing calendar event\n   * @param {IdsCalendarEvent} calendarEvent IdsCalendarEvent component\n   */\n  #appendIntradayEvent(container, calendarEvent) {\n    const containerHour = parseFloat(container.parentElement?.getAttribute(\"data-hour\") || \"\");\n    const eventStartHour = this.#getDateHours(calendarEvent.startDate, false);\n    const containerWrapper = container.querySelector(\".week-view-cell-wrapper\");\n    const minHeightDuration = 0.25;\n    const maxHeightDuration = this.endHour + 1 - eventStartHour;\n    let eventDuration = calendarEvent.duration;\n    eventDuration = Math.max(minHeightDuration, eventDuration);\n    eventDuration = Math.min(maxHeightDuration, eventDuration);\n    calendarEvent.height = `${eventDuration * 50 + eventDuration / 0.5 - 1}px`;\n    if (eventDuration < 0.5) {\n      calendarEvent.cssClass = [\"reduced-padding\"];\n    }\n    if (eventDuration < 1.5) {\n      calendarEvent.cssClass = [\"is-ellipsis\"];\n    }\n    if (eventDuration >= 2) {\n      calendarEvent.displayTime = true;\n      calendarEvent.overflow = \"normal\";\n    }\n    if (eventStartHour + eventDuration > this.endHour) {\n      calendarEvent.cssClass = [\"is-cutoff\"];\n    }\n    if (eventStartHour > containerHour) {\n      const unit = 0.016666666666666784;\n      const extra = eventStartHour - containerHour;\n      const height = container.parentElement?.offsetHeight || 26;\n      calendarEvent.yOffset = `${extra / unit * (height / 30)}px`;\n    }\n    const containerEvents = container.querySelectorAll(\"ids-calendar-event\");\n    const eventCount = containerEvents.length;\n    if (eventCount > 0) {\n      const width = 100 / (eventCount + 1);\n      calendarEvent.width = `${width}%`;\n      calendarEvent.xOffset = `${width * eventCount}%`;\n      containerEvents.forEach((elem, i) => {\n        elem.width = `${width}%`;\n        elem.xOffset = `${width * i}%`;\n      });\n    }\n    this.triggerEvent(\"beforeeventrendered\", this, {\n      detail: {\n        elem: this,\n        events: this.eventsData,\n        event: calendarEvent,\n        dateCell: calendarEvent,\n        container: containerWrapper\n      },\n      bubbles: true\n    });\n    containerWrapper?.appendChild(calendarEvent);\n    this.triggerEvent(\"aftereventrendered\", this, {\n      detail: {\n        elem: this,\n        events: this.eventsData,\n        event: calendarEvent,\n        dateCell: calendarEvent,\n        container: containerWrapper\n      },\n      bubbles: true\n    });\n  }\n  /**\n   * Appends IdsCalendarEvent to all day section of week view\n   * Adjust styles to accomodate multiple calendar events\n   * @param {HTMLElement} container HTMLElement containing calendar event\n   * @param {IdsCalendarEvent} calendarEvent IdsCalendarEvent component\n   */\n  #appendAllDayEvent(container, calendarEvent) {\n    const containerEvents = container.querySelectorAll(\"ids-calendar-event\");\n    const eventCount = containerEvents.length;\n    if (eventCount >= 1) {\n      calendarEvent.yOffset = `${22 * eventCount}px`;\n    }\n    if (eventCount >= 2) {\n      this.container?.querySelectorAll(\".week-view-all-day-wrapper\").forEach((elem) => {\n        elem.style.height = `${44 + (eventCount - 1) * 23}px`;\n      });\n    }\n    this.triggerEvent(\"beforeeventrendered\", this, {\n      detail: {\n        elem: this,\n        events: this.eventsData,\n        event: calendarEvent,\n        dateCell: calendarEvent,\n        container\n      },\n      bubbles: true\n    });\n    container.appendChild(calendarEvent);\n    this.triggerEvent(\"beforeeventrendered\", this, {\n      detail: {\n        elem: this,\n        events: this.eventsData,\n        event: calendarEvent,\n        dateCell: calendarEvent,\n        container\n      },\n      bubbles: true\n    });\n  }\n  /**\n   * show-today attribute\n   * @returns {boolean} showToday param converted to boolean from attribute value\n   */\n  get showToday() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToBool)(attrVal);\n  }\n  /**\n   * Set whether or not the today button should be shown\n   * @param {string|boolean} val showToday param value\n   */\n  set showToday(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY);\n    }\n    this.#renderWeek();\n  }\n  /**\n   * start-date attribute\n   * @returns {Date} startDate date parsed from attribute value\n   */\n  get startDate() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_DATE);\n    const attrDate = new Date(attrVal ?? \"\");\n    if (attrVal && (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.isValidDate)(attrDate)) {\n      return attrDate;\n    }\n    return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.firstDayOfWeekDate)(new Date(), this.firstDayOfWeek);\n  }\n  /**\n   * Set start of the week to show\n   * @param {string|Date} val startDate param value\n   */\n  set startDate(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_DATE, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_DATE);\n    }\n    this.#renderWeek();\n  }\n  /**\n   * end-date attribute\n   * @returns {Date} endDate date parsed from attribute value\n   */\n  get endDate() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_DATE);\n    const attrDate = new Date(attrVal ?? \"\");\n    if (attrVal && (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.isValidDate)(attrDate)) {\n      return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.addDate)(attrDate, 1, \"days\");\n    }\n    return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_8__.lastDayOfWeekDate)(new Date(), this.firstDayOfWeek);\n  }\n  /**\n   * Set end of the week to show\n   * @param {string|Date} val endDate param value\n   */\n  set endDate(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_DATE, val.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_DATE);\n    }\n    this.#renderWeek();\n  }\n  onFirstDayOfWeekChange() {\n    this.#renderWeek();\n  }\n  /**\n   * start-hour attribute\n   * @returns {number} startHour param converted to number from attribute value with range (0-24)\n   */\n  get startHour() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_HOUR);\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToNumber)(attrVal);\n    if (attrVal && numberVal >= 0 && numberVal <= 24) {\n      return numberVal;\n    }\n    return 7;\n  }\n  /**\n   * Set start hour of the day (0-24)\n   * @param {string|number} val startHour param value\n   */\n  set startHour(val) {\n    if (val !== null) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_HOUR, String(val));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.START_HOUR);\n    }\n    this.#renderWeek();\n  }\n  /**\n   * end-hour attribute\n   * @returns {number} endHour param converted to number from attribute value with range (0-24)\n   */\n  get endHour() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_HOUR);\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToNumber)(attrVal);\n    if (attrVal && numberVal >= 0 && numberVal <= 24) {\n      return numberVal;\n    }\n    return 19;\n  }\n  /**\n   * Set end hour of the day (0-24)\n   * @param {string|number} val endHour param value\n   */\n  set endHour(val) {\n    if (val !== null) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_HOUR, String(val));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.END_HOUR);\n    }\n    this.#renderWeek();\n  }\n  /**\n   * show-timeline attribute\n   * @returns {boolean} showTimeline param converted to boolean from attribute value\n   */\n  get showTimeline() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TIMELINE);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Set whether or not to show a bar across the current time\n   * @param {string|boolean} val showTimeline param value\n   */\n  set showTimeline(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TIMELINE, String(boolVal));\n    this.#renderTimeline();\n  }\n  /**\n   * timeline-interval attribute value in milliseconds\n   * @returns {number} timelineInterval param converted to number\n   */\n  get timelineInterval() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TIMELINE_INTERVAL);\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_9__.stringToNumber)(attrVal);\n    if (numberVal > 0) {\n      return numberVal;\n    }\n    return 3e4;\n  }\n  /**\n   * Set how often timeline should update it's position (in milliseconds)\n   * @param {number|string} val timelineInterval param value\n   */\n  set timelineInterval(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TIMELINE_INTERVAL, String(val));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TIMELINE_INTERVAL);\n    }\n    this.#renderTimeline();\n  }\n};\nIdsWeekView = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-week-view\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_week_view_scss__WEBPACK_IMPORTED_MODULE_14__[\"default\"])\n], IdsWeekView);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-week-view/ids-week-view.ts\n");

/***/ }),

/***/ "./src/components/ids-week-view/ids-week-view.scss":
/*!*********************************************************!*\
  !*** ./src/components/ids-week-view/ids-week-view.scss ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  height: 100%;\n  contain: content;\n}\n\n.ids-week-view {\n  display: flex;\n  border-style: solid;\n  border-width: 1px;\n  background-color: var(--ids-color-palette-white);\n  border-color: var(--ids-color-palette-slate-20);\n  flex-direction: column;\n  overflow: hidden;\n  max-height: calc(100vh - 26px - var(--offset-top, 0px));\n}\n.ids-week-view .week-view-table-header th {\n  background-clip: padding-box;\n  border-top: 0;\n  height: 24px;\n  line-height: 24px;\n  text-align: left;\n  z-index: 3;\n}\n.ids-week-view .week-view-table-header .week-view-header-wrapper {\n  padding: 0 5px;\n  text-align: center;\n}\n.ids-week-view .week-view-table-header .week-view-header-wrapper .week-view-header-day-of-week {\n  line-height: 25px;\n}\n.ids-week-view .week-view-table-header .week-view-header-wrapper.is-day-view .week-view-header-day-of-week.is-emphasis {\n  line-height: 40px;\n}\n.ids-week-view .week-view-table-header .week-view-all-day-wrapper {\n  position: relative;\n  box-sizing: border-box;\n  border-color: var(--ids-color-palette-slate-20);\n  height: 44px;\n  text-transform: unset;\n  border-top-width: 1px;\n  border-top-style: solid;\n}\n.ids-week-view .week-view-table-header th:nth-child(1) .week-view-all-day-wrapper {\n  border-top-color: transparent;\n  padding: 5px;\n}\n.ids-week-view .week-view-table {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n}\n.ids-week-view .week-view-table .week-view-allday-row {\n  height: 40px;\n}\n.ids-week-view .week-view-table .week-view-hour-row,\n.ids-week-view .week-view-table .week-view-half-hour-row {\n  height: 25px;\n}\n.ids-week-view .week-view-table th,\n.ids-week-view .week-view-table td {\n  border-bottom: 1px solid;\n  padding: 0;\n  border-color: var(--ids-color-palette-slate-20);\n  height: 25px;\n}\n.ids-week-view .week-view-table th:nth-child(1) {\n  width: 60px;\n}\n.ids-week-view .week-view-table tr td:nth-child(1) .week-view-cell-wrapper {\n  padding: 0 5px;\n}\n.ids-week-view .week-view-table tr:nth-child(odd) td {\n  border-bottom: 1px solid;\n  border-bottom-color: var(--ids-color-palette-slate-10);\n}\n.ids-week-view .week-view-table th:not(:last-child),\n.ids-week-view .week-view-table td:not(:last-child) {\n  border-right-width: 1px;\n  border-right-style: solid;\n}\n.ids-week-view .week-view-header-wrapper.is-today {\n  color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 4px 0 0 var(--ids-color-palette-azure-60);\n}\n.ids-week-view .week-view-container {\n  background-color: var(--ids-color-palette-white);\n  overflow: auto;\n}\n.ids-week-view .week-view-container th {\n  position: sticky;\n  background-color: var(--ids-color-palette-white);\n  top: 0;\n  z-index: 3;\n}\n.ids-week-view .week-view-cell-wrapper {\n  position: relative;\n  padding: 0;\n  height: 25px;\n  min-width: 50px;\n}\n.ids-week-view .week-view-time-marker {\n  border-style: solid;\n  border-width: 1px;\n  display: block;\n  z-index: 2;\n  position: relative;\n  box-sizing: border-box;\n  border-color: var(--ids-color-palette-azure-60);\n  height: 1px;\n  margin-top: -2px;\n  top: var(--timeline-shift);\n}\n.ids-week-view[mode=dark] {\n  background-color: var(--ids-color-palette-slate-100);\n  border-color: var(--ids-color-palette-slate-70);\n}\n.ids-week-view[mode=dark] .week-view-table th,\n.ids-week-view[mode=dark] .week-view-table td {\n  border-color: var(--ids-color-palette-slate-70);\n}\n.ids-week-view[mode=dark] .week-view-table tr:nth-child(odd) td {\n  border-bottom-color: var(--ids-color-palette-slate-70);\n}\n.ids-week-view[mode=dark] .week-view-header {\n  border-color: var(--ids-color-palette-slate-70);\n  background-color: var(--ids-color-palette-slate-100);\n}\n.ids-week-view[mode=dark] .week-view-all-day-wrapper {\n  border-color: var(--ids-color-palette-slate-70);\n}\n.ids-week-view[mode=dark] .week-view-container {\n  background-color: var(--ids-color-palette-slate-100);\n}\n.ids-week-view[mode=dark] .week-view-container th {\n  background-color: var(--ids-color-palette-slate-100);\n}\n.ids-week-view[mode=dark] .week-view-header-wrapper.is-today {\n  color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 4px 0 0 var(--ids-color-palette-azure-60);\n}\n.ids-week-view[mode=dark] .week-view-today-text {\n  color: var(--ids-color-palette-azure-60);\n}\n.ids-week-view[mode=dark] .week-view-time-marker {\n  border-color: var(--ids-color-palette-azure-60);\n}\n.ids-week-view[mode=contrast] {\n  background-color: var(--ids-color-palette-white);\n  border-color: var(--ids-color-palette-slate-30);\n}\n.ids-week-view[mode=contrast] .week-view-table th,\n.ids-week-view[mode=contrast] .week-view-table td {\n  border-color: var(--ids-color-palette-slate-30);\n}\n.ids-week-view[mode=contrast] .week-view-table tr:nth-child(odd) td {\n  border-bottom-color: var(--ids-color-palette-slate-30);\n}\n.ids-week-view[mode=contrast] .week-view-header {\n  border-color: var(--ids-color-palette-slate-30);\n  background-color: var(--ids-color-palette-white);\n}\n.ids-week-view[mode=contrast] .week-view-all-day-wrapper {\n  border-color: var(--ids-color-palette-slate-30);\n}\n.ids-week-view[mode=contrast] .week-view-container {\n  background-color: var(--ids-color-palette-white);\n}\n.ids-week-view[mode=contrast] .week-view-container th {\n  background-color: var(--ids-color-palette-white);\n}\n.ids-week-view[mode=contrast] .week-view-header-wrapper.is-today {\n  color: var(--ids-color-palette-azure-90);\n  box-shadow: 0 4px 0 0 var(--ids-color-palette-azure-90);\n}\n.ids-week-view[mode=contrast] .week-view-today-text {\n  color: var(--ids-color-palette-azure-90);\n}\n.ids-week-view[mode=contrast] .week-view-time-marker {\n  border-color: var(--ids-color-palette-azure-90);\n}\n\nids-toolbar ids-menu-button[menu=view-picker] {\n  margin-inline-end: 8px;\n}\n\n:host([dir=rtl]) .week-view-all-day-wrapper {\n  text-align: right;\n}\n:host([dir=rtl]) .ids-week-view .week-view-table th:not(:first-child),\n:host([dir=rtl]) .ids-week-view .week-view-table td:not(:first-child) {\n  border-right-width: 1px;\n  border-right-style: solid;\n}\n:host([dir=rtl]) .ids-week-view .week-view-table th:first-child,\n:host([dir=rtl]) .ids-week-view .week-view-table td:first-child {\n  border-right-width: 0;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-week-view/ids-week-view.scss\n");

/***/ })

}]);