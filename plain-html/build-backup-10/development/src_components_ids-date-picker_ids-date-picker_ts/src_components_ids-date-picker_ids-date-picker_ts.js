"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-date-picker_ids-date-picker_ts"],{

/***/ "./src/components/ids-date-picker/ids-date-picker-popup.ts":
/*!*****************************************************************!*\
  !*** ./src/components/ids-date-picker/ids-date-picker-popup.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_date_picker_popup_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _ids_month_view_ids_month_view_attribute_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ids-month-view/ids-month-view-attribute-mixin */ \"./src/components/ids-month-view/ids-month-view-attribute-mixin.ts\");\n/* harmony import */ var _mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-date-attribute-mixin/ids-date-attribute-mixin */ \"./src/mixins/ids-date-attribute-mixin/ids-date-attribute-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _ids_picker_popup_ids_picker_popup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ids-picker-popup/ids-picker-popup */ \"./src/components/ids-picker-popup/ids-picker-popup.ts\");\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ids-date-picker-common */ \"./src/components/ids-date-picker/ids-date-picker-common.ts\");\n/* harmony import */ var _ids_month_year_picklist__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ids-month-year-picklist */ \"./src/components/ids-date-picker/ids-month-year-picklist.ts\");\n/* harmony import */ var _ids_button_ids_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../ids-button/ids-button */ \"./src/components/ids-button/ids-button.ts\");\n/* harmony import */ var _ids_modal_button_ids_modal_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../ids-modal-button/ids-modal-button */ \"./src/components/ids-modal-button/ids-modal-button.ts\");\n/* harmony import */ var _ids_expandable_area_ids_expandable_area__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../ids-expandable-area/ids-expandable-area */ \"./src/components/ids-expandable-area/ids-expandable-area.ts\");\n/* harmony import */ var _ids_month_view_ids_month_view__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-month-view/ids-month-view */ \"./src/components/ids-month-view/ids-month-view.ts\");\n/* harmony import */ var _ids_time_picker_ids_time_picker__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ids-time-picker/ids-time-picker */ \"./src/components/ids-time-picker/ids-time-picker.ts\");\n/* harmony import */ var _ids_toggle_button_ids_toggle_button__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ids-toggle-button/ids-toggle-button */ \"./src/components/ids-toggle-button/ids-toggle-button.ts\");\n/* harmony import */ var _ids_toolbar_ids_toolbar__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ids-toolbar/ids-toolbar */ \"./src/components/ids-toolbar/ids-toolbar.ts\");\n/* harmony import */ var _ids_toolbar_ids_toolbar_section__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../ids-toolbar/ids-toolbar-section */ \"./src/components/ids-toolbar/ids-toolbar-section.ts\");\n/* harmony import */ var _ids_date_picker_popup_scss__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./ids-date-picker-popup.scss */ \"./src/components/ids-date-picker/ids-date-picker-popup.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_ids_month_view_ids_month_view_attribute_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  (0,_mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n      _ids_picker_popup_ids_picker_popup__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n    )\n  )\n);\nlet IdsDatePickerPopup = class extends Base {\n  constructor() {\n    super();\n    this.#value = \"\";\n  }\n  expandableArea;\n  monthView;\n  monthYearPicklist;\n  timepicker;\n  toolbar;\n  connectedCallback() {\n    super.connectedCallback();\n    this.configureComponents();\n    this.attachEventListeners();\n    this.attachExpandedListener();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.expandableArea = null;\n    this.monthView = null;\n    this.monthYearPicklist = null;\n    this.timepicker = null;\n    this.toolbar = null;\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      ..._ids_date_picker_common__WEBPACK_IMPORTED_MODULE_8__.IdsDatePickerCommonAttributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED\n    ];\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    return `<ids-popup class=\"ids-date-picker-popup\" type=\"menu\" align=\"bottom, left\" arrow=\"bottom\" tabIndex=\"-1\" animated>\n      <slot slot=\"content\" name=\"toolbar\">\n        ${this.toolbarTemplate()}\n      </slot>\n      <div class=\"ids-date-picker-content\" slot=\"content\">\n        <ids-expandable-area\n          expand-style=\"fill\"\n          expanded=\"${this.expanded}\"\n        >\n          <ids-month-year-picklist\n            slot=\"pane\"\n            ${this.showPicklistYear ? 'show-picklist-year=\"true\"' : \"\"}></ids-month-year-picklist>\n        </ids-expandable-area>\n        <ids-month-view\n          compact=\"true\"\n          is-date-picker=\"true\"\n          show-today=${this.showToday}\n          first-day-of-week=\"${this.firstDayOfWeek}\"\n          year=\"${this.year}\"\n          month=\"${this.month}\"\n          day=\"${this.day}\"\n          use-range=\"${this.useRange}\"\n        ></ids-month-view>\n      ${this.hasTime() ? this.timepickerTemplate() : \"\"}\n      </div>\n      <div\n        slot=\"content\"\n        class=\"popup-footer\"\n        part=\"footer\">\n        <ids-modal-button class=\"popup-btn popup-btn-cancel\" cancel ${this.showCancel ? \"\" : \" hidden\"}>\n          <ids-text translate-text=\"true\" font-weight=\"bold\" part=\"btn-cancel\">Cancel</ids-text>\n        </ids-modal-button>\n        <ids-modal-button class=\"popup-btn popup-btn-clear\" part=\"btn-clear\" ${this.showClear ? \"\" : \" hidden\"}>\n          <ids-text translate-text=\"true\" font-weight=\"bold\">Clear</ids-text>\n        </ids-modal-button>\n        <ids-modal-button class=\"popup-btn popup-btn-apply\"${this.useRange || this.expanded ? \" disabled\" : \" hidden\"} part=\"btn-apply\" appearance=\"primary\">\n          <ids-text translate-text=\"true\" font-weight=\"bold\">Apply</ids-text>\n        </ids-modal-button>\n      </div>\n    </ids-popup>`;\n  }\n  /**\n   * @returns {string} containing the inner Timepicker's template\n   */\n  timepickerTemplate() {\n    return `\n      <ids-time-picker\n        embeddable=\"true\"\n        value=\"${this.value}\"\n        format=\"${this.format}\"\n        minute-interval=\"${this.minuteInterval}\"\n        second-interval=\"${this.secondInterval}\"\n        use-current-time=\"${this.useCurrentTime}\"\n      ></ids-time-picker>\n    `;\n  }\n  /**\n   * @returns {string} containing the inner Toolbar's template\n   */\n  toolbarTemplate() {\n    const prevNextBtn = `<ids-button class=\"btn-previous\">\n      <ids-text audible=\"true\" translate-text=\"true\">PreviousMonth</ids-text>\n      <ids-icon icon=\"chevron-left\"></ids-icon>\n    </ids-button>\n    <ids-button class=\"btn-next\">\n      <ids-text audible=\"true\" translate-text=\"true\">NextMonth</ids-text>\n      <ids-icon icon=\"chevron-right\"></ids-icon>\n    </ids-button>`;\n    const todayBtn = this.showToday ? `<ids-button css-class=\"no-padding\" class=\"btn-today\">\n      <ids-text\n        class=\"btn-today-text\"\n        font-size=\"16\"\n        translate-text=\"true\"\n        font-weight=\"bold\"\n      >Today</ids-text>\n    </ids-button>` : \"\";\n    return `<ids-toolbar class=\"month-view-header\" tabbable=\"true\">\n      <ids-toolbar-section favor>\n        <ids-toggle-button id=\"month-year-view-trigger\" icon-off=\"dropdown\" icon-on=\"dropdown\" icon=\"dropdown\" icon-align=\"end\" no-padding class=\"dropdown-btn\">\n          <ids-text audible=\"true\" translate-text=\"true\">DatePickerTriggerButton</ids-text>\n          <ids-text class=\"dropdown-btn-text\" font-size=\"20\">${this.formatMonthText()}</ids-text>\n          <ids-icon icon=\"dropdown\" class=\"dropdown-btn-icon\"></ids-icon>\n        </ids-toggle-button>\n      </ids-toolbar-section>\n      <ids-toolbar-section class=\"toolbar-buttonset monthview-nav\" align=\"end\" type=\"fluid\"${this.expanded ? \" inactive\" : \"\"}>\n        ${todayBtn}\n        ${prevNextBtn}\n      </ids-toolbar-section>\n    </ids-toolbar>`;\n  }\n  /**\n   * @returns {Array<string>} Date Picker vetoable events\n   */\n  vetoableEventTypes = [\"beforeshow\"];\n  /**\n   * @readonly\n   * @returns {NodeList<IdsDatePickerPopupButton>} containing all buttons in the Date Picker Popup\n   */\n  get buttons() {\n    return this.container?.querySelectorAll(\"ids-button, ids-modal-button, ids-toggle-button\");\n  }\n  /**\n   * show-today attribute\n   * @returns {boolean} showToday param converted to boolean from attribute value\n   */\n  get showToday() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_TODAY);\n    return attrVal !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(attrVal) : true;\n  }\n  /**\n   * Set whether or not month view today button should be show\n   * @param {string|boolean|null} val show-today attribute value\n   */\n  set showToday(val) {\n    const doShow = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    if (doShow) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_TODAY, \"true\");\n      this.todayBtnEl?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n    } else {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_TODAY, \"false\");\n      this.todayBtnEl?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, \"true\");\n    }\n  }\n  onFirstDayOfWeekChange(newValue) {\n    this.monthView?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIRST_DAY_OF_WEEK, `${newValue}`);\n    this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIRST_DAY_OF_WEEK, `${newValue}`);\n  }\n  onMonthChange(newValue, isValid) {\n    if (isValid) {\n      this.monthView?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MONTH, `${newValue}`);\n      this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MONTH, `${newValue}`);\n    } else {\n      this.monthView?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MONTH);\n      this.monthYearPicklist?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MONTH);\n    }\n  }\n  onYearChange(newValue, isValid) {\n    if (isValid) {\n      this.monthView?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.YEAR, `${newValue}`);\n      this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MONTH, `${newValue}`);\n    } else {\n      this.monthView?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.YEAR);\n      this.monthYearPicklist?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.YEAR);\n    }\n  }\n  onDayChange(newValue, isValid) {\n    if (isValid) {\n      this.monthView?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DAY, `${newValue}`);\n      this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DAY, `${newValue}`);\n    } else {\n      this.monthView?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DAY);\n      this.monthYearPicklist?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DAY);\n    }\n  }\n  onFormatChange() {\n    if (!this.container)\n      return;\n    if (this.monthView)\n      this.monthView.format = this.format;\n    if (this.timepicker)\n      this.timepicker.format = this.format;\n    this.updateTimepickerDisplay();\n  }\n  /**\n   * @param {IdsLocale} locale the new locale object\n   */\n  onLocaleChange = (locale) => {\n    this.updateMonthYearPickerTriggerDisplay(locale);\n    if (this.monthYearPicklist) {\n      this.monthYearPicklist.locale = this.locale;\n      this.monthYearPicklist.language = this.language.name;\n    }\n    if (this.monthView) {\n      this.monthView.locale = this.locale;\n      this.monthView.language = this.language.name;\n    }\n    this.shadowRoot?.querySelectorAll(\"[translate-text]\").forEach((textElem) => {\n      textElem.language = this.language.name;\n    });\n  };\n  hideIfAble() {\n    if (!this.expanded && this.popup?.visible) {\n      this.hide();\n    }\n  }\n  get applyBtnEl() {\n    return this.container?.querySelector(\".popup-btn-apply\");\n  }\n  get cancelBtnEl() {\n    return this.container?.querySelector(\".popup-btn-cancel\");\n  }\n  get todayBtnEl() {\n    return this.container?.querySelector(\".btn-today\");\n  }\n  /**\n   * expanded attribute\n   * @returns {boolean} whether the month/year picker expanded or not\n   */\n  get expanded() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED));\n  }\n  /**\n   * Set whether or not the month/year picker should be expanded\n   * @param {string|boolean|null} val expanded attribute value\n   */\n  set expanded(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED, `${boolVal}`);\n      this.expandableArea?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED, `${boolVal}`);\n      this.toolbar?.querySelector(\".monthview-nav\")?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED);\n      this.expandableArea?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.EXPANDED);\n      this.toolbar?.querySelector(\".monthview-nav\")?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.INACTIVE);\n    }\n  }\n  onDisableSettingsChange(val) {\n    if (this.monthView)\n      this.monthView.disableSettings = val;\n  }\n  onLegendSettingsChange(val) {\n    if (this.monthView)\n      this.monthView.legend = val;\n  }\n  /**\n   * Defer to the inner IdsMonthView for getting `rangeSettings` if possible\n   * @returns {IdsRangeSettings} month view range settings\n   */\n  getRangeSettings() {\n    return this.monthView?.rangeSettings || this.rangeSettings;\n  }\n  /**\n   * Defer to the inner IdsMonthView for storing `rangeSettings` if possible\n   * @param {IdsRangeSettings} val incoming range settings\n   */\n  setRangeSettings(val) {\n    if (this.monthView)\n      this.monthView.rangeSettings = val;\n    else\n      this.rangeSettings = val;\n  }\n  onRangeSettingsChange(val) {\n    if (this.monthView) {\n      const btnApply = this.applyBtnEl;\n      this.setRangeSettings(val);\n      if (val?.start && val?.end) {\n        const formattedStart = this.localeAPI.formatDate(this.setTime(val.start), { pattern: this.format });\n        const formattedEnd = this.localeAPI.formatDate(this.setTime(val.end), { pattern: this.format });\n        this.value = `${formattedStart}${val.separator}${formattedEnd}`;\n        if (!val.selectWeek)\n          btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED);\n      } else {\n        if (val?.separator && this.value.indexOf(val?.separator) > -1) {\n          this.value = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.removeDateRange)(this.value, val?.separator);\n        }\n        btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, \"true\");\n      }\n      if (val?.selectWeek) {\n        btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, \"true\");\n      }\n    }\n  }\n  /**\n   * minute-interval attribute\n   * @returns {number} minuteInterval value\n   */\n  get minuteInterval() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToNumber)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MINUTE_INTERVAL));\n  }\n  /**\n   * Set interval in minutes dropdown\n   * @param {string|number|null} val minute-interval attribute value\n   */\n  set minuteInterval(val) {\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToNumber)(val);\n    const timePicker = this.container?.querySelector(\"ids-time-picker\");\n    if (numberVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MINUTE_INTERVAL, `${numberVal}`);\n      timePicker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MINUTE_INTERVAL, `${numberVal}`);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MINUTE_INTERVAL);\n      timePicker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MINUTE_INTERVAL);\n    }\n  }\n  /**\n   * second-interval attribute\n   * @returns {number} secondInterval value\n   */\n  get secondInterval() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToNumber)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SECOND_INTERVAL));\n  }\n  /**\n   * Set interval in seconds dropdown\n   * @param {string|number|null} val second-interval attribute value\n   */\n  set secondInterval(val) {\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToNumber)(val);\n    const timePicker = this.container?.querySelector(\"ids-time-picker\");\n    if (numberVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SECOND_INTERVAL, `${numberVal}`);\n      timePicker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SECOND_INTERVAL, `${numberVal}`);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SECOND_INTERVAL);\n      timePicker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SECOND_INTERVAL);\n    }\n  }\n  /**\n   * show-clear attribute\n   * @returns {boolean} showClear param converted to boolean from attribute value\n   */\n  get showClear() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CLEAR));\n  }\n  /**\n   * Set whether or not to show clear button in the calendar popup\n   * @param {string|boolean|null} val show-clear attribute value\n   */\n  set showClear(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    const btn = this.container?.querySelector(\".popup-btn-clear\");\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CLEAR, boolVal.toString());\n      btn?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CLEAR);\n      btn?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, (!boolVal).toString());\n    }\n  }\n  /**\n   * show-cancel attribute\n   * @returns {boolean} showCancel param converted to boolean from attribute value\n   */\n  get showCancel() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CANCEL));\n  }\n  /**\n   * Set whether or not to show cancel button when the picker is expanded\n   * @param {string|boolean|null} val show-cancel attribute value\n   */\n  set showCancel(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    const btn = this.container?.querySelector(\".popup-btn-cancel\");\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CANCEL, String(boolVal));\n      btn?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_CANCEL);\n      btn?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, (!boolVal).toString());\n    }\n  }\n  /**\n   * show-picklist-year attribute, default is true\n   * @returns {boolean} showPicklistYear param converted to boolean from attribute value\n   */\n  get showPicklistYear() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of years in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-year attribute converted to boolean\n   */\n  set showPicklistYear(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR, String(boolVal));\n    this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR, String(boolVal));\n  }\n  /**\n   * show-picklist-month attribute, default is true\n   * @returns {boolean} showPicklistMonth param converted to boolean from attribute value\n   */\n  get showPicklistMonth() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of months in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-month attribute converted to boolean\n   */\n  set showPicklistMonth(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH, String(boolVal));\n    this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH, String(boolVal));\n  }\n  /**\n   * show-picklist-week attribute\n   * @returns {boolean} showPicklistWeek param converted to boolean from attribute value\n   */\n  get showPicklistWeek() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK));\n  }\n  /**\n   * Whether or not to show week numbers in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-week attribute converted to boolean\n   */\n  set showPicklistWeek(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK, String(boolVal));\n      this.monthYearPicklist?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK, String(boolVal));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK);\n      this.monthYearPicklist?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK);\n    }\n  }\n  /**\n   * use-current-time attribute\n   * @returns {number} useCurrentTime param converted to boolean from attribute value\n   */\n  get useCurrentTime() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_CURRENT_TIME));\n  }\n  /**\n   * Set whether or not to show current time in the time picker\n   * @param {string|boolean|null} val useCurrentTime param value\n   */\n  set useCurrentTime(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_7__.stringToBool)(val);\n    const timePicker = this.container?.querySelector(\"ids-time-picker\");\n    this.updateTimepickerDisplay();\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_CURRENT_TIME, String(boolVal));\n      timePicker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_CURRENT_TIME, String(boolVal));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_CURRENT_TIME);\n      timePicker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_CURRENT_TIME);\n    }\n  }\n  onUseRangeChange(val) {\n    const btnApply = this.applyBtnEl;\n    if (val) {\n      this.monthView?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_RANGE, String(val));\n      btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n      btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, \"true\");\n    } else {\n      this.monthView?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.USE_RANGE);\n      if (!this.expanded)\n        btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, \"true\");\n      btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED);\n    }\n  }\n  #value;\n  /**\n   * value attribute\n   * @returns {string} value param\n   */\n  get value() {\n    return this.#value;\n  }\n  /**\n   * Set Date Picker Popup's stored value. Should parse a date from the value.\n   * @param {string|null} val value param\n   */\n  set value(val) {\n    if (!val) {\n      this.#value = \"\";\n      this.dateValue = null;\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE);\n      return;\n    }\n    let newDate = this.getDateValue(val);\n    if (this.useRange) {\n      const rangeSettings = this.getRangeSettings();\n      const separator = rangeSettings.separator;\n      const [start] = val.split(separator);\n      newDate = this.getDateValue(start.trim());\n    }\n    if (newDate && (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.isValidDate)(newDate)) {\n      this.dateValue = newDate;\n      this.syncDateAttributes(newDate);\n    }\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE, val);\n    this.#value = val;\n  }\n  onPicklistExpand() {\n    const btnApply = this.applyBtnEl;\n    const btnCancel = this.cancelBtnEl;\n    this.monthYearPicklist?.activatePicklist();\n    btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n    btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED);\n    if (this.showCancel) {\n      btnCancel?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n    }\n  }\n  onPicklistCollapse() {\n    if (this.monthYearPicklist?.deactivatePicklist)\n      this.monthYearPicklist?.deactivatePicklist();\n    this.updateActionButtonStateOnShow();\n  }\n  /**\n   * Checks internal component refs based on settings\n   */\n  configureComponents() {\n    this.expandableArea = this.container?.querySelector(\"ids-expandable-area\");\n    this.monthView = this.container?.querySelector(\"ids-month-view\");\n    this.monthYearPicklist = this.container?.querySelector(\"ids-month-year-picklist\");\n    if (this.hasTime()) {\n      this.timepicker = this.container?.querySelector(\"ids-time-picker\");\n      if (this.useCurrentTime)\n        this.setCurrentTime();\n    } else {\n      this.timepicker?.remove();\n      this.timepicker = null;\n    }\n    this.toolbar = this.container?.querySelector(\"ids-toolbar\");\n  }\n  /**\n   * Defers `activeDate` to the inner MonthView's `activeDate` attribute,\n   * otherwise fallback to the one generated by this one's date props\n   * @returns {Date} activeDate from the inner monthView component\n   */\n  getActiveDate() {\n    return this.monthView?.activeDate || this.activeDate;\n  }\n  /**\n   * Expanded/Collapsed event for Month/Year Picklist\n   */\n  attachExpandedListener() {\n    if (this.expandableArea) {\n      this.offEvent(\"afterexpand\");\n      this.onEvent(\"afterexpand\", this.expandableArea, () => {\n        this.onPicklistExpand();\n      });\n      this.offEvent(\"beforecollapse\");\n      this.onEvent(\"beforecollapse\", this.expandableArea, () => {\n        this.onPicklistCollapse();\n      });\n    }\n  }\n  attachEventListeners() {\n    this.offEvent(\"dayselected.date-picker-calendar\");\n    this.onEvent(\"dayselected.date-picker-calendar\", this.monthView, (e) => {\n      this.handleDaySelectedEvent(e);\n    });\n    this.offEvent(\"datechange\");\n    this.onEvent(\"datechange\", this.monthView, (e) => {\n      e.stopPropagation();\n      this.updateMonthYearPickerTriggerDisplay();\n    });\n    this.offEvent(\"click.date-picker-header\");\n    if (this.toolbar) {\n      this.onEvent(\"click.date-picker-header\", this.toolbar, (e) => {\n        const target = e.target;\n        const dropdownBtn = target.closest(\".dropdown-btn\");\n        if (dropdownBtn) {\n          if (!dropdownBtn.disabled) {\n            this.expanded = !this.expanded;\n          }\n          return;\n        }\n        const navBtn = target.closest(\".btn-previous, .btn-next, .btn-today\");\n        if (navBtn) {\n          if (!navBtn.disabled) {\n            if (navBtn.classList.contains(\"btn-next\")) {\n              this.monthView?.changeDate(\"next-month\");\n            } else if (navBtn.classList.contains(\"btn-previous\")) {\n              this.monthView?.changeDate(\"previous-month\");\n            } else if (navBtn.classList.contains(\"btn-today\")) {\n              this.monthView?.changeDate(\"today\");\n              this.setCurrentTime();\n            }\n          }\n        }\n      });\n    }\n    this.offEvent(\"click.date-picker-footer\");\n    this.onEvent(\"click.date-picker-footer\", this.container?.querySelector(\".popup-footer\"), (e) => {\n      const target = e.target;\n      if (!target)\n        return;\n      e.stopPropagation();\n      if (target.closest(\".popup-btn-apply\")) {\n        this.handleApplyEvent(e);\n        return;\n      }\n      if (target.closest(\".popup-btn-clear\")) {\n        this.clear();\n        this.hide(true);\n        return;\n      }\n      if (target.closest(\".popup-btn-cancel\")) {\n        this.expanded = false;\n        this.hide(true);\n      }\n    });\n    if (this.target) {\n      this.offEvent(\"change.date-picker-input\");\n      this.onEvent(\"change.date-picker-input\", this.target, (e) => {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE, e.detail.value);\n      });\n    }\n  }\n  /**\n   * Click to apply button event handler\n   * @param {MouseEvent} e click event\n   */\n  handleApplyEvent(e) {\n    e.stopPropagation();\n    if (!this.monthView)\n      return;\n    if (this.expanded) {\n      this.captureValueFromPicklist();\n      this.updateMonthYearPickerTriggerDisplay();\n      this.expanded = false;\n      return;\n    }\n    const rangeSettings = this.getRangeSettings();\n    if (this.useRange) {\n      if (rangeSettings.end || rangeSettings.start && !rangeSettings.end) {\n        if (rangeSettings.minDays && rangeSettings.start === rangeSettings.end) {\n          rangeSettings.start = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.subtractDate)(rangeSettings.start, rangeSettings.minDays, \"days\");\n          this.setRangeSettings(rangeSettings);\n        }\n        this.value = [\n          this.localeAPI.formatDate(this.setTime(rangeSettings.start), { pattern: this.format }),\n          rangeSettings.separator,\n          this.localeAPI.formatDate(\n            this.setTime(rangeSettings.end ?? this.getActiveDate()),\n            { pattern: this.format }\n          )\n        ].filter(Boolean).join(\"\");\n        this.hide(true);\n        this.triggerSelectedEvent();\n      } else {\n        this.value = this.localeAPI.formatDate(\n          this.setTime(rangeSettings.start ?? this.getActiveDate()),\n          { pattern: this.format }\n        );\n        rangeSettings.start = this.getActiveDate();\n        this.setRangeSettings(rangeSettings);\n      }\n      return;\n    }\n    if (this.target) {\n      this.value = this.localeAPI.formatDate(\n        this.setTime(this.getActiveDate()),\n        { pattern: this.format }\n      );\n    }\n    this.hide(true);\n    this.triggerSelectedEvent();\n  }\n  /**\n   * Clears the contents of the Date Picker Popup and its corresponding target, if applicable\n   * @returns {void}\n   */\n  clear() {\n    this.expanded = false;\n    this.resetRangeSettings();\n    this.value = \"\";\n    this.triggerSelectedEvent();\n  }\n  /**\n   * Selected event handler\n   * @param {IdsDayselectedEvent} e event from the calendar day selection\n   */\n  handleDaySelectedEvent(e) {\n    if (!this.monthView)\n      return;\n    const currentDate = this.dateValue;\n    if (currentDate instanceof Date && (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.isValidDate)(currentDate) && currentDate.getTime() === e.detail.date.getTime()) {\n      this.value = \"\";\n      if (this.monthView.selectDay) {\n        this.monthView.selectDay();\n      }\n      this.triggerSelectedEvent(e);\n      return;\n    }\n    if (this.useRange) {\n      const rangeSettings = this.getRangeSettings();\n      if (rangeSettings.selectWeek) {\n        const fixedDate = this.setTime(e.detail.rangeStart);\n        this.value = [\n          this.localeAPI.formatDate(fixedDate, { pattern: this.format }),\n          rangeSettings.separator,\n          e.detail.rangeEnd && this.localeAPI.formatDate(this.setTime(e.detail.rangeEnd), { pattern: this.format })\n        ].filter(Boolean).join(\"\");\n        e.detail.date = fixedDate;\n        e.detail.value = this.value;\n        this.hide(true);\n        this.triggerSelectedEvent(e);\n        return;\n      }\n      e.stopPropagation();\n      const btnApply = this.applyBtnEl;\n      if (e.detail.rangeStart && e.detail.rangeEnd) {\n        btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED);\n      } else {\n        btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, \"true\");\n      }\n    } else {\n      const fixedDate = this.setTime(e.detail.date);\n      this.value = this.localeAPI.formatDate(\n        fixedDate,\n        { pattern: this.format }\n      );\n      this.year = e.detail.date.getFullYear();\n      this.month = e.detail.date.getMonth();\n      this.day = e.detail.date.getDate();\n      e.detail.date = fixedDate;\n      e.detail.value = this.value;\n      this.hide(true);\n      this.triggerSelectedEvent(e);\n    }\n  }\n  /**\n   * Gets the value from the selected items in the Month/Year Picklist\n   * and sets them in the Date Picker Popup\n   * @returns {void}\n   */\n  captureValueFromPicklist() {\n    if (!this.monthYearPicklist)\n      return;\n    const { month, year } = this.monthYearPicklist;\n    this.year = year;\n    this.month = month;\n    this.value = this.getFormattedDate(this.activeDate);\n  }\n  /**\n   * Defines if the format has hours/minutes/seconds pattern to show time picker\n   * @returns {boolean} whether or not to show time picker\n   */\n  hasTime() {\n    if (!this.format)\n      return false;\n    return this.format.includes(\"h\") || this.format.includes(\"m\") || this.format.includes(\"s\");\n  }\n  /**\n   * Helper to set the date with time from time picker\n   * @param {any} val date to add time values\n   * @returns {Date} date with time values\n   */\n  setTime(val) {\n    const date = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.isValidDate)(val) ? val : new Date(val);\n    const timePicker = this.container?.querySelector(\"ids-time-picker\");\n    if (!this.hasTime() || !timePicker)\n      return date;\n    const hours = timePicker.hours;\n    const minutes = timePicker.minutes;\n    const seconds = timePicker.seconds;\n    const period = timePicker.period;\n    const dayPeriodIndex = this.localeAPI?.calendar().dayPeriods?.indexOf(period);\n    date.setHours((0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.hoursTo24)(hours, dayPeriodIndex), minutes, seconds);\n    return date;\n  }\n  /**\n   * Triggers the same `dayselected` event on the Popup's target element that came from the internal IdsMonthView\n   * @param {IdsDayselectedEvent} [e] optional event handler to pass arguments\n   * @returns {void}\n   */\n  triggerSelectedEvent(e) {\n    let args;\n    if (e)\n      args = e;\n    else {\n      const rangeSettings = this.getRangeSettings();\n      args = {\n        bubbles: true,\n        detail: {\n          elem: this,\n          date: this.getActiveDate(),\n          useRange: this.useRange,\n          rangeStart: this.useRange && rangeSettings.start ? new Date(rangeSettings.start) : null,\n          rangeEnd: this.useRange && rangeSettings.end ? new Date(rangeSettings.end) : null,\n          value: this.value\n        }\n      };\n    }\n    if (this.target) {\n      const event = new CustomEvent(\"dayselected\", args);\n      this.target.dispatchEvent(event);\n    }\n  }\n  /**\n   * Renders or removes an embedded IdsTimePicker component\n   */\n  updateTimepickerDisplay() {\n    const hasTime = this.hasTime();\n    this.container?.classList.toggle(\"has-time\", hasTime);\n    if (hasTime) {\n      if (!this.timepicker) {\n        this.monthView?.insertAdjacentHTML(\"afterend\", this.timepickerTemplate());\n        this.timepicker = this.container?.querySelector(\"ids-time-picker\");\n      }\n    } else {\n      this.timepicker?.remove();\n      this.timepicker = null;\n    }\n  }\n  /**\n   * Removes all button ripples in the component\n   * @returns {void}\n   */\n  removeRipples() {\n    this.buttons?.forEach((button) => {\n      button.removeRipples();\n    });\n  }\n  /**\n   * Takes a string containing a date, or an actual Date object, and syncs its values\n   * to the correct properties provided by IdsDateAttributeMixin\n   * @param {string | Date} val incoming date string/object\n   */\n  syncDateAttributes(val) {\n    let usableValue = val;\n    const rangeSettings = this.getRangeSettings();\n    if (typeof val === \"string\" && this.useRange && rangeSettings.separator) {\n      usableValue = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_6__.removeDateRange)(val, rangeSettings.separator);\n    }\n    const date = new Date(usableValue);\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const day = date.getDate();\n    if (this.year !== year)\n      this.year = year;\n    if (this.month !== month)\n      this.month = month;\n    if (this.day !== day)\n      this.day = day;\n    if (this.hasTime()) {\n      if (this.timepicker)\n        this.timepicker.value = this.value;\n    }\n    if (this.monthView) {\n      if (typeof this.monthView.selectDayFromValue === \"function\") {\n        this.monthView.selectDayFromValue(`${usableValue}`);\n      }\n    }\n    this.updateMonthYearPickerTriggerDisplay();\n  }\n  setCurrentTime() {\n    if (this.timepicker) {\n      this.timepicker.value = this.localeAPI.formatDate(new Date(), { pattern: this.format });\n    }\n  }\n  /**\n   * Helper to format datepicker text in the toolbar\n   * @param {IdsLocale} [locale] an optional, provided IdsLocale object\n   * @param {Date} [date] an optional, provided Date object (defaults to `this.getActiveDate()`)\n   * @returns {string} locale formatted month year\n   */\n  formatMonthText(locale, date) {\n    const targetLocale = locale || this.localeAPI;\n    const targetDate = date || this.getActiveDate();\n    if (!targetLocale)\n      return \"\";\n    const monthKeys = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const month = targetLocale?.translate(`MonthWide${monthKeys[targetDate.getMonth()]}`);\n    return `${month} ${targetDate.getFullYear()}`;\n  }\n  /**\n   * Updates the text contents of the Month/Year Picker's trigger button to reflect current state\n   * @param {IdsLocale} [locale] incoming IdsLocale object, if applicable\n   * @param {Date} [date] an optional, provided Date object (defaults to `this.getActiveDate()`)\n   * @returns {void}\n   */\n  updateMonthYearPickerTriggerDisplay(locale, date) {\n    const formattedDate = this.formatMonthText(locale, date) || \"\";\n    const dropdownEl = this.container?.querySelector(\".dropdown-btn-text\");\n    if (dropdownEl) {\n      dropdownEl.innerText = formattedDate;\n    }\n  }\n  /**\n   * Runs when this picker component hides\n   * @returns {void}\n   */\n  onHide() {\n    this.container?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.TABINDEX, \"-1\");\n    this.expanded = false;\n    this.removeRipples();\n  }\n  /**\n   * Runs when this picker component shows\n   * @returns {void}\n   */\n  onShow() {\n    this.attachEventListeners();\n    this.updateActionButtonStateOnShow();\n    this.container?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.TABINDEX);\n    this.focus();\n  }\n  /**\n   * Updates the Popup's Modal button states\n   */\n  updateActionButtonStateOnShow() {\n    const btnApply = this.applyBtnEl;\n    const rangeSettings = this.getRangeSettings();\n    const hasPartialRangeSelected = !(rangeSettings.start && rangeSettings.end);\n    if (!this.useRange) {\n      if (btnApply) {\n        if (btnApply.removeRipples)\n          btnApply?.removeRipples();\n        btnApply.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, \"true\");\n        btnApply.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, `${hasPartialRangeSelected}`);\n      }\n      if (this.showCancel) {\n        const btnCancel = this.cancelBtnEl;\n        btnCancel?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n      }\n    } else if (!rangeSettings.selectWeek) {\n      btnApply?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN);\n      btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, `${hasPartialRangeSelected}`);\n    } else {\n      btnApply?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.HIDDEN, \"true\");\n    }\n  }\n  /**\n   * Passes through to IdsMonthView to check if a specified date is disabled (not available for choosing)\n   * @param {Date} date the date to check\n   * @returns {boolean} wheter or not the date is disabled\n   */\n  isDisabledByDate(date) {\n    return this.monthView?.isDisabledByDate(date);\n  }\n  /**\n   * Passes focus to the inner MonthView component\n   */\n  focus() {\n    if (this.expanded) {\n      this.monthYearPicklist?.focus();\n    } else {\n      this.monthView?.focus();\n    }\n  }\n};\nIdsDatePickerPopup = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.customElement)(\"ids-date-picker-popup\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.scss)(_ids_date_picker_popup_scss__WEBPACK_IMPORTED_MODULE_18__[\"default\"])\n], IdsDatePickerPopup);\nvar ids_date_picker_popup_default = IdsDatePickerPopup;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0ZS1waWNrZXIvaWRzLWRhdGUtcGlja2VyLXBvcHVwLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDUDtBQUNHO0FBQ0w7QUFDUDtBQUNBO0FBSXBCO0FBQ3NDO0FBR3RDO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBc0JZO0FBS25CLE1BQU0sT0FBTywwRkFBMEI7QUFBMUIsRUFDWCxxR0FBcUI7QUFBckIsSUFDRSxxRkFBYztBQUFkLE1BQ0UsMEVBQWM7QUFBZCxJQUNGO0FBQUEsRUFDRjtBQUNGO0FBWUEsSUFBTSxxQkFBTixjQUFpQyxLQUEwQztBQUFBLEVBQ3pFLGNBQWM7QUFDWixVQUFNO0FBQ04sU0FBSyxTQUFTO0FBQUEsRUFDaEI7QUFBQSxFQUVVO0FBQUEsRUFFQTtBQUFBLEVBRUE7QUFBQSxFQUVBO0FBQUEsRUFFQTtBQUFBLEVBRVYsb0JBQW9CO0FBQ2xCLFVBQU0sa0JBQWtCO0FBQ3hCLFNBQUssb0JBQW9CO0FBQ3pCLFNBQUsscUJBQXFCO0FBQzFCLFNBQUssdUJBQXVCO0FBQUEsRUFDOUI7QUFBQSxFQUVBLHVCQUE2QjtBQUMzQixVQUFNLHVCQUF1QjtBQUM3QixTQUFLLGlCQUFpQjtBQUN0QixTQUFLLFlBQVk7QUFDakIsU0FBSyxvQkFBb0I7QUFDekIsU0FBSyxhQUFhO0FBQ2xCLFNBQUssVUFBVTtBQUFBLEVBQ2pCO0FBQUEsRUFFQSxXQUFXLGFBQTRCO0FBQ3JDLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLE1BQ1QsR0FBRyxrRkFBNkI7QUFBN0IsTUFDSCxxRUFBbUI7QUFBUixJQUNiO0FBQUEsRUFDRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFNQSxXQUFtQjtBQUNqQixXQUFPO0FBQUE7QUFBQSxVQUVELEtBQUssZ0JBQWdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxz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QU8sZ0NBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pZHMtZW50ZXJwcmlzZS13Yy8uL3NyYy9jb21wb25lbnRzL2lkcy1kYXRlLXBpY2tlci9pZHMtZGF0ZS1waWNrZXItcG9wdXAudHM/MTIxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzLCBodG1sQXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCwgc2NzcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuaW1wb3J0IElkc01vbnRoVmlld0F0dHJpYnV0ZU1peGluIGZyb20gJy4uL2lkcy1tb250aC12aWV3L2lkcy1tb250aC12aWV3LWF0dHJpYnV0ZS1taXhpbic7XG5pbXBvcnQgSWRzRGF0ZUF0dHJpYnV0ZU1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtZGF0ZS1hdHRyaWJ1dGUtbWl4aW4vaWRzLWRhdGUtYXR0cmlidXRlLW1peGluJztcbmltcG9ydCBJZHNMb2NhbGVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWxvY2FsZS1taXhpbi9pZHMtbG9jYWxlLW1peGluJztcbmltcG9ydCBJZHNQaWNrZXJQb3B1cCBmcm9tICcuLi9pZHMtcGlja2VyLXBvcHVwL2lkcy1waWNrZXItcG9wdXAnO1xuXG5pbXBvcnQge1xuICBzdWJ0cmFjdERhdGUsIGlzVmFsaWREYXRlLCBob3Vyc1RvMjQsIHJlbW92ZURhdGVSYW5nZVxufSBmcm9tICcuLi8uLi91dGlscy9pZHMtZGF0ZS11dGlscy9pZHMtZGF0ZS11dGlscyc7XG5pbXBvcnQgeyBzdHJpbmdUb0Jvb2wsIHN0cmluZ1RvTnVtYmVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcbmltcG9ydCB7XG4gIElkc0RhdGVQaWNrZXJDb21tb25BdHRyaWJ1dGVzLFxufSBmcm9tICcuL2lkcy1kYXRlLXBpY2tlci1jb21tb24nO1xuXG4vLyBDb21wb25lbnRzXG5pbXBvcnQgJy4vaWRzLW1vbnRoLXllYXItcGlja2xpc3QnO1xuaW1wb3J0ICcuLi9pZHMtYnV0dG9uL2lkcy1idXR0b24nO1xuaW1wb3J0ICcuLi9pZHMtbW9kYWwtYnV0dG9uL2lkcy1tb2RhbC1idXR0b24nO1xuaW1wb3J0ICcuLi9pZHMtZXhwYW5kYWJsZS1hcmVhL2lkcy1leHBhbmRhYmxlLWFyZWEnO1xuaW1wb3J0ICcuLi9pZHMtbW9udGgtdmlldy9pZHMtbW9udGgtdmlldyc7XG5pbXBvcnQgJy4uL2lkcy10aW1lLXBpY2tlci9pZHMtdGltZS1waWNrZXInO1xuaW1wb3J0ICcuLi9pZHMtdG9nZ2xlLWJ1dHRvbi9pZHMtdG9nZ2xlLWJ1dHRvbic7XG5pbXBvcnQgJy4uL2lkcy10b29sYmFyL2lkcy10b29sYmFyJztcbmltcG9ydCAnLi4vaWRzLXRvb2xiYXIvaWRzLXRvb2xiYXItc2VjdGlvbic7XG4vLyBUeXBlc1xuaW1wb3J0IHR5cGUgSWRzQnV0dG9uIGZyb20gJy4uL2lkcy1idXR0b24vaWRzLWJ1dHRvbic7XG5pbXBvcnQgdHlwZSBJZHNFeHBhbmRhYmxlQXJlYSBmcm9tICcuLi9pZHMtZXhwYW5kYWJsZS1hcmVhL2lkcy1leHBhbmRhYmxlLWFyZWEnO1xuaW1wb3J0IHR5cGUgSWRzTG9jYWxlIGZyb20gJy4uL2lkcy1sb2NhbGUvaWRzLWxvY2FsZSc7XG5pbXBvcnQgdHlwZSBJZHNNb2RhbEJ1dHRvbiBmcm9tICcuLi9pZHMtbW9kYWwtYnV0dG9uL2lkcy1tb2RhbC1idXR0b24nO1xuaW1wb3J0IHR5cGUgSWRzTW9udGhWaWV3IGZyb20gJy4uL2lkcy1tb250aC12aWV3L2lkcy1tb250aC12aWV3JztcbmltcG9ydCB0eXBlIElkc01vbnRoWWVhclBpY2tsaXN0IGZyb20gJy4vaWRzLW1vbnRoLXllYXItcGlja2xpc3QnO1xuXG5pbXBvcnQgdHlwZSB7XG4gIElkc1JhbmdlU2V0dGluZ3MsXG4gIElkc1JhbmdlU2V0dGluZ3NJbnRlcmZhY2UsXG4gIElkc0xlZ2VuZFNldHRpbmdzLFxuICBJZHNEaXNhYmxlU2V0dGluZ3Ncbn0gZnJvbSAnLi4vaWRzLW1vbnRoLXZpZXcvaWRzLW1vbnRoLXZpZXctY29tbW9uJztcblxuaW1wb3J0IHR5cGUgeyBJZHNEYXlzZWxlY3RlZEV2ZW50IH0gZnJvbSAnLi4vaWRzLW1vbnRoLXZpZXcvaWRzLW1vbnRoLXZpZXcnO1xuaW1wb3J0IHR5cGUgSWRzVGltZVBpY2tlciBmcm9tICcuLi9pZHMtdGltZS1waWNrZXIvaWRzLXRpbWUtcGlja2VyJztcbmltcG9ydCB0eXBlIElkc1RvZ2dsZUJ1dHRvbiBmcm9tICcuLi9pZHMtdG9nZ2xlLWJ1dHRvbi9pZHMtdG9nZ2xlLWJ1dHRvbic7XG5pbXBvcnQgdHlwZSBJZHNUb29sYmFyIGZyb20gJy4uL2lkcy10b29sYmFyL2lkcy10b29sYmFyJztcbmltcG9ydCB0eXBlIElkc1Rvb2xiYXJTZWN0aW9uIGZyb20gJy4uL2lkcy10b29sYmFyL2lkcy10b29sYmFyLXNlY3Rpb24nO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaWRzLWRhdGUtcGlja2VyLXBvcHVwLnNjc3MnO1xuaW1wb3J0IElkc1RleHQgZnJvbSAnLi4vaWRzLXRleHQvaWRzLXRleHQnO1xuXG50eXBlIElkc0RhdGVQaWNrZXJQb3B1cEJ1dHRvbiA9IElkc1RvZ2dsZUJ1dHRvbiB8IElkc01vZGFsQnV0dG9uIHwgSWRzQnV0dG9uO1xuXG5jb25zdCBCYXNlID0gSWRzTW9udGhWaWV3QXR0cmlidXRlTWl4aW4oXG4gIElkc0RhdGVBdHRyaWJ1dGVNaXhpbihcbiAgICBJZHNMb2NhbGVNaXhpbihcbiAgICAgIElkc1BpY2tlclBvcHVwXG4gICAgKVxuICApXG4pO1xuXG4vKipcbiAqIElEUyBEYXRlIFBpY2tlciBQb3B1cCBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNEYXRlUGlja2VyUG9wdXB9XG4gKiBAaW5oZXJpdHMgSWRzUGlja2VyUG9wdXBcbiAqIEBtaXhlcyBJZHNEYXRlQXR0cmlidXRlTWl4aW5cbiAqIEBtaXhlcyBJZHNMb2NhbGVNaXhpblxuICogQG1peGVzIElkc01vbnRoVmlld0F0dHJpYnV0ZU1peGluXG4gKi9cbkBjdXN0b21FbGVtZW50KCdpZHMtZGF0ZS1waWNrZXItcG9wdXAnKVxuQHNjc3Moc3R5bGVzKVxuY2xhc3MgSWRzRGF0ZVBpY2tlclBvcHVwIGV4dGVuZHMgQmFzZSBpbXBsZW1lbnRzIElkc1JhbmdlU2V0dGluZ3NJbnRlcmZhY2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3ZhbHVlID0gJyc7XG4gIH1cblxuICBwcm90ZWN0ZWQgZXhwYW5kYWJsZUFyZWE6IElkc0V4cGFuZGFibGVBcmVhIHwgbnVsbCB8IHVuZGVmaW5lZDtcblxuICBwcm90ZWN0ZWQgbW9udGhWaWV3OiBJZHNNb250aFZpZXcgfCBudWxsIHwgdW5kZWZpbmVkO1xuXG4gIHByb3RlY3RlZCBtb250aFllYXJQaWNrbGlzdDogSWRzTW9udGhZZWFyUGlja2xpc3QgfCBudWxsIHwgdW5kZWZpbmVkO1xuXG4gIHByb3RlY3RlZCB0aW1lcGlja2VyOiBJZHNUaW1lUGlja2VyIHwgbnVsbCB8IHVuZGVmaW5lZDtcblxuICBwcm90ZWN0ZWQgdG9vbGJhcjogSWRzVG9vbGJhciB8IG51bGwgfCB1bmRlZmluZWQ7XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICB0aGlzLmNvbmZpZ3VyZUNvbXBvbmVudHMoKTtcbiAgICB0aGlzLmF0dGFjaEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5hdHRhY2hFeHBhbmRlZExpc3RlbmVyKCk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpOiB2b2lkIHtcbiAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaz8uKCk7XG4gICAgdGhpcy5leHBhbmRhYmxlQXJlYSA9IG51bGw7XG4gICAgdGhpcy5tb250aFZpZXcgPSBudWxsO1xuICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3QgPSBudWxsO1xuICAgIHRoaXMudGltZXBpY2tlciA9IG51bGw7XG4gICAgdGhpcy50b29sYmFyID0gbnVsbDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYXR0cmlidXRlcygpOiBBcnJheTxzdHJpbmc+IHtcbiAgICByZXR1cm4gW1xuICAgICAgLi4uc3VwZXIuYXR0cmlidXRlcyxcbiAgICAgIC4uLklkc0RhdGVQaWNrZXJDb21tb25BdHRyaWJ1dGVzLFxuICAgICAgYXR0cmlidXRlcy5FWFBBTkRFRFxuICAgIF07XG4gIH1cblxuICAvKipcbiAgICogSW5uZXIgdGVtcGxhdGUgY29udGVudHNcbiAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHRlbXBsYXRlXG4gICAqL1xuICB0ZW1wbGF0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgPGlkcy1wb3B1cCBjbGFzcz1cImlkcy1kYXRlLXBpY2tlci1wb3B1cFwiIHR5cGU9XCJtZW51XCIgYWxpZ249XCJib3R0b20sIGxlZnRcIiBhcnJvdz1cImJvdHRvbVwiIHRhYkluZGV4PVwiLTFcIiBhbmltYXRlZD5cbiAgICAgIDxzbG90IHNsb3Q9XCJjb250ZW50XCIgbmFtZT1cInRvb2xiYXJcIj5cbiAgICAgICAgJHt0aGlzLnRvb2xiYXJUZW1wbGF0ZSgpfVxuICAgICAgPC9zbG90PlxuICAgICAgPGRpdiBjbGFzcz1cImlkcy1kYXRlLXBpY2tlci1jb250ZW50XCIgc2xvdD1cImNvbnRlbnRcIj5cbiAgICAgICAgPGlkcy1leHBhbmRhYmxlLWFyZWFcbiAgICAgICAgICBleHBhbmQtc3R5bGU9XCJmaWxsXCJcbiAgICAgICAgICBleHBhbmRlZD1cIiR7dGhpcy5leHBhbmRlZH1cIlxuICAgICAgICA+XG4gICAgICAgICAgPGlkcy1tb250aC15ZWFyLXBpY2tsaXN0XG4gICAgICAgICAgICBzbG90PVwicGFuZVwiXG4gICAgICAgICAgICAke3RoaXMuc2hvd1BpY2tsaXN0WWVhciA/ICdzaG93LXBpY2tsaXN0LXllYXI9XCJ0cnVlXCInIDogJyd9PjwvaWRzLW1vbnRoLXllYXItcGlja2xpc3Q+XG4gICAgICAgIDwvaWRzLWV4cGFuZGFibGUtYXJlYT5cbiAgICAgICAgPGlkcy1tb250aC12aWV3XG4gICAgICAgICAgY29tcGFjdD1cInRydWVcIlxuICAgICAgICAgIGlzLWRhdGUtcGlja2VyPVwidHJ1ZVwiXG4gICAgICAgICAgc2hvdy10b2RheT0ke3RoaXMuc2hvd1RvZGF5fVxuICAgICAgICAgIGZpcnN0LWRheS1vZi13ZWVrPVwiJHt0aGlzLmZpcnN0RGF5T2ZXZWVrfVwiXG4gICAgICAgICAgeWVhcj1cIiR7dGhpcy55ZWFyfVwiXG4gICAgICAgICAgbW9udGg9XCIke3RoaXMubW9udGh9XCJcbiAgICAgICAgICBkYXk9XCIke3RoaXMuZGF5fVwiXG4gICAgICAgICAgdXNlLXJhbmdlPVwiJHt0aGlzLnVzZVJhbmdlfVwiXG4gICAgICAgID48L2lkcy1tb250aC12aWV3PlxuICAgICAgJHt0aGlzLmhhc1RpbWUoKSA/IHRoaXMudGltZXBpY2tlclRlbXBsYXRlKCkgOiAnJ31cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdlxuICAgICAgICBzbG90PVwiY29udGVudFwiXG4gICAgICAgIGNsYXNzPVwicG9wdXAtZm9vdGVyXCJcbiAgICAgICAgcGFydD1cImZvb3RlclwiPlxuICAgICAgICA8aWRzLW1vZGFsLWJ1dHRvbiBjbGFzcz1cInBvcHVwLWJ0biBwb3B1cC1idG4tY2FuY2VsXCIgY2FuY2VsICR7dGhpcy5zaG93Q2FuY2VsID8gJycgOiAnIGhpZGRlbid9PlxuICAgICAgICAgIDxpZHMtdGV4dCB0cmFuc2xhdGUtdGV4dD1cInRydWVcIiBmb250LXdlaWdodD1cImJvbGRcIiBwYXJ0PVwiYnRuLWNhbmNlbFwiPkNhbmNlbDwvaWRzLXRleHQ+XG4gICAgICAgIDwvaWRzLW1vZGFsLWJ1dHRvbj5cbiAgICAgICAgPGlkcy1tb2RhbC1idXR0b24gY2xhc3M9XCJwb3B1cC1idG4gcG9wdXAtYnRuLWNsZWFyXCIgcGFydD1cImJ0bi1jbGVhclwiICR7dGhpcy5zaG93Q2xlYXIgPyAnJyA6ICcgaGlkZGVuJ30+XG4gICAgICAgICAgPGlkcy10ZXh0IHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiIGZvbnQtd2VpZ2h0PVwiYm9sZFwiPkNsZWFyPC9pZHMtdGV4dD5cbiAgICAgICAgPC9pZHMtbW9kYWwtYnV0dG9uPlxuICAgICAgICA8aWRzLW1vZGFsLWJ1dHRvbiBjbGFzcz1cInBvcHVwLWJ0biBwb3B1cC1idG4tYXBwbHlcIiR7dGhpcy51c2VSYW5nZSB8fCB0aGlzLmV4cGFuZGVkID8gJyBkaXNhYmxlZCcgOiAnIGhpZGRlbid9IHBhcnQ9XCJidG4tYXBwbHlcIiBhcHBlYXJhbmNlPVwicHJpbWFyeVwiPlxuICAgICAgICAgIDxpZHMtdGV4dCB0cmFuc2xhdGUtdGV4dD1cInRydWVcIiBmb250LXdlaWdodD1cImJvbGRcIj5BcHBseTwvaWRzLXRleHQ+XG4gICAgICAgIDwvaWRzLW1vZGFsLWJ1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvaWRzLXBvcHVwPmA7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybnMge3N0cmluZ30gY29udGFpbmluZyB0aGUgaW5uZXIgVGltZXBpY2tlcidzIHRlbXBsYXRlXG4gICAqL1xuICBwcml2YXRlIHRpbWVwaWNrZXJUZW1wbGF0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgXG4gICAgICA8aWRzLXRpbWUtcGlja2VyXG4gICAgICAgIGVtYmVkZGFibGU9XCJ0cnVlXCJcbiAgICAgICAgdmFsdWU9XCIke3RoaXMudmFsdWV9XCJcbiAgICAgICAgZm9ybWF0PVwiJHt0aGlzLmZvcm1hdH1cIlxuICAgICAgICBtaW51dGUtaW50ZXJ2YWw9XCIke3RoaXMubWludXRlSW50ZXJ2YWx9XCJcbiAgICAgICAgc2Vjb25kLWludGVydmFsPVwiJHt0aGlzLnNlY29uZEludGVydmFsfVwiXG4gICAgICAgIHVzZS1jdXJyZW50LXRpbWU9XCIke3RoaXMudXNlQ3VycmVudFRpbWV9XCJcbiAgICAgID48L2lkcy10aW1lLXBpY2tlcj5cbiAgICBgO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IGNvbnRhaW5pbmcgdGhlIGlubmVyIFRvb2xiYXIncyB0ZW1wbGF0ZVxuICAgKi9cbiAgcHJpdmF0ZSB0b29sYmFyVGVtcGxhdGUoKTogc3RyaW5nIHtcbiAgICBjb25zdCBwcmV2TmV4dEJ0biA9IGA8aWRzLWJ1dHRvbiBjbGFzcz1cImJ0bi1wcmV2aW91c1wiPlxuICAgICAgPGlkcy10ZXh0IGF1ZGlibGU9XCJ0cnVlXCIgdHJhbnNsYXRlLXRleHQ9XCJ0cnVlXCI+UHJldmlvdXNNb250aDwvaWRzLXRleHQ+XG4gICAgICA8aWRzLWljb24gaWNvbj1cImNoZXZyb24tbGVmdFwiPjwvaWRzLWljb24+XG4gICAgPC9pZHMtYnV0dG9uPlxuICAgIDxpZHMtYnV0dG9uIGNsYXNzPVwiYnRuLW5leHRcIj5cbiAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPk5leHRNb250aDwvaWRzLXRleHQ+XG4gICAgICA8aWRzLWljb24gaWNvbj1cImNoZXZyb24tcmlnaHRcIj48L2lkcy1pY29uPlxuICAgIDwvaWRzLWJ1dHRvbj5gO1xuICAgIGNvbnN0IHRvZGF5QnRuID0gdGhpcy5zaG93VG9kYXkgPyBgPGlkcy1idXR0b24gY3NzLWNsYXNzPVwibm8tcGFkZGluZ1wiIGNsYXNzPVwiYnRuLXRvZGF5XCI+XG4gICAgICA8aWRzLXRleHRcbiAgICAgICAgY2xhc3M9XCJidG4tdG9kYXktdGV4dFwiXG4gICAgICAgIGZvbnQtc2l6ZT1cIjE2XCJcbiAgICAgICAgdHJhbnNsYXRlLXRleHQ9XCJ0cnVlXCJcbiAgICAgICAgZm9udC13ZWlnaHQ9XCJib2xkXCJcbiAgICAgID5Ub2RheTwvaWRzLXRleHQ+XG4gICAgPC9pZHMtYnV0dG9uPmAgOiAnJztcblxuICAgIHJldHVybiBgPGlkcy10b29sYmFyIGNsYXNzPVwibW9udGgtdmlldy1oZWFkZXJcIiB0YWJiYWJsZT1cInRydWVcIj5cbiAgICAgIDxpZHMtdG9vbGJhci1zZWN0aW9uIGZhdm9yPlxuICAgICAgICA8aWRzLXRvZ2dsZS1idXR0b24gaWQ9XCJtb250aC15ZWFyLXZpZXctdHJpZ2dlclwiIGljb24tb2ZmPVwiZHJvcGRvd25cIiBpY29uLW9uPVwiZHJvcGRvd25cIiBpY29uPVwiZHJvcGRvd25cIiBpY29uLWFsaWduPVwiZW5kXCIgbm8tcGFkZGluZyBjbGFzcz1cImRyb3Bkb3duLWJ0blwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPkRhdGVQaWNrZXJUcmlnZ2VyQnV0dG9uPC9pZHMtdGV4dD5cbiAgICAgICAgICA8aWRzLXRleHQgY2xhc3M9XCJkcm9wZG93bi1idG4tdGV4dFwiIGZvbnQtc2l6ZT1cIjIwXCI+JHt0aGlzLmZvcm1hdE1vbnRoVGV4dCgpfTwvaWRzLXRleHQ+XG4gICAgICAgICAgPGlkcy1pY29uIGljb249XCJkcm9wZG93blwiIGNsYXNzPVwiZHJvcGRvd24tYnRuLWljb25cIj48L2lkcy1pY29uPlxuICAgICAgICA8L2lkcy10b2dnbGUtYnV0dG9uPlxuICAgICAgPC9pZHMtdG9vbGJhci1zZWN0aW9uPlxuICAgICAgPGlkcy10b29sYmFyLXNlY3Rpb24gY2xhc3M9XCJ0b29sYmFyLWJ1dHRvbnNldCBtb250aHZpZXctbmF2XCIgYWxpZ249XCJlbmRcIiB0eXBlPVwiZmx1aWRcIiR7dGhpcy5leHBhbmRlZCA/ICcgaW5hY3RpdmUnIDogJyd9PlxuICAgICAgICAke3RvZGF5QnRufVxuICAgICAgICAke3ByZXZOZXh0QnRufVxuICAgICAgPC9pZHMtdG9vbGJhci1zZWN0aW9uPlxuICAgIDwvaWRzLXRvb2xiYXI+YDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7QXJyYXk8c3RyaW5nPn0gRGF0ZSBQaWNrZXIgdmV0b2FibGUgZXZlbnRzXG4gICAqL1xuICB2ZXRvYWJsZUV2ZW50VHlwZXM6IEFycmF5PHN0cmluZz4gPSBbJ2JlZm9yZXNob3cnXTtcblxuICAvKipcbiAgICogQHJlYWRvbmx5XG4gICAqIEByZXR1cm5zIHtOb2RlTGlzdDxJZHNEYXRlUGlja2VyUG9wdXBCdXR0b24+fSBjb250YWluaW5nIGFsbCBidXR0b25zIGluIHRoZSBEYXRlIFBpY2tlciBQb3B1cFxuICAgKi9cbiAgZ2V0IGJ1dHRvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yQWxsPElkc0RhdGVQaWNrZXJQb3B1cEJ1dHRvbj4oJ2lkcy1idXR0b24sIGlkcy1tb2RhbC1idXR0b24sIGlkcy10b2dnbGUtYnV0dG9uJyk7XG4gIH1cblxuICAvKipcbiAgICogc2hvdy10b2RheSBhdHRyaWJ1dGVcbiAgICogQHJldHVybnMge2Jvb2xlYW59IHNob3dUb2RheSBwYXJhbSBjb252ZXJ0ZWQgdG8gYm9vbGVhbiBmcm9tIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgZ2V0IHNob3dUb2RheSgpOiBib29sZWFuIHtcbiAgICBjb25zdCBhdHRyVmFsID0gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1RPREFZKTtcblxuICAgIC8vIHRydWUgYnkgZGVmYXVsdCBpZiBubyBhdHRyaWJ1dGVcbiAgICByZXR1cm4gYXR0clZhbCAhPT0gbnVsbCA/IHN0cmluZ1RvQm9vbChhdHRyVmFsKSA6IHRydWU7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHdoZXRoZXIgb3Igbm90IG1vbnRoIHZpZXcgdG9kYXkgYnV0dG9uIHNob3VsZCBiZSBzaG93XG4gICAqIEBwYXJhbSB7c3RyaW5nfGJvb2xlYW58bnVsbH0gdmFsIHNob3ctdG9kYXkgYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBzZXQgc2hvd1RvZGF5KHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBkb1Nob3cgPSBzdHJpbmdUb0Jvb2wodmFsKTtcbiAgICBpZiAoZG9TaG93KSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfVE9EQVksICd0cnVlJyk7XG4gICAgICB0aGlzLnRvZGF5QnRuRWw/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19UT0RBWSwgJ2ZhbHNlJyk7XG4gICAgICB0aGlzLnRvZGF5QnRuRWw/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTiwgJ3RydWUnKTtcbiAgICB9XG4gIH1cblxuICBvbkZpcnN0RGF5T2ZXZWVrQ2hhbmdlKG5ld1ZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLm1vbnRoVmlldz8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRklSU1RfREFZX09GX1dFRUssIGAke25ld1ZhbHVlfWApO1xuICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkZJUlNUX0RBWV9PRl9XRUVLLCBgJHtuZXdWYWx1ZX1gKTtcbiAgfVxuXG4gIG9uTW9udGhDaGFuZ2UobmV3VmFsdWU6IG51bWJlciwgaXNWYWxpZDogYm9vbGVhbikge1xuICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICB0aGlzLm1vbnRoVmlldz8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTU9OVEgsIGAke25ld1ZhbHVlfWApO1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdD8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTU9OVEgsIGAke25ld1ZhbHVlfWApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLm1vbnRoVmlldz8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuTU9OVEgpO1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdD8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuTU9OVEgpO1xuICAgIH1cbiAgfVxuXG4gIG9uWWVhckNoYW5nZShuZXdWYWx1ZTogbnVtYmVyLCBpc1ZhbGlkOiBib29sZWFuKSB7XG4gICAgaWYgKGlzVmFsaWQpIHtcbiAgICAgIHRoaXMubW9udGhWaWV3Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ZRUFSLCBgJHtuZXdWYWx1ZX1gKTtcbiAgICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLk1PTlRILCBgJHtuZXdWYWx1ZX1gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5tb250aFZpZXc/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLllFQVIpO1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdD8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuWUVBUik7XG4gICAgfVxuICB9XG5cbiAgb25EYXlDaGFuZ2UobmV3VmFsdWU6IG51bWJlciwgaXNWYWxpZDogYm9vbGVhbikge1xuICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICB0aGlzLm1vbnRoVmlldz8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuREFZLCBgJHtuZXdWYWx1ZX1gKTtcbiAgICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkRBWSwgYCR7bmV3VmFsdWV9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubW9udGhWaWV3Py5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5EQVkpO1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdD8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuREFZKTtcbiAgICB9XG4gIH1cblxuICBvbkZvcm1hdENoYW5nZSgpIHtcbiAgICBpZiAoIXRoaXMuY29udGFpbmVyKSByZXR1cm47XG4gICAgaWYgKHRoaXMubW9udGhWaWV3KSB0aGlzLm1vbnRoVmlldy5mb3JtYXQgPSB0aGlzLmZvcm1hdDtcbiAgICBpZiAodGhpcy50aW1lcGlja2VyKSB0aGlzLnRpbWVwaWNrZXIuZm9ybWF0ID0gdGhpcy5mb3JtYXQ7XG4gICAgdGhpcy51cGRhdGVUaW1lcGlja2VyRGlzcGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SWRzTG9jYWxlfSBsb2NhbGUgdGhlIG5ldyBsb2NhbGUgb2JqZWN0XG4gICAqL1xuICBvbkxvY2FsZUNoYW5nZSA9IChsb2NhbGU6IElkc0xvY2FsZSB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIHRoaXMudXBkYXRlTW9udGhZZWFyUGlja2VyVHJpZ2dlckRpc3BsYXkobG9jYWxlKTtcbiAgICBpZiAodGhpcy5tb250aFllYXJQaWNrbGlzdCkge1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdC5sb2NhbGUgPSB0aGlzLmxvY2FsZTtcbiAgICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3QubGFuZ3VhZ2UgPSB0aGlzLmxhbmd1YWdlLm5hbWU7XG4gICAgfVxuICAgIGlmICh0aGlzLm1vbnRoVmlldykge1xuICAgICAgdGhpcy5tb250aFZpZXcubG9jYWxlID0gdGhpcy5sb2NhbGU7XG4gICAgICB0aGlzLm1vbnRoVmlldy5sYW5ndWFnZSA9IHRoaXMubGFuZ3VhZ2UubmFtZTtcbiAgICB9XG4gICAgdGhpcy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yQWxsKCdbdHJhbnNsYXRlLXRleHRdJykuZm9yRWFjaCgodGV4dEVsZW06IEVsZW1lbnQpID0+IHtcbiAgICAgICh0ZXh0RWxlbSBhcyBJZHNUZXh0KS5sYW5ndWFnZSA9IHRoaXMubGFuZ3VhZ2UubmFtZTtcbiAgICB9KTtcbiAgfTtcblxuICBoaWRlSWZBYmxlKCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5leHBhbmRlZCAmJiB0aGlzLnBvcHVwPy52aXNpYmxlKSB7XG4gICAgICB0aGlzLmhpZGUoKTtcbiAgICB9XG4gIH1cblxuICBnZXQgYXBwbHlCdG5FbCgpOiBJZHNNb2RhbEJ1dHRvbiB8IG51bGwgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcjxJZHNNb2RhbEJ1dHRvbj4oJy5wb3B1cC1idG4tYXBwbHknKTtcbiAgfVxuXG4gIGdldCBjYW5jZWxCdG5FbCgpOiBJZHNNb2RhbEJ1dHRvbiB8IG51bGwgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcjxJZHNNb2RhbEJ1dHRvbj4oJy5wb3B1cC1idG4tY2FuY2VsJyk7XG4gIH1cblxuICBnZXQgdG9kYXlCdG5FbCgpOiBJZHNCdXR0b24gfCBudWxsIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3I8SWRzQnV0dG9uPignLmJ0bi10b2RheScpO1xuICB9XG5cbiAgLyoqXG4gICAqIGV4cGFuZGVkIGF0dHJpYnV0ZVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gd2hldGhlciB0aGUgbW9udGgveWVhciBwaWNrZXIgZXhwYW5kZWQgb3Igbm90XG4gICAqL1xuICBnZXQgZXhwYW5kZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkVYUEFOREVEKSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHdoZXRoZXIgb3Igbm90IHRoZSBtb250aC95ZWFyIHBpY2tlciBzaG91bGQgYmUgZXhwYW5kZWRcbiAgICogQHBhcmFtIHtzdHJpbmd8Ym9vbGVhbnxudWxsfSB2YWwgZXhwYW5kZWQgYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBzZXQgZXhwYW5kZWQodmFsOiBzdHJpbmcgfCBib29sZWFuIHwgbnVsbCkge1xuICAgIGNvbnN0IGJvb2xWYWwgPSBzdHJpbmdUb0Jvb2wodmFsKTtcbiAgICBpZiAoYm9vbFZhbCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5FWFBBTkRFRCwgYCR7Ym9vbFZhbH1gKTtcbiAgICAgIHRoaXMuZXhwYW5kYWJsZUFyZWE/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkVYUEFOREVELCBgJHtib29sVmFsfWApO1xuICAgICAgdGhpcy50b29sYmFyPy5xdWVyeVNlbGVjdG9yPElkc1Rvb2xiYXJTZWN0aW9uPignLm1vbnRodmlldy1uYXYnKT8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuSU5BQ1RJVkUsICd0cnVlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRVhQQU5ERUQpO1xuICAgICAgdGhpcy5leHBhbmRhYmxlQXJlYT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRVhQQU5ERUQpO1xuICAgICAgdGhpcy50b29sYmFyPy5xdWVyeVNlbGVjdG9yPElkc1Rvb2xiYXJTZWN0aW9uPignLm1vbnRodmlldy1uYXYnKT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuSU5BQ1RJVkUpO1xuICAgIH1cbiAgfVxuXG4gIG9uRGlzYWJsZVNldHRpbmdzQ2hhbmdlKHZhbDogSWRzRGlzYWJsZVNldHRpbmdzKSB7XG4gICAgaWYgKHRoaXMubW9udGhWaWV3KSB0aGlzLm1vbnRoVmlldy5kaXNhYmxlU2V0dGluZ3MgPSB2YWw7XG4gIH1cblxuICBvbkxlZ2VuZFNldHRpbmdzQ2hhbmdlKHZhbDogSWRzTGVnZW5kU2V0dGluZ3MpIHtcbiAgICBpZiAodGhpcy5tb250aFZpZXcpIHRoaXMubW9udGhWaWV3LmxlZ2VuZCA9IHZhbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZlciB0byB0aGUgaW5uZXIgSWRzTW9udGhWaWV3IGZvciBnZXR0aW5nIGByYW5nZVNldHRpbmdzYCBpZiBwb3NzaWJsZVxuICAgKiBAcmV0dXJucyB7SWRzUmFuZ2VTZXR0aW5nc30gbW9udGggdmlldyByYW5nZSBzZXR0aW5nc1xuICAgKi9cbiAgZ2V0UmFuZ2VTZXR0aW5ncygpOiBJZHNSYW5nZVNldHRpbmdzIHtcbiAgICByZXR1cm4gdGhpcy5tb250aFZpZXc/LnJhbmdlU2V0dGluZ3MgfHwgdGhpcy5yYW5nZVNldHRpbmdzO1xuICB9XG5cbiAgLyoqXG4gICAqIERlZmVyIHRvIHRoZSBpbm5lciBJZHNNb250aFZpZXcgZm9yIHN0b3JpbmcgYHJhbmdlU2V0dGluZ3NgIGlmIHBvc3NpYmxlXG4gICAqIEBwYXJhbSB7SWRzUmFuZ2VTZXR0aW5nc30gdmFsIGluY29taW5nIHJhbmdlIHNldHRpbmdzXG4gICAqL1xuICBzZXRSYW5nZVNldHRpbmdzKHZhbDogSWRzUmFuZ2VTZXR0aW5ncykge1xuICAgIGlmICh0aGlzLm1vbnRoVmlldykgdGhpcy5tb250aFZpZXcucmFuZ2VTZXR0aW5ncyA9IHZhbDtcbiAgICBlbHNlIHRoaXMucmFuZ2VTZXR0aW5ncyA9IHZhbDtcbiAgfVxuXG4gIG9uUmFuZ2VTZXR0aW5nc0NoYW5nZSh2YWw6IElkc1JhbmdlU2V0dGluZ3MpIHtcbiAgICBpZiAodGhpcy5tb250aFZpZXcpIHtcbiAgICAgIGNvbnN0IGJ0bkFwcGx5ID0gdGhpcy5hcHBseUJ0bkVsO1xuICAgICAgdGhpcy5zZXRSYW5nZVNldHRpbmdzKHZhbCk7XG5cbiAgICAgIGlmICh2YWw/LnN0YXJ0ICYmIHZhbD8uZW5kKSB7XG4gICAgICAgIGNvbnN0IGZvcm1hdHRlZFN0YXJ0ID0gdGhpcy5sb2NhbGVBUEkuZm9ybWF0RGF0ZSh0aGlzLnNldFRpbWUodmFsLnN0YXJ0KSwgeyBwYXR0ZXJuOiB0aGlzLmZvcm1hdCB9KTtcbiAgICAgICAgY29uc3QgZm9ybWF0dGVkRW5kID0gdGhpcy5sb2NhbGVBUEkuZm9ybWF0RGF0ZSh0aGlzLnNldFRpbWUodmFsLmVuZCksIHsgcGF0dGVybjogdGhpcy5mb3JtYXQgfSk7XG4gICAgICAgIHRoaXMudmFsdWUgPSBgJHtmb3JtYXR0ZWRTdGFydH0ke3ZhbC5zZXBhcmF0b3J9JHtmb3JtYXR0ZWRFbmR9YDtcbiAgICAgICAgaWYgKCF2YWwuc2VsZWN0V2VlaykgYnRuQXBwbHk/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkRJU0FCTEVEKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh2YWw/LnNlcGFyYXRvciAmJiB0aGlzLnZhbHVlLmluZGV4T2YodmFsPy5zZXBhcmF0b3IpID4gLTEpIHtcbiAgICAgICAgICB0aGlzLnZhbHVlID0gcmVtb3ZlRGF0ZVJhbmdlKHRoaXMudmFsdWUsIHZhbD8uc2VwYXJhdG9yKTtcbiAgICAgICAgfVxuICAgICAgICBidG5BcHBseT8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQsICd0cnVlJyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWw/LnNlbGVjdFdlZWspIHtcbiAgICAgICAgYnRuQXBwbHk/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTiwgJ3RydWUnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogbWludXRlLWludGVydmFsIGF0dHJpYnV0ZVxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSBtaW51dGVJbnRlcnZhbCB2YWx1ZVxuICAgKi9cbiAgZ2V0IG1pbnV0ZUludGVydmFsKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHN0cmluZ1RvTnVtYmVyKHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuTUlOVVRFX0lOVEVSVkFMKSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IGludGVydmFsIGluIG1pbnV0ZXMgZHJvcGRvd25cbiAgICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfG51bGx9IHZhbCBtaW51dGUtaW50ZXJ2YWwgYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBzZXQgbWludXRlSW50ZXJ2YWwodmFsOiBzdHJpbmcgfCBudW1iZXIgfCBudWxsKSB7XG4gICAgY29uc3QgbnVtYmVyVmFsID0gc3RyaW5nVG9OdW1iZXIodmFsKTtcbiAgICBjb25zdCB0aW1lUGlja2VyID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJ2lkcy10aW1lLXBpY2tlcicpO1xuXG4gICAgaWYgKG51bWJlclZhbCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5NSU5VVEVfSU5URVJWQUwsIGAke251bWJlclZhbH1gKTtcbiAgICAgIHRpbWVQaWNrZXI/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLk1JTlVURV9JTlRFUlZBTCwgYCR7bnVtYmVyVmFsfWApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLk1JTlVURV9JTlRFUlZBTCk7XG4gICAgICB0aW1lUGlja2VyPy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5NSU5VVEVfSU5URVJWQUwpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBzZWNvbmQtaW50ZXJ2YWwgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IHNlY29uZEludGVydmFsIHZhbHVlXG4gICAqL1xuICBnZXQgc2Vjb25kSW50ZXJ2YWwoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gc3RyaW5nVG9OdW1iZXIodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TRUNPTkRfSU5URVJWQUwpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgaW50ZXJ2YWwgaW4gc2Vjb25kcyBkcm9wZG93blxuICAgKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ8bnVsbH0gdmFsIHNlY29uZC1pbnRlcnZhbCBhdHRyaWJ1dGUgdmFsdWVcbiAgICovXG4gIHNldCBzZWNvbmRJbnRlcnZhbCh2YWw6IHN0cmluZyB8IG51bWJlciB8IG51bGwpIHtcbiAgICBjb25zdCBudW1iZXJWYWwgPSBzdHJpbmdUb051bWJlcih2YWwpO1xuICAgIGNvbnN0IHRpbWVQaWNrZXIgPSB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcignaWRzLXRpbWUtcGlja2VyJyk7XG5cbiAgICBpZiAobnVtYmVyVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNFQ09ORF9JTlRFUlZBTCwgYCR7bnVtYmVyVmFsfWApO1xuICAgICAgdGltZVBpY2tlcj8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0VDT05EX0lOVEVSVkFMLCBgJHtudW1iZXJWYWx9YCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0VDT05EX0lOVEVSVkFMKTtcbiAgICAgIHRpbWVQaWNrZXI/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNFQ09ORF9JTlRFUlZBTCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctY2xlYXIgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBzaG93Q2xlYXIgcGFyYW0gY29udmVydGVkIHRvIGJvb2xlYW4gZnJvbSBhdHRyaWJ1dGUgdmFsdWVcbiAgICovXG4gIGdldCBzaG93Q2xlYXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfQ0xFQVIpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgd2hldGhlciBvciBub3QgdG8gc2hvdyBjbGVhciBidXR0b24gaW4gdGhlIGNhbGVuZGFyIHBvcHVwXG4gICAqIEBwYXJhbSB7c3RyaW5nfGJvb2xlYW58bnVsbH0gdmFsIHNob3ctY2xlYXIgYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBzZXQgc2hvd0NsZWFyKHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgY29uc3QgYnRuID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1idG4tY2xlYXInKTtcblxuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfQ0xFQVIsIGJvb2xWYWwudG9TdHJpbmcoKSk7XG4gICAgICBidG4/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19DTEVBUik7XG4gICAgICBidG4/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTiwgKCFib29sVmFsKS50b1N0cmluZygpKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogc2hvdy1jYW5jZWwgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBzaG93Q2FuY2VsIHBhcmFtIGNvbnZlcnRlZCB0byBib29sZWFuIGZyb20gYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBnZXQgc2hvd0NhbmNlbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gc3RyaW5nVG9Cb29sKHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19DQU5DRUwpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgd2hldGhlciBvciBub3QgdG8gc2hvdyBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHBpY2tlciBpcyBleHBhbmRlZFxuICAgKiBAcGFyYW0ge3N0cmluZ3xib29sZWFufG51bGx9IHZhbCBzaG93LWNhbmNlbCBhdHRyaWJ1dGUgdmFsdWVcbiAgICovXG4gIHNldCBzaG93Q2FuY2VsKHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgY29uc3QgYnRuID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1idG4tY2FuY2VsJyk7XG5cbiAgICBpZiAoYm9vbFZhbCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX0NBTkNFTCwgU3RyaW5nKGJvb2xWYWwpKTtcbiAgICAgIGJ0bj8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuSElEREVOKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX0NBTkNFTCk7XG4gICAgICBidG4/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTiwgKCFib29sVmFsKS50b1N0cmluZygpKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogc2hvdy1waWNrbGlzdC15ZWFyIGF0dHJpYnV0ZSwgZGVmYXVsdCBpcyB0cnVlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBzaG93UGlja2xpc3RZZWFyIHBhcmFtIGNvbnZlcnRlZCB0byBib29sZWFuIGZyb20gYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBnZXQgc2hvd1BpY2tsaXN0WWVhcigpOiBib29sZWFuIHtcbiAgICBjb25zdCBhdHRyVmFsID0gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1lFQVIpO1xuXG4gICAgaWYgKGF0dHJWYWwpIHtcbiAgICAgIHJldHVybiBzdHJpbmdUb0Jvb2woYXR0clZhbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdG8gc2hvdyBhIGxpc3Qgb2YgeWVhcnMgaW4gdGhlIHBpY2tsaXN0XG4gICAqIEBwYXJhbSB7c3RyaW5nIHwgYm9vbGVhbiB8IG51bGx9IHZhbCB2YWx1ZSB0byBiZSBzZXQgYXMgc2hvdy1waWNrbGlzdC15ZWFyIGF0dHJpYnV0ZSBjb252ZXJ0ZWQgdG8gYm9vbGVhblxuICAgKi9cbiAgc2V0IHNob3dQaWNrbGlzdFllYXIodmFsOiBzdHJpbmcgfCBib29sZWFuIHwgbnVsbCkge1xuICAgIGNvbnN0IGJvb2xWYWwgPSBzdHJpbmdUb0Jvb2wodmFsKTtcblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9ZRUFSLCBTdHJpbmcoYm9vbFZhbCkpO1xuICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfWUVBUiwgU3RyaW5nKGJvb2xWYWwpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBzaG93LXBpY2tsaXN0LW1vbnRoIGF0dHJpYnV0ZSwgZGVmYXVsdCBpcyB0cnVlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBzaG93UGlja2xpc3RNb250aCBwYXJhbSBjb252ZXJ0ZWQgdG8gYm9vbGVhbiBmcm9tIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgZ2V0IHNob3dQaWNrbGlzdE1vbnRoKCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IGF0dHJWYWwgPSB0aGlzLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfTU9OVEgpO1xuXG4gICAgaWYgKGF0dHJWYWwpIHtcbiAgICAgIHJldHVybiBzdHJpbmdUb0Jvb2woYXR0clZhbCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdG8gc2hvdyBhIGxpc3Qgb2YgbW9udGhzIGluIHRoZSBwaWNrbGlzdFxuICAgKiBAcGFyYW0ge3N0cmluZyB8IGJvb2xlYW4gfCBudWxsfSB2YWwgdmFsdWUgdG8gYmUgc2V0IGFzIHNob3ctcGlja2xpc3QtbW9udGggYXR0cmlidXRlIGNvbnZlcnRlZCB0byBib29sZWFuXG4gICAqL1xuICBzZXQgc2hvd1BpY2tsaXN0TW9udGgodmFsOiBzdHJpbmcgfCBib29sZWFuIHwgbnVsbCkge1xuICAgIGNvbnN0IGJvb2xWYWwgPSBzdHJpbmdUb0Jvb2wodmFsKTtcblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9NT05USCwgU3RyaW5nKGJvb2xWYWwpKTtcbiAgICB0aGlzLm1vbnRoWWVhclBpY2tsaXN0Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX01PTlRILCBTdHJpbmcoYm9vbFZhbCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctcGlja2xpc3Qtd2VlayBhdHRyaWJ1dGVcbiAgICogQHJldHVybnMge2Jvb2xlYW59IHNob3dQaWNrbGlzdFdlZWsgcGFyYW0gY29udmVydGVkIHRvIGJvb2xlYW4gZnJvbSBhdHRyaWJ1dGUgdmFsdWVcbiAgICovXG4gIGdldCBzaG93UGlja2xpc3RXZWVrKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1dFRUspKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBzaG93IHdlZWsgbnVtYmVycyBpbiB0aGUgcGlja2xpc3RcbiAgICogQHBhcmFtIHtzdHJpbmcgfCBib29sZWFuIHwgbnVsbH0gdmFsIHZhbHVlIHRvIGJlIHNldCBhcyBzaG93LXBpY2tsaXN0LXdlZWsgYXR0cmlidXRlIGNvbnZlcnRlZCB0byBib29sZWFuXG4gICAqL1xuICBzZXQgc2hvd1BpY2tsaXN0V2Vlayh2YWw6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKSB7XG4gICAgY29uc3QgYm9vbFZhbCA9IHN0cmluZ1RvQm9vbCh2YWwpO1xuXG4gICAgaWYgKGJvb2xWYWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9XRUVLLCBTdHJpbmcoYm9vbFZhbCkpO1xuICAgICAgdGhpcy5tb250aFllYXJQaWNrbGlzdD8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9XRUVLLCBTdHJpbmcoYm9vbFZhbCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfV0VFSyk7XG4gICAgICB0aGlzLm1vbnRoWWVhclBpY2tsaXN0Py5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1dFRUspO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiB1c2UtY3VycmVudC10aW1lIGF0dHJpYnV0ZVxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSB1c2VDdXJyZW50VGltZSBwYXJhbSBjb252ZXJ0ZWQgdG8gYm9vbGVhbiBmcm9tIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgZ2V0IHVzZUN1cnJlbnRUaW1lKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5VU0VfQ1VSUkVOVF9USU1FKSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHdoZXRoZXIgb3Igbm90IHRvIHNob3cgY3VycmVudCB0aW1lIGluIHRoZSB0aW1lIHBpY2tlclxuICAgKiBAcGFyYW0ge3N0cmluZ3xib29sZWFufG51bGx9IHZhbCB1c2VDdXJyZW50VGltZSBwYXJhbSB2YWx1ZVxuICAgKi9cbiAgc2V0IHVzZUN1cnJlbnRUaW1lKHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgY29uc3QgdGltZVBpY2tlciA9IHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yKCdpZHMtdGltZS1waWNrZXInKTtcblxuICAgIHRoaXMudXBkYXRlVGltZXBpY2tlckRpc3BsYXkoKTtcblxuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlVTRV9DVVJSRU5UX1RJTUUsIFN0cmluZyhib29sVmFsKSk7XG4gICAgICB0aW1lUGlja2VyPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5VU0VfQ1VSUkVOVF9USU1FLCBTdHJpbmcoYm9vbFZhbCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlVTRV9DVVJSRU5UX1RJTUUpO1xuICAgICAgdGltZVBpY2tlcj8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuVVNFX0NVUlJFTlRfVElNRSk7XG4gICAgfVxuICB9XG5cbiAgb25Vc2VSYW5nZUNoYW5nZSh2YWw6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBidG5BcHBseSA9IHRoaXMuYXBwbHlCdG5FbDtcbiAgICBpZiAodmFsKSB7XG4gICAgICB0aGlzLm1vbnRoVmlldz8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVVNFX1JBTkdFLCBTdHJpbmcodmFsKSk7XG4gICAgICBidG5BcHBseT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuSElEREVOKTtcbiAgICAgIGJ0bkFwcGx5Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVNBQkxFRCwgJ3RydWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5tb250aFZpZXc/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlVTRV9SQU5HRSk7XG4gICAgICBpZiAoIXRoaXMuZXhwYW5kZWQpIGJ0bkFwcGx5Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ISURERU4sICd0cnVlJyk7XG4gICAgICBidG5BcHBseT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQpO1xuICAgIH1cbiAgfVxuXG4gICN2YWx1ZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiB2YWx1ZSBhdHRyaWJ1dGVcbiAgICogQHJldHVybnMge3N0cmluZ30gdmFsdWUgcGFyYW1cbiAgICovXG4gIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLiN2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgRGF0ZSBQaWNrZXIgUG9wdXAncyBzdG9yZWQgdmFsdWUuIFNob3VsZCBwYXJzZSBhIGRhdGUgZnJvbSB0aGUgdmFsdWUuXG4gICAqIEBwYXJhbSB7c3RyaW5nfG51bGx9IHZhbCB2YWx1ZSBwYXJhbVxuICAgKi9cbiAgc2V0IHZhbHVlKHZhbDogc3RyaW5nIHwgbnVsbCkge1xuICAgIGlmICghdmFsKSB7XG4gICAgICB0aGlzLiN2YWx1ZSA9ICcnO1xuICAgICAgdGhpcy5kYXRlVmFsdWUgPSBudWxsO1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxVRSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IG5ld0RhdGUgPSB0aGlzLmdldERhdGVWYWx1ZSh2YWwpO1xuXG4gICAgaWYgKHRoaXMudXNlUmFuZ2UpIHtcbiAgICAgIGNvbnN0IHJhbmdlU2V0dGluZ3MgPSB0aGlzLmdldFJhbmdlU2V0dGluZ3MoKTtcbiAgICAgIGNvbnN0IHNlcGFyYXRvciA9IHJhbmdlU2V0dGluZ3Muc2VwYXJhdG9yO1xuICAgICAgY29uc3QgW3N0YXJ0XSA9IHZhbC5zcGxpdChzZXBhcmF0b3IpO1xuICAgICAgbmV3RGF0ZSA9IHRoaXMuZ2V0RGF0ZVZhbHVlKHN0YXJ0LnRyaW0oKSk7XG4gICAgfVxuXG4gICAgaWYgKG5ld0RhdGUgJiYgaXNWYWxpZERhdGUobmV3RGF0ZSkpIHtcbiAgICAgIHRoaXMuZGF0ZVZhbHVlID0gbmV3RGF0ZTtcbiAgICAgIHRoaXMuc3luY0RhdGVBdHRyaWJ1dGVzKG5ld0RhdGUpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMVUUsIHZhbCk7XG4gICAgdGhpcy4jdmFsdWUgPSB2YWw7XG4gIH1cblxuICBwcml2YXRlIG9uUGlja2xpc3RFeHBhbmQoKSB7XG4gICAgY29uc3QgYnRuQXBwbHkgPSB0aGlzLmFwcGx5QnRuRWw7XG4gICAgY29uc3QgYnRuQ2FuY2VsID0gdGhpcy5jYW5jZWxCdG5FbDtcblxuICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LmFjdGl2YXRlUGlja2xpc3QoKTtcbiAgICBidG5BcHBseT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuSElEREVOKTtcbiAgICBidG5BcHBseT8ucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQpO1xuXG4gICAgaWYgKHRoaXMuc2hvd0NhbmNlbCkge1xuICAgICAgYnRuQ2FuY2VsPy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5ISURERU4pO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgb25QaWNrbGlzdENvbGxhcHNlKCkge1xuICAgIGlmICh0aGlzLm1vbnRoWWVhclBpY2tsaXN0Py5kZWFjdGl2YXRlUGlja2xpc3QpIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LmRlYWN0aXZhdGVQaWNrbGlzdCgpO1xuICAgIHRoaXMudXBkYXRlQWN0aW9uQnV0dG9uU3RhdGVPblNob3coKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3MgaW50ZXJuYWwgY29tcG9uZW50IHJlZnMgYmFzZWQgb24gc2V0dGluZ3NcbiAgICovXG4gIGNvbmZpZ3VyZUNvbXBvbmVudHMoKSB7XG4gICAgdGhpcy5leHBhbmRhYmxlQXJlYSA9IHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yPElkc0V4cGFuZGFibGVBcmVhPignaWRzLWV4cGFuZGFibGUtYXJlYScpO1xuICAgIHRoaXMubW9udGhWaWV3ID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3I8SWRzTW9udGhWaWV3PignaWRzLW1vbnRoLXZpZXcnKTtcbiAgICB0aGlzLm1vbnRoWWVhclBpY2tsaXN0ID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3I8SWRzTW9udGhZZWFyUGlja2xpc3Q+KCdpZHMtbW9udGgteWVhci1waWNrbGlzdCcpO1xuXG4gICAgaWYgKHRoaXMuaGFzVGltZSgpKSB7XG4gICAgICB0aGlzLnRpbWVwaWNrZXIgPSB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcjxJZHNUaW1lUGlja2VyPignaWRzLXRpbWUtcGlja2VyJyk7XG4gICAgICBpZiAodGhpcy51c2VDdXJyZW50VGltZSkgdGhpcy5zZXRDdXJyZW50VGltZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRpbWVwaWNrZXI/LnJlbW92ZSgpO1xuICAgICAgdGhpcy50aW1lcGlja2VyID0gbnVsbDtcbiAgICB9XG5cbiAgICB0aGlzLnRvb2xiYXIgPSB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcjxJZHNUb29sYmFyPignaWRzLXRvb2xiYXInKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZWZlcnMgYGFjdGl2ZURhdGVgIHRvIHRoZSBpbm5lciBNb250aFZpZXcncyBgYWN0aXZlRGF0ZWAgYXR0cmlidXRlLFxuICAgKiBvdGhlcndpc2UgZmFsbGJhY2sgdG8gdGhlIG9uZSBnZW5lcmF0ZWQgYnkgdGhpcyBvbmUncyBkYXRlIHByb3BzXG4gICAqIEByZXR1cm5zIHtEYXRlfSBhY3RpdmVEYXRlIGZyb20gdGhlIGlubmVyIG1vbnRoVmlldyBjb21wb25lbnRcbiAgICovXG4gIGdldEFjdGl2ZURhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMubW9udGhWaWV3Py5hY3RpdmVEYXRlIHx8IHRoaXMuYWN0aXZlRGF0ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHBhbmRlZC9Db2xsYXBzZWQgZXZlbnQgZm9yIE1vbnRoL1llYXIgUGlja2xpc3RcbiAgICovXG4gIHByaXZhdGUgYXR0YWNoRXhwYW5kZWRMaXN0ZW5lcigpIHtcbiAgICBpZiAodGhpcy5leHBhbmRhYmxlQXJlYSkge1xuICAgICAgdGhpcy5vZmZFdmVudCgnYWZ0ZXJleHBhbmQnKTtcbiAgICAgIHRoaXMub25FdmVudCgnYWZ0ZXJleHBhbmQnLCB0aGlzLmV4cGFuZGFibGVBcmVhLCAoKSA9PiB7XG4gICAgICAgIHRoaXMub25QaWNrbGlzdEV4cGFuZCgpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMub2ZmRXZlbnQoJ2JlZm9yZWNvbGxhcHNlJyk7XG4gICAgICB0aGlzLm9uRXZlbnQoJ2JlZm9yZWNvbGxhcHNlJywgdGhpcy5leHBhbmRhYmxlQXJlYSwgKCkgPT4ge1xuICAgICAgICB0aGlzLm9uUGlja2xpc3RDb2xsYXBzZSgpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhdHRhY2hFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyBTZWxlY3RzIGRheSBmcm9tIHRoZSBtb250aFZpZXcgKGFmdGVyIHVzZXIgaW5wdXQpXG4gICAgdGhpcy5vZmZFdmVudCgnZGF5c2VsZWN0ZWQuZGF0ZS1waWNrZXItY2FsZW5kYXInKTtcbiAgICB0aGlzLm9uRXZlbnQoJ2RheXNlbGVjdGVkLmRhdGUtcGlja2VyLWNhbGVuZGFyJywgdGhpcy5tb250aFZpZXcsIChlOiBDdXN0b21FdmVudCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVEYXlTZWxlY3RlZEV2ZW50KGUpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5vZmZFdmVudCgnZGF0ZWNoYW5nZScpO1xuICAgIHRoaXMub25FdmVudCgnZGF0ZWNoYW5nZScsIHRoaXMubW9udGhWaWV3LCAoZTogQ3VzdG9tRXZlbnQpID0+IHtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB0aGlzLnVwZGF0ZU1vbnRoWWVhclBpY2tlclRyaWdnZXJEaXNwbGF5KCk7XG4gICAgfSk7XG5cbiAgICAvLyBIYW5kbGVzIGlucHV0IGZyb20gaGVhZGVyIGJ1dHRvbnNcbiAgICB0aGlzLm9mZkV2ZW50KCdjbGljay5kYXRlLXBpY2tlci1oZWFkZXInKTtcbiAgICBpZiAodGhpcy50b29sYmFyKSB7XG4gICAgICB0aGlzLm9uRXZlbnQoJ2NsaWNrLmRhdGUtcGlja2VyLWhlYWRlcicsIHRoaXMudG9vbGJhciwgKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuXG4gICAgICAgIGNvbnN0IGRyb3Bkb3duQnRuOiBJZHNUb2dnbGVCdXR0b24gfCBudWxsID0gdGFyZ2V0LmNsb3Nlc3QoJy5kcm9wZG93bi1idG4nKTtcbiAgICAgICAgaWYgKGRyb3Bkb3duQnRuKSB7XG4gICAgICAgICAgaWYgKCFkcm9wZG93bkJ0bi5kaXNhYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5leHBhbmRlZCA9ICF0aGlzLmV4cGFuZGVkO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBuYXZCdG46IElkc0J1dHRvbiB8IG51bGwgPSB0YXJnZXQuY2xvc2VzdCgnLmJ0bi1wcmV2aW91cywgLmJ0bi1uZXh0LCAuYnRuLXRvZGF5Jyk7XG4gICAgICAgIGlmIChuYXZCdG4pIHtcbiAgICAgICAgICBpZiAoIW5hdkJ0bi5kaXNhYmxlZCkge1xuICAgICAgICAgICAgaWYgKG5hdkJ0bi5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi1uZXh0JykpIHtcbiAgICAgICAgICAgICAgdGhpcy5tb250aFZpZXc/LmNoYW5nZURhdGUoJ25leHQtbW9udGgnKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmF2QnRuLmNsYXNzTGlzdC5jb250YWlucygnYnRuLXByZXZpb3VzJykpIHtcbiAgICAgICAgICAgICAgdGhpcy5tb250aFZpZXc/LmNoYW5nZURhdGUoJ3ByZXZpb3VzLW1vbnRoJyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKG5hdkJ0bi5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi10b2RheScpKSB7XG4gICAgICAgICAgICAgIHRoaXMubW9udGhWaWV3Py5jaGFuZ2VEYXRlKCd0b2RheScpO1xuICAgICAgICAgICAgICB0aGlzLnNldEN1cnJlbnRUaW1lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBIYW5kbGVzIGlucHV0IGZyb20gZm9vdGVyIGJ1dHRvbnNcbiAgICB0aGlzLm9mZkV2ZW50KCdjbGljay5kYXRlLXBpY2tlci1mb290ZXInKTtcbiAgICB0aGlzLm9uRXZlbnQoJ2NsaWNrLmRhdGUtcGlja2VyLWZvb3RlcicsIHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yKCcucG9wdXAtZm9vdGVyJyksIChlOiBNb3VzZUV2ZW50KSA9PiB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBlLnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgICAgIGlmICghdGFyZ2V0KSByZXR1cm47XG5cbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgIGlmICh0YXJnZXQuY2xvc2VzdCgnLnBvcHVwLWJ0bi1hcHBseScpKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlQXBwbHlFdmVudChlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGFyZ2V0LmNsb3Nlc3QoJy5wb3B1cC1idG4tY2xlYXInKSkge1xuICAgICAgICB0aGlzLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuaGlkZSh0cnVlKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodGFyZ2V0LmNsb3Nlc3QoJy5wb3B1cC1idG4tY2FuY2VsJykpIHtcbiAgICAgICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmhpZGUodHJ1ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBJbnB1dCB2YWx1ZSBjaGFuZ2UgdHJpZ2dlcnMgY29tcG9uZW50IHZhbHVlIGNoYW5nZVxuICAgIGlmICh0aGlzLnRhcmdldCkge1xuICAgICAgdGhpcy5vZmZFdmVudCgnY2hhbmdlLmRhdGUtcGlja2VyLWlucHV0Jyk7XG4gICAgICB0aGlzLm9uRXZlbnQoJ2NoYW5nZS5kYXRlLXBpY2tlci1pbnB1dCcsIHRoaXMudGFyZ2V0LCAoZTogYW55KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMVUUsIGUuZGV0YWlsLnZhbHVlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDbGljayB0byBhcHBseSBidXR0b24gZXZlbnQgaGFuZGxlclxuICAgKiBAcGFyYW0ge01vdXNlRXZlbnR9IGUgY2xpY2sgZXZlbnRcbiAgICovXG4gIHByaXZhdGUgaGFuZGxlQXBwbHlFdmVudChlOiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBpZiAoIXRoaXMubW9udGhWaWV3KSByZXR1cm47XG5cbiAgICBpZiAodGhpcy5leHBhbmRlZCkge1xuICAgICAgdGhpcy5jYXB0dXJlVmFsdWVGcm9tUGlja2xpc3QoKTtcbiAgICAgIHRoaXMudXBkYXRlTW9udGhZZWFyUGlja2VyVHJpZ2dlckRpc3BsYXkoKTtcbiAgICAgIHRoaXMuZXhwYW5kZWQgPSBmYWxzZTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCByYW5nZVNldHRpbmdzID0gdGhpcy5nZXRSYW5nZVNldHRpbmdzKCk7XG4gICAgaWYgKHRoaXMudXNlUmFuZ2UpIHtcbiAgICAgIGlmIChyYW5nZVNldHRpbmdzLmVuZCB8fCAocmFuZ2VTZXR0aW5ncy5zdGFydCAmJiAhcmFuZ2VTZXR0aW5ncy5lbmQpKSB7XG4gICAgICAgIGlmIChyYW5nZVNldHRpbmdzLm1pbkRheXMgJiYgKHJhbmdlU2V0dGluZ3Muc3RhcnQgPT09IHJhbmdlU2V0dGluZ3MuZW5kKSkge1xuICAgICAgICAgIHJhbmdlU2V0dGluZ3Muc3RhcnQgPSBzdWJ0cmFjdERhdGUocmFuZ2VTZXR0aW5ncy5zdGFydCwgcmFuZ2VTZXR0aW5ncy5taW5EYXlzLCAnZGF5cycpO1xuICAgICAgICAgIHRoaXMuc2V0UmFuZ2VTZXR0aW5ncyhyYW5nZVNldHRpbmdzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMudmFsdWUgPSBbXG4gICAgICAgICAgdGhpcy5sb2NhbGVBUEkuZm9ybWF0RGF0ZSh0aGlzLnNldFRpbWUocmFuZ2VTZXR0aW5ncy5zdGFydCksIHsgcGF0dGVybjogdGhpcy5mb3JtYXQgfSksXG4gICAgICAgICAgcmFuZ2VTZXR0aW5ncy5zZXBhcmF0b3IsXG4gICAgICAgICAgdGhpcy5sb2NhbGVBUEkuZm9ybWF0RGF0ZShcbiAgICAgICAgICAgIHRoaXMuc2V0VGltZShyYW5nZVNldHRpbmdzLmVuZCA/PyB0aGlzLmdldEFjdGl2ZURhdGUoKSksXG4gICAgICAgICAgICB7IHBhdHRlcm46IHRoaXMuZm9ybWF0IH1cbiAgICAgICAgICApLFxuICAgICAgICBdLmZpbHRlcihCb29sZWFuKS5qb2luKCcnKTtcblxuICAgICAgICB0aGlzLmhpZGUodHJ1ZSk7XG4gICAgICAgIHRoaXMudHJpZ2dlclNlbGVjdGVkRXZlbnQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmxvY2FsZUFQSS5mb3JtYXREYXRlKFxuICAgICAgICAgIHRoaXMuc2V0VGltZShyYW5nZVNldHRpbmdzLnN0YXJ0ID8/IHRoaXMuZ2V0QWN0aXZlRGF0ZSgpKSxcbiAgICAgICAgICB7IHBhdHRlcm46IHRoaXMuZm9ybWF0IH1cbiAgICAgICAgKTtcbiAgICAgICAgcmFuZ2VTZXR0aW5ncy5zdGFydCA9IHRoaXMuZ2V0QWN0aXZlRGF0ZSgpO1xuICAgICAgICB0aGlzLnNldFJhbmdlU2V0dGluZ3MocmFuZ2VTZXR0aW5ncyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50YXJnZXQpIHtcbiAgICAgIHRoaXMudmFsdWUgPSB0aGlzLmxvY2FsZUFQSS5mb3JtYXREYXRlKFxuICAgICAgICB0aGlzLnNldFRpbWUodGhpcy5nZXRBY3RpdmVEYXRlKCkpLFxuICAgICAgICB7IHBhdHRlcm46IHRoaXMuZm9ybWF0IH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgdGhpcy5oaWRlKHRydWUpO1xuICAgIHRoaXMudHJpZ2dlclNlbGVjdGVkRXZlbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhcnMgdGhlIGNvbnRlbnRzIG9mIHRoZSBEYXRlIFBpY2tlciBQb3B1cCBhbmQgaXRzIGNvcnJlc3BvbmRpbmcgdGFyZ2V0LCBpZiBhcHBsaWNhYmxlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5leHBhbmRlZCA9IGZhbHNlO1xuICAgIHRoaXMucmVzZXRSYW5nZVNldHRpbmdzKCk7XG4gICAgdGhpcy52YWx1ZSA9ICcnO1xuICAgIHRoaXMudHJpZ2dlclNlbGVjdGVkRXZlbnQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZWxlY3RlZCBldmVudCBoYW5kbGVyXG4gICAqIEBwYXJhbSB7SWRzRGF5c2VsZWN0ZWRFdmVudH0gZSBldmVudCBmcm9tIHRoZSBjYWxlbmRhciBkYXkgc2VsZWN0aW9uXG4gICAqL1xuICBwcml2YXRlIGhhbmRsZURheVNlbGVjdGVkRXZlbnQoZTogQ3VzdG9tRXZlbnQpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubW9udGhWaWV3KSByZXR1cm47XG5cbiAgICBjb25zdCBjdXJyZW50RGF0ZSA9IHRoaXMuZGF0ZVZhbHVlO1xuXG4gICAgLy8gQ2xlYXIgYWN0aW9uXG4gICAgLy8gRGVzZWxlY3QgdGhlIHNlbGVjdGVkIGRhdGUgYnkgY2xpY2tpbmcgdG8gdGhlIHNlbGVjdGVkIGRhdGVcbiAgICBpZiAoY3VycmVudERhdGUgaW5zdGFuY2VvZiBEYXRlICYmIGlzVmFsaWREYXRlKGN1cnJlbnREYXRlKSAmJiBjdXJyZW50RGF0ZS5nZXRUaW1lKCkgPT09IGUuZGV0YWlsLmRhdGUuZ2V0VGltZSgpKSB7XG4gICAgICB0aGlzLnZhbHVlID0gJyc7XG4gICAgICBpZiAodGhpcy5tb250aFZpZXcuc2VsZWN0RGF5KSB7XG4gICAgICAgIHRoaXMubW9udGhWaWV3LnNlbGVjdERheSgpO1xuICAgICAgfVxuICAgICAgdGhpcy50cmlnZ2VyU2VsZWN0ZWRFdmVudChlKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnVzZVJhbmdlKSB7XG4gICAgICBjb25zdCByYW5nZVNldHRpbmdzID0gdGhpcy5nZXRSYW5nZVNldHRpbmdzKCk7XG4gICAgICBpZiAocmFuZ2VTZXR0aW5ncy5zZWxlY3RXZWVrKSB7XG4gICAgICAgIGNvbnN0IGZpeGVkRGF0ZSA9IHRoaXMuc2V0VGltZShlLmRldGFpbC5yYW5nZVN0YXJ0IGFzIERhdGUpO1xuICAgICAgICB0aGlzLnZhbHVlID0gW1xuICAgICAgICAgIHRoaXMubG9jYWxlQVBJLmZvcm1hdERhdGUoZml4ZWREYXRlLCB7IHBhdHRlcm46IHRoaXMuZm9ybWF0IH0pLFxuICAgICAgICAgIHJhbmdlU2V0dGluZ3Muc2VwYXJhdG9yLFxuICAgICAgICAgIGUuZGV0YWlsLnJhbmdlRW5kICYmIHRoaXMubG9jYWxlQVBJLmZvcm1hdERhdGUodGhpcy5zZXRUaW1lKGUuZGV0YWlsLnJhbmdlRW5kKSwgeyBwYXR0ZXJuOiB0aGlzLmZvcm1hdCB9KVxuICAgICAgICBdLmZpbHRlcihCb29sZWFuKS5qb2luKCcnKTtcblxuICAgICAgICBlLmRldGFpbC5kYXRlID0gZml4ZWREYXRlO1xuICAgICAgICBlLmRldGFpbC52YWx1ZSA9IHRoaXMudmFsdWU7XG5cbiAgICAgICAgdGhpcy5oaWRlKHRydWUpO1xuICAgICAgICB0aGlzLnRyaWdnZXJTZWxlY3RlZEV2ZW50KGUpO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIGNvbnN0IGJ0bkFwcGx5ID0gdGhpcy5hcHBseUJ0bkVsO1xuICAgICAgaWYgKGUuZGV0YWlsLnJhbmdlU3RhcnQgJiYgZS5kZXRhaWwucmFuZ2VFbmQpIHtcbiAgICAgICAgYnRuQXBwbHk/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkRJU0FCTEVEKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJ0bkFwcGx5Py5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVNBQkxFRCwgJ3RydWUnKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZml4ZWREYXRlID0gdGhpcy5zZXRUaW1lKGUuZGV0YWlsLmRhdGUpO1xuICAgICAgdGhpcy52YWx1ZSA9IHRoaXMubG9jYWxlQVBJLmZvcm1hdERhdGUoXG4gICAgICAgIGZpeGVkRGF0ZSxcbiAgICAgICAgeyBwYXR0ZXJuOiB0aGlzLmZvcm1hdCB9XG4gICAgICApO1xuICAgICAgdGhpcy55ZWFyID0gZS5kZXRhaWwuZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgdGhpcy5tb250aCA9IGUuZGV0YWlsLmRhdGUuZ2V0TW9udGgoKTtcbiAgICAgIHRoaXMuZGF5ID0gZS5kZXRhaWwuZGF0ZS5nZXREYXRlKCk7XG5cbiAgICAgIGUuZGV0YWlsLmRhdGUgPSBmaXhlZERhdGU7XG4gICAgICBlLmRldGFpbC52YWx1ZSA9IHRoaXMudmFsdWU7XG5cbiAgICAgIHRoaXMuaGlkZSh0cnVlKTtcbiAgICAgIHRoaXMudHJpZ2dlclNlbGVjdGVkRXZlbnQoZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIHZhbHVlIGZyb20gdGhlIHNlbGVjdGVkIGl0ZW1zIGluIHRoZSBNb250aC9ZZWFyIFBpY2tsaXN0XG4gICAqIGFuZCBzZXRzIHRoZW0gaW4gdGhlIERhdGUgUGlja2VyIFBvcHVwXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgcHJpdmF0ZSBjYXB0dXJlVmFsdWVGcm9tUGlja2xpc3QoKSB7XG4gICAgaWYgKCF0aGlzLm1vbnRoWWVhclBpY2tsaXN0KSByZXR1cm47XG4gICAgY29uc3QgeyBtb250aCwgeWVhciB9ID0gdGhpcy5tb250aFllYXJQaWNrbGlzdDtcbiAgICB0aGlzLnllYXIgPSB5ZWFyO1xuICAgIHRoaXMubW9udGggPSBtb250aDtcbiAgICB0aGlzLnZhbHVlID0gdGhpcy5nZXRGb3JtYXR0ZWREYXRlKHRoaXMuYWN0aXZlRGF0ZSk7XG4gIH1cblxuICAvKipcbiAgICogRGVmaW5lcyBpZiB0aGUgZm9ybWF0IGhhcyBob3Vycy9taW51dGVzL3NlY29uZHMgcGF0dGVybiB0byBzaG93IHRpbWUgcGlja2VyXG4gICAqIEByZXR1cm5zIHtib29sZWFufSB3aGV0aGVyIG9yIG5vdCB0byBzaG93IHRpbWUgcGlja2VyXG4gICAqL1xuICBwcml2YXRlIGhhc1RpbWUoKTogYm9vbGVhbiB7XG4gICAgaWYgKCF0aGlzLmZvcm1hdCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0aGlzLmZvcm1hdC5pbmNsdWRlcygnaCcpIHx8IHRoaXMuZm9ybWF0LmluY2x1ZGVzKCdtJykgfHwgdGhpcy5mb3JtYXQuaW5jbHVkZXMoJ3MnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBIZWxwZXIgdG8gc2V0IHRoZSBkYXRlIHdpdGggdGltZSBmcm9tIHRpbWUgcGlja2VyXG4gICAqIEBwYXJhbSB7YW55fSB2YWwgZGF0ZSB0byBhZGQgdGltZSB2YWx1ZXNcbiAgICogQHJldHVybnMge0RhdGV9IGRhdGUgd2l0aCB0aW1lIHZhbHVlc1xuICAgKi9cbiAgcHJpdmF0ZSBzZXRUaW1lKHZhbDogYW55KTogRGF0ZSB7XG4gICAgY29uc3QgZGF0ZSA9IGlzVmFsaWREYXRlKHZhbCkgPyB2YWwgOiBuZXcgRGF0ZSh2YWwpO1xuICAgIGNvbnN0IHRpbWVQaWNrZXIgPSB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvcjxJZHNUaW1lUGlja2VyPignaWRzLXRpbWUtcGlja2VyJyk7XG5cbiAgICBpZiAoIXRoaXMuaGFzVGltZSgpIHx8ICF0aW1lUGlja2VyKSByZXR1cm4gZGF0ZTtcblxuICAgIGNvbnN0IGhvdXJzOiBudW1iZXIgPSB0aW1lUGlja2VyLmhvdXJzO1xuICAgIGNvbnN0IG1pbnV0ZXM6IG51bWJlciA9IHRpbWVQaWNrZXIubWludXRlcztcbiAgICBjb25zdCBzZWNvbmRzOiBudW1iZXIgPSB0aW1lUGlja2VyLnNlY29uZHM7XG4gICAgY29uc3QgcGVyaW9kOiBzdHJpbmcgPSB0aW1lUGlja2VyLnBlcmlvZDtcbiAgICBjb25zdCBkYXlQZXJpb2RJbmRleCA9IHRoaXMubG9jYWxlQVBJPy5jYWxlbmRhcigpLmRheVBlcmlvZHM/LmluZGV4T2YocGVyaW9kKTtcblxuICAgIGRhdGUuc2V0SG91cnMoaG91cnNUbzI0KGhvdXJzLCBkYXlQZXJpb2RJbmRleCksIG1pbnV0ZXMsIHNlY29uZHMpO1xuXG4gICAgcmV0dXJuIGRhdGU7XG4gIH1cblxuICAvKipcbiAgICogVHJpZ2dlcnMgdGhlIHNhbWUgYGRheXNlbGVjdGVkYCBldmVudCBvbiB0aGUgUG9wdXAncyB0YXJnZXQgZWxlbWVudCB0aGF0IGNhbWUgZnJvbSB0aGUgaW50ZXJuYWwgSWRzTW9udGhWaWV3XG4gICAqIEBwYXJhbSB7SWRzRGF5c2VsZWN0ZWRFdmVudH0gW2VdIG9wdGlvbmFsIGV2ZW50IGhhbmRsZXIgdG8gcGFzcyBhcmd1bWVudHNcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBwcml2YXRlIHRyaWdnZXJTZWxlY3RlZEV2ZW50KGU/OiBJZHNEYXlzZWxlY3RlZEV2ZW50KTogdm9pZCB7XG4gICAgbGV0IGFyZ3M6IGFueTtcbiAgICBpZiAoZSkgYXJncyA9IGU7XG4gICAgZWxzZSB7XG4gICAgICBjb25zdCByYW5nZVNldHRpbmdzID0gdGhpcy5nZXRSYW5nZVNldHRpbmdzKCk7XG4gICAgICBhcmdzID0ge1xuICAgICAgICBidWJibGVzOiB0cnVlLFxuICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICBlbGVtOiB0aGlzLFxuICAgICAgICAgIGRhdGU6IHRoaXMuZ2V0QWN0aXZlRGF0ZSgpLFxuICAgICAgICAgIHVzZVJhbmdlOiB0aGlzLnVzZVJhbmdlLFxuICAgICAgICAgIHJhbmdlU3RhcnQ6IHRoaXMudXNlUmFuZ2UgJiYgcmFuZ2VTZXR0aW5ncy5zdGFydCA/IG5ldyBEYXRlKHJhbmdlU2V0dGluZ3Muc3RhcnQgYXMgc3RyaW5nKSA6IG51bGwsXG4gICAgICAgICAgcmFuZ2VFbmQ6IHRoaXMudXNlUmFuZ2UgJiYgcmFuZ2VTZXR0aW5ncy5lbmQgPyBuZXcgRGF0ZShyYW5nZVNldHRpbmdzLmVuZCBhcyBzdHJpbmcpIDogbnVsbCxcbiAgICAgICAgICB2YWx1ZTogdGhpcy52YWx1ZVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICh0aGlzLnRhcmdldCkge1xuICAgICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2RheXNlbGVjdGVkJywgYXJncyk7XG4gICAgICB0aGlzLnRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVuZGVycyBvciByZW1vdmVzIGFuIGVtYmVkZGVkIElkc1RpbWVQaWNrZXIgY29tcG9uZW50XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZVRpbWVwaWNrZXJEaXNwbGF5KCkge1xuICAgIGNvbnN0IGhhc1RpbWUgPSB0aGlzLmhhc1RpbWUoKTtcbiAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnRvZ2dsZSgnaGFzLXRpbWUnLCBoYXNUaW1lKTtcbiAgICBpZiAoaGFzVGltZSkge1xuICAgICAgaWYgKCF0aGlzLnRpbWVwaWNrZXIpIHtcbiAgICAgICAgdGhpcy5tb250aFZpZXc/Lmluc2VydEFkamFjZW50SFRNTCgnYWZ0ZXJlbmQnLCB0aGlzLnRpbWVwaWNrZXJUZW1wbGF0ZSgpKTtcbiAgICAgICAgdGhpcy50aW1lcGlja2VyID0gdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3IoJ2lkcy10aW1lLXBpY2tlcicpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRpbWVwaWNrZXI/LnJlbW92ZSgpO1xuICAgICAgdGhpcy50aW1lcGlja2VyID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlcyBhbGwgYnV0dG9uIHJpcHBsZXMgaW4gdGhlIGNvbXBvbmVudFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIHByaXZhdGUgcmVtb3ZlUmlwcGxlcygpIHtcbiAgICB0aGlzLmJ1dHRvbnM/LmZvckVhY2goKGJ1dHRvbjogSWRzRGF0ZVBpY2tlclBvcHVwQnV0dG9uKSA9PiB7XG4gICAgICBidXR0b24ucmVtb3ZlUmlwcGxlcygpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFRha2VzIGEgc3RyaW5nIGNvbnRhaW5pbmcgYSBkYXRlLCBvciBhbiBhY3R1YWwgRGF0ZSBvYmplY3QsIGFuZCBzeW5jcyBpdHMgdmFsdWVzXG4gICAqIHRvIHRoZSBjb3JyZWN0IHByb3BlcnRpZXMgcHJvdmlkZWQgYnkgSWRzRGF0ZUF0dHJpYnV0ZU1peGluXG4gICAqIEBwYXJhbSB7c3RyaW5nIHwgRGF0ZX0gdmFsIGluY29taW5nIGRhdGUgc3RyaW5nL29iamVjdFxuICAgKi9cbiAgcHVibGljIHN5bmNEYXRlQXR0cmlidXRlcyh2YWw6IHN0cmluZyB8IERhdGUpIHtcbiAgICBsZXQgdXNhYmxlVmFsdWUgPSB2YWw7XG4gICAgY29uc3QgcmFuZ2VTZXR0aW5ncyA9IHRoaXMuZ2V0UmFuZ2VTZXR0aW5ncygpO1xuXG4gICAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnICYmIHRoaXMudXNlUmFuZ2UgJiYgcmFuZ2VTZXR0aW5ncy5zZXBhcmF0b3IpIHtcbiAgICAgIHVzYWJsZVZhbHVlID0gcmVtb3ZlRGF0ZVJhbmdlKHZhbCwgcmFuZ2VTZXR0aW5ncy5zZXBhcmF0b3IpO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh1c2FibGVWYWx1ZSk7XG4gICAgY29uc3QgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgY29uc3QgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICBjb25zdCBkYXkgPSBkYXRlLmdldERhdGUoKTtcblxuICAgIGlmICh0aGlzLnllYXIgIT09IHllYXIpIHRoaXMueWVhciA9IHllYXI7XG4gICAgaWYgKHRoaXMubW9udGggIT09IG1vbnRoKSB0aGlzLm1vbnRoID0gbW9udGg7XG4gICAgaWYgKHRoaXMuZGF5ICE9PSBkYXkpIHRoaXMuZGF5ID0gZGF5O1xuXG4gICAgaWYgKHRoaXMuaGFzVGltZSgpKSB7XG4gICAgICBpZiAodGhpcy50aW1lcGlja2VyKSB0aGlzLnRpbWVwaWNrZXIudmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgIH1cblxuICAgIGlmICh0aGlzLm1vbnRoVmlldykge1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLm1vbnRoVmlldy5zZWxlY3REYXlGcm9tVmFsdWUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5tb250aFZpZXcuc2VsZWN0RGF5RnJvbVZhbHVlKGAke3VzYWJsZVZhbHVlfWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMudXBkYXRlTW9udGhZZWFyUGlja2VyVHJpZ2dlckRpc3BsYXkoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0Q3VycmVudFRpbWUoKSB7XG4gICAgaWYgKHRoaXMudGltZXBpY2tlcikge1xuICAgICAgdGhpcy50aW1lcGlja2VyLnZhbHVlID0gdGhpcy5sb2NhbGVBUEkuZm9ybWF0RGF0ZShuZXcgRGF0ZSgpLCB7IHBhdHRlcm46IHRoaXMuZm9ybWF0IH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBIZWxwZXIgdG8gZm9ybWF0IGRhdGVwaWNrZXIgdGV4dCBpbiB0aGUgdG9vbGJhclxuICAgKiBAcGFyYW0ge0lkc0xvY2FsZX0gW2xvY2FsZV0gYW4gb3B0aW9uYWwsIHByb3ZpZGVkIElkc0xvY2FsZSBvYmplY3RcbiAgICogQHBhcmFtIHtEYXRlfSBbZGF0ZV0gYW4gb3B0aW9uYWwsIHByb3ZpZGVkIERhdGUgb2JqZWN0IChkZWZhdWx0cyB0byBgdGhpcy5nZXRBY3RpdmVEYXRlKClgKVxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBsb2NhbGUgZm9ybWF0dGVkIG1vbnRoIHllYXJcbiAgICovXG4gIHByaXZhdGUgZm9ybWF0TW9udGhUZXh0KGxvY2FsZT86IElkc0xvY2FsZSwgZGF0ZT86IERhdGUpOiBzdHJpbmcge1xuICAgIGNvbnN0IHRhcmdldExvY2FsZSA9IGxvY2FsZSB8fCB0aGlzLmxvY2FsZUFQSTtcbiAgICBjb25zdCB0YXJnZXREYXRlID0gZGF0ZSB8fCB0aGlzLmdldEFjdGl2ZURhdGUoKTtcblxuICAgIGlmICghdGFyZ2V0TG9jYWxlKSByZXR1cm4gJyc7XG5cbiAgICBjb25zdCBtb250aEtleXMgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuZScsICdKdWx5JywgJ0F1ZycsICdTZXAnLCAnT2N0JywgJ05vdicsICdEZWMnXTtcbiAgICBjb25zdCBtb250aCA9IHRhcmdldExvY2FsZT8udHJhbnNsYXRlKGBNb250aFdpZGUke21vbnRoS2V5c1t0YXJnZXREYXRlLmdldE1vbnRoKCldfWApO1xuXG4gICAgcmV0dXJuIGAke21vbnRofSAke3RhcmdldERhdGUuZ2V0RnVsbFllYXIoKX1gO1xuICB9XG5cbiAgLyoqXG4gICAqIFVwZGF0ZXMgdGhlIHRleHQgY29udGVudHMgb2YgdGhlIE1vbnRoL1llYXIgUGlja2VyJ3MgdHJpZ2dlciBidXR0b24gdG8gcmVmbGVjdCBjdXJyZW50IHN0YXRlXG4gICAqIEBwYXJhbSB7SWRzTG9jYWxlfSBbbG9jYWxlXSBpbmNvbWluZyBJZHNMb2NhbGUgb2JqZWN0LCBpZiBhcHBsaWNhYmxlXG4gICAqIEBwYXJhbSB7RGF0ZX0gW2RhdGVdIGFuIG9wdGlvbmFsLCBwcm92aWRlZCBEYXRlIG9iamVjdCAoZGVmYXVsdHMgdG8gYHRoaXMuZ2V0QWN0aXZlRGF0ZSgpYClcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICB1cGRhdGVNb250aFllYXJQaWNrZXJUcmlnZ2VyRGlzcGxheShsb2NhbGU/OiBJZHNMb2NhbGUsIGRhdGU/OiBEYXRlKSB7XG4gICAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IHRoaXMuZm9ybWF0TW9udGhUZXh0KGxvY2FsZSwgZGF0ZSkgfHwgJyc7XG4gICAgY29uc3QgZHJvcGRvd25FbCA9IHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmRyb3Bkb3duLWJ0bi10ZXh0Jyk7XG4gICAgaWYgKGRyb3Bkb3duRWwpIHtcbiAgICAgIGRyb3Bkb3duRWwuaW5uZXJUZXh0ID0gZm9ybWF0dGVkRGF0ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUnVucyB3aGVuIHRoaXMgcGlja2VyIGNvbXBvbmVudCBoaWRlc1xuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIG9uSGlkZSgpIHtcbiAgICB0aGlzLmNvbnRhaW5lcj8uc2V0QXR0cmlidXRlKGh0bWxBdHRyaWJ1dGVzLlRBQklOREVYLCAnLTEnKTtcbiAgICB0aGlzLmV4cGFuZGVkID0gZmFsc2U7XG4gICAgdGhpcy5yZW1vdmVSaXBwbGVzKCk7XG4gIH1cblxuICAvKipcbiAgICogUnVucyB3aGVuIHRoaXMgcGlja2VyIGNvbXBvbmVudCBzaG93c1xuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIG9uU2hvdygpOiB2b2lkIHtcbiAgICB0aGlzLmF0dGFjaEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy51cGRhdGVBY3Rpb25CdXR0b25TdGF0ZU9uU2hvdygpO1xuICAgIHRoaXMuY29udGFpbmVyPy5yZW1vdmVBdHRyaWJ1dGUoaHRtbEF0dHJpYnV0ZXMuVEFCSU5ERVgpO1xuICAgIHRoaXMuZm9jdXMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGVzIHRoZSBQb3B1cCdzIE1vZGFsIGJ1dHRvbiBzdGF0ZXNcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlQWN0aW9uQnV0dG9uU3RhdGVPblNob3coKSB7XG4gICAgY29uc3QgYnRuQXBwbHkgPSB0aGlzLmFwcGx5QnRuRWw7XG4gICAgY29uc3QgcmFuZ2VTZXR0aW5ncyA9IHRoaXMuZ2V0UmFuZ2VTZXR0aW5ncygpO1xuICAgIGNvbnN0IGhhc1BhcnRpYWxSYW5nZVNlbGVjdGVkID0gIShyYW5nZVNldHRpbmdzLnN0YXJ0ICYmIHJhbmdlU2V0dGluZ3MuZW5kKTtcblxuICAgIGlmICghdGhpcy51c2VSYW5nZSkge1xuICAgICAgaWYgKGJ0bkFwcGx5KSB7XG4gICAgICAgIGlmIChidG5BcHBseS5yZW1vdmVSaXBwbGVzKSBidG5BcHBseT8ucmVtb3ZlUmlwcGxlcygpO1xuICAgICAgICBidG5BcHBseS5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ISURERU4sICd0cnVlJyk7XG4gICAgICAgIGJ0bkFwcGx5LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkRJU0FCTEVELCBgJHtoYXNQYXJ0aWFsUmFuZ2VTZWxlY3RlZH1gKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLnNob3dDYW5jZWwpIHtcbiAgICAgICAgY29uc3QgYnRuQ2FuY2VsID0gdGhpcy5jYW5jZWxCdG5FbDtcbiAgICAgICAgYnRuQ2FuY2VsPy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5ISURERU4pO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIXJhbmdlU2V0dGluZ3Muc2VsZWN0V2Vlaykge1xuICAgICAgYnRuQXBwbHk/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLkhJRERFTik7XG4gICAgICBidG5BcHBseT8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQsIGAke2hhc1BhcnRpYWxSYW5nZVNlbGVjdGVkfWApO1xuICAgIH0gZWxzZSB7XG4gICAgICBidG5BcHBseT8uc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuSElEREVOLCAndHJ1ZScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBQYXNzZXMgdGhyb3VnaCB0byBJZHNNb250aFZpZXcgdG8gY2hlY2sgaWYgYSBzcGVjaWZpZWQgZGF0ZSBpcyBkaXNhYmxlZCAobm90IGF2YWlsYWJsZSBmb3IgY2hvb3NpbmcpXG4gICAqIEBwYXJhbSB7RGF0ZX0gZGF0ZSB0aGUgZGF0ZSB0byBjaGVja1xuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gd2hldGVyIG9yIG5vdCB0aGUgZGF0ZSBpcyBkaXNhYmxlZFxuICAgKi9cbiAgaXNEaXNhYmxlZEJ5RGF0ZShkYXRlOiBEYXRlKSB7XG4gICAgcmV0dXJuIHRoaXMubW9udGhWaWV3Py5pc0Rpc2FibGVkQnlEYXRlKGRhdGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIFBhc3NlcyBmb2N1cyB0byB0aGUgaW5uZXIgTW9udGhWaWV3IGNvbXBvbmVudFxuICAgKi9cbiAgZm9jdXMoKSB7XG4gICAgaWYgKHRoaXMuZXhwYW5kZWQpIHtcbiAgICAgIHRoaXMubW9udGhZZWFyUGlja2xpc3Q/LmZvY3VzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubW9udGhWaWV3Py5mb2N1cygpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJZHNEYXRlUGlja2VyUG9wdXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-date-picker-popup.ts\n");

/***/ }),

/***/ "./src/components/ids-date-picker/ids-date-picker.ts":
/*!***********************************************************!*\
  !*** ./src/components/ids-date-picker/ids-date-picker.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_date_picker_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\n/* harmony import */ var _mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-label-state-mixin/ids-label-state-parent-mixin */ \"./src/mixins/ids-label-state-mixin/ids-label-state-parent-mixin.ts\");\n/* harmony import */ var _mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-date-attribute-mixin/ids-date-attribute-mixin */ \"./src/mixins/ids-date-attribute-mixin/ids-date-attribute-mixin.ts\");\n/* harmony import */ var _ids_month_view_ids_month_view_attribute_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ids-month-view/ids-month-view-attribute-mixin */ \"./src/components/ids-month-view/ids-month-view-attribute-mixin.ts\");\n/* harmony import */ var _mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin */ \"./src/mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin.ts\");\n/* harmony import */ var _mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-field-height-mixin/ids-field-height-mixin */ \"./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../mixins/ids-validation-mixin/ids-validation-input-mixin */ \"./src/mixins/ids-validation-mixin/ids-validation-input-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_picker_popup_ids_picker_popup_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ids-picker-popup/ids-picker-popup-common */ \"./src/components/ids-picker-popup/ids-picker-popup-common.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\n/* harmony import */ var _ids_date_picker_popup__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ids-date-picker-popup */ \"./src/components/ids-date-picker/ids-date-picker-popup.ts\");\n/* harmony import */ var _ids_button_ids_button__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../ids-button/ids-button */ \"./src/components/ids-button/ids-button.ts\");\n/* harmony import */ var _ids_toggle_button_ids_toggle_button__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../ids-toggle-button/ids-toggle-button */ \"./src/components/ids-toggle-button/ids-toggle-button.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_field__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-field */ \"./src/components/ids-trigger-field/ids-trigger-field.ts\");\n/* harmony import */ var _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ids-date-picker-common */ \"./src/components/ids-date-picker/ids-date-picker-common.ts\");\n/* harmony import */ var _ids_date_picker_scss__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./ids-date-picker.scss */ \"./src/components/ids-date-picker/ids-date-picker.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\n  (0,_mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n    (0,_mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n      (0,_mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n        (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n          (0,_mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(\n            (0,_ids_month_view_ids_month_view_attribute_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n              (0,_mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n                (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(\n                  (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n                    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n                      _core_ids_element__WEBPACK_IMPORTED_MODULE_13__[\"default\"]\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\nlet IdsDatePicker = class extends Base {\n  constructor() {\n    super();\n  }\n  isFormComponent = true;\n  #picker;\n  #triggerButton;\n  #triggerField;\n  connectedCallback() {\n    super.connectedCallback();\n    this.#picker = this.container?.querySelector(\"ids-date-picker-popup\") || void 0;\n    this.#triggerButton = this.container?.querySelector(\"ids-trigger-button\");\n    this.#triggerField = this.container?.querySelector(\"ids-trigger-field\");\n    this.#configurePicker();\n    this.#attachEventHandlers();\n    this.#attachKeyboardListeners();\n    this.#applyMask();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      ..._ids_date_picker_common__WEBPACK_IMPORTED_MODULE_23__.IdsDatePickerCommonAttributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ID,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE\n    ];\n  }\n  /**\n   * List of available color variants for this component\n   * @returns {Array<string>}\n   */\n  colorVariants = [\"alternate-formatter\", \"borderless\", \"in-cell\"];\n  /**\n   * Push color variant to the trigger-field element\n   * @returns {void}\n   */\n  onColorVariantRefresh() {\n    if (this.#triggerField) {\n      this.#triggerField.colorVariant = this.colorVariant;\n    }\n  }\n  /**\n   * Push label-state to the trigger-field element\n   * @returns {void}\n   */\n  onLabelRequiredChange() {\n    if (this.#triggerField)\n      this.#triggerField.labelRequired = this.labelRequired;\n  }\n  /**\n   * Push label-state to the trigger-field element\n   * @returns {void}\n   */\n  onLabelChange() {\n    if (this.#triggerField)\n      this.#triggerField.label = this.label;\n  }\n  /**\n   * Push label-state to the trigger-field element\n   * @returns {void}\n   */\n  onLabelStateChange() {\n    if (this.#triggerField)\n      this.#triggerField.labelState = this.labelState;\n  }\n  /**\n   * Push field-height/compact to the trigger-field element\n   * @param {string} val the new field height setting\n   */\n  onFieldHeightChange(val) {\n    if (!this.#triggerField)\n      return;\n    if (val) {\n      const attr = val === \"compact\" ? { name: \"compact\", val: \"\" } : { name: \"field-height\", val };\n      this.#triggerField.setAttribute(attr.name, attr.val);\n    } else {\n      this.#triggerField.removeAttribute(\"compact\");\n      this.#triggerField.removeAttribute(\"field-height\");\n    }\n  }\n  /**\n   * Optional callback that can be used to adjust the Popup's placement\n   * after all internal adjustments are made.\n   * @param {DOMRect} popupRect a Rect object representing the current state of the popup.\n   * @returns {object} an adjusted Rect object with \"nudged\" coordinates.\n   */\n  onPlace(popupRect) {\n    return popupRect;\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    const colorVariant = this.colorVariant ? ` color-variant=\"${this.colorVariant}\"` : \"\";\n    const fieldHeight = this.fieldHeight ? ` field-height=\"${this.fieldHeight}\"` : \"\";\n    const labelState = this.labelState ? ` label-state=\"${this.labelState}\"` : \"\";\n    const compact = this.compact ? \" compact\" : \"\";\n    const noMargins = this.noMargins ? \" no-margins\" : \"\";\n    const classAttr = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.buildClassAttrib)(\n      \"ids-date-picker\",\n      this.isCalendarToolbar && \"is-calendar-toolbar\",\n      this.isDropdown && \"is-dropdown\"\n    );\n    return `\n      <div ${classAttr} ${this.isCalendarToolbar ? ' tabindex=\"0\"' : \"\"} part=\"container\">\n        ${this.isCalendarToolbar ? `\n          <ids-text font-size=\"20\" class=\"datepicker-text\">${this.value}</ids-text>\n          <ids-text audible=\"true\" translate-text=\"true\">SelectDay</ids-text>\n          <ids-trigger-button>\n            <ids-text audible=\"true\" translate-text=\"true\">DatePickerTriggerButton</ids-text>\n            <ids-icon icon=\"schedule\" class=\"datepicker-icon\"></ids-icon>\n          </ids-trigger-button>\n        ` : ``}\n        ${this.isDropdown ? `\n          <ids-toggle-button icon-off=\"dropdown\" icon-on=\"dropdown\" icon=\"dropdown\" icon-align=\"end\" class=\"dropdown-btn\">\n            <ids-icon icon=\"dropdown\" class=\"dropdown-btn-icon\"></ids-icon>\n            <ids-text class=\"dropdown-btn-text\" font-size=\"20\">${this.value}</ids-text>\n          </ids-toggle-button>\n          <ids-expandable-area type=\"toggle-btn\" expanded=\"${this.expanded}\">\n            <div class=\"picklist\" slot=\"pane\" role=\"application\"></div>\n          </ids-expandable-area>\n        ` : \"\"}\n        ${!(this.isDropdown || this.isCalendarToolbar) ? `\n          <ids-trigger-field\n            part=\"trigger-field\"\n            ${this.id ? `id-\"${this.id}\"` : \"\"}\n            ${this.label ? `label=\"${this.label}\"` : \"\"}\n            placeholder=\"${this.placeholder}\"\n            size=\"${this.size}\"\n            format=\"${this.format}\"\n            ${this.validate ? `validate=\"${this.validate}\"` : \"\"}\n            validation-events=\"${this.validationEvents}\"\n            value=\"${this.value}\"\n            ${this.disabled ? `disabled=\"${this.disabled}\"` : \"\"}\n            ${this.readonly ? `readonly=\"${this.readonly}\"` : \"\"}\n            ${this.dirtyTracker ? `dirty-tracker=\"${this.dirtyTracker}\"` : \"\"}\n            ${colorVariant}${fieldHeight}${compact}${noMargins}${labelState}\n          >\n            <ids-trigger-button\n              id=\"triggerBtn-${this.id ? this.id : \"\"}\"\n              slot=\"trigger-end\" part=\"trigger-button\">\n              <ids-text audible=\"true\" translate-text=\"true\">DatePickerTriggerButton</ids-text>\n              <ids-icon part=\"icon\" icon=\"schedule\"></ids-icon>\n            </ids-trigger-button>\n          </ids-trigger-field>\n        ` : ``}\n        ${!this.isDropdown ? `\n          <ids-date-picker-popup\n            id=\"popup-${this.id ? this.id : \"\"}\"\n            expanded=\"${this.expanded}\"\n            show-today=${this.showToday}\n            first-day-of-week=\"${this.firstDayOfWeek}\"\n            year=\"${this.year}\"\n            month=\"${this.month}\"\n            day=\"${this.day}\"\n            use-range=\"${this.useRange}\"\n          ></ids-date-picker-popup>\n        ` : \"\"}\n      </div>\n    `;\n  }\n  /**\n   * Callback for dirty tracker setting change\n   * @param {boolean} value The changed value\n   * @returns {void}\n   */\n  onDirtyTrackerChange(value) {\n    if (value) {\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DIRTY_TRACKER, value);\n    } else {\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DIRTY_TRACKER);\n    }\n  }\n  /**\n   * @returns {IdsDatePickerPopup} reference to the IdsPopup component\n   */\n  get popup() {\n    return this.#picker;\n  }\n  #configurePicker() {\n    if (this.#picker) {\n      this.#picker.appendToTargetParent();\n      this.#picker.popupOpenEventsTarget = document.body;\n      this.#picker.onOutsideClick = (e) => {\n        if (this.#picker) {\n          if (!e.composedPath()?.includes(this.#picker)) {\n            this.triggerEvent(\"outsideclick.datepicker\", this);\n            this.#togglePopup(false);\n          }\n        }\n      };\n      this.#picker.onTriggerClick = () => {\n        if (this.disabled || this.readonly)\n          return;\n        this.#picker?.toggleVisibility();\n      };\n      this.#picker.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_TYPE, \"click\");\n      this.#picker.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TARGET, `#${this.#triggerField.getAttribute(\"id\")}`);\n      this.#picker.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_ELEM, `#${this.#triggerButton.getAttribute(\"id\")}`);\n      if (this.#picker.popup) {\n        this.#picker.popup.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ARROW_TARGET, `#${this.#triggerButton.getAttribute(\"id\")}`);\n        if (this.localeAPI && this.localeAPI.isRTL) {\n          const rtlAdjustedAlignValue = `${this.localeAPI.isRTL() || [\"lg\", \"full\"].includes(this.size) ? \"right\" : \"left\"}`;\n          this.#picker.popup.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ALIGN, `bottom, ${rtlAdjustedAlignValue}`);\n        }\n        this.#picker.popup.onXYSwitch = _ids_picker_popup_ids_picker_popup_common__WEBPACK_IMPORTED_MODULE_14__.onPickerPopupXYSwitch;\n      }\n      this.#picker.refreshTriggerEvents();\n      if (this.#triggerField) {\n        this.#picker.format = this.format;\n        this.#picker.value = this.#triggerField.value;\n      }\n    }\n  }\n  /**\n   * Establish internal event handlers\n   * @returns {object} The object for chaining\n   */\n  #attachEventHandlers() {\n    this.offEvent(\"change.date-picker-input\");\n    this.onEvent(\"change.date-picker-input\", this.#triggerField, (e) => {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, e.detail.value);\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, e.detail.value);\n    });\n    this.offEvent(\"dayselected.date-picker-popup\");\n    this.onEvent(\"dayselected.date-picker-popup\", this.container, (e) => {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, e.detail.value);\n      this.parseEventDate(e.detail.date);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, e.detail.value);\n    });\n    this.offEvent(\"hide.date-picker-popup\");\n    this.onEvent(\"hide.date-picker-popup\", this.#picker, (e) => {\n      e.stopPropagation();\n      if (e.detail.doFocus) {\n        this.#triggerField?.focus();\n      }\n      this.#triggerSelectedEvent();\n    });\n    this.offEvent(\"focus.date-picker-input\");\n    this.onEvent(\"focus.date-picker-input\", this.#triggerField, () => {\n      this.#togglePopup(false);\n    });\n    return this;\n  }\n  // Respond to changing locale\n  onLocaleChange = () => {\n    if (this.#picker) {\n      this.#picker.format = this.format;\n      this.#picker.locale = this.locale;\n      this.#picker.language = this.language.name;\n    }\n    this.#triggerField.locale = this.locale;\n    this.#triggerField.language = this.language.name;\n    this.#triggerField.format = this.format;\n    this.setDirection();\n    this.#applyMask();\n    if (this.firstDayOfWeek === null) {\n      this.firstDayOfWeek = this.localeAPI?.calendar().firstDayofWeek || 0;\n    }\n  };\n  // Respond to changing language\n  onLanguageChange = () => {\n    this.#triggerField.language = this.language.name;\n    if (this.#picker) {\n      this.#picker.language = this.language.name;\n    }\n    this.#setAvailableDateValidation();\n  };\n  /**\n   * Establish Internal Keyboard shortcuts\n   * @returns {IdsDatePicker} this class-instance object for chaining\n   */\n  #attachKeyboardListeners() {\n    this.offEvent(\"keydown.date-picker-keyboard\");\n    this.onEvent(\"keydown.date-picker-keyboard\", this, (e) => {\n      this.#handleKeyDownEvent(e);\n    });\n    return this;\n  }\n  /**\n   * Open/close popup with month view\n   * @param {boolean} isOpen should be opened or closed\n   */\n  #togglePopup(isOpen) {\n    if (this.isDropdown)\n      return;\n    if (isOpen && !this.readonly && !this.disabled) {\n      this.#parseInputDate();\n      if (this.value) {\n        this.#picker?.setAttribute(\"value\", this.value);\n      }\n      this.#picker?.show();\n      this.container?.classList.add(\"is-open\");\n      this.#picker?.focus();\n      if (this.isCalendarToolbar) {\n        this.container?.removeAttribute(\"tabindex\");\n      }\n    } else {\n      this.#picker?.hide();\n      this.container?.classList.remove(\"is-open\");\n      if (this.isCalendarToolbar) {\n        this.container?.setAttribute(\"tabindex\", \"0\");\n      }\n    }\n  }\n  /**\n   * Defers `activeDate` to the inner IdsDatePickerPopup's active date,\n   * otherwise fallback to the one generated by this one's date props\n   * @returns {Date} activeDate from the inner monthView component\n   */\n  getActiveDate() {\n    return this.#picker?.getActiveDate() || this.activeDate;\n  }\n  /**\n   * Trigger selected event with current params\n   * @returns {void}\n   */\n  #triggerSelectedEvent() {\n    const targetDate = this.getActiveDate();\n    const args = {\n      detail: {\n        elem: this,\n        date: targetDate,\n        useRange: this.useRange,\n        rangeStart: this.useRange && this.rangeSettings.start ? new Date(this.rangeSettings.start) : null,\n        rangeEnd: this.useRange && this.rangeSettings.end ? new Date(this.rangeSettings.end) : null,\n        value: this.getFormattedDate(targetDate)\n      }\n    };\n    this.triggerEvent(\"dayselected\", this, args);\n  }\n  /**\n   * Keyboard events handler\n   * @param {KeyboardEvent} e keyboard event\n   */\n  #handleKeyDownEvent(e) {\n    if (!this.container)\n      return;\n    const key = e.key;\n    const stopEvent = () => {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n      e.preventDefault();\n    };\n    if (key === \"ArrowDown\" && !this.#picker?.popup?.visible) {\n      stopEvent();\n      this.#togglePopup(true);\n    }\n    if (key === \"Escape\") {\n      stopEvent();\n      this.#togglePopup(false);\n      this.focus();\n    }\n  }\n  /**\n   * Trigger expanded event with current params\n   * @param {boolean} expanded expanded or collapsed\n   * @returns {void}\n   */\n  #triggerExpandedEvent(expanded) {\n    const args = {\n      bubbles: true,\n      detail: {\n        elem: this,\n        expanded\n      }\n    };\n    this.triggerEvent(\"expanded\", this, args);\n  }\n  /**\n   * Parse date from value and pass as year/month/day params what triggers month view to rerender\n   */\n  #parseInputDate() {\n    if (this.isCalendarToolbar)\n      return;\n    const parsedDate = this.localeAPI.parseDate(\n      this.#triggerField?.value,\n      { dateFormat: this.format }\n    );\n    const inputDate = this.localeAPI.isIslamic() ? parsedDate && (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.umalquraToGregorian)(\n      parsedDate[0],\n      parsedDate[1],\n      parsedDate[2]\n    ) : parsedDate;\n    const setDateParams = (date) => {\n      const month = date.getMonth();\n      const year = date.getFullYear();\n      const day = date.getDate();\n      if (this.year !== year) {\n        this.year = year;\n      }\n      if (this.month !== month) {\n        this.month = month;\n      }\n      if (this.day !== day) {\n        this.day = day;\n      }\n    };\n    if (this.#hasTime()) {\n      const timePicker = this.container?.querySelector(\"ids-time-picker\");\n      if (timePicker) {\n        timePicker.value = this.#triggerField?.value;\n      }\n    }\n    if (!this.useRange) {\n      setDateParams(inputDate || new Date());\n      return;\n    }\n    const rangeParts = this.#triggerField.value?.split(this.rangeSettings.separator) || [];\n    const rangeStart = rangeParts[0] ? this.localeAPI.parseDate(\n      rangeParts[0],\n      { dateFormat: this.format }\n    ) : null;\n    const rangeEnd = rangeParts[1] ? this.localeAPI.parseDate(\n      rangeParts[1],\n      { dateFormat: this.format }\n    ) : null;\n    if (this.#picker) {\n      this.#picker.rangeSettings.start = rangeStart;\n      this.#picker.rangeSettings.end = rangeEnd;\n    }\n    setDateParams(rangeStart ?? new Date());\n  }\n  /**\n   * Takes a date string value (presumably passed from an event) and converts\n   * the value to day/month/year attributes\n   * @param {Date} val stringified date\n   */\n  parseEventDate(val) {\n    if (!val || typeof val !== \"string\")\n      return;\n    const date = new Date(val);\n    if (!(0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(date))\n      return;\n    const month = date.getMonth();\n    const year = date.getFullYear();\n    const day = date.getDate();\n    if (this.year !== year) {\n      this.year = year;\n    }\n    if (this.month !== month) {\n      this.month = month;\n    }\n    if (this.day !== day) {\n      this.day = day;\n    }\n  }\n  /**\n   * Applying ids-mask to the input when changing locale or format\n   */\n  #applyMask() {\n    if (this.#triggerField && this.mask) {\n      const prevFormat = this.#triggerField.maskOptions.format;\n      const prevDelimeter = this.#triggerField.maskOptions.delimiter;\n      this.#triggerField.mask = this.useRange ? \"rangeDate\" : \"date\";\n      this.#triggerField.maskOptions = { format: this.format, delimiter: this.rangeSettings.separator };\n      if (this.useRange && this.value) {\n        const [start, end] = this.value.split(prevDelimeter || this.rangeSettings.separator).map((dateStr) => {\n          const parsedDate = this.localeAPI.parseDate(dateStr?.trim(), { pattern: prevFormat || this.format });\n          return parsedDate;\n        });\n        this.#triggerField.value = [\n          this.getFormattedDate(start ?? \"\"),\n          this.rangeSettings.separator,\n          this.getFormattedDate(end ?? \"\")\n        ].join(\"\");\n      } else {\n        this.#triggerField.value = this.getFormattedDate(this.dateValue ?? \"\");\n      }\n    }\n  }\n  /**\n   * Available date validation extend validation mixin\n   * Uses month view to define if date is available\n   */\n  #setAvailableDateValidation() {\n    if (this.validate?.includes(\"availableDate\")) {\n      this.#triggerField?.addValidationRule({\n        id: \"availableDate\",\n        type: \"error\",\n        message: this.localeAPI?.translate(\"UnavailableDate\"),\n        check: (input) => {\n          if (!input.value)\n            return true;\n          const date = this.localeAPI.parseDate(\n            input.value,\n            this.format\n          );\n          return (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(date) && !this.#picker?.isDisabledByDate(date);\n        }\n      });\n    }\n  }\n  /**\n   * Focuses input or dropdown\n   * @returns {void}\n   */\n  focus() {\n    this.#triggerField?.focus();\n    this.container?.querySelector(\"ids-toggle-button\")?.container?.focus();\n    if (this.isCalendarToolbar) {\n      this.container?.focus();\n    }\n  }\n  /**\n   * Public method to open calendar popup\n   * @returns {void}\n   */\n  open() {\n    this.#togglePopup(true);\n  }\n  /**\n   * Public method to close calendar popup\n   * @returns {void}\n   */\n  close() {\n    this.#togglePopup(false);\n  }\n  /**\n   * Defines if the format has hours/minutes/seconds pattern to show time picker\n   * @returns {boolean} whether or not to show time picker\n   */\n  #hasTime() {\n    return this.format?.includes(\"h\") || this.format?.includes(\"m\") || this.format?.includes(\"s\");\n  }\n  /**\n   * Helper to set the date with time from time picker\n   * @param {any} val date to add time values\n   * @returns {Date} date with time values\n   */\n  #setTime(val) {\n    const date = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(val) ? val : new Date(val);\n    const timePicker = this.container?.querySelector(\"ids-time-picker\");\n    if (!this.#hasTime() || !timePicker)\n      return date;\n    const hours = timePicker.hours;\n    const minutes = timePicker.minutes;\n    const seconds = timePicker.seconds;\n    const period = timePicker.period;\n    const dayPeriodIndex = this.localeAPI?.calendar().dayPeriods?.indexOf(period);\n    date.setHours((0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_16__.hoursTo24)(hours, dayPeriodIndex), minutes, seconds);\n    return date;\n  }\n  /**\n   * Handles id attribute changes\n   * @param {string} value id value\n   */\n  onIdChange(value) {\n    if (value) {\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ID, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ID);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ID);\n    }\n  }\n  /**\n   * Indicates if input, dropdown or the calendar toolbar has focus\n   * @returns {boolean} whether or not an element has focus\n   */\n  get hasFocus() {\n    const input = this.#triggerField?.container.querySelector(\"input\");\n    const dropdown = this.container?.querySelector(\".dropdown-btn\")?.shadowRoot?.querySelector(\"button\");\n    return input?.matches(\":focus\") || dropdown?.matches(\":focus\");\n  }\n  /**\n   * value attribute\n   * @returns {string} value param\n   */\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE) ?? \"\";\n  }\n  /**\n   * Set input value. Should parse a date from the value\n   * Set dropdown button text if the component is dropdown\n   * Set text if the component is used in calendar toolbar\n   * @param {string|null} val value param\n   */\n  set value(val) {\n    const textEl = this.container?.querySelector(\".datepicker-text\");\n    const dropdownEl = this.container?.querySelector(\".dropdown-btn-text\");\n    this.dateValue = this.getDateValue(val);\n    if (!this.disabled && !this.readonly) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, String(val));\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, val);\n      if (textEl) {\n        textEl.innerText = val ?? \"\";\n      }\n      if (dropdownEl) {\n        dropdownEl.innerText = val ?? \"\";\n      }\n    }\n  }\n  /**\n   * placeholder attribute\n   * @returns {string} placeholder param\n   */\n  get placeholder() {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER));\n    return boolVal ? this.format : \"\";\n  }\n  /**\n   * Set input placeholder\n   * @param {boolean|string|null} val of placeholder to be set\n   */\n  set placeholder(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, this.placeholder);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, this.placeholder);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n    }\n  }\n  /**\n   * disabled attribute\n   * @returns {boolean} disabled param\n   */\n  get disabled() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n  }\n  /**\n   * Set trigger field disabled attribute\n   * @param {string|boolean|null} val disabled param value\n   */\n  set disabled(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"true\");\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, boolVal);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    }\n  }\n  /**\n   * readonly attribute\n   * @returns {boolean} readonly param\n   */\n  get readonly() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n  }\n  /**\n   * Set trigger field readonly attribute\n   * @param {string|boolean|null} val readonly param value\n   */\n  set readonly(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, \"true\");\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n    }\n  }\n  /**\n   * size attribute\n   * default is sm\n   * @returns {string} size param\n   */\n  get size() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE) ?? \"sm\";\n  }\n  /**\n   * Set the size (width) of input\n   * @param {string|null} val [xs, sm, mm, md, lg, full]\n   */\n  set size(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, val);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, val);\n      if (val === \"full\")\n        this.container?.classList.add(\"full\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, \"sm\");\n      this.container?.classList.remove(\"full\");\n    }\n  }\n  /**\n   * tabbable attribute\n   * @returns {boolean} tabbable param\n   */\n  get tabbable() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n    return attrVal !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal) : true;\n  }\n  /**\n   * Set trigger field tabbable attribute\n   * @param {boolean|string|null} val true of false depending if the trigger field is tabbable\n   */\n  set tabbable(val) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE, String(val));\n    this.#triggerButton?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE, val);\n  }\n  /**\n   * validate attribute\n   * @returns {string|null} validate param\n   */\n  get validate() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n  }\n  /**\n   * Set trigger field/input validation\n   * @param {string|null} val validate param\n   */\n  set validate(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE, val);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE, val);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, this.validationEvents);\n      this.#triggerField?.handleValidation();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n      this.#triggerField?.handleValidation();\n    }\n    this.#setAvailableDateValidation();\n  }\n  /**\n   * validation-events attributes\n   * @returns {string} validationEvents param. Default is 'change blur'\n   */\n  get validationEvents() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS) ?? \"change blur\";\n  }\n  /**\n   * Set which input events to fire validation on\n   * @param {string|null} val validation-events attribute\n   */\n  set validationEvents(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, val);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, val);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n    }\n  }\n  onFormatChange(newValue) {\n    if (newValue) {\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FORMAT, newValue);\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FORMAT, newValue);\n    } else {\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FORMAT);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FORMAT);\n    }\n    if (this.placeholder) {\n      this.placeholder = this.format;\n    }\n    this.#applyMask();\n  }\n  /**\n   * is-calendar-toolbar attribute\n   * @returns {boolean} isCalendarToolbar param converted to boolean from attribute value\n   */\n  get isCalendarToolbar() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_CALENDAR_TOOLBAR);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n  }\n  /**\n   * Set whether or not the component is used in calendar toolbar\n   * @param {string|boolean|null} val is-calendar-toolbar attribute\n   */\n  set isCalendarToolbar(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_CALENDAR_TOOLBAR, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_CALENDAR_TOOLBAR);\n    }\n    this.container?.classList.toggle(\"is-calendar-toolbar\", boolVal);\n  }\n  /**\n   * is-dropdown attribute\n   * @returns {boolean} isDropdown param converted to boolean from attribute value\n   */\n  get isDropdown() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DROPDOWN);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n  }\n  /**\n   * Set whether or not the component is dropdown type\n   * @param {string|boolean|null} val is-dropdown attribute value\n   */\n  set isDropdown(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DROPDOWN, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.IS_DROPDOWN);\n    }\n    this.container?.classList.toggle(\"is-dropdown\", boolVal);\n  }\n  /**\n   * show-today attribute\n   * @returns {boolean} showToday param converted to boolean from attribute value\n   */\n  get showToday() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY);\n    return attrVal !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal) : true;\n  }\n  /**\n   * Set whether or not month view today button should be show\n   * @param {string|boolean|null} val show-today attribute value\n   */\n  set showToday(val) {\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY, String(val));\n    this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_TODAY, String(val));\n  }\n  /**\n   * Sets the no margins attribute\n   * @param {boolean} value The value for no margins attribute\n   */\n  set noMargins(value) {\n    if ((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(value)) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, \"\");\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, \"\");\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n    this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n  }\n  get noMargins() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS));\n  }\n  onFirstDayOfWeekChange(newValue) {\n    this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.FIRST_DAY_OF_WEEK, String(newValue));\n  }\n  onMonthChange(newValue, isValid) {\n    if (isValid) {\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MONTH, String(newValue));\n    } else {\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MONTH);\n    }\n    if (this.isCalendarToolbar)\n      this.#togglePopup(isValid);\n  }\n  onYearChange(newValue, isValid) {\n    if (isValid) {\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.YEAR, String(newValue));\n    } else {\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.YEAR);\n    }\n    if (this.isCalendarToolbar)\n      this.#togglePopup(isValid);\n  }\n  onDayChange(newValue, isValid) {\n    if (isValid) {\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DAY, String(newValue));\n    } else {\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DAY);\n    }\n    if (this.isCalendarToolbar)\n      this.#togglePopup(isValid);\n  }\n  /**\n   * @returns {HTMLInputElement} Reference to the IdsTriggerField\n   */\n  get input() {\n    return this.#triggerField;\n  }\n  /**\n   * expanded attribute\n   * @returns {boolean} whether the month/year picker expanded or not\n   */\n  get expanded() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED));\n  }\n  /**\n   * Set whether or not the month/year picker should be expanded\n   * @param {string|boolean|null} val expanded attribute value\n   */\n  set expanded(val) {\n    if (!this.isDropdown || !this.container)\n      return;\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED, `${boolVal}`);\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED, String(val));\n      this.#triggerExpandedEvent(boolVal);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED);\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.EXPANDED);\n    }\n    this.container.classList.toggle(\"is-expanded\", boolVal);\n  }\n  onDisableSettingsChange(val) {\n    if (this.#picker)\n      this.#picker.disableSettings = val;\n  }\n  onLegendSettingsChange(val) {\n    if (this.#picker)\n      this.#picker.legend = val;\n  }\n  onRangeSettingsChange(val) {\n    if (this.#picker) {\n      this.#picker.rangeSettings = val;\n      if (val?.start && val?.end) {\n        const startDate = this.localeAPI.formatDate(this.#setTime(val.start), { pattern: this.format });\n        const endDate = this.localeAPI.formatDate(this.#setTime(val.end), { pattern: this.format });\n        this.value = `${startDate}${this.rangeSettings.separator}${endDate}`;\n      }\n    }\n  }\n  onUseRangeChange(val) {\n    const btnApply = this.container?.querySelector(\".popup-btn-apply\");\n    if (val) {\n      this.#picker?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.USE_RANGE, String(val));\n      btnApply?.removeAttribute(\"hidden\");\n      btnApply?.setAttribute(\"disabled\", \"true\");\n    } else {\n      this.#picker?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.USE_RANGE);\n      btnApply?.setAttribute(\"hidden\", \"true\");\n      btnApply?.removeAttribute(\"disabled\");\n    }\n  }\n  /**\n   * mask attribute\n   * @returns {boolean} if date mask is enabled\n   */\n  get mask() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK);\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n  }\n  /**\n   * Enable/disable date mask for the input\n   * @param {string|boolean|null} val mask param value\n   */\n  set mask(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK, \"true\");\n      this.#triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK, this.useRange ? \"rangeDate\" : \"date\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK);\n      this.#triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MASK);\n    }\n  }\n  /**\n   * minute-interval attribute\n   * @returns {number} minuteInterval value\n   */\n  get minuteInterval() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToNumber)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MINUTE_INTERVAL));\n  }\n  /**\n   * Set interval in minutes dropdown\n   * @param {string|number|null} val minute-interval attribute value\n   */\n  set minuteInterval(val) {\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToNumber)(val);\n    if (numberVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MINUTE_INTERVAL, String(numberVal));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MINUTE_INTERVAL);\n    }\n    if (this.#picker)\n      this.#picker.secondInterval = numberVal;\n  }\n  /**\n   * second-interval attribute\n   * @returns {number} secondInterval value\n   */\n  get secondInterval() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToNumber)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SECOND_INTERVAL));\n  }\n  /**\n   * Set interval in seconds dropdown\n   * @param {string|number|null} val second-interval attribute value\n   */\n  set secondInterval(val) {\n    const numberVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToNumber)(val);\n    if (numberVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SECOND_INTERVAL, String(numberVal));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SECOND_INTERVAL);\n    }\n    if (this.#picker)\n      this.#picker.secondInterval = numberVal;\n  }\n  /**\n   * show-clear attribute\n   * @returns {boolean} showClear param converted to boolean from attribute value\n   */\n  get showClear() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CLEAR));\n  }\n  /**\n   * Set whether or not to show clear button in the calendar popup\n   * @param {string|boolean|null} val show-clear attribute value\n   */\n  set showClear(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CLEAR, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CLEAR);\n    }\n    if (this.#picker)\n      this.#picker.showClear = boolVal;\n  }\n  /**\n   * show-cancel attribute\n   * @returns {boolean} showCancel param converted to boolean from attribute value\n   */\n  get showCancel() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CANCEL));\n  }\n  /**\n   * Set whether or not to show cancel button when the picker is expanded\n   * @param {string|boolean|null} val show-cancel attribute value\n   */\n  set showCancel(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CANCEL, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_CANCEL);\n    }\n    if (this.#picker)\n      this.#picker.showCancel = boolVal;\n  }\n  /**\n   * show-picklist-year attribute, default is true\n   * @returns {boolean} showPicklistYear param converted to boolean from attribute value\n   */\n  get showPicklistYear() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_YEAR);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of years in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-year attribute converted to boolean\n   */\n  set showPicklistYear(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_YEAR, String(boolVal));\n    if (this.#picker)\n      this.#picker.showPicklistYear = boolVal;\n  }\n  /**\n   * show-picklist-month attribute, default is true\n   * @returns {boolean} showPicklistMonth param converted to boolean from attribute value\n   */\n  get showPicklistMonth() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_MONTH);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of months in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-month attribute converted to boolean\n   */\n  set showPicklistMonth(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_MONTH, String(boolVal));\n    if (this.#picker)\n      this.#picker.showPicklistMonth = boolVal;\n  }\n  /**\n   * show-picklist-week attribute\n   * @returns {boolean} showPicklistWeek param converted to boolean from attribute value\n   */\n  get showPicklistWeek() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_WEEK));\n  }\n  /**\n   * Whether or not to show week numbers in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-week attribute converted to boolean\n   */\n  set showPicklistWeek(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHOW_PICKLIST_WEEK, String(boolVal));\n    if (this.#picker)\n      this.#picker.showPicklistWeek = boolVal;\n  }\n  /**\n   * use-current-time attribute\n   * @returns {number} useCurrentTime param converted to boolean from attribute value\n   */\n  get useCurrentTime() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.USE_CURRENT_TIME));\n  }\n  /**\n   * Set whether or not to show current time in the time picker\n   * @param {string|boolean|null} val useCurrentTime param value\n   */\n  set useCurrentTime(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_15__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.USE_CURRENT_TIME, boolVal.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.USE_CURRENT_TIME);\n    }\n    if (this.#picker)\n      this.#picker.useCurrentTime = boolVal;\n  }\n};\nIdsDatePicker = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-date-picker\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_date_picker_scss__WEBPACK_IMPORTED_MODULE_24__[\"default\"])\n], IdsDatePicker);\nvar ids_date_picker_default = IdsDatePicker;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-date-picker.ts\n");

/***/ }),

/***/ "./src/components/ids-date-picker/ids-month-year-picklist.ts":
/*!*******************************************************************!*\
  !*** ./src/components/ids-date-picker/ids-month-year-picklist.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ids_month_year_picklist_default)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-date-attribute-mixin/ids-date-attribute-mixin */ \"./src/mixins/ids-date-attribute-mixin/ids-date-attribute-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../utils/ids-date-utils/ids-date-utils */ \"./src/utils/ids-date-utils/ids-date-utils.ts\");\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./ids-date-picker-common */ \"./src/components/ids-date-picker/ids-date-picker-common.ts\");\n/* harmony import */ var _ids_month_year_picklist_scss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ids-month-year-picklist.scss */ \"./src/components/ids-date-picker/ids-month-year-picklist.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_date_attribute_mixin_ids_date_attribute_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n    (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n      (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n        (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n          _core_ids_element__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n        )\n      )\n    )\n  )\n);\nlet IdsMonthYearPicklist = class extends Base {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.attachEventListeners();\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ROLE, \"application\");\n    if (!this.hasPicklistConfigurationAttributes()) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH, \"true\");\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR, \"true\");\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      ..._ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.IdsDatePickerCommonAttributes\n    ];\n  }\n  template() {\n    return `<div class=\"picklist\">\n      ${this.showPicklistWeek ? this.templatePicklistWeeks() : \"\"}\n      ${this.showPicklistMonth && !this.showPicklistWeek ? this.templatePicklistMonths() : \"\"}\n      ${this.showPicklistYear ? this.templatePicklistYears() : \"\"}\n    </div>`;\n  }\n  templatePicklistWeeks() {\n    return `<div class=\"picklist-section week\">\n      <ul class=\"picklist-list\">\n        <li class=\"picklist-item is-btn-up is-week-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">PreviousWeek</ids-text>\n          <ids-icon icon=\"chevron-up\"></ids-icon>\n        </li>\n        ${this.renderPicklistWeeks()}\n        <li class=\"picklist-item is-btn-down is-week-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">NextWeek</ids-text>\n          <ids-icon icon=\"chevron-down\"></ids-icon>\n        </li>\n      </ul>\n    </div>`;\n  }\n  templatePicklistMonths() {\n    return `<div class=\"picklist-section month\">\n      <ul class=\"picklist-list\">\n        <li class=\"picklist-item is-btn-up is-month-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">PreviousMonth</ids-text>\n          <ids-icon icon=\"chevron-up\"></ids-icon>\n        </li>\n        ${this.renderPicklistMonths()}\n        <li class=\"picklist-item is-btn-down is-month-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">NextMonth</ids-text>\n          <ids-icon icon=\"chevron-down\"></ids-icon>\n        </li>\n      </ul>\n    </div>`;\n  }\n  templatePicklistYears() {\n    return `<div class=\"picklist-section year\">\n      <ul class=\"picklist-list\">\n        <li class=\"picklist-item is-btn-up is-year-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">PreviousYear</ids-text>\n          <ids-icon icon=\"chevron-up\"></ids-icon>\n        </li>\n        ${this.renderPicklistYears()}\n        <li class=\"picklist-item is-btn-down is-year-nav\">\n          <ids-text audible=\"true\" translate-text=\"true\">NextYear</ids-text>\n          <ids-icon icon=\"chevron-down\"></ids-icon>\n        </li>\n      </ul>\n    </div>`;\n  }\n  refreshPicklists() {\n    if (this.container) {\n      this.container.innerHTML = `\n        ${this.showPicklistWeek ? this.templatePicklistWeeks() : \"\"}\n        ${this.showPicklistMonth && !this.showPicklistWeek ? this.templatePicklistMonths() : \"\"}\n        ${this.showPicklistYear ? this.templatePicklistYears() : \"\"}\n      `;\n    }\n  }\n  /**\n   * disabled attribute\n   * @returns {boolean} disabled param\n   */\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED));\n  }\n  /**\n   * Set trigger field disabled attribute\n   * @param {string|boolean|null} val disabled param value\n   */\n  set disabled(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED);\n    }\n  }\n  /**\n   * @returns {boolean} true if any picklists are currently showing\n   */\n  hasPicklistConfigurationAttributes() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH) || this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR) || this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK);\n  }\n  attachEventListeners() {\n    this.offEvent(\"click.month-year-picklist\");\n    this.onEvent(\"click.month-year-picklist\", this.container, (e) => {\n      this.handlePicklistEvent(e);\n    });\n    this.offEvent(\"keydown.month-year-picklist\");\n    this.onEvent(\"keydown.month-year-picklist\", this.container, (e) => {\n      this.handleKeyDownEvent(e);\n    });\n  }\n  /**\n   * Keyboard events handler\n   * @param {KeyboardEvent} e keyboard event\n   */\n  handleKeyDownEvent(e) {\n    if (!this.container)\n      return;\n    const key = e.key;\n    const btnUpYear = this.container.querySelector(\".is-btn-up.is-year-nav\");\n    const btnDownYear = this.container.querySelector(\".is-btn-down.is-year-nav\");\n    const btnUpMonth = this.container.querySelector(\".is-btn-up.is-month-nav\");\n    const btnDownMonth = this.container.querySelector(\".is-btn-down.is-month-nav\");\n    const btnUpWeek = this.container.querySelector(\".is-btn-up.is-week-nav\");\n    const btnDownWeek = this.container.querySelector(\".is-btn-down.is-week-nav\");\n    const monthSelected = this.container.querySelector(\".is-month.is-selected\");\n    const yearSelected = this.container.querySelector(\".is-year.is-selected\");\n    const weekSelected = this.container.querySelector(\".is-week.is-selected\");\n    if (key === \"Enter\") {\n      if (btnUpYear?.matches(\":focus\")) {\n        this.picklistYearPaged(false);\n      }\n      if (btnDownYear?.matches(\":focus\")) {\n        this.picklistYearPaged(true);\n      }\n      if (btnUpMonth?.matches(\":focus\") || btnDownMonth?.matches(\":focus\")) {\n        this.picklistMonthPaged();\n      }\n      if (btnUpWeek?.matches(\":focus\")) {\n        this.picklistWeekPaged(false);\n      }\n      if (btnDownWeek?.matches(\":focus\")) {\n        this.picklistWeekPaged(true);\n      }\n    }\n    if (key === \"ArrowUp\" && monthSelected?.matches(\":focus\")) {\n      const month = this.month - 1;\n      const el = this.container.querySelector(`.is-month[data-month=\"${month}\"]`);\n      this.unselectPicklist(\"month\");\n      if (!el) {\n        btnUpMonth?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.month = month;\n      el?.focus();\n    }\n    if (key === \"ArrowDown\" && monthSelected?.matches(\":focus\")) {\n      const month = this.month + 1;\n      const el = this.container.querySelector(`.is-month[data-month=\"${month}\"]`);\n      this.unselectPicklist(\"month\");\n      if (!el) {\n        btnDownMonth?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.month = month;\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && yearSelected?.matches(\":focus\")) {\n      const year = this.year - 1;\n      const el = this.container.querySelector(`.is-year[data-year=\"${year}\"]`);\n      this.unselectPicklist(\"year\");\n      if (!el) {\n        btnUpYear?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.year = year;\n      el?.focus();\n    }\n    if (key === \"ArrowDown\" && yearSelected?.matches(\":focus\")) {\n      const year = this.year + 1;\n      const el = this.container.querySelector(`.is-year[data-year=\"${year}\"]`);\n      this.unselectPicklist(\"year\");\n      if (!el) {\n        btnDownYear?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.year = year;\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && weekSelected?.matches(\":focus\")) {\n      const weekIndex = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(weekSelected.dataset.week) - 1;\n      const week = this.getWeekNumber(weekIndex);\n      const el = this.container.querySelector(`.is-week[data-week=\"${week}\"]`);\n      this.unselectPicklist(\"week\");\n      if (!el) {\n        btnUpWeek?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.setWeekDate(week);\n      el?.focus();\n    }\n    if (key === \"ArrowDown\" && weekSelected?.matches(\":focus\")) {\n      const weekIndex = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(weekSelected.dataset.week) + 1;\n      const week = this.getWeekNumber(weekIndex);\n      const el = this.container.querySelector(`.is-week[data-week=\"${week}\"]`);\n      this.unselectPicklist(\"week\");\n      if (!el) {\n        btnDownWeek?.focus();\n        return;\n      }\n      this.selectPicklistEl(el);\n      this.setWeekDate(week);\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && btnUpYear?.matches(\":focus\")) {\n      btnDownYear?.focus();\n      return;\n    }\n    if (key === \"ArrowDown\" && btnDownYear?.matches(\":focus\")) {\n      btnUpYear?.focus();\n      return;\n    }\n    if (key === \"ArrowUp\" && btnDownYear?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-year.is-last\");\n      this.unselectPicklist(\"year\");\n      this.selectPicklistEl(el);\n      this.year = el?.dataset?.year || null;\n      el?.focus();\n    }\n    if (key === \"ArrowDown\" && btnUpYear?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-year\");\n      this.unselectPicklist(\"year\");\n      this.selectPicklistEl(el);\n      this.year = el?.dataset.year || null;\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && btnUpMonth?.matches(\":focus\")) {\n      btnDownMonth?.focus();\n      return;\n    }\n    if (key === \"ArrowDown\" && btnDownMonth?.matches(\":focus\")) {\n      btnUpMonth?.focus();\n      return;\n    }\n    if (key === \"ArrowUp\" && btnDownMonth?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-month.is-last\");\n      this.unselectPicklist(\"month\");\n      this.selectPicklistEl(el);\n      this.month = el?.dataset.month || null;\n      el?.focus();\n    }\n    if (key === \"ArrowDown\" && btnUpMonth?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-month\");\n      this.unselectPicklist(\"month\");\n      this.selectPicklistEl(el);\n      this.month = el?.dataset.month || null;\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && btnUpWeek?.matches(\":focus\")) {\n      btnDownWeek?.focus();\n      return;\n    }\n    if (key === \"ArrowDown\" && btnDownWeek?.matches(\":focus\")) {\n      btnUpWeek?.focus();\n      return;\n    }\n    if (key === \"ArrowUp\" && btnDownWeek?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-week.is-last\");\n      this.unselectPicklist(\"month\");\n      this.selectPicklistEl(el);\n      this.setWeekDate((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(el?.dataset.week));\n      el?.focus();\n    }\n    if (key === \"ArrowUp\" && btnUpWeek?.matches(\":focus\")) {\n      const el = this.container.querySelector(\".is-week\");\n      this.unselectPicklist(\"week\");\n      this.selectPicklistEl(el);\n      this.setWeekDate((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(el?.dataset.week));\n      el?.focus();\n    }\n  }\n  /**\n   * Get a list of years to be attached to the picklist\n   * @returns {string|undefined} years list items\n   */\n  renderPicklistYears() {\n    const disabledSettings = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_10__.getClosest)(this, \"ids-month-view\")?.disableSettings;\n    const startYear = this.year - 2;\n    const years = Array.from({ length: _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH }).map((_, index) => {\n      const year = startYear + index;\n      const isDisabled = disabledSettings?.years?.includes(year);\n      return `<li\n        data-year=\"${year}\"\n        class=\"picklist-item is-year${index === _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 ? \" is-last\" : \"\"}${isDisabled ? \" is-disabled\" : \"\"}\"\n      ><ids-text${isDisabled ? ' disabled=\"true\"' : \"\"}>${year}</ids-text></li>`;\n    }).join(\"\");\n    return years;\n  }\n  /**\n   * Get a list of months to be attached to the picklist\n   * @returns {string|undefined} months list items\n   */\n  renderPicklistMonths() {\n    const monthsList = _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.MONTH_KEYS.map((item) => this.localeAPI?.translate(`MonthWide${item}`));\n    const months = monthsList?.map((item, index) => `<li\n        data-month=\"${index}\"\n        class=\"picklist-item is-month${index === _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 || index === 11 ? \" is-last\" : \"\"}\"\n      ><ids-text>${item}</ids-text></li>`).filter(\n      (_, index) => this.month <= _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 && index <= _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 || this.month > _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 && index > _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1\n    ).join(\"\");\n    return months;\n  }\n  /**\n   * Get a list of week numbers to be attached to the picklist\n   * @returns {string|undefined} week numbers items\n   */\n  renderPicklistWeeks() {\n    const currentWeek = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__.weekNumber)(new Date(this.year, this.month, this.day));\n    const startWeek = currentWeek <= _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH ? 1 : currentWeek - 2;\n    const weeks = Array.from({ length: _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH }).map((_, index) => {\n      const weekIndex = startWeek + index;\n      const week = this.getWeekNumber(weekIndex);\n      return `<li\n        data-week=\"${week}\"\n        class=\"picklist-item is-week${index === _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 ? \" is-last\" : \"\"}\"\n      ><ids-text>${week}</ids-text></li>`;\n    }).join(\"\");\n    return weeks;\n  }\n  /**\n   * Helper to get week number from paginated index\n   * @param {number} weekIndex index number as it comes from the paged loop\n   * @returns {number} week number\n   */\n  getWeekNumber(weekIndex) {\n    const totalWeeks = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__.weekNumber)(new Date(this.year, 11, 31), this.firstDayOfWeek);\n    if (weekIndex > totalWeeks) {\n      return weekIndex % totalWeeks;\n    }\n    if (weekIndex < 1) {\n      return totalWeeks + weekIndex;\n    }\n    return weekIndex;\n  }\n  /**\n   * Click to picklist elements event handler\n   * @param {MouseEvent} e click event\n   */\n  handlePicklistEvent(e) {\n    if (!e.target)\n      return;\n    e.stopPropagation();\n    const btnUpYear = e.target.closest(\".is-btn-up.is-year-nav\");\n    const btnDownYear = e.target.closest(\".is-btn-down.is-year-nav\");\n    const btnUpMonth = e.target.closest(\".is-btn-up.is-month-nav\");\n    const btnDownMonth = e.target.closest(\".is-btn-down.is-month-nav\");\n    const btnUpWeek = e.target.closest(\".is-btn-up.is-week-nav\");\n    const btnDownWeek = e.target.closest(\".is-btn-down.is-week-nav\");\n    const monthItem = e.target.closest(\".is-month\");\n    const yearItem = e.target.closest(\".is-year\");\n    const weekItem = e.target.closest(\".is-week\");\n    if (btnUpYear) {\n      this.picklistYearPaged(false);\n    }\n    if (btnDownYear) {\n      this.picklistYearPaged(true);\n    }\n    if (btnUpMonth || btnDownMonth) {\n      this.picklistMonthPaged();\n    }\n    if (btnUpWeek) {\n      this.picklistWeekPaged(false);\n    }\n    if (btnDownWeek) {\n      this.picklistWeekPaged(true);\n    }\n    if (monthItem) {\n      this.unselectPicklist(\"month\");\n      this.selectPicklistEl(monthItem);\n      monthItem.focus();\n      this.month = monthItem.dataset.month;\n    }\n    if (yearItem) {\n      const disabledSettings = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_10__.getClosest)(this, \"ids-month-view\")?.disableSettings;\n      const isDisabled = disabledSettings?.years?.includes((0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(yearItem.dataset.year));\n      if (isDisabled)\n        return;\n      this.unselectPicklist(\"year\");\n      this.selectPicklistEl(yearItem);\n      yearItem.focus();\n      this.year = yearItem.dataset.year;\n    }\n    if (weekItem) {\n      this.unselectPicklist(\"week\");\n      this.selectPicklistEl(weekItem);\n      weekItem.focus();\n      const week = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(weekItem.dataset.week);\n      const date = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__.weekNumberToDate)(this.year, week, this.firstDayOfWeek);\n      this.month = date.getMonth();\n      this.day = date.getDate();\n    }\n  }\n  /**\n   * Loop through the year list and increase/descrese year depends on the param\n   * @param {boolean} isNext increase/descrese picklist year\n   */\n  picklistYearPaged(isNext) {\n    const disabledSettings = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_10__.getClosest)(this, \"ids-month-view\")?.disableSettings;\n    this.container?.querySelectorAll(\".picklist-item.is-year\").forEach((el) => {\n      const elYear = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(el.dataset.year);\n      const year = isNext ? elYear + _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH : elYear - _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH;\n      const isDisabled = disabledSettings?.years?.includes(year);\n      el.dataset.year = year;\n      el.querySelector(\"ids-text\").textContent = year;\n      el.classList.toggle(\"is-disabled\", isDisabled);\n      el.querySelector(\"ids-text\").disabled = isDisabled;\n      if (el.classList.contains(\"is-selected\") && !isDisabled) {\n        this.selectPicklistEl(el);\n        this.year = year;\n      }\n    });\n  }\n  /**\n   * Loop through the entire list of the months\n   */\n  picklistMonthPaged() {\n    const monthsList = _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.MONTH_KEYS.map((item) => this.localeAPI?.translate(`MonthWide${item}`));\n    this.container?.querySelectorAll(\".picklist-item.is-month\").forEach((el, index) => {\n      const elMonth = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(el.dataset.month);\n      const month = elMonth > _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH - 1 ? 0 + index : _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH + index;\n      el.dataset.month = month;\n      el.querySelector(\"ids-text\").textContent = monthsList[month];\n      if (el.classList.contains(\"is-selected\")) {\n        this.selectPicklistEl(el);\n        this.month = month;\n      }\n    });\n  }\n  /**\n   * Loop through the week list and increase/descrese week depends on the param\n   * @param {boolean} isNext increase/descrese picklist week\n   */\n  picklistWeekPaged(isNext) {\n    this.container?.querySelectorAll(\".picklist-item.is-week\").forEach((el) => {\n      const elWeek = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToNumber)(el.dataset.week);\n      const weekIndex = isNext ? elWeek + _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH : elWeek - _ids_date_picker_common__WEBPACK_IMPORTED_MODULE_12__.PICKLIST_LENGTH;\n      const week = this.getWeekNumber(weekIndex);\n      el.dataset.week = week;\n      el.querySelector(\"ids-text\").textContent = week;\n      if (el.classList.contains(\"is-selected\")) {\n        this.selectPicklistEl(el);\n      }\n    });\n  }\n  /**\n   * Set month and day params based on week number\n   * @param {number} week number of a week\n   */\n  setWeekDate(week) {\n    const date = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__.weekNumberToDate)(this.year, week, this.firstDayOfWeek);\n    this.month = date.getMonth();\n    this.day = date.getDate();\n  }\n  /**\n   * Add selectable/tabbable attributes to picklist element\n   * @param {HTMLElement} el element to handle\n   */\n  selectPicklistEl(el) {\n    el?.classList.add(\"is-selected\");\n    el?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABINDEX, \"0\");\n    el?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ARIA_SELECTED, \"true\");\n    el?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ROLE, \"gridcell\");\n  }\n  /**\n   * Reset picklist selectable/tabbable attributes\n   * @param {'month'|'year'|'all'} type of panel to unselect\n   */\n  unselectPicklist(type) {\n    const selector = `.picklist-item${type !== \"all\" ? `.is-${type}` : \"\"}`;\n    this.container?.querySelectorAll(selector).forEach((el) => {\n      el.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABINDEX);\n      el.classList.remove(\"is-selected\");\n      el.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ARIA_SELECTED);\n      if (el.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ROLE) === \"gridcell\") {\n        el.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.htmlAttributes.ROLE, \"link\");\n      }\n    });\n  }\n  /**\n   * show-picklist-year attribute, default is true\n   * @returns {boolean} showPicklistYear param converted to boolean from attribute value\n   */\n  get showPicklistYear() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of years in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-year attribute converted to boolean\n   */\n  set showPicklistYear(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_YEAR);\n    }\n    this.refreshPicklists();\n  }\n  /**\n   * show-picklist-month attribute, default is true\n   * @returns {boolean} showPicklistMonth param converted to boolean from attribute value\n   */\n  get showPicklistMonth() {\n    const attrVal = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH);\n    if (attrVal) {\n      return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(attrVal);\n    }\n    return true;\n  }\n  /**\n   * Whether or not to show a list of months in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-month attribute converted to boolean\n   */\n  set showPicklistMonth(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_MONTH);\n    }\n    this.refreshPicklists();\n  }\n  /**\n   * show-picklist-week attribute\n   * @returns {boolean} showPicklistWeek param converted to boolean from attribute value\n   */\n  get showPicklistWeek() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK));\n  }\n  /**\n   * Whether or not to show week numbers in the picklist\n   * @param {string | boolean | null} val value to be set as show-picklist-week attribute converted to boolean\n   */\n  set showPicklistWeek(val) {\n    const boolVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_11__.stringToBool)(val);\n    if (boolVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SHOW_PICKLIST_WEEK);\n    }\n    this.refreshPicklists();\n  }\n  /**\n   * Respond to locale changes\n   */\n  onLocaleChange = () => {\n    this.refreshPicklists();\n  };\n  activatePicklist() {\n    if (!this.container)\n      return;\n    const picklistBtns = this.container.querySelectorAll(\".picklist-item.is-btn-up, .picklist-item.is-btn-down\");\n    picklistBtns.forEach((item) => {\n      item.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABINDEX, \"0\");\n    });\n    const monthEl = this.container.querySelector(`.picklist-item.is-month[data-month=\"${this.month}\"]`);\n    const yearEl = this.container.querySelector(`.picklist-item.is-year[data-year=\"${this.year}\"]`);\n    const week = (0,_utils_ids_date_utils_ids_date_utils__WEBPACK_IMPORTED_MODULE_9__.weekNumber)(new Date(this.year, this.month, this.day), this.firstDayOfWeek);\n    const weekEl = this.container.querySelector(`.picklist-item.is-week[data-week=\"${week}\"]`);\n    this.selectPicklistEl(monthEl);\n    this.selectPicklistEl(yearEl);\n    this.selectPicklistEl(weekEl);\n    this.container.querySelector(\".picklist-item.is-selected\")?.focus();\n  }\n  deactivatePicklist() {\n    if (!this.container)\n      return;\n    const picklistBtns = this.container.querySelectorAll(\".picklist-item.is-btn-up, .picklist-item.is-btn-down\");\n    picklistBtns.forEach((item) => {\n      item.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABINDEX, \"-1\");\n    });\n    this.unselectPicklist(\"all\");\n  }\n};\nIdsMonthYearPicklist = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.customElement)(\"ids-month-year-picklist\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.scss)(_ids_month_year_picklist_scss__WEBPACK_IMPORTED_MODULE_13__[\"default\"])\n], IdsMonthYearPicklist);\nvar ids_month_year_picklist_default = IdsMonthYearPicklist;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0ZS1waWNrZXIvaWRzLW1vbnRoLXllYXItcGlja2xpc3QudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDUDtBQUNGO0FBQ1A7QUFDRTtBQUNIO0FBQ0M7QUFDSjtBQUVoQjtBQUtBO0FBQ29CO0FBQ2tCO0FBTXRDO0FBT1k7QUFFbkIsTUFBTSxPQUFPLHFHQUFxQjtBQUFyQixFQUNYLHFGQUFjO0FBQWQsSUFDRSxtRkFBYTtBQUFiLE1BQ0UseUZBQWdCO0FBQWhCLFFBQ0UscUZBQWM7QUFBZCxVQUNFLHlEQUFVO0FBQVYsUUFDRjtBQUFBLE1BQ0Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGO0FBY0EsSUFBTSx1QkFBTixjQUFtQyxLQUFLO0FBQUEsRUFDdEMsY0FBYztBQUNaLFVBQU07QUFBQSxFQUNSO0FBQUEsRUFFQSxvQkFBb0I7QUFDbEIsVUFBTSxrQkFBa0I7QUFDeEIsU0FBSyxxQkFBcUI7QUFDMUIsU0FBSyxhQUFhLHFFQUFtQixFQUFFLGFBQWE7QUFHcEQsUUFBSSxDQUFDLEtBQUssbUNBQW1DLEdBQUc7QUFDOUMsV0FBSyxhQUFhLGdGQUE4QixFQUFFLE1BQU07QUFDeEQsV0FBSyxhQUFhLCtFQUE2QixFQUFFLE1BQU07QUFBQSxJQUN6RDtBQUFBLEVBQ0Y7QUFBQSxFQUVBLHVCQUE2QjtBQUMzQixVQUFNLHVCQUF1QjtBQUFBLEVBQy9CO0FBQUEsRUFFQSxXQUFXLGFBQTRCO0FBQ3JDLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLE1BQ1QsR0FBRyxtRkFBNkI7QUFBN0IsSUFDTDtBQUFBLEVBQ0Y7QUFBQSxFQUVBLFdBQVc7QUFDVCxXQUFPO0FBQUEsUUFDSCxLQUFLLG1CQUFtQixLQUFLLHNCQUFzQixJQUFJO0FBQUEsUUFDdkQsS0FBSyxxQkFBcUIsQ0FBQyxLQUFLLG1CQUFtQixLQUFLLHVCQUF1QixJQUFJO0FBQUEsUUFDbkYsS0FBSyxt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RUFGQyxtRUFBYSxDQUFDLHlCQUF5QjtBQUFBLEVBQ3ZDLDBEQUFJLENBQUMsc0VBQU07QUFBQSxHQUNOO0FBa3dCTixJQUFPLGtDQUFRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtZGF0ZS1waWNrZXIvaWRzLW1vbnRoLXllYXItcGlja2xpc3QudHM/ZDRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdHRyaWJ1dGVzLCBodG1sQXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCwgc2NzcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuaW1wb3J0IElkc0RhdGVBdHRyaWJ1dGVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWRhdGUtYXR0cmlidXRlLW1peGluL2lkcy1kYXRlLWF0dHJpYnV0ZS1taXhpbic7XG5pbXBvcnQgSWRzRXZlbnRzTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1ldmVudHMtbWl4aW4vaWRzLWV2ZW50cy1taXhpbic7XG5pbXBvcnQgSWRzS2V5Ym9hcmRNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWtleWJvYXJkLW1peGluL2lkcy1rZXlib2FyZC1taXhpbic7XG5pbXBvcnQgSWRzVGhlbWVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLXRoZW1lLW1peGluL2lkcy10aGVtZS1taXhpbic7XG5pbXBvcnQgSWRzTG9jYWxlTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1sb2NhbGUtbWl4aW4vaWRzLWxvY2FsZS1taXhpbic7XG5pbXBvcnQgSWRzRWxlbWVudCBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcblxuaW1wb3J0ICcuLi9pZHMtdGV4dC9pZHMtdGV4dCc7XG5cbmltcG9ydCB7XG4gIHdlZWtOdW1iZXIsXG4gIHdlZWtOdW1iZXJUb0RhdGVcbn0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLWRhdGUtdXRpbHMvaWRzLWRhdGUtdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q2xvc2VzdCB9IGZyb20gJy4uLy4uL3V0aWxzL2lkcy1kb20tdXRpbHMvaWRzLWRvbS11dGlscyc7XG5pbXBvcnQgeyBzdHJpbmdUb0Jvb2wsIHN0cmluZ1RvTnVtYmVyIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcblxuaW1wb3J0IHtcbiAgSWRzRGF0ZVBpY2tlckNvbW1vbkF0dHJpYnV0ZXMsXG4gIE1PTlRIX0tFWVMsXG4gIFBJQ0tMSVNUX0xFTkdUSFxufSBmcm9tICcuL2lkcy1kYXRlLXBpY2tlci1jb21tb24nO1xuXG4vLyBUeXBlc1xuaW1wb3J0IHR5cGUge1xuICBJZHNEaXNhYmxlU2V0dGluZ3MsXG59IGZyb20gJy4uL2lkcy1tb250aC12aWV3L2lkcy1tb250aC12aWV3LWNvbW1vbic7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9pZHMtbW9udGgteWVhci1waWNrbGlzdC5zY3NzJztcblxuY29uc3QgQmFzZSA9IElkc0RhdGVBdHRyaWJ1dGVNaXhpbihcbiAgSWRzTG9jYWxlTWl4aW4oXG4gICAgSWRzVGhlbWVNaXhpbihcbiAgICAgIElkc0tleWJvYXJkTWl4aW4oXG4gICAgICAgIElkc0V2ZW50c01peGluKFxuICAgICAgICAgIElkc0VsZW1lbnRcbiAgICAgICAgKVxuICAgICAgKVxuICAgIClcbiAgKVxuKTtcblxuLyoqXG4gKiBJRFMgTW9udGgvWWVhciBQaWNrTGlzdCBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNNb250aFllYXJQaWNrbGlzdH1cbiAqIEBpbmhlcml0cyBJZHNFbGVtZW50XG4gKiBAbWl4ZXMgSWRzRGF0ZUF0dHJpYnV0ZU1peGluXG4gKiBAbWl4ZXMgSWRzRXZlbnRzTWl4aW5cbiAqIEBtaXhlcyBJZHNLZXlib2FyZE1peGluXG4gKiBAbWl4ZXMgSWRzTG9jYWxlTWl4aW5cbiAqIEBtaXhlcyBJZHNUaGVtZU1peGluXG4gKi9cbkBjdXN0b21FbGVtZW50KCdpZHMtbW9udGgteWVhci1waWNrbGlzdCcpXG5Ac2NzcyhzdHlsZXMpXG5jbGFzcyBJZHNNb250aFllYXJQaWNrbGlzdCBleHRlbmRzIEJhc2Uge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgICB0aGlzLmF0dGFjaEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoaHRtbEF0dHJpYnV0ZXMuUk9MRSwgJ2FwcGxpY2F0aW9uJyk7XG5cbiAgICAvLyBTZXQgcmVhc29uYWJsZSBkZWZhdWx0XG4gICAgaWYgKCF0aGlzLmhhc1BpY2tsaXN0Q29uZmlndXJhdGlvbkF0dHJpYnV0ZXMoKSkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX01PTlRILCAndHJ1ZScpO1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1lFQVIsICd0cnVlJyk7XG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKTogdm9pZCB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2s/LigpO1xuICB9XG5cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCk6IEFycmF5PHN0cmluZz4ge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5hdHRyaWJ1dGVzLFxuICAgICAgLi4uSWRzRGF0ZVBpY2tlckNvbW1vbkF0dHJpYnV0ZXNcbiAgICBdO1xuICB9XG5cbiAgdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwicGlja2xpc3RcIj5cbiAgICAgICR7dGhpcy5zaG93UGlja2xpc3RXZWVrID8gdGhpcy50ZW1wbGF0ZVBpY2tsaXN0V2Vla3MoKSA6ICcnfVxuICAgICAgJHt0aGlzLnNob3dQaWNrbGlzdE1vbnRoICYmICF0aGlzLnNob3dQaWNrbGlzdFdlZWsgPyB0aGlzLnRlbXBsYXRlUGlja2xpc3RNb250aHMoKSA6ICcnfVxuICAgICAgJHt0aGlzLnNob3dQaWNrbGlzdFllYXIgPyB0aGlzLnRlbXBsYXRlUGlja2xpc3RZZWFycygpIDogJyd9XG4gICAgPC9kaXY+YDtcbiAgfVxuXG4gIHByaXZhdGUgdGVtcGxhdGVQaWNrbGlzdFdlZWtzKCkge1xuICAgIHJldHVybiBgPGRpdiBjbGFzcz1cInBpY2tsaXN0LXNlY3Rpb24gd2Vla1wiPlxuICAgICAgPHVsIGNsYXNzPVwicGlja2xpc3QtbGlzdFwiPlxuICAgICAgICA8bGkgY2xhc3M9XCJwaWNrbGlzdC1pdGVtIGlzLWJ0bi11cCBpcy13ZWVrLW5hdlwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPlByZXZpb3VzV2VlazwvaWRzLXRleHQ+XG4gICAgICAgICAgPGlkcy1pY29uIGljb249XCJjaGV2cm9uLXVwXCI+PC9pZHMtaWNvbj5cbiAgICAgICAgPC9saT5cbiAgICAgICAgJHt0aGlzLnJlbmRlclBpY2tsaXN0V2Vla3MoKX1cbiAgICAgICAgPGxpIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy1idG4tZG93biBpcy13ZWVrLW5hdlwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPk5leHRXZWVrPC9pZHMtdGV4dD5cbiAgICAgICAgICA8aWRzLWljb24gaWNvbj1cImNoZXZyb24tZG93blwiPjwvaWRzLWljb24+XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PmA7XG4gIH1cblxuICBwcml2YXRlIHRlbXBsYXRlUGlja2xpc3RNb250aHMoKSB7XG4gICAgcmV0dXJuIGA8ZGl2IGNsYXNzPVwicGlja2xpc3Qtc2VjdGlvbiBtb250aFwiPlxuICAgICAgPHVsIGNsYXNzPVwicGlja2xpc3QtbGlzdFwiPlxuICAgICAgICA8bGkgY2xhc3M9XCJwaWNrbGlzdC1pdGVtIGlzLWJ0bi11cCBpcy1tb250aC1uYXZcIj5cbiAgICAgICAgICA8aWRzLXRleHQgYXVkaWJsZT1cInRydWVcIiB0cmFuc2xhdGUtdGV4dD1cInRydWVcIj5QcmV2aW91c01vbnRoPC9pZHMtdGV4dD5cbiAgICAgICAgICA8aWRzLWljb24gaWNvbj1cImNoZXZyb24tdXBcIj48L2lkcy1pY29uPlxuICAgICAgICA8L2xpPlxuICAgICAgICAke3RoaXMucmVuZGVyUGlja2xpc3RNb250aHMoKX1cbiAgICAgICAgPGxpIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy1idG4tZG93biBpcy1tb250aC1uYXZcIj5cbiAgICAgICAgICA8aWRzLXRleHQgYXVkaWJsZT1cInRydWVcIiB0cmFuc2xhdGUtdGV4dD1cInRydWVcIj5OZXh0TW9udGg8L2lkcy10ZXh0PlxuICAgICAgICAgIDxpZHMtaWNvbiBpY29uPVwiY2hldnJvbi1kb3duXCI+PC9pZHMtaWNvbj5cbiAgICAgICAgPC9saT5cbiAgICAgIDwvdWw+XG4gICAgPC9kaXY+YDtcbiAgfVxuXG4gIHByaXZhdGUgdGVtcGxhdGVQaWNrbGlzdFllYXJzKCkge1xuICAgIHJldHVybiBgPGRpdiBjbGFzcz1cInBpY2tsaXN0LXNlY3Rpb24geWVhclwiPlxuICAgICAgPHVsIGNsYXNzPVwicGlja2xpc3QtbGlzdFwiPlxuICAgICAgICA8bGkgY2xhc3M9XCJwaWNrbGlzdC1pdGVtIGlzLWJ0bi11cCBpcy15ZWFyLW5hdlwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPlByZXZpb3VzWWVhcjwvaWRzLXRleHQ+XG4gICAgICAgICAgPGlkcy1pY29uIGljb249XCJjaGV2cm9uLXVwXCI+PC9pZHMtaWNvbj5cbiAgICAgICAgPC9saT5cbiAgICAgICAgJHt0aGlzLnJlbmRlclBpY2tsaXN0WWVhcnMoKX1cbiAgICAgICAgPGxpIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy1idG4tZG93biBpcy15ZWFyLW5hdlwiPlxuICAgICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiIHRyYW5zbGF0ZS10ZXh0PVwidHJ1ZVwiPk5leHRZZWFyPC9pZHMtdGV4dD5cbiAgICAgICAgICA8aWRzLWljb24gaWNvbj1cImNoZXZyb24tZG93blwiPjwvaWRzLWljb24+XG4gICAgICAgIDwvbGk+XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PmA7XG4gIH1cblxuICBwcml2YXRlIHJlZnJlc2hQaWNrbGlzdHMoKSB7XG4gICAgaWYgKHRoaXMuY29udGFpbmVyKSB7XG4gICAgICB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gICAgICAgICR7dGhpcy5zaG93UGlja2xpc3RXZWVrID8gdGhpcy50ZW1wbGF0ZVBpY2tsaXN0V2Vla3MoKSA6ICcnfVxuICAgICAgICAke3RoaXMuc2hvd1BpY2tsaXN0TW9udGggJiYgIXRoaXMuc2hvd1BpY2tsaXN0V2VlayA/IHRoaXMudGVtcGxhdGVQaWNrbGlzdE1vbnRocygpIDogJyd9XG4gICAgICAgICR7dGhpcy5zaG93UGlja2xpc3RZZWFyID8gdGhpcy50ZW1wbGF0ZVBpY2tsaXN0WWVhcnMoKSA6ICcnfVxuICAgICAgYDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogZGlzYWJsZWQgYXR0cmlidXRlXG4gICAqIEByZXR1cm5zIHtib29sZWFufSBkaXNhYmxlZCBwYXJhbVxuICAgKi9cbiAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVNBQkxFRCkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0cmlnZ2VyIGZpZWxkIGRpc2FibGVkIGF0dHJpYnV0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ3xib29sZWFufG51bGx9IHZhbCBkaXNhYmxlZCBwYXJhbSB2YWx1ZVxuICAgKi9cbiAgc2V0IGRpc2FibGVkKHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgaWYgKGJvb2xWYWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQsICd0cnVlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuRElTQUJMRUQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiBhbnkgcGlja2xpc3RzIGFyZSBjdXJyZW50bHkgc2hvd2luZ1xuICAgKi9cbiAgcHJpdmF0ZSBoYXNQaWNrbGlzdENvbmZpZ3VyYXRpb25BdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfTU9OVEgpXG4gICAgICB8fCB0aGlzLmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfWUVBUilcbiAgICAgIHx8IHRoaXMuaGFzQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9XRUVLKTtcbiAgfVxuXG4gIHByaXZhdGUgYXR0YWNoRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5vZmZFdmVudCgnY2xpY2subW9udGgteWVhci1waWNrbGlzdCcpO1xuICAgIHRoaXMub25FdmVudCgnY2xpY2subW9udGgteWVhci1waWNrbGlzdCcsIHRoaXMuY29udGFpbmVyLCAoZTogTW91c2VFdmVudCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVQaWNrbGlzdEV2ZW50KGUpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5vZmZFdmVudCgna2V5ZG93bi5tb250aC15ZWFyLXBpY2tsaXN0Jyk7XG4gICAgdGhpcy5vbkV2ZW50KCdrZXlkb3duLm1vbnRoLXllYXItcGlja2xpc3QnLCB0aGlzLmNvbnRhaW5lciwgKGU6IEtleWJvYXJkRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuaGFuZGxlS2V5RG93bkV2ZW50KGUpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEtleWJvYXJkIGV2ZW50cyBoYW5kbGVyXG4gICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZSBrZXlib2FyZCBldmVudFxuICAgKi9cbiAgcHJpdmF0ZSBoYW5kbGVLZXlEb3duRXZlbnQoZTogS2V5Ym9hcmRFdmVudCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5jb250YWluZXIpIHJldHVybjtcbiAgICBjb25zdCBrZXk6IEtleWJvYXJkRXZlbnRbJ2tleSddID0gZS5rZXk7XG5cbiAgICAvLyBEYXRlIFBpY2tlciBEcm9wZG93biBrZXlib2FyZCBldmVudHNcbiAgICBjb25zdCBidG5VcFllYXIgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLWJ0bi11cC5pcy15ZWFyLW5hdicpO1xuICAgIGNvbnN0IGJ0bkRvd25ZZWFyID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oJy5pcy1idG4tZG93bi5pcy15ZWFyLW5hdicpO1xuICAgIGNvbnN0IGJ0blVwTW9udGggPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLWJ0bi11cC5pcy1tb250aC1uYXYnKTtcbiAgICBjb25zdCBidG5Eb3duTW9udGggPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLWJ0bi1kb3duLmlzLW1vbnRoLW5hdicpO1xuICAgIGNvbnN0IGJ0blVwV2VlayA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcuaXMtYnRuLXVwLmlzLXdlZWstbmF2Jyk7XG4gICAgY29uc3QgYnRuRG93bldlZWsgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLWJ0bi1kb3duLmlzLXdlZWstbmF2Jyk7XG4gICAgY29uc3QgbW9udGhTZWxlY3RlZCA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcuaXMtbW9udGguaXMtc2VsZWN0ZWQnKTtcbiAgICBjb25zdCB5ZWFyU2VsZWN0ZWQgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLXllYXIuaXMtc2VsZWN0ZWQnKTtcbiAgICBjb25zdCB3ZWVrU2VsZWN0ZWQgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLXdlZWsuaXMtc2VsZWN0ZWQnKTtcblxuICAgIGlmIChrZXkgPT09ICdFbnRlcicpIHtcbiAgICAgIC8vIEVudGVyIG9uIHBpY2tsaXN0IHllYXIgYnRuIHVwXG4gICAgICBpZiAoYnRuVXBZZWFyPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgICB0aGlzLnBpY2tsaXN0WWVhclBhZ2VkKGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgLy8gRW50ZXIgb24gcGlja2xpc3QgeWVhciBidG4gZG93blxuICAgICAgaWYgKGJ0bkRvd25ZZWFyPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgICB0aGlzLnBpY2tsaXN0WWVhclBhZ2VkKHRydWUpO1xuICAgICAgfVxuXG4gICAgICAvLyBFbnRlciBvbiBwaWNrbGlzdCBtb250aCBidG4gdXAvZG93blxuICAgICAgaWYgKChidG5VcE1vbnRoPy5tYXRjaGVzKCc6Zm9jdXMnKSB8fCBidG5Eb3duTW9udGg/Lm1hdGNoZXMoJzpmb2N1cycpKSkge1xuICAgICAgICB0aGlzLnBpY2tsaXN0TW9udGhQYWdlZCgpO1xuICAgICAgfVxuXG4gICAgICAvLyBFbnRlciBvbiBwaWNrbGlzdCB3ZWVrIGJ0biB1cFxuICAgICAgaWYgKGJ0blVwV2Vlaz8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgICAgdGhpcy5waWNrbGlzdFdlZWtQYWdlZChmYWxzZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIEVudGVyIG9uIHBpY2tsaXN0IHdlZWsgYnRuIGRvd25cbiAgICAgIGlmIChidG5Eb3duV2Vlaz8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgICAgdGhpcy5waWNrbGlzdFdlZWtQYWdlZCh0cnVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBcnJvdyBVcCBvbiBwaWNrbGlzdCBtb250aFxuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiBtb250aFNlbGVjdGVkPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgY29uc3QgbW9udGggPSB0aGlzLm1vbnRoIC0gMTtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oYC5pcy1tb250aFtkYXRhLW1vbnRoPVwiJHttb250aH1cIl1gKTtcblxuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCdtb250aCcpO1xuXG4gICAgICBpZiAoIWVsKSB7XG4gICAgICAgIGJ0blVwTW9udGg/LmZvY3VzKCk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgdGhpcy5tb250aCA9IG1vbnRoO1xuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgRG93biBvbiBwaWNrbGlzdCBtb250aFxuICAgIGlmIChrZXkgPT09ICdBcnJvd0Rvd24nICYmIG1vbnRoU2VsZWN0ZWQ/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBjb25zdCBtb250aCA9IHRoaXMubW9udGggKyAxO1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihgLmlzLW1vbnRoW2RhdGEtbW9udGg9XCIke21vbnRofVwiXWApO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ21vbnRoJyk7XG5cbiAgICAgIGlmICghZWwpIHtcbiAgICAgICAgYnRuRG93bk1vbnRoPy5mb2N1cygpO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZWxlY3RQaWNrbGlzdEVsKGVsKTtcbiAgICAgIHRoaXMubW9udGggPSBtb250aDtcbiAgICAgIGVsPy5mb2N1cygpO1xuICAgIH1cblxuICAgIC8vIEFycm93IFVwIG9uIHBpY2tsaXN0IHllYXJcbiAgICBpZiAoa2V5ID09PSAnQXJyb3dVcCcgJiYgeWVhclNlbGVjdGVkPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgY29uc3QgeWVhciA9IHRoaXMueWVhciAtIDE7XG5cbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oYC5pcy15ZWFyW2RhdGEteWVhcj1cIiR7eWVhcn1cIl1gKTtcblxuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCd5ZWFyJyk7XG5cbiAgICAgIGlmICghZWwpIHtcbiAgICAgICAgYnRuVXBZZWFyPy5mb2N1cygpO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZWxlY3RQaWNrbGlzdEVsKGVsKTtcbiAgICAgIHRoaXMueWVhciA9IHllYXI7XG4gICAgICBlbD8uZm9jdXMoKTtcbiAgICB9XG5cbiAgICAvLyBBcnJvdyBEb3duIG9uIHBpY2tsaXN0IHllYXJcbiAgICBpZiAoa2V5ID09PSAnQXJyb3dEb3duJyAmJiB5ZWFyU2VsZWN0ZWQ/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBjb25zdCB5ZWFyID0gdGhpcy55ZWFyICsgMTtcblxuICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihgLmlzLXllYXJbZGF0YS15ZWFyPVwiJHt5ZWFyfVwiXWApO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ3llYXInKTtcblxuICAgICAgaWYgKCFlbCkge1xuICAgICAgICBidG5Eb3duWWVhcj8uZm9jdXMoKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChlbCk7XG4gICAgICB0aGlzLnllYXIgPSB5ZWFyO1xuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgVXAgb24gcGlja2xpc3Qgd2Vla1xuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiB3ZWVrU2VsZWN0ZWQ/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBjb25zdCB3ZWVrSW5kZXg6IG51bWJlciA9IHN0cmluZ1RvTnVtYmVyKHdlZWtTZWxlY3RlZC5kYXRhc2V0LndlZWspIC0gMTtcbiAgICAgIGNvbnN0IHdlZWs6IG51bWJlciA9IHRoaXMuZ2V0V2Vla051bWJlcih3ZWVrSW5kZXgpO1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihgLmlzLXdlZWtbZGF0YS13ZWVrPVwiJHt3ZWVrfVwiXWApO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ3dlZWsnKTtcblxuICAgICAgaWYgKCFlbCkge1xuICAgICAgICBidG5VcFdlZWs/LmZvY3VzKCk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgdGhpcy5zZXRXZWVrRGF0ZSh3ZWVrKTtcblxuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgRG93biBvbiBwaWNrbGlzdCB5ZWFyXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93RG93bicgJiYgd2Vla1NlbGVjdGVkPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgY29uc3Qgd2Vla0luZGV4OiBudW1iZXIgPSBzdHJpbmdUb051bWJlcih3ZWVrU2VsZWN0ZWQuZGF0YXNldC53ZWVrKSArIDE7XG4gICAgICBjb25zdCB3ZWVrOiBudW1iZXIgPSB0aGlzLmdldFdlZWtOdW1iZXIod2Vla0luZGV4KTtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oYC5pcy13ZWVrW2RhdGEtd2Vlaz1cIiR7d2Vla31cIl1gKTtcblxuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCd3ZWVrJyk7XG5cbiAgICAgIGlmICghZWwpIHtcbiAgICAgICAgYnRuRG93bldlZWs/LmZvY3VzKCk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgdGhpcy5zZXRXZWVrRGF0ZSh3ZWVrKTtcblxuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgVXAgb24geWVhciBidG4gdXBcbiAgICBpZiAoa2V5ID09PSAnQXJyb3dVcCcgJiYgYnRuVXBZZWFyPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgYnRuRG93blllYXI/LmZvY3VzKCk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBBcnJvdyBEb3duIG9uIHllYXIgYnRuIGRvd25cbiAgICBpZiAoa2V5ID09PSAnQXJyb3dEb3duJyAmJiBidG5Eb3duWWVhcj8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgIGJ0blVwWWVhcj8uZm9jdXMoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEFycm93IFVwIG9uIHllYXIgYnRuIGRvd25cbiAgICBpZiAoa2V5ID09PSAnQXJyb3dVcCcgJiYgYnRuRG93blllYXI/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcuaXMteWVhci5pcy1sYXN0Jyk7XG5cbiAgICAgIHRoaXMudW5zZWxlY3RQaWNrbGlzdCgneWVhcicpO1xuICAgICAgdGhpcy5zZWxlY3RQaWNrbGlzdEVsKGVsKTtcbiAgICAgIHRoaXMueWVhciA9IGVsPy5kYXRhc2V0Py55ZWFyIHx8IG51bGw7XG4gICAgICBlbD8uZm9jdXMoKTtcbiAgICB9XG5cbiAgICAvLyBBcnJvdyBEb3duIG9uIHllYXIgYnRuIHVwXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93RG93bicgJiYgYnRuVXBZZWFyPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PignLmlzLXllYXInKTtcblxuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCd5ZWFyJyk7XG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgdGhpcy55ZWFyID0gZWw/LmRhdGFzZXQueWVhciB8fCBudWxsO1xuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgVXAgb24gbW9udGggYnRuIHVwXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93VXAnICYmIGJ0blVwTW9udGg/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBidG5Eb3duTW9udGg/LmZvY3VzKCk7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBBcnJvdyBEb3duIG9uIG1vbnRoIGJ0biBkb3duXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93RG93bicgJiYgYnRuRG93bk1vbnRoPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgYnRuVXBNb250aD8uZm9jdXMoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEFycm93IFVwIG9uIG1vbnRoIGJ0biBkb3duXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93VXAnICYmIGJ0bkRvd25Nb250aD8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oJy5pcy1tb250aC5pcy1sYXN0Jyk7XG5cbiAgICAgIHRoaXMudW5zZWxlY3RQaWNrbGlzdCgnbW9udGgnKTtcbiAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChlbCk7XG4gICAgICB0aGlzLm1vbnRoID0gZWw/LmRhdGFzZXQubW9udGggfHwgbnVsbDtcbiAgICAgIGVsPy5mb2N1cygpO1xuICAgIH1cblxuICAgIC8vIEFycm93IERvd24gb24gbW9udGggYnRuIHVwXG4gICAgaWYgKGtleSA9PT0gJ0Fycm93RG93bicgJiYgYnRuVXBNb250aD8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oJy5pcy1tb250aCcpO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ21vbnRoJyk7XG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgdGhpcy5tb250aCA9IGVsPy5kYXRhc2V0Lm1vbnRoIHx8IG51bGw7XG4gICAgICBlbD8uZm9jdXMoKTtcbiAgICB9XG5cbiAgICAvLyBBcnJvdyBVcCBvbiB3ZWVrIGJ0biB1cFxuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiBidG5VcFdlZWs/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBidG5Eb3duV2Vlaz8uZm9jdXMoKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEFycm93IERvd24gb24gd2VlayBidG4gZG93blxuICAgIGlmIChrZXkgPT09ICdBcnJvd0Rvd24nICYmIGJ0bkRvd25XZWVrPy5tYXRjaGVzKCc6Zm9jdXMnKSkge1xuICAgICAgYnRuVXBXZWVrPy5mb2N1cygpO1xuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgVXAgb24gd2VlayBidG4gZG93blxuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiBidG5Eb3duV2Vlaz8ubWF0Y2hlcygnOmZvY3VzJykpIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oJy5pcy13ZWVrLmlzLWxhc3QnKTtcblxuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCdtb250aCcpO1xuICAgICAgdGhpcy5zZWxlY3RQaWNrbGlzdEVsKGVsKTtcbiAgICAgIHRoaXMuc2V0V2Vla0RhdGUoc3RyaW5nVG9OdW1iZXIoZWw/LmRhdGFzZXQud2VlaykpO1xuICAgICAgZWw/LmZvY3VzKCk7XG4gICAgfVxuXG4gICAgLy8gQXJyb3cgRG93biBvbiB3ZWVrIGJ0biB1cFxuICAgIGlmIChrZXkgPT09ICdBcnJvd1VwJyAmJiBidG5VcFdlZWs/Lm1hdGNoZXMoJzpmb2N1cycpKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcuaXMtd2VlaycpO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ3dlZWsnKTtcbiAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChlbCk7XG4gICAgICB0aGlzLnNldFdlZWtEYXRlKHN0cmluZ1RvTnVtYmVyKGVsPy5kYXRhc2V0LndlZWspKTtcbiAgICAgIGVsPy5mb2N1cygpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYSBsaXN0IG9mIHllYXJzIHRvIGJlIGF0dGFjaGVkIHRvIHRoZSBwaWNrbGlzdFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH0geWVhcnMgbGlzdCBpdGVtc1xuICAgKi9cbiAgcHJpdmF0ZSByZW5kZXJQaWNrbGlzdFllYXJzKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgZGlzYWJsZWRTZXR0aW5nczogSWRzRGlzYWJsZVNldHRpbmdzID0gZ2V0Q2xvc2VzdCh0aGlzLCAnaWRzLW1vbnRoLXZpZXcnKT8uZGlzYWJsZVNldHRpbmdzO1xuICAgIGNvbnN0IHN0YXJ0WWVhcjogbnVtYmVyID0gdGhpcy55ZWFyIC0gMjtcbiAgICBjb25zdCB5ZWFyczogc3RyaW5nID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogUElDS0xJU1RfTEVOR1RIIH0pLm1hcCgoXywgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHllYXI6IG51bWJlciA9IHN0YXJ0WWVhciArIGluZGV4O1xuICAgICAgY29uc3QgaXNEaXNhYmxlZDogYm9vbGVhbiB8IHVuZGVmaW5lZCA9IGRpc2FibGVkU2V0dGluZ3M/LnllYXJzPy5pbmNsdWRlcyh5ZWFyKTtcblxuICAgICAgcmV0dXJuIGA8bGlcbiAgICAgICAgZGF0YS15ZWFyPVwiJHt5ZWFyfVwiXG4gICAgICAgIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy15ZWFyJHtpbmRleCA9PT0gUElDS0xJU1RfTEVOR1RIIC0gMSA/ICcgaXMtbGFzdCcgOiAnJ30ke2lzRGlzYWJsZWQgPyAnIGlzLWRpc2FibGVkJyA6ICcnfVwiXG4gICAgICA+PGlkcy10ZXh0JHtpc0Rpc2FibGVkID8gJyBkaXNhYmxlZD1cInRydWVcIicgOiAnJ30+JHt5ZWFyfTwvaWRzLXRleHQ+PC9saT5gO1xuICAgIH0pLmpvaW4oJycpO1xuXG4gICAgcmV0dXJuIHllYXJzO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhIGxpc3Qgb2YgbW9udGhzIHRvIGJlIGF0dGFjaGVkIHRvIHRoZSBwaWNrbGlzdFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH0gbW9udGhzIGxpc3QgaXRlbXNcbiAgICovXG4gIHByaXZhdGUgcmVuZGVyUGlja2xpc3RNb250aHMoKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICBjb25zdCBtb250aHNMaXN0OiBBcnJheTxzdHJpbmc+ID0gTU9OVEhfS0VZUy5tYXAoKGl0ZW0pID0+IHRoaXMubG9jYWxlQVBJPy50cmFuc2xhdGUoYE1vbnRoV2lkZSR7aXRlbX1gKSk7XG5cbiAgICBjb25zdCBtb250aHM6IHN0cmluZyA9IG1vbnRoc0xpc3Q/Lm1hcCgoaXRlbTogc3RyaW5nLCBpbmRleDogbnVtYmVyKSA9PiBgPGxpXG4gICAgICAgIGRhdGEtbW9udGg9XCIke2luZGV4fVwiXG4gICAgICAgIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy1tb250aCR7aW5kZXggPT09IFBJQ0tMSVNUX0xFTkdUSCAtIDEgfHwgaW5kZXggPT09IDExID8gJyBpcy1sYXN0JyA6ICcnfVwiXG4gICAgICA+PGlkcy10ZXh0PiR7aXRlbX08L2lkcy10ZXh0PjwvbGk+YCkuZmlsdGVyKFxuICAgICAgKF8sIGluZGV4OiBudW1iZXIpID0+ICh0aGlzLm1vbnRoIDw9IFBJQ0tMSVNUX0xFTkdUSCAtIDEgJiYgaW5kZXggPD0gUElDS0xJU1RfTEVOR1RIIC0gMSlcbiAgICAgICAgfHwgKHRoaXMubW9udGggPiBQSUNLTElTVF9MRU5HVEggLSAxICYmIGluZGV4ID4gUElDS0xJU1RfTEVOR1RIIC0gMSlcbiAgICApLmpvaW4oJycpO1xuXG4gICAgcmV0dXJuIG1vbnRocztcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYSBsaXN0IG9mIHdlZWsgbnVtYmVycyB0byBiZSBhdHRhY2hlZCB0byB0aGUgcGlja2xpc3RcbiAgICogQHJldHVybnMge3N0cmluZ3x1bmRlZmluZWR9IHdlZWsgbnVtYmVycyBpdGVtc1xuICAgKi9cbiAgcHJpdmF0ZSByZW5kZXJQaWNrbGlzdFdlZWtzKCk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3QgY3VycmVudFdlZWs6IG51bWJlciA9IHdlZWtOdW1iZXIobmV3IERhdGUodGhpcy55ZWFyLCB0aGlzLm1vbnRoLCB0aGlzLmRheSkpO1xuICAgIGNvbnN0IHN0YXJ0V2VlazogbnVtYmVyID0gY3VycmVudFdlZWsgPD0gUElDS0xJU1RfTEVOR1RIID8gMSA6IGN1cnJlbnRXZWVrIC0gMjtcbiAgICBjb25zdCB3ZWVrczogc3RyaW5nID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogUElDS0xJU1RfTEVOR1RIIH0pLm1hcCgoXywgaW5kZXgpID0+IHtcbiAgICAgIGNvbnN0IHdlZWtJbmRleDogbnVtYmVyID0gc3RhcnRXZWVrICsgaW5kZXg7XG4gICAgICBjb25zdCB3ZWVrOiBudW1iZXIgPSB0aGlzLmdldFdlZWtOdW1iZXIod2Vla0luZGV4KTtcblxuICAgICAgcmV0dXJuIGA8bGlcbiAgICAgICAgZGF0YS13ZWVrPVwiJHt3ZWVrfVwiXG4gICAgICAgIGNsYXNzPVwicGlja2xpc3QtaXRlbSBpcy13ZWVrJHtpbmRleCA9PT0gUElDS0xJU1RfTEVOR1RIIC0gMSA/ICcgaXMtbGFzdCcgOiAnJ31cIlxuICAgICAgPjxpZHMtdGV4dD4ke3dlZWt9PC9pZHMtdGV4dD48L2xpPmA7XG4gICAgfSkuam9pbignJyk7XG5cbiAgICByZXR1cm4gd2Vla3M7XG4gIH1cblxuICAvKipcbiAgICogSGVscGVyIHRvIGdldCB3ZWVrIG51bWJlciBmcm9tIHBhZ2luYXRlZCBpbmRleFxuICAgKiBAcGFyYW0ge251bWJlcn0gd2Vla0luZGV4IGluZGV4IG51bWJlciBhcyBpdCBjb21lcyBmcm9tIHRoZSBwYWdlZCBsb29wXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IHdlZWsgbnVtYmVyXG4gICAqL1xuICBwcml2YXRlIGdldFdlZWtOdW1iZXIod2Vla0luZGV4OiBudW1iZXIpIHtcbiAgICAvLyBHZXQgdG90YWwgbnVtYmVyIG9mIHdlZWtzIGluIHRoZSB5ZWFyIGJ5IGdldHRpbmcgd2VlayBudW1iZXIgb2YgdGhlIGxhc3QgZGF5IG9mIHRoZSB5ZWFyXG4gICAgY29uc3QgdG90YWxXZWVrcyA9IHdlZWtOdW1iZXIobmV3IERhdGUodGhpcy55ZWFyLCAxMSwgMzEpLCB0aGlzLmZpcnN0RGF5T2ZXZWVrKTtcblxuICAgIGlmICh3ZWVrSW5kZXggPiB0b3RhbFdlZWtzKSB7XG4gICAgICByZXR1cm4gd2Vla0luZGV4ICUgdG90YWxXZWVrcztcbiAgICB9XG5cbiAgICBpZiAod2Vla0luZGV4IDwgMSkge1xuICAgICAgcmV0dXJuIHRvdGFsV2Vla3MgKyB3ZWVrSW5kZXg7XG4gICAgfVxuXG4gICAgcmV0dXJuIHdlZWtJbmRleDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDbGljayB0byBwaWNrbGlzdCBlbGVtZW50cyBldmVudCBoYW5kbGVyXG4gICAqIEBwYXJhbSB7TW91c2VFdmVudH0gZSBjbGljayBldmVudFxuICAgKi9cbiAgcHJpdmF0ZSBoYW5kbGVQaWNrbGlzdEV2ZW50KGU6IE1vdXNlRXZlbnQpIHtcbiAgICBpZiAoIWUudGFyZ2V0KSByZXR1cm47XG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBjb25zdCBidG5VcFllYXI6IEhUTUxFbGVtZW50IHwgbnVsbCA9IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLmlzLWJ0bi11cC5pcy15ZWFyLW5hdicpO1xuICAgIGNvbnN0IGJ0bkRvd25ZZWFyOiBIVE1MRWxlbWVudCB8IG51bGwgPSAoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsb3Nlc3QoJy5pcy1idG4tZG93bi5pcy15ZWFyLW5hdicpO1xuICAgIGNvbnN0IGJ0blVwTW9udGg6IEhUTUxFbGVtZW50IHwgbnVsbCA9IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLmlzLWJ0bi11cC5pcy1tb250aC1uYXYnKTtcbiAgICBjb25zdCBidG5Eb3duTW9udGg6IEhUTUxFbGVtZW50IHwgbnVsbCA9IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLmlzLWJ0bi1kb3duLmlzLW1vbnRoLW5hdicpO1xuICAgIGNvbnN0IGJ0blVwV2VlazogSFRNTEVsZW1lbnQgfCBudWxsID0gKGUudGFyZ2V0IGFzIEhUTUxFbGVtZW50KS5jbG9zZXN0KCcuaXMtYnRuLXVwLmlzLXdlZWstbmF2Jyk7XG4gICAgY29uc3QgYnRuRG93bldlZWs6IEhUTUxFbGVtZW50IHwgbnVsbCA9IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLmlzLWJ0bi1kb3duLmlzLXdlZWstbmF2Jyk7XG4gICAgY29uc3QgbW9udGhJdGVtOiBIVE1MRWxlbWVudCB8IG51bGwgPSAoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsb3Nlc3QoJy5pcy1tb250aCcpO1xuICAgIGNvbnN0IHllYXJJdGVtOiBIVE1MRWxlbWVudCB8IG51bGwgPSAoZS50YXJnZXQgYXMgSFRNTEVsZW1lbnQpLmNsb3Nlc3QoJy5pcy15ZWFyJyk7XG4gICAgY29uc3Qgd2Vla0l0ZW06IEhUTUxFbGVtZW50IHwgbnVsbCA9IChlLnRhcmdldCBhcyBIVE1MRWxlbWVudCkuY2xvc2VzdCgnLmlzLXdlZWsnKTtcblxuICAgIGlmIChidG5VcFllYXIpIHtcbiAgICAgIHRoaXMucGlja2xpc3RZZWFyUGFnZWQoZmFsc2UpO1xuICAgIH1cblxuICAgIGlmIChidG5Eb3duWWVhcikge1xuICAgICAgdGhpcy5waWNrbGlzdFllYXJQYWdlZCh0cnVlKTtcbiAgICB9XG5cbiAgICBpZiAoYnRuVXBNb250aCB8fCBidG5Eb3duTW9udGgpIHtcbiAgICAgIHRoaXMucGlja2xpc3RNb250aFBhZ2VkKCk7XG4gICAgfVxuXG4gICAgaWYgKGJ0blVwV2Vlaykge1xuICAgICAgdGhpcy5waWNrbGlzdFdlZWtQYWdlZChmYWxzZSk7XG4gICAgfVxuXG4gICAgaWYgKGJ0bkRvd25XZWVrKSB7XG4gICAgICB0aGlzLnBpY2tsaXN0V2Vla1BhZ2VkKHRydWUpO1xuICAgIH1cblxuICAgIGlmIChtb250aEl0ZW0pIHtcbiAgICAgIHRoaXMudW5zZWxlY3RQaWNrbGlzdCgnbW9udGgnKTtcbiAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChtb250aEl0ZW0pO1xuICAgICAgbW9udGhJdGVtLmZvY3VzKCk7XG5cbiAgICAgIHRoaXMubW9udGggPSBtb250aEl0ZW0uZGF0YXNldC5tb250aCBhcyBzdHJpbmc7XG4gICAgfVxuXG4gICAgaWYgKHllYXJJdGVtKSB7XG4gICAgICBjb25zdCBkaXNhYmxlZFNldHRpbmdzOiBJZHNEaXNhYmxlU2V0dGluZ3MgPSBnZXRDbG9zZXN0KHRoaXMsICdpZHMtbW9udGgtdmlldycpPy5kaXNhYmxlU2V0dGluZ3M7XG4gICAgICBjb25zdCBpc0Rpc2FibGVkOiBib29sZWFuIHwgdW5kZWZpbmVkID0gZGlzYWJsZWRTZXR0aW5ncz8ueWVhcnM/LmluY2x1ZGVzKHN0cmluZ1RvTnVtYmVyKHllYXJJdGVtLmRhdGFzZXQueWVhcikpO1xuXG4gICAgICBpZiAoaXNEaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ3llYXInKTtcbiAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbCh5ZWFySXRlbSk7XG4gICAgICB5ZWFySXRlbS5mb2N1cygpO1xuXG4gICAgICB0aGlzLnllYXIgPSB5ZWFySXRlbS5kYXRhc2V0LnllYXIgYXMgc3RyaW5nO1xuICAgIH1cblxuICAgIGlmICh3ZWVrSXRlbSkge1xuICAgICAgdGhpcy51bnNlbGVjdFBpY2tsaXN0KCd3ZWVrJyk7XG4gICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwod2Vla0l0ZW0pO1xuICAgICAgd2Vla0l0ZW0uZm9jdXMoKTtcblxuICAgICAgY29uc3Qgd2VlayA9IHN0cmluZ1RvTnVtYmVyKHdlZWtJdGVtLmRhdGFzZXQud2Vlayk7XG4gICAgICBjb25zdCBkYXRlID0gd2Vla051bWJlclRvRGF0ZSh0aGlzLnllYXIsIHdlZWssIHRoaXMuZmlyc3REYXlPZldlZWspO1xuXG4gICAgICB0aGlzLm1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgdGhpcy5kYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTG9vcCB0aHJvdWdoIHRoZSB5ZWFyIGxpc3QgYW5kIGluY3JlYXNlL2Rlc2NyZXNlIHllYXIgZGVwZW5kcyBvbiB0aGUgcGFyYW1cbiAgICogQHBhcmFtIHtib29sZWFufSBpc05leHQgaW5jcmVhc2UvZGVzY3Jlc2UgcGlja2xpc3QgeWVhclxuICAgKi9cbiAgcHJpdmF0ZSBwaWNrbGlzdFllYXJQYWdlZChpc05leHQ6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBkaXNhYmxlZFNldHRpbmdzOiBJZHNEaXNhYmxlU2V0dGluZ3MgPSBnZXRDbG9zZXN0KHRoaXMsICdpZHMtbW9udGgtdmlldycpPy5kaXNhYmxlU2V0dGluZ3M7XG5cbiAgICB0aGlzLmNvbnRhaW5lcj8ucXVlcnlTZWxlY3RvckFsbCgnLnBpY2tsaXN0LWl0ZW0uaXMteWVhcicpLmZvckVhY2goKGVsOiBhbnkpID0+IHtcbiAgICAgIGNvbnN0IGVsWWVhcjogbnVtYmVyID0gc3RyaW5nVG9OdW1iZXIoZWwuZGF0YXNldC55ZWFyKTtcbiAgICAgIGNvbnN0IHllYXI6IG51bWJlciA9IGlzTmV4dCA/IGVsWWVhciArIFBJQ0tMSVNUX0xFTkdUSCA6IGVsWWVhciAtIFBJQ0tMSVNUX0xFTkdUSDtcbiAgICAgIGNvbnN0IGlzRGlzYWJsZWQ6IGJvb2xlYW4gfCB1bmRlZmluZWQgPSBkaXNhYmxlZFNldHRpbmdzPy55ZWFycz8uaW5jbHVkZXMoeWVhcik7XG5cbiAgICAgIGVsLmRhdGFzZXQueWVhciA9IHllYXI7XG4gICAgICBlbC5xdWVyeVNlbGVjdG9yKCdpZHMtdGV4dCcpLnRleHRDb250ZW50ID0geWVhcjtcblxuICAgICAgZWwuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtZGlzYWJsZWQnLCBpc0Rpc2FibGVkKTtcbiAgICAgIGVsLnF1ZXJ5U2VsZWN0b3IoJ2lkcy10ZXh0JykuZGlzYWJsZWQgPSBpc0Rpc2FibGVkO1xuXG4gICAgICBpZiAoZWwuY2xhc3NMaXN0LmNvbnRhaW5zKCdpcy1zZWxlY3RlZCcpICYmICFpc0Rpc2FibGVkKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChlbCk7XG5cbiAgICAgICAgdGhpcy55ZWFyID0geWVhcjtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb29wIHRocm91Z2ggdGhlIGVudGlyZSBsaXN0IG9mIHRoZSBtb250aHNcbiAgICovXG4gIHByaXZhdGUgcGlja2xpc3RNb250aFBhZ2VkKCkge1xuICAgIGNvbnN0IG1vbnRoc0xpc3Q6IEFycmF5PHN0cmluZz4gPSBNT05USF9LRVlTLm1hcCgoaXRlbSkgPT4gdGhpcy5sb2NhbGVBUEk/LnRyYW5zbGF0ZShgTW9udGhXaWRlJHtpdGVtfWApKTtcblxuICAgIHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yQWxsKCcucGlja2xpc3QtaXRlbS5pcy1tb250aCcpLmZvckVhY2goKGVsOiBhbnksIGluZGV4OiBudW1iZXIpID0+IHtcbiAgICAgIGNvbnN0IGVsTW9udGg6IG51bWJlciA9IHN0cmluZ1RvTnVtYmVyKGVsLmRhdGFzZXQubW9udGgpO1xuICAgICAgY29uc3QgbW9udGg6IG51bWJlciA9IGVsTW9udGggPiBQSUNLTElTVF9MRU5HVEggLSAxID8gMCArIGluZGV4IDogUElDS0xJU1RfTEVOR1RIICsgaW5kZXg7XG5cbiAgICAgIGVsLmRhdGFzZXQubW9udGggPSBtb250aDtcbiAgICAgIGVsLnF1ZXJ5U2VsZWN0b3IoJ2lkcy10ZXh0JykudGV4dENvbnRlbnQgPSBtb250aHNMaXN0W21vbnRoXTtcblxuICAgICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnaXMtc2VsZWN0ZWQnKSkge1xuICAgICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuXG4gICAgICAgIHRoaXMubW9udGggPSBtb250aDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb29wIHRocm91Z2ggdGhlIHdlZWsgbGlzdCBhbmQgaW5jcmVhc2UvZGVzY3Jlc2Ugd2VlayBkZXBlbmRzIG9uIHRoZSBwYXJhbVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzTmV4dCBpbmNyZWFzZS9kZXNjcmVzZSBwaWNrbGlzdCB3ZWVrXG4gICAqL1xuICBwcml2YXRlIHBpY2tsaXN0V2Vla1BhZ2VkKGlzTmV4dDogYm9vbGVhbikge1xuICAgIHRoaXMuY29udGFpbmVyPy5xdWVyeVNlbGVjdG9yQWxsKCcucGlja2xpc3QtaXRlbS5pcy13ZWVrJykuZm9yRWFjaCgoZWw6IGFueSkgPT4ge1xuICAgICAgY29uc3QgZWxXZWVrOiBudW1iZXIgPSBzdHJpbmdUb051bWJlcihlbC5kYXRhc2V0LndlZWspO1xuICAgICAgY29uc3Qgd2Vla0luZGV4OiBudW1iZXIgPSBpc05leHQgPyBlbFdlZWsgKyBQSUNLTElTVF9MRU5HVEggOiBlbFdlZWsgLSBQSUNLTElTVF9MRU5HVEg7XG4gICAgICBjb25zdCB3ZWVrID0gdGhpcy5nZXRXZWVrTnVtYmVyKHdlZWtJbmRleCk7XG5cbiAgICAgIGVsLmRhdGFzZXQud2VlayA9IHdlZWs7XG4gICAgICBlbC5xdWVyeVNlbGVjdG9yKCdpZHMtdGV4dCcpLnRleHRDb250ZW50ID0gd2VlaztcblxuICAgICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnaXMtc2VsZWN0ZWQnKSkge1xuICAgICAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoZWwpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBtb250aCBhbmQgZGF5IHBhcmFtcyBiYXNlZCBvbiB3ZWVrIG51bWJlclxuICAgKiBAcGFyYW0ge251bWJlcn0gd2VlayBudW1iZXIgb2YgYSB3ZWVrXG4gICAqL1xuICBwcml2YXRlIHNldFdlZWtEYXRlKHdlZWs6IG51bWJlcikge1xuICAgIGNvbnN0IGRhdGUgPSB3ZWVrTnVtYmVyVG9EYXRlKHRoaXMueWVhciwgd2VlaywgdGhpcy5maXJzdERheU9mV2Vlayk7XG5cbiAgICB0aGlzLm1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgIHRoaXMuZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gIH1cblxuICAvKipcbiAgICogQWRkIHNlbGVjdGFibGUvdGFiYmFibGUgYXR0cmlidXRlcyB0byBwaWNrbGlzdCBlbGVtZW50XG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsIGVsZW1lbnQgdG8gaGFuZGxlXG4gICAqL1xuICBwcml2YXRlIHNlbGVjdFBpY2tsaXN0RWwoZWw6IEhUTUxFbGVtZW50IHwgbnVsbCkge1xuICAgIGVsPy5jbGFzc0xpc3QuYWRkKCdpcy1zZWxlY3RlZCcpO1xuICAgIGVsPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJJTkRFWCwgJzAnKTtcbiAgICBlbD8uc2V0QXR0cmlidXRlKGh0bWxBdHRyaWJ1dGVzLkFSSUFfU0VMRUNURUQsICd0cnVlJyk7XG4gICAgZWw/LnNldEF0dHJpYnV0ZShodG1sQXR0cmlidXRlcy5ST0xFLCAnZ3JpZGNlbGwnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXNldCBwaWNrbGlzdCBzZWxlY3RhYmxlL3RhYmJhYmxlIGF0dHJpYnV0ZXNcbiAgICogQHBhcmFtIHsnbW9udGgnfCd5ZWFyJ3wnYWxsJ30gdHlwZSBvZiBwYW5lbCB0byB1bnNlbGVjdFxuICAgKi9cbiAgcHJpdmF0ZSB1bnNlbGVjdFBpY2tsaXN0KHR5cGU6IHN0cmluZykge1xuICAgIGNvbnN0IHNlbGVjdG9yID0gYC5waWNrbGlzdC1pdGVtJHt0eXBlICE9PSAnYWxsJyA/IGAuaXMtJHt0eXBlfWAgOiAnJ31gO1xuXG4gICAgdGhpcy5jb250YWluZXI/LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpLmZvckVhY2goKGVsOiBFbGVtZW50KSA9PiB7XG4gICAgICBlbC5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJJTkRFWCk7XG4gICAgICBlbC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1zZWxlY3RlZCcpO1xuICAgICAgZWwucmVtb3ZlQXR0cmlidXRlKGh0bWxBdHRyaWJ1dGVzLkFSSUFfU0VMRUNURUQpO1xuXG4gICAgICBpZiAoZWwuZ2V0QXR0cmlidXRlKGh0bWxBdHRyaWJ1dGVzLlJPTEUpID09PSAnZ3JpZGNlbGwnKSB7XG4gICAgICAgIGVsLnNldEF0dHJpYnV0ZShodG1sQXR0cmlidXRlcy5ST0xFLCAnbGluaycpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctcGlja2xpc3QteWVhciBhdHRyaWJ1dGUsIGRlZmF1bHQgaXMgdHJ1ZVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gc2hvd1BpY2tsaXN0WWVhciBwYXJhbSBjb252ZXJ0ZWQgdG8gYm9vbGVhbiBmcm9tIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgZ2V0IHNob3dQaWNrbGlzdFllYXIoKTogYm9vbGVhbiB7XG4gICAgY29uc3QgYXR0clZhbCA9IHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9ZRUFSKTtcblxuICAgIGlmIChhdHRyVmFsKSB7XG4gICAgICByZXR1cm4gc3RyaW5nVG9Cb29sKGF0dHJWYWwpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgb3Igbm90IHRvIHNob3cgYSBsaXN0IG9mIHllYXJzIGluIHRoZSBwaWNrbGlzdFxuICAgKiBAcGFyYW0ge3N0cmluZyB8IGJvb2xlYW4gfCBudWxsfSB2YWwgdmFsdWUgdG8gYmUgc2V0IGFzIHNob3ctcGlja2xpc3QteWVhciBhdHRyaWJ1dGUgY29udmVydGVkIHRvIGJvb2xlYW5cbiAgICovXG4gIHNldCBzaG93UGlja2xpc3RZZWFyKHZhbDogc3RyaW5nIHwgYm9vbGVhbiB8IG51bGwpIHtcbiAgICBjb25zdCBib29sVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgaWYgKGJvb2xWYWwpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9ZRUFSLCAndHJ1ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfWUVBUik7XG4gICAgfVxuICAgIHRoaXMucmVmcmVzaFBpY2tsaXN0cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctcGlja2xpc3QtbW9udGggYXR0cmlidXRlLCBkZWZhdWx0IGlzIHRydWVcbiAgICogQHJldHVybnMge2Jvb2xlYW59IHNob3dQaWNrbGlzdE1vbnRoIHBhcmFtIGNvbnZlcnRlZCB0byBib29sZWFuIGZyb20gYXR0cmlidXRlIHZhbHVlXG4gICAqL1xuICBnZXQgc2hvd1BpY2tsaXN0TW9udGgoKTogYm9vbGVhbiB7XG4gICAgY29uc3QgYXR0clZhbCA9IHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9NT05USCk7XG5cbiAgICBpZiAoYXR0clZhbCkge1xuICAgICAgcmV0dXJuIHN0cmluZ1RvQm9vbChhdHRyVmFsKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBzaG93IGEgbGlzdCBvZiBtb250aHMgaW4gdGhlIHBpY2tsaXN0XG4gICAqIEBwYXJhbSB7c3RyaW5nIHwgYm9vbGVhbiB8IG51bGx9IHZhbCB2YWx1ZSB0byBiZSBzZXQgYXMgc2hvdy1waWNrbGlzdC1tb250aCBhdHRyaWJ1dGUgY29udmVydGVkIHRvIGJvb2xlYW5cbiAgICovXG4gIHNldCBzaG93UGlja2xpc3RNb250aCh2YWw6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKSB7XG4gICAgY29uc3QgYm9vbFZhbCA9IHN0cmluZ1RvQm9vbCh2YWwpO1xuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfTU9OVEgsICd0cnVlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuU0hPV19QSUNLTElTVF9NT05USCk7XG4gICAgfVxuICAgIHRoaXMucmVmcmVzaFBpY2tsaXN0cygpO1xuICB9XG5cbiAgLyoqXG4gICAqIHNob3ctcGlja2xpc3Qtd2VlayBhdHRyaWJ1dGVcbiAgICogQHJldHVybnMge2Jvb2xlYW59IHNob3dQaWNrbGlzdFdlZWsgcGFyYW0gY29udmVydGVkIHRvIGJvb2xlYW4gZnJvbSBhdHRyaWJ1dGUgdmFsdWVcbiAgICovXG4gIGdldCBzaG93UGlja2xpc3RXZWVrKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1dFRUspKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0byBzaG93IHdlZWsgbnVtYmVycyBpbiB0aGUgcGlja2xpc3RcbiAgICogQHBhcmFtIHtzdHJpbmcgfCBib29sZWFuIHwgbnVsbH0gdmFsIHZhbHVlIHRvIGJlIHNldCBhcyBzaG93LXBpY2tsaXN0LXdlZWsgYXR0cmlidXRlIGNvbnZlcnRlZCB0byBib29sZWFuXG4gICAqL1xuICBzZXQgc2hvd1BpY2tsaXN0V2Vlayh2YWw6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKSB7XG4gICAgY29uc3QgYm9vbFZhbCA9IHN0cmluZ1RvQm9vbCh2YWwpO1xuICAgIGlmIChib29sVmFsKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNIT1dfUElDS0xJU1RfV0VFSywgJ3RydWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSE9XX1BJQ0tMSVNUX1dFRUspO1xuICAgIH1cbiAgICB0aGlzLnJlZnJlc2hQaWNrbGlzdHMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXNwb25kIHRvIGxvY2FsZSBjaGFuZ2VzXG4gICAqL1xuICBvbkxvY2FsZUNoYW5nZSA9ICgpID0+IHtcbiAgICB0aGlzLnJlZnJlc2hQaWNrbGlzdHMoKTtcbiAgfTtcblxuICBhY3RpdmF0ZVBpY2tsaXN0KCkge1xuICAgIGlmICghdGhpcy5jb250YWluZXIpIHJldHVybjtcblxuICAgIGNvbnN0IHBpY2tsaXN0QnRuczogYW55ID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnBpY2tsaXN0LWl0ZW0uaXMtYnRuLXVwLCAucGlja2xpc3QtaXRlbS5pcy1idG4tZG93bicpO1xuICAgIHBpY2tsaXN0QnRucy5mb3JFYWNoKChpdGVtOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJJTkRFWCwgJzAnKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IG1vbnRoRWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihgLnBpY2tsaXN0LWl0ZW0uaXMtbW9udGhbZGF0YS1tb250aD1cIiR7dGhpcy5tb250aH1cIl1gKTtcbiAgICBjb25zdCB5ZWFyRWwgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yPEhUTUxFbGVtZW50PihgLnBpY2tsaXN0LWl0ZW0uaXMteWVhcltkYXRhLXllYXI9XCIke3RoaXMueWVhcn1cIl1gKTtcbiAgICBjb25zdCB3ZWVrID0gd2Vla051bWJlcihuZXcgRGF0ZSh0aGlzLnllYXIsIHRoaXMubW9udGgsIHRoaXMuZGF5KSwgdGhpcy5maXJzdERheU9mV2Vlayk7XG4gICAgY29uc3Qgd2Vla0VsID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvcjxIVE1MRWxlbWVudD4oYC5waWNrbGlzdC1pdGVtLmlzLXdlZWtbZGF0YS13ZWVrPVwiJHt3ZWVrfVwiXWApO1xuICAgIHRoaXMuc2VsZWN0UGlja2xpc3RFbChtb250aEVsKTtcbiAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwoeWVhckVsKTtcbiAgICB0aGlzLnNlbGVjdFBpY2tsaXN0RWwod2Vla0VsKTtcblxuICAgIHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3I8SFRNTEVsZW1lbnQ+KCcucGlja2xpc3QtaXRlbS5pcy1zZWxlY3RlZCcpPy5mb2N1cygpO1xuICB9XG5cbiAgZGVhY3RpdmF0ZVBpY2tsaXN0KCkge1xuICAgIGlmICghdGhpcy5jb250YWluZXIpIHJldHVybjtcblxuICAgIGNvbnN0IHBpY2tsaXN0QnRuczogYW55ID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnBpY2tsaXN0LWl0ZW0uaXMtYnRuLXVwLCAucGlja2xpc3QtaXRlbS5pcy1idG4tZG93bicpO1xuICAgIHBpY2tsaXN0QnRucy5mb3JFYWNoKChpdGVtOiBIVE1MRWxlbWVudCkgPT4ge1xuICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJJTkRFWCwgJy0xJyk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnVuc2VsZWN0UGlja2xpc3QoJ2FsbCcpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IElkc01vbnRoWWVhclBpY2tsaXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-month-year-picklist.ts\n");

/***/ }),

/***/ "./src/components/ids-date-picker/ids-date-picker-popup.scss":
/*!*******************************************************************!*\
  !*** ./src/components/ids-date-picker/ids-date-picker-popup.scss ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\nids-popup::part(popup) {\n  padding-top: 0px;\n  padding-bottom: 0px;\n}\n\nids-popup[visible][animated] {\n  transition: none;\n}\n\n.ids-date-picker-popup .ids-popup.menu {\n  padding-top: 0px;\n  padding-bottom: 0px;\n}\n\nids-month-view {\n  width: 100%;\n}\n\n#month-year-view-trigger {\n  margin: 4px;\n}\n\n.ids-date-picker-popup {\n  min-width: 350px;\n}\n.ids-date-picker-popup:not(.has-time) ids-month-view::part(table-container) {\n  margin-bottom: 10px;\n}\n.ids-date-picker-popup ids-popup::part(popup) {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.ids-date-picker-popup[mode=dark] ids-popup::part(popup) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker-popup[mode=dark] ids-popup::part(arrow)::after {\n  border-bottom-color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker-popup .popup-footer {\n  display: flex;\n  border-top: 1px solid var(--ids-color-palette-slate-30);\n}\n.ids-date-picker-popup .popup-footer ids-modal-button:not([hidden]) + ids-modal-button,\n.ids-date-picker-popup .popup-footer .ids-modal-button:not([hidden]) + .ids-modal-button {\n  border-left: 1px solid;\n  border-left-color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker-popup[mode=dark] .popup-footer {\n  border-top-color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker-popup[mode=dark] .popup-footer ids-modal-button:not([hidden]) + ids-modal-button:not(:focus),\n.ids-date-picker-popup[mode=dark] .popup-footer .ids-modal-button:not([hidden]) + .ids-modal-button:not(:focus) {\n  border-left-color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker-popup .popup-btn {\n  width: 100%;\n}\n\n.ids-date-picker-content {\n  position: relative;\n}\n\nids-expandable-area {\n  display: block;\n}\n\nids-expandable-area:not([expanded]),\nids-expandable-area[expanded=false] {\n  pointer-events: none;\n}\n\nids-expandable-area::part(container) {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 3;\n  border: none;\n  left: 0;\n}\n\nids-expandable-area::part(header) {\n  display: none;\n}\n\nids-expandable-area::part(pane) {\n  background-color: var(--ids-color-palette-white);\n}\n\nids-expandable-area::part(footer) {\n  display: none;\n}\n\nids-expandable-area::part(pane-content) {\n  margin-top: 0px;\n  height: 100%;\n}\n\n[mode=dark] ids-expandable-area::part(pane) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n\nids-time-picker {\n  display: flex;\n  justify-content: center;\n}\n\n.btn-today {\n  margin-right: -7px;\n}\n.btn-today::part(button) {\n  padding-inline-start: 4px;\n  padding-inline-end: 4px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  margin: 3px;\n}\n\n.btn-today-text {\n  color: var(--ids-color-palette-azure-60);\n}\n\n.btn-previous,\n.btn-next {\n  padding-inline-start: 0px;\n  margin: 3px;\n}\n.btn-previous::part(button),\n.btn-next::part(button) {\n  padding: 0;\n  width: 44px;\n  height: 44px;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-date-picker-popup.scss\n");

/***/ }),

/***/ "./src/components/ids-date-picker/ids-date-picker.scss":
/*!*************************************************************!*\
  !*** ./src/components/ids-date-picker/ids-date-picker.scss ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: block;\n}\n\n:host([size=full]) {\n  width: 100%;\n}\n:host([size=full]) ::part(container) {\n  display: block;\n}\n\n.ids-date-picker {\n  display: inline-block;\n  max-width: 100%;\n}\n.ids-date-picker ids-trigger-field,\n.ids-date-picker .ids-trigger-field {\n  display: inline-block;\n  max-width: 100%;\n}\n.ids-date-picker ids-trigger-field[size=full] {\n  display: block;\n}\n.ids-date-picker.full {\n  display: block;\n}\n.ids-date-picker.full ids-trigger-field,\n.ids-date-picker.full .ids-trigger-field {\n  display: block;\n}\n.ids-date-picker.is-calendar-toolbar {\n  display: flex;\n  border-style: solid;\n  border-width: 1px;\n  border-color: transparent;\n  padding-inline-start: 8px;\n  margin-inline-start: 4px;\n  align-items: center;\n  outline: none;\n  outline-color: transparent;\n}\n.ids-date-picker.is-calendar-toolbar .datepicker-text {\n  line-height: 1;\n  margin-inline-end: 2px;\n}\n.ids-date-picker.is-calendar-toolbar .datepicker-icon {\n  margin-bottom: 2px;\n}\n.ids-date-picker.is-calendar-toolbar:focus {\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 3px rgba(54, 138, 192, 0.3);\n}\n.ids-date-picker.is-calendar-toolbar[mode=dark]:focus {\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 2px rgba(141, 201, 230, 0.3);\n}\n.ids-date-picker.is-calendar-toolbar[mode=contrast]:focus {\n  border-color: var(--ids-color-palette-azure-90);\n  box-shadow: 0 0 4px 2px rgba(41, 41, 41, 0.3);\n}\n.ids-date-picker.is-open:not(.is-dropdown) ids-trigger-button::part(button) {\n  color: var(--ids-color-palette-azure-60);\n}\n.ids-date-picker.is-open:not(.is-dropdown) ids-trigger-field::part(field-container) {\n  border-color: var(--ids-color-palette-azure-60);\n}\n.ids-date-picker[mode=contrast].is-open:not(.is-dropdown) ids-trigger-button::part(button) {\n  color: var(--ids-color-palette-azure-90);\n}\n.ids-date-picker[mode=contrast].is-open:not(.is-dropdown) ids-trigger-field::part(field-container) {\n  border-color: var(--ids-color-palette-azure-90);\n}\n.ids-date-picker ids-month-view {\n  width: 100%;\n}\n.ids-date-picker:not(.has-time) ids-month-view::part(table-container) {\n  margin-bottom: 10px;\n}\n.ids-date-picker ids-popup::part(popup) {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.ids-date-picker[mode=dark] ids-popup::part(popup) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker[mode=dark] ids-popup::part(arrow)::after,\n.ids-date-picker[mode=dark] ids-popup::part(arrow-bottom)::after {\n  border-bottom-color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker .popup-footer {\n  display: flex;\n}\n.ids-date-picker .popup-btn {\n  width: 100%;\n}\n.ids-date-picker .popup-btn::part(button) {\n  display: flex;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 0;\n  justify-content: center;\n}\n.ids-date-picker .popup-btn::part(button):not(:focus) {\n  border-width: 1px;\n  border-color: transparent;\n  border-top-color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker[mode=dark] .popup-btn::part(button):not(:focus) {\n  border-top-color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker .popup-btn:not(.popup-btn-apply)::part(button) {\n  color: var(--ids-color-palette-slate-60);\n}\n.ids-date-picker .popup-btn:not(.popup-btn-apply)::part(button):hover {\n  color: var(--ids-color-palette-slate-100);\n}\n.ids-date-picker .popup-btn:not([hidden]):not(:last-child):not(:focus)::part(button) {\n  border-right-color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker[mode=dark] .popup-btn:not(.popup-btn-apply)::part(button) {\n  color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker[mode=dark] .popup-btn:not(.popup-btn-apply)::part(button):hover {\n  color: var(--ids-color-palette-white);\n}\n.ids-date-picker[mode=dark] .popup-btn:not([hidden]):not(:last-child):not(:focus)::part(button) {\n  border-right-color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker[mode=contrast] .popup-btn:not(.popup-btn-apply)::part(button) {\n  color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker[mode=contrast] .popup-btn:not(.popup-btn-apply)::part(button):hover {\n  color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker .popup-btn-apply:not([disabled])::part(button) {\n  color: var(--ids-color-palette-azure-70);\n}\n.ids-date-picker .popup-btn-apply[disabled]::part(button) {\n  color: var(--ids-color-palette-azure-30);\n}\n.ids-date-picker[mode=dark] .popup-btn-apply:not([disabled])::part(button) {\n  color: var(--ids-color-palette-azure-60);\n}\n.ids-date-picker[mode=contrast] .popup-btn-apply:not([disabled])::part(button) {\n  color: var(--ids-color-palette-azure-90);\n}\n.ids-date-picker ids-time-picker {\n  display: flex;\n  justify-content: center;\n}\n\n.ids-date-picker.is-dropdown .dropdown-btn::part(button) {\n  border-radius: 2px;\n  color: var(--ids-color-palette-slate-100);\n  padding: 4px;\n  border: none;\n}\n.ids-date-picker.is-dropdown .dropdown-btn::part(button):focus {\n  box-shadow: 0 0 0 2px transparent, 0 0 0 1px var(--ids-color-palette-azure-60), 0 0 4px 3px rgba(54, 138, 192, 0.3);\n}\n.ids-date-picker.is-dropdown .dropdown-btn-text,\n.ids-date-picker.is-dropdown .dropdown-btn-icon {\n  padding-inline-start: 0;\n}\n.ids-date-picker.is-dropdown .dropdown-btn-icon {\n  margin-top: 2px;\n}\n.ids-date-picker.is-dropdown.is-expanded .dropdown-btn::part(button) {\n  color: var(--ids-color-palette-azure-60);\n}\n.ids-date-picker.is-dropdown.is-expanded .dropdown-btn-icon {\n  transform: rotate(180deg);\n}\n.ids-date-picker.is-dropdown[mode=dark]:not(.is-expanded) .dropdown-btn::part(button) {\n  color: var(--ids-color-palette-white);\n}\n.ids-date-picker.is-dropdown[mode=dark]:not(.is-expanded) .dropdown-btn::part(button):focus {\n  box-shadow: 0 0 0 2px transparent, 0 0 0 1px var(--ids-color-palette-azure-60), 0 0 4px 2px rgba(141, 201, 230, 0.3);\n}\n.ids-date-picker.is-dropdown[mode=contrast]:not(.is-expanded) .dropdown-btn::part(button) {\n  color: var(--ids-color-palette-black);\n}\n.ids-date-picker.is-dropdown[mode=contrast]:not(.is-expanded) .dropdown-btn::part(button):focus {\n  box-shadow: 0 0 0 2px transparent, 0 0 0 1px var(--ids-color-palette-azure-90), 0 0 4px 2px rgba(41, 41, 41, 0.3);\n}\n.ids-date-picker.is-dropdown[mode=contrast].is-expanded .dropdown-btn::part(button) {\n  color: var(--ids-color-palette-azure-90);\n}\n.ids-date-picker.is-dropdown ids-expandable-area::part(container) {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  z-index: 3;\n  border: none;\n  top: 43px;\n  left: 0;\n}\n.ids-date-picker.is-dropdown ids-expandable-area::part(header) {\n  display: none;\n}\n.ids-date-picker.is-dropdown ids-expandable-area::part(pane) {\n  background-color: var(--ids-color-palette-white);\n}\n.ids-date-picker.is-dropdown ids-expandable-area::part(pane-content) {\n  margin-top: 0px;\n}\n.ids-date-picker.is-dropdown[mode=dark] ids-expandable-area::part(pane) {\n  background-color: var(--ids-color-palette-slate-80);\n}\n.ids-date-picker.is-dropdown .picklist {\n  display: flex;\n}\n.ids-date-picker.is-dropdown .picklist::after {\n  position: absolute;\n  background-color: var(--ids-color-palette-slate-30);\n  content: \" \";\n  width: 1px;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  height: calc(75% + 14px);\n  top: calc(12.5% - 4px);\n}\n.ids-date-picker.is-dropdown:not(.is-expanded) .picklist::after {\n  background-color: transparent;\n}\n.ids-date-picker.is-dropdown .picklist-section {\n  height: 100%;\n  width: 50%;\n  flex: 0 0 50%;\n}\n.ids-date-picker.is-dropdown .picklist-list {\n  display: flex;\n  list-style: none;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  height: 100%;\n}\n.ids-date-picker.is-dropdown .picklist-item {\n  display: flex;\n  cursor: pointer;\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  color: var(--ids-color-palette-slate-80);\n  padding-top: 1px;\n  padding-bottom: 1px;\n  width: 100%;\n  box-sizing: border-box;\n  user-select: none;\n  height: 12.5%;\n  align-items: center;\n  justify-content: center;\n}\n.ids-date-picker.is-dropdown .picklist-item ids-text {\n  line-height: 0;\n}\n.ids-date-picker.is-dropdown .picklist-item.is-selected {\n  color: var(--ids-color-palette-white);\n  background-color: var(--ids-color-palette-azure-60);\n}\n.ids-date-picker.is-dropdown .picklist-item.is-selected ids-text::part(text) {\n  font-weight: 600;\n}\n.ids-date-picker.is-dropdown .picklist-item:focus {\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 3px rgba(54, 138, 192, 0.3);\n  outline: none;\n}\n.ids-date-picker.is-dropdown .picklist-item.is-year-nav, .ids-date-picker.is-dropdown .picklist-item.is-month-nav {\n  z-index: 1;\n}\n.ids-date-picker.is-dropdown .picklist-item.is-month-nav {\n  width: calc(100% + 1px);\n}\n.ids-date-picker.is-dropdown[mode=dark] .picklist::after {\n  background-color: var(--ids-color-palette-slate-50);\n}\n.ids-date-picker.is-dropdown[mode=dark] .picklist-item:not(.is-selected) {\n  color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker.is-dropdown[mode=dark] .picklist-item.is-selected:focus {\n  box-shadow: 0 0 4px 2px rgba(141, 201, 230, 0.3);\n}\n.ids-date-picker.is-dropdown[mode=contrast] .picklist::after {\n  background-color: var(--ids-color-palette-slate-30);\n}\n.ids-date-picker.is-dropdown[mode=contrast] .picklist-item:not(.is-selected) {\n  color: var(--ids-color-palette-black);\n}\n.ids-date-picker.is-dropdown[mode=contrast] .picklist-item.is-selected {\n  background-color: var(--ids-color-palette-azure-90);\n}\n.ids-date-picker.is-dropdown[mode=contrast] .picklist-item.is-selected:focus {\n  border-color: var(--ids-color-palette-azure-100);\n  box-shadow: 0 0 4px 2px rgba(41, 41, 41, 0.3);\n}\n\n:host([is-calendar-toolbar=true]) {\n  display: flex;\n}\n\n:host([dir=rtl]) .ids-date-picker .popup-btn + .popup-btn::part(button):not(:focus) {\n  border-left-color: transparent;\n  border-right-color: var(--ids-color-palette-slate-30);\n}\n:host([dir=rtl]) .ids-date-picker[mode=dark] .popup-btn + .popup-btn::part(button):not(:focus) {\n  border-right-color: var(--ids-color-palette-slate-50);\n}\n\n.ids-date-picker.color-variant-borderless ids-trigger-field::part(container) {\n  margin: 1px 0;\n}\n.ids-date-picker.color-variant-borderless ids-trigger-field::part(field-container) {\n  border: none;\n}\n.ids-date-picker.color-variant-borderless ids-trigger-field::part(input) {\n  padding-inline-end: 0 !important;\n}\n.ids-date-picker.color-variant-borderless.field-height-lg ids-trigger-field::part(input) {\n  padding-inline: 16px;\n  height: 50px;\n}\n.ids-date-picker.color-variant-borderless.field-height-md ids-trigger-field::part(input) {\n  padding-inline: 12px;\n  height: 40px;\n}\n.ids-date-picker.color-variant-borderless.field-height-sm ids-trigger-field::part(input) {\n  padding-inline: 8px;\n  height: 35px;\n}\n.ids-date-picker.color-variant-borderless.field-height-xs ids-trigger-field::part(input) {\n  padding-inline: 4px;\n  height: 30px;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-date-picker.scss\n");

/***/ }),

/***/ "./src/components/ids-date-picker/ids-month-year-picklist.scss":
/*!*********************************************************************!*\
  !*** ./src/components/ids-date-picker/ids-month-year-picklist.scss ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n:host {\n  display: block;\n  height: 100%;\n}\n\n.picklist {\n  display: flex;\n  height: 100%;\n  position: relative;\n}\n\n:not(.is-expanded) .picklist-section::before {\n  background-color: transparent;\n}\n\n.picklist-section {\n  height: 100%;\n  width: 50%;\n  flex: 0 0 50%;\n}\n.picklist-section:only-child {\n  width: 100%;\n  flex: 0 0 100%;\n}\n.picklist-section + .picklist-section::before {\n  position: absolute;\n  background-color: var(--ids-color-palette-slate-30);\n  content: \" \";\n  width: 1px;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  height: calc(75% + 14px);\n  top: calc(12.5% - 4px);\n}\n\n.picklist-list {\n  display: flex;\n  list-style: none;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  height: 100%;\n}\n\n.picklist-item {\n  display: flex;\n  cursor: pointer;\n  border-width: 1px;\n  border-style: solid;\n  border-color: transparent;\n  color: var(--ids-color-palette-slate-80);\n  padding-top: 1px;\n  padding-bottom: 1px;\n  width: 100%;\n  box-sizing: border-box;\n  user-select: none;\n  height: 12.5%;\n  align-items: center;\n  justify-content: center;\n  contain: content;\n}\n.picklist-item ids-text {\n  line-height: 0;\n}\n.picklist-item.is-selected {\n  color: var(--ids-color-palette-white);\n  background-color: var(--ids-color-palette-azure-60);\n}\n.picklist-item.is-selected ids-text::part(text) {\n  font-weight: 600;\n}\n.picklist-item:focus {\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 3px rgba(54, 138, 192, 0.3);\n  outline: none;\n}\n.picklist-item.is-year-nav, .picklist-item.is-month-nav {\n  z-index: 1;\n}\n.picklist-item.is-month-nav {\n  width: calc(100% + 1px);\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-date-picker/ids-month-year-picklist.scss\n");

/***/ })

}]);