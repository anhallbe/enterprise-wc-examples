"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-menu_ids-menu-group_ts-src_components_ids-menu_ids-menu-item_ts-src_compon-420212"],{

/***/ "./src/components/ids-menu/ids-menu-attributes.ts":
/*!********************************************************!*\
  !*** ./src/components/ids-menu/ids-menu-attributes.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MENU_DEFAULTS\": () => (/* binding */ MENU_DEFAULTS),\n/* harmony export */   \"MENU_GROUP_SELECT_TYPES\": () => (/* binding */ MENU_GROUP_SELECT_TYPES),\n/* harmony export */   \"MENU_ITEM_ICON_SIZE\": () => (/* binding */ MENU_ITEM_ICON_SIZE),\n/* harmony export */   \"isUsableItem\": () => (/* binding */ isUsableItem),\n/* harmony export */   \"isValidGroup\": () => (/* binding */ isValidGroup),\n/* harmony export */   \"safeForAttribute\": () => (/* binding */ safeForAttribute)\n/* harmony export */ });\n/* harmony import */ var _utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/ids-dom-utils/ids-dom-utils */ \"./src/utils/ids-dom-utils/ids-dom-utils.ts\");\n\nconst MENU_GROUP_SELECT_TYPES = [\n  \"none\",\n  \"single\",\n  \"multiple\"\n];\nconst MENU_ITEM_ICON_SIZE = \"small\";\nconst MENU_DEFAULTS = {\n  disabled: false,\n  icon: null,\n  selected: false,\n  shortcutKeys: null,\n  submenu: null,\n  tabIndex: 0,\n  value: null\n};\nfunction safeForAttribute(value) {\n  return value !== null && [\"string\", \"number\", \"boolean\"].includes(typeof value);\n}\nfunction isValidGroup(menuGroup, idsMenu) {\n  let hasGroup;\n  const isGroup = menuGroup !== void 0 && menuGroup.nodeName === \"IDS-MENU-GROUP\";\n  idsMenu.groups.forEach((group) => {\n    if (isGroup && group.isEqualNode(menuGroup) || group?.id === menuGroup) {\n      hasGroup = group;\n    }\n  });\n  return hasGroup;\n}\nfunction isUsableItem(item, idsMenu) {\n  const isItem = item?.nodeName === \"IDS-MENU-ITEM\";\n  if (!isItem) {\n    return false;\n  }\n  const menuHasItem = idsMenu.contains(item);\n  const closestItemRoot = (0,_utils_ids_dom_utils_ids_dom_utils__WEBPACK_IMPORTED_MODULE_0__.getClosestRootNode)(item.assignedSlot);\n  const itemInMenuShadow = closestItemRoot?.menu?.isEqualNode(idsMenu);\n  return (itemInMenuShadow || menuHasItem) && !item.disabled;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbWVudS9pZHMtbWVudS1hdHRyaWJ1dGVzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUM7QUEyQ25DLE1BQU0sMEJBQTBCO0FBQUEsRUFDOUI7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNGO0FBR0EsTUFBTSxzQkFBc0I7QUFHNUIsTUFBTSxnQkFBcUI7QUFBQSxFQUN6QixVQUFVO0FBQUEsRUFDVixNQUFNO0FBQUEsRUFDTixVQUFVO0FBQUEsRUFDVixjQUFjO0FBQUEsRUFDZCxTQUFTO0FBQUEsRUFDVCxVQUFVO0FBQUEsRUFDVixPQUFPO0FBQ1Q7QUFPQSxTQUFTLGlCQUFpQixPQUFZO0FBQ3BDLFNBQU8sVUFBVSxRQUFRLENBQUMsVUFBVSxVQUFVLFNBQVMsRUFBRSxTQUFTLE9BQU8sS0FBSztBQUNoRjtBQVNBLFNBQVMsYUFBYSxXQUFnQixTQUFjO0FBQ2xELE1BQUk7QUFHSixRQUFNLFVBQVUsY0FBYyxVQUFhLFVBQVUsYUFBYTtBQUNsRSxVQUFRLE9BQU8sUUFBUSxDQUFDLFVBQWU7QUFDckMsUUFBSyxXQUFXLE1BQU0sWUFBWSxTQUFTLEtBQU8sT0FBTyxPQUFPLFdBQVk7QUFDMUUsaUJBQVc7QUFBQSxJQUNiO0FBQUEsRUFDRixDQUFDO0FBQ0QsU0FBTztBQUNUO0FBUUEsU0FBUyxhQUFhLE1BQVcsU0FBYztBQUM3QyxRQUFNLFNBQVMsTUFBTSxhQUFhO0FBQ2xDLE1BQUksQ0FBQyxRQUFRO0FBQ1gsV0FBTztBQUFBLEVBQ1Q7QUFHQSxRQUFNLGNBQWMsUUFBUSxTQUFTLElBQUk7QUFJekMsUUFBTSxrQkFBa0Isc0ZBQWtCLENBQUMsS0FBSyxZQUFZO0FBQzVELFFBQU0sbUJBQW1CLGlCQUFpQixNQUFNLFlBQVksT0FBTztBQUVuRSxVQUFRLG9CQUFvQixnQkFBZ0IsQ0FBQyxLQUFLO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtbWVudS9pZHMtbWVudS1hdHRyaWJ1dGVzLnRzPzA3M2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q2xvc2VzdFJvb3ROb2RlIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLWRvbS11dGlscy9pZHMtZG9tLXV0aWxzJztcblxuZXhwb3J0IHR5cGUgSWRzTWVudUl0ZW1EYXRhID0ge1xuICBpZD86IHN0cmluZztcbiAgY29tbWVudD86IHN0cmluZztcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICBpY29uPzogc3RyaW5nO1xuICBzZWxlY3RlZD86IGJvb2xlYW47XG4gIHNob3J0Y3V0S2V5cz86IHN0cmluZztcbiAgc3VibWVudT86IElkc01lbnVEYXRhO1xuICB0ZXh0OiBzdHJpbmc7XG4gIHR5cGU6ICdpdGVtJztcbiAgdmFsdWU/OiBzdHJpbmcgfCBudWxsO1xufTtcblxuZXhwb3J0IHR5cGUgSWRzTWVudUhlYWRlckRhdGEgPSB7XG4gIGZvcj86IHN0cmluZztcbiAgdGV4dDogc3RyaW5nO1xuICB0eXBlOiAnaGVhZGVyJztcbn07XG5cbmV4cG9ydCB0eXBlIElkc01lbnVTZXBhcmF0b3JEYXRhID0ge1xuICB0eXBlOiAnc2VwYXJhdG9yJztcbn07XG5cbmV4cG9ydCB0eXBlIElkc01lbnVDb250ZW50c0RhdGEgPSBBcnJheTxJZHNNZW51R3JvdXBEYXRhIHwgSWRzTWVudVNlcGFyYXRvckRhdGEgfCBJZHNNZW51SGVhZGVyRGF0YT47XG5cbmV4cG9ydCB0eXBlIElkc01lbnVHcm91cERhdGEgPSB7XG4gIGlkPzogc3RyaW5nO1xuICBpdGVtczogQXJyYXk8SWRzTWVudUl0ZW1EYXRhIHwgSWRzTWVudVNlcGFyYXRvckRhdGEgfCBJZHNNZW51SGVhZGVyRGF0YT47XG4gIHNlbGVjdD86ICdub25lJyB8ICdzaW5nbGUnIHwgJ211bHRpcGxlJztcbiAgdHlwZT86ICdncm91cCc7XG59O1xuXG5leHBvcnQgdHlwZSBJZHNNZW51T2JqZWN0RGF0YSA9IHtcbiAgaWQ/OiBzdHJpbmc7XG4gIGNvbnRlbnRzPzogSWRzTWVudUNvbnRlbnRzRGF0YTtcbiAgbGVuZ3RoPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IHR5cGUgSWRzTWVudURhdGEgPSBJZHNNZW51T2JqZWN0RGF0YSB8IElkc01lbnVDb250ZW50c0RhdGE7XG5cbi8vIE1lbnUgU2VsZWN0aW9uIFR5cGVzXG5jb25zdCBNRU5VX0dST1VQX1NFTEVDVF9UWVBFUyA9IFtcbiAgJ25vbmUnLFxuICAnc2luZ2xlJyxcbiAgJ211bHRpcGxlJ1xuXTtcblxuLy8gU2l6ZSBmb3IgbWVudSBpdGVtIGljb25zXG5jb25zdCBNRU5VX0lURU1fSUNPTl9TSVpFID0gJ3NtYWxsJztcblxuLy8gRGVmYXVsdCBCdXR0b24gc3RhdGUgdmFsdWVzXG5jb25zdCBNRU5VX0RFRkFVTFRTOiBhbnkgPSB7XG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgaWNvbjogbnVsbCxcbiAgc2VsZWN0ZWQ6IGZhbHNlLFxuICBzaG9ydGN1dEtleXM6IG51bGwsXG4gIHN1Ym1lbnU6IG51bGwsXG4gIHRhYkluZGV4OiAwLFxuICB2YWx1ZTogbnVsbCxcbn07XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiBhIG1lbnUgaXRlbSdzIHN0b3JlZCB2YWx1ZSBjYW4gc2FmZWx5IGJlIGRlc2NyaWJlZCBieSBpdHMgYXR0cmlidXRlIGluc2lkZSB0aGUgRE9NLlxuICogQHBhcmFtIHthbnl9IHZhbHVlIHRoZSB2YWx1ZSB0byBiZSBjaGVja2VkXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gdHJ1ZSBpZiB0aGUgdmFsdWUgY2FuIGJlIFwic3RyaW5naWZpZWRcIiBzYWZlbHkgZm9yIHRoZSBET00gYXR0cmlidXRlXG4gKi9cbmZ1bmN0aW9uIHNhZmVGb3JBdHRyaWJ1dGUodmFsdWU6IGFueSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgWydzdHJpbmcnLCAnbnVtYmVyJywgJ2Jvb2xlYW4nXS5pbmNsdWRlcyh0eXBlb2YgdmFsdWUpO1xufVxuXG4vKipcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ3xIVE1MRWxlbWVudH0gbWVudUdyb3VwIHRoZSBncm91cCB0byBzZWFyY2ggZm9yXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBpZHNNZW51IHRoZSBwYXJlbnQgbWVudSBlbGVtZW50XG4gKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR8dW5kZWZpbmVkfSBpZiB2YWxpZCwgYSByZWZlcmVuY2UgdG8gdGhlIG1lbnUgZ3JvdXAuXG4gKiBPdGhlcndpc2UsIHJldHVybnMgdW5kZWZpbmVkLlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkR3JvdXAobWVudUdyb3VwOiBhbnksIGlkc01lbnU6IGFueSkge1xuICBsZXQgaGFzR3JvdXA7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIGNvbnN0IGlzR3JvdXAgPSBtZW51R3JvdXAgIT09IHVuZGVmaW5lZCAmJiBtZW51R3JvdXAubm9kZU5hbWUgPT09ICdJRFMtTUVOVS1HUk9VUCc7XG4gIGlkc01lbnUuZ3JvdXBzLmZvckVhY2goKGdyb3VwOiBhbnkpID0+IHtcbiAgICBpZiAoKGlzR3JvdXAgJiYgZ3JvdXAuaXNFcXVhbE5vZGUobWVudUdyb3VwKSkgfHwgKGdyb3VwPy5pZCA9PT0gbWVudUdyb3VwKSkge1xuICAgICAgaGFzR3JvdXAgPSBncm91cDtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gaGFzR3JvdXA7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGl0ZW0gdGhlIGVsZW1lbnQgdG8gYmUgY2hlY2tlZFxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gaWRzTWVudSB0aGUgcGFyZW50IG1lbnUgZWxlbWVudFxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUgaWYgdGhlIHByb3ZpZGVkIGVsZW1lbnQgaXMgYSBcImN1cnJlbnRseS11c2FibGVcIiBJZHNNZW51SXRlbSB0eXBlLlxuICovXG5mdW5jdGlvbiBpc1VzYWJsZUl0ZW0oaXRlbTogYW55LCBpZHNNZW51OiBhbnkpIHtcbiAgY29uc3QgaXNJdGVtID0gaXRlbT8ubm9kZU5hbWUgPT09ICdJRFMtTUVOVS1JVEVNJztcbiAgaWYgKCFpc0l0ZW0pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBUaGUgaXRlbSBpcyBvbmx5IHVzYWJsZSBpZiBpdCdzIGNvbnRhaW5lZCBieSB0aGUgY29ycmVjdCBJZHNNZW51XG4gIGNvbnN0IG1lbnVIYXNJdGVtID0gaWRzTWVudS5jb250YWlucyhpdGVtKTtcblxuICAvLyBJbiBzb21lIG5lc3RlZCBjYXNlcywgd2UgbmVlZCB0byBkZXRlY3QgdGhlIGl0ZW0ncyBTaGFkb3cgUm9vdCBjb250YWlubWVudCB0byBhY2N1cmF0ZWx5XG4gIC8vIGZpZ3VyZSBvdXQgaWYgaXQncyBzbG90dGVkIGluc2lkZSB0aGUgc2FtZSBtZW51LlxuICBjb25zdCBjbG9zZXN0SXRlbVJvb3QgPSBnZXRDbG9zZXN0Um9vdE5vZGUoaXRlbS5hc3NpZ25lZFNsb3QpO1xuICBjb25zdCBpdGVtSW5NZW51U2hhZG93ID0gY2xvc2VzdEl0ZW1Sb290Py5tZW51Py5pc0VxdWFsTm9kZShpZHNNZW51KTtcblxuICByZXR1cm4gKGl0ZW1Jbk1lbnVTaGFkb3cgfHwgbWVudUhhc0l0ZW0pICYmICFpdGVtLmRpc2FibGVkO1xufVxuXG5leHBvcnQge1xuICBNRU5VX0dST1VQX1NFTEVDVF9UWVBFUywgTUVOVV9JVEVNX0lDT05fU0laRSwgTUVOVV9ERUZBVUxUUywgc2FmZUZvckF0dHJpYnV0ZSwgaXNWYWxpZEdyb3VwLCBpc1VzYWJsZUl0ZW1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-menu/ids-menu-attributes.ts\n");

/***/ }),

/***/ "./src/components/ids-menu/ids-menu-group.ts":
/*!***************************************************!*\
  !*** ./src/components/ids-menu/ids-menu-group.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsMenuGroup)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _ids_menu_header__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ids-menu-header */ \"./src/components/ids-menu/ids-menu-header.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_menu_attributes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ids-menu-attributes */ \"./src/components/ids-menu/ids-menu-attributes.ts\");\n/* harmony import */ var _ids_menu_group_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ids-menu-group.scss */ \"./src/components/ids-menu/ids-menu-group.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n    _core_ids_element__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n  )\n);\nlet IdsMenuGroup = class extends Base {\n  constructor() {\n    super();\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes as an array\n   */\n  static get attributes() {\n    return [\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.KEEP_OPEN,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECT\n    ];\n  }\n  template() {\n    return `<div class=\"ids-menu-group\" role=\"none\"><slot></slot></div>`;\n  }\n  /**\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.#attachEventHandlers();\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, \"group\");\n    this.refresh();\n  }\n  /**\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.onEvent(\"selected\", this, (e) => {\n      const item = e.target.closest(\"ids-menu-item\");\n      if (this.select === \"single\") {\n        this.deselectAllExcept(item);\n      }\n    });\n  }\n  /**\n   * Updates some attributes after changes to the component are made.\n   * @private\n   * @returns {void}\n   */\n  refresh() {\n    const header = this.header;\n    if (header) {\n      if (this.header?.id) {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABELLED_BY, `${this.header.id}`);\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABEL);\n      } else {\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABEL, `${this.header?.textContent}`);\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABELLED_BY);\n      }\n    } else {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABEL, this.#getGeneratedLabel());\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_LABELLED_BY);\n    }\n  }\n  #getGeneratedLabel() {\n    const str = this.localeAPI?.translate(\"MenuGroup\") || \"\";\n    return str.replace(\"{0}\", this.items.length);\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} the `IdsMenu` or `IdsPopupMenu` parent node.\n   */\n  get menu() {\n    return this.parentElement;\n  }\n  /**\n   * @readonly\n   * @returns {Array<IdsMenuItem>} [Array<IdsMenuItem>] all available menu items in this group\n   */\n  get items() {\n    return [...this.children].filter((e) => e.matches(\"ids-menu-item\"));\n  }\n  /**\n   * Sets/Remove an alignment CSS class\n   * @private\n   * @returns {void}\n   */\n  updateIconAlignment() {\n    this.items.forEach((item) => {\n      if (typeof item.decorateForIcon === \"function\") {\n        item.decorateForIcon();\n      }\n    });\n  }\n  /**\n   * Gets this groups descriptive header, if one is defined.\n   * @readonly\n   * @returns {any} [IdsMenuHeader] containing a menu\n   */\n  get header() {\n    const prevHeader = this.previousElementSibling;\n    if (prevHeader && prevHeader instanceof _ids_menu_header__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n      return prevHeader;\n    return this.querySelector(\"ids-menu-header\");\n  }\n  /**\n   * @returns {string|undefined} containing the type of selection this group allows\n   */\n  get select() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECT);\n  }\n  /**\n   * @param {string|undefined} val the type of selection to set this group\n   */\n  set select(val) {\n    let trueVal = `${val}`;\n    if (_ids_menu_attributes__WEBPACK_IMPORTED_MODULE_7__.MENU_GROUP_SELECT_TYPES.indexOf(trueVal) === -1) {\n      trueVal = _ids_menu_attributes__WEBPACK_IMPORTED_MODULE_7__.MENU_GROUP_SELECT_TYPES[0];\n    }\n    switch (trueVal) {\n      case \"none\":\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECT);\n        break;\n      default:\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECT, trueVal);\n    }\n    this.updateSelectability();\n  }\n  /**\n   * @returns {boolean} true if selection of an item within this group should\n   * cause the parent menu to close\n   */\n  get keepOpen() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.KEEP_OPEN);\n  }\n  /**\n   * @param {boolean} val true if the menu should close when an item in this group is selected\n   */\n  set keepOpen(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_6__.stringToBool)(val);\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.KEEP_OPEN, `${val}`);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.KEEP_OPEN);\n    }\n  }\n  /**\n   * Forces items in the group to re-render the checkmark/checkbox to be in-sync with\n   * the group's `select` property.\n   * @private\n   * @returns {void}\n   */\n  updateSelectability() {\n    this.items.forEach((item) => {\n      if (typeof item.detectSelectability === \"function\") {\n        item.detectSelectability();\n      }\n    });\n  }\n  /**\n   * Causes all menu items except for those provided to become deselected.\n   * @param {HTMLElement|Array<HTMLElement>} keptItems a single item or list of items\n   * whose selection will be ignored.\n   * @returns {void}\n   */\n  deselectAllExcept(keptItems) {\n    const keptItemsArr = [].concat(keptItems);\n    this.items.forEach((item) => {\n      if (!keptItemsArr.includes(item) && item.selected) {\n        item.deselect();\n      }\n    });\n  }\n};\nIdsMenuGroup = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-menu-group\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_menu_group_scss__WEBPACK_IMPORTED_MODULE_8__[\"default\"])\n], IdsMenuGroup);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-menu/ids-menu-group.ts\n");

/***/ }),

/***/ "./src/components/ids-menu/ids-menu-header.ts":
/*!****************************************************!*\
  !*** ./src/components/ids-menu/ids-menu-header.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsMenuHeader)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_menu_header_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ids-menu-header.scss */ \"./src/components/ids-menu/ids-menu-header.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n    _core_ids_element__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n  )\n);\nlet IdsMenuHeader = class extends Base {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, \"none\");\n    if (this.menu)\n      this.decorateForIcon(this.menu.hasIcons);\n  }\n  static get attributes() {\n    return [\n      ...super.attributes\n    ];\n  }\n  /**\n   * @readonly\n   * @returns {HTMLElement} the `IdsMenu` or `IdsPopupMenu` parent node.\n   */\n  get menu() {\n    return this.parentElement;\n  }\n  template() {\n    return `<div class=\"ids-menu-header\" part=\"header\" role=\"none\"><slot></slot></div>`;\n  }\n  decorateForIcon(doShow) {\n    this.container?.classList[doShow ? \"add\" : \"remove\"](\"align-for-icons\");\n  }\n};\nIdsMenuHeader = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-menu-header\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_menu_header_scss__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n], IdsMenuHeader);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbWVudS9pZHMtbWVudS1oZWFkZXIudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQ0w7QUFFSjtBQUNEO0FBQ0g7QUFFSjtBQUVuQixNQUFNLE9BQU8sbUZBQWE7QUFBYixFQUNYLHFGQUFjO0FBQWQsSUFDRSx5REFBVTtBQUFWLEVBQ0Y7QUFDRjtBQVlBLElBQXFCLGdCQUFyQixjQUEyQyxLQUFLO0FBQUEsRUFDOUMsY0FBYztBQUNaLFVBQU07QUFBQSxFQUNSO0FBQUEsRUFFQSxvQkFBb0I7QUFDbEIsVUFBTSxrQkFBa0I7QUFDeEIsU0FBSyxhQUFhLHFFQUFtQixFQUFFLE1BQU07QUFDN0MsUUFBSSxLQUFLO0FBQU0sV0FBSyxnQkFBaUIsS0FBSyxLQUFhLFFBQVE7QUFBQSxFQUNqRTtBQUFBLEVBRUEsV0FBVyxhQUFhO0FBQ3RCLFdBQU87QUFBQSxNQUNMLEdBQUcsTUFBTTtBQUFBLElBQ1g7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLElBQUksT0FBTztBQUNULFdBQU8sS0FBSztBQUFBLEVBQ2Q7QUFBQSxFQUVBLFdBQVc7QUFDVCxXQUFPO0FBQUEsRUFDVDtBQUFBLEVBRUEsZ0JBQWdCLFFBQWlCO0FBQy9CLFNBQUssV0FBVyxVQUFVLFNBQVMsUUFBUSxRQUFRLEVBQUUsaUJBQWlCO0FBQUEsRUFDeEU7QUFDRjtBQWhDcUIsZ0JBQXJCO0FBQUEsRUFGQyxtRUFBYSxDQUFDLGlCQUFpQjtBQUFBLEVBQy9CLDBEQUFJLENBQUMsNkRBQU07QUFBQSxHQUNTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaWRzLWVudGVycHJpc2Utd2MvLi9zcmMvY29tcG9uZW50cy9pZHMtbWVudS9pZHMtbWVudS1oZWFkZXIudHM/MzIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjdXN0b21FbGVtZW50LCBzY3NzIH0gZnJvbSAnLi4vLi4vY29yZS9pZHMtZGVjb3JhdG9ycyc7XG5pbXBvcnQgeyBodG1sQXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuXG5pbXBvcnQgSWRzRXZlbnRzTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1ldmVudHMtbWl4aW4vaWRzLWV2ZW50cy1taXhpbic7XG5pbXBvcnQgSWRzVGhlbWVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLXRoZW1lLW1peGluL2lkcy10aGVtZS1taXhpbic7XG5pbXBvcnQgSWRzRWxlbWVudCBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2lkcy1tZW51LWhlYWRlci5zY3NzJztcblxuY29uc3QgQmFzZSA9IElkc1RoZW1lTWl4aW4oXG4gIElkc0V2ZW50c01peGluKFxuICAgIElkc0VsZW1lbnRcbiAgKVxuKTtcblxuLyoqXG4gKiBJRFMgTWVudSBIZWFkZXIgQ29tcG9uZW50XG4gKiBAdHlwZSB7SWRzTWVudUhlYWRlcn1cbiAqIEBpbmhlcml0cyBJZHNFbGVtZW50XG4gKiBAbWl4ZXMgSWRzRXZlbnRzTWl4aW5cbiAqIEBtaXhlcyBJZHNUaGVtZU1peGluXG4gKiBAcGFydCBoZWFkZXIgLSB0aGUgbWVudSBoZWFkZXIgZWxlbWVudFxuICovXG5AY3VzdG9tRWxlbWVudCgnaWRzLW1lbnUtaGVhZGVyJylcbkBzY3NzKHN0eWxlcylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkc01lbnVIZWFkZXIgZXh0ZW5kcyBCYXNlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoaHRtbEF0dHJpYnV0ZXMuUk9MRSwgJ25vbmUnKTtcbiAgICBpZiAodGhpcy5tZW51KSB0aGlzLmRlY29yYXRlRm9ySWNvbigodGhpcy5tZW51IGFzIGFueSkuaGFzSWNvbnMpO1xuICB9XG5cbiAgc3RhdGljIGdldCBhdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXG4gICAgICAuLi5zdXBlci5hdHRyaWJ1dGVzXG4gICAgXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmVhZG9ubHlcbiAgICogQHJldHVybnMge0hUTUxFbGVtZW50fSB0aGUgYElkc01lbnVgIG9yIGBJZHNQb3B1cE1lbnVgIHBhcmVudCBub2RlLlxuICAgKi9cbiAgZ2V0IG1lbnUoKSB7XG4gICAgcmV0dXJuIHRoaXMucGFyZW50RWxlbWVudDtcbiAgfVxuXG4gIHRlbXBsYXRlKCkge1xuICAgIHJldHVybiBgPGRpdiBjbGFzcz1cImlkcy1tZW51LWhlYWRlclwiIHBhcnQ9XCJoZWFkZXJcIiByb2xlPVwibm9uZVwiPjxzbG90Pjwvc2xvdD48L2Rpdj5gO1xuICB9XG5cbiAgZGVjb3JhdGVGb3JJY29uKGRvU2hvdzogYm9vbGVhbikge1xuICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3RbZG9TaG93ID8gJ2FkZCcgOiAncmVtb3ZlJ10oJ2FsaWduLWZvci1pY29ucycpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-menu/ids-menu-header.ts\n");

/***/ }),

/***/ "./src/components/ids-menu/ids-menu-item.ts":
/*!**************************************************!*\
  !*** ./src/components/ids-menu/ids-menu-item.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsMenuItem)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ids-menu-attributes */ \"./src/components/ids-menu/ids-menu-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_menu_item_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ids-menu-item.scss */ \"./src/components/ids-menu/ids-menu-item.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n    )\n  )\n);\nlet IdsMenuItem = class extends Base {\n  shouldUpdate = true;\n  /**\n   * Build the menu item\n   */\n  constructor() {\n    super();\n    this.state = {};\n    Object.keys(_ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__.MENU_DEFAULTS).forEach((prop) => {\n      const attr = this.getAttribute(prop);\n      this.state[prop] = attr || _ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__.MENU_DEFAULTS[prop];\n    });\n    Object.defineProperty(this, \"tabIndex\", {\n      get: () => this.#tabIndex,\n      set: (value) => {\n        this.#tabIndex = value;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    let disabledClass = \"\";\n    let disabledAttr = \"\";\n    if (this.state?.disabled) {\n      disabledClass = \" disabled\";\n      disabledAttr = \" disabled\";\n    }\n    const check = this.templateCheck();\n    const iconSlot = `<span class=\"ids-menu-item-icon\" role=\"presentation\"><slot name=\"icon\"></slot></span>`;\n    let selectedClass = \"\";\n    if (this.state?.selected)\n      selectedClass = \" selected\";\n    const shortcutSlot = `<span class=\"ids-menu-item-shortcuts\" part=\"shortcuts\"><slot name=\"shortcuts\"></slot></span>`;\n    let shortcutClass = \"\";\n    if (this.shortcutKeys)\n      shortcutClass = \" has-shortcuts\";\n    let submenuClass = \"\";\n    if (this.submenu)\n      submenuClass = \" has-submenu\";\n    let tabindex = 'tabindex=\"0\"';\n    if (this.state?.tabIndex && !this.state?.disabled)\n      tabindex = ` tabindex=\"${this.state.tabIndex}\"`;\n    let textClass = \"\";\n    if (this.textAlign)\n      textClass = ` text-${this.textAlign}`;\n    const textSlot = `<span class=\"ids-menu-item-text\" part=\"text\"><slot></slot></span>`;\n    return `<div role=\"none\" part=\"menu-item\" class=\"ids-menu-item${disabledClass}${selectedClass}${shortcutClass}${submenuClass}${textClass}\">\n      <a role=\"menuitem\" ${tabindex} ${disabledAttr}>\n        ${check}${iconSlot}${textSlot}${shortcutSlot}\n      </a>\n      <slot name=\"submenu\"></slot>\n    </div>`;\n  }\n  templateCheck() {\n    return '<span class=\"check\" part=\"check\" role=\"presentation\"></span>';\n  }\n  templateDisplayIcon(icon) {\n    const viewbox = this.viewbox ? ` viewbox=\"${this.viewbox}\"` : \"\";\n    return `<ids-icon slot=\"icon\" icon=\"${icon}\"${viewbox} size=\"${_ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__.MENU_ITEM_ICON_SIZE}\" part=\"icon\" class=\"ids-icon ids-menu-item-display-icon\"></ids-icon>`;\n  }\n  templateShortcutKeys(shortcutText) {\n    return `<span slot=\"shortcuts\" class=\"shortcuts\">${shortcutText}</span>`;\n  }\n  templateSubmenuIcon() {\n    return `<ids-icon slot=\"icon\" icon=\"dropdown\" size=\"${_ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__.MENU_ITEM_ICON_SIZE}\" class=\"ids-icon ids-menu-item-submenu-icon\"></ids-icon>`;\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes as an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIGHLIGHTED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECTED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHORTCUT_KEYS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SUBMENU,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TARGET,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOGGLEABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VIEWBOX\n    ];\n  }\n  /**\n   * Menu-level `connectedCallback` implementation\n   * @returns {void}\n   */\n  connectedCallback() {\n    if (!this.state)\n      this.state = {};\n    super.connectedCallback();\n    this.refresh();\n    this.attachEventHandlers();\n    this.shouldUpdate = true;\n  }\n  /**\n   * @returns {Array<string>} Menu Item vetoable events\n   */\n  vetoableEventTypes = [\"beforeselected\", \"beforedeselected\"];\n  /**\n   * Updates the visual state of this menu item\n   * @private\n   * @returns {void}\n   */\n  refresh() {\n    this.tabIndex = this.state.tabIndex;\n    this.detectHidden();\n    this.detectSubmenu();\n    this.detectSelectability();\n    if (this.menu)\n      this.decorateForIcon(this.menu.hasIcons);\n  }\n  /**\n   * @returns {void}\n   */\n  attachEventHandlers() {\n    this.onEvent(\"slotchange\", this.container, () => {\n      this.refresh();\n    });\n  }\n  /**\n   * @readonly\n   * @returns {HTMLAnchorElement} reference to the Menu Item's anchor\n   */\n  get a() {\n    return this.shadowRoot?.querySelector(\"a\");\n  }\n  /**\n   * @readonly\n   * @returns {any} ['IdsMenu'] reference to the parent IdsMenu component, if one exists.\n   */\n  get menu() {\n    const toolbarParent = this.closest(\"ids-toolbar-more-actions\");\n    if (toolbarParent) {\n      return toolbarParent.menu;\n    }\n    const tabMoreParent = this.closest(\"ids-tab-more\");\n    if (tabMoreParent) {\n      return tabMoreParent.container?.querySelector(\"ids-popup-menu\") || null;\n    }\n    return this.closest(\"ids-menu, ids-popup-menu\");\n  }\n  /**\n   * @readonly\n   * @returns {IdsMenuGroup} ['IdsMenuGroup'] reference to the parent IdsMenuGroup component, if one exists.\n   */\n  get group() {\n    return this.closest(\"ids-menu-group\");\n  }\n  /**\n   * Passes a disabled attribute from the custom element to the button\n   * @param {boolean} val true if the button will be disabled\n   */\n  set disabled(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(val);\n    this.state.disabled = trueVal;\n    const a = this.a;\n    if (!a)\n      return;\n    const shouldUpdate = this.shouldUpdate;\n    const currentAttr = this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    if (trueVal) {\n      a.disabled = true;\n      a.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"\");\n      this.tabIndex = -1;\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      if (!currentAttr) {\n        this.shouldUpdate = false;\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, \"\");\n        this.shouldUpdate = shouldUpdate;\n      }\n      return;\n    }\n    a.disabled = false;\n    a.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    this.tabIndex = 0;\n    this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n    if (currentAttr) {\n      this.shouldUpdate = false;\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      this.shouldUpdate = shouldUpdate;\n    }\n  }\n  /**\n   * Retrieve the disabled state of the inner button element\n   * @returns {boolean} the inner button's disabled state\n   */\n  get disabled() {\n    return this.state.disabled;\n  }\n  /**\n   * Handles global html hidden attribute changes\n   * @param {boolean} value hidden value\n   */\n  onHiddenChange(value) {\n    const newValue = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(value);\n    if (newValue) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN, \"\");\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIDDEN);\n    }\n  }\n  /**\n   * @param {boolean} val true if the menu item should appear highlighted\n   */\n  set highlighted(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(val);\n    if (trueVal && this.disabled) {\n      return;\n    }\n    if (trueVal) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIGHLIGHTED, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.HIGHLIGHTED);\n    }\n    this.state.highlighted = trueVal;\n    this.container?.classList[trueVal ? \"add\" : \"remove\"](\"highlighted\");\n  }\n  /**\n   * @returns {boolean} true if the menu item should show a highlight\n   */\n  get highlighted() {\n    return this.state.highlighted;\n  }\n  /**\n   * Causes a menu item to become focused (and therefore highlighted).\n   * @returns {void}\n   */\n  highlight() {\n    this.highlighted = true;\n    this.triggerEvent(\"highlighted\", this, { bubbles: true, detail: { elem: this } });\n  }\n  /**\n   * Causes a menu item to become unhighlighted.\n   * @returns {void}\n   */\n  unhighlight() {\n    this.highlighted = false;\n  }\n  /**\n   * @param {string | undefined} val representing the icon to set\n   */\n  set icon(val) {\n    if (typeof val !== \"string\" || !val.length) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON);\n      this.state.icon = void 0;\n      this.removeIcon();\n    } else {\n      this.state.icon = val;\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ICON, val);\n      this.appendIcon(val);\n    }\n    if (this.group && typeof this.group.updateIconAlignment === \"function\") {\n      this.group.updateIconAlignment();\n    }\n  }\n  /**\n   * @returns {string | undefined} a defined IdsIcon's `icon` attribute, if one is present\n   */\n  get icon() {\n    return this.iconEl?.icon;\n  }\n  /**\n   * @returns {any} [IdsIcon | undefined] reference to a defined IDS Icon element, if applicable\n   */\n  get iconEl() {\n    const icon = [...this.children].find((e) => e.matches(\"ids-icon\"));\n    return icon;\n  }\n  /**\n   * Check if an icon exists, and adds the icon if it's missing\n   * @param {string} iconName The icon name to check\n   * @private\n   */\n  appendIcon(iconName) {\n    const icon = this.querySelector(`ids-icon[slot=\"icon\"]`);\n    if (icon) {\n      icon.icon = iconName;\n    } else {\n      this.insertAdjacentHTML(\"afterbegin\", this.templateDisplayIcon(iconName));\n    }\n  }\n  /**\n   * Check if an icon exists, and removes the icon if it's present\n   * @private\n   */\n  removeIcon() {\n    const icon = this.querySelector(`ids-icon[slot=\"icon\"]`);\n    if (icon) {\n      icon.remove();\n    }\n  }\n  /**\n   * Updates the alignment of text/icon content in the menu item to account for icons\n   * that are present either on this menu item, or another one inside this menu item's group.\n   * @param {boolean} doShow true if the menu item should be decorated\n   * @private\n   */\n  decorateForIcon(doShow) {\n    this.container?.classList[doShow ? \"add\" : \"remove\"](\"has-icon\");\n  }\n  /**\n   *\n   */\n  detectHidden() {\n    this.hidden = this.hasAttribute(\"hidden\");\n  }\n  /**\n   * @readonly\n   * @returns {any} [IdsMenu | IdsPopupMenu] submenu component, if one is present.\n   */\n  get submenu() {\n    return this.querySelector(\"ids-menu, ids-popup-menu\");\n  }\n  /**\n   * @readonly\n   * @returns {boolean} true if a submenu is present\n   */\n  get hasSubmenu() {\n    const prototypeHasMenu = this.menu?.tagName !== \"IDS-MENU\" || false;\n    return prototypeHasMenu && !!this.submenu;\n  }\n  /**\n   * @private\n   * @returns {boolean} true if this menu item contains a submenu structure.\n   */\n  detectSubmenu() {\n    const hasSubmenu = this.hasSubmenu;\n    this.container?.classList[hasSubmenu ? \"add\" : \"remove\"](\"has-submenu\");\n    this.decorateSubmenu(hasSubmenu);\n    return hasSubmenu;\n  }\n  /**\n   * @private\n   * @param {boolean|string} val true if a submenu is present and should be identified\n   * with icons and correct aria attributes\n   */\n  decorateSubmenu(val) {\n    const icon = this.container?.querySelector('ids-icon[icon=\"dropdown\"]');\n    if (val === true || val === \"true\") {\n      if (this.submenu) {\n        this.submenu.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.SLOT, \"submenu\");\n        this.submenu.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_EXPANDED, this.submenu?.visible ? \"true\" : \"false\");\n      }\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, \"button\");\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_HASPOPUP, \"true\");\n      if (!icon) {\n        this.a?.insertAdjacentHTML(\"beforeend\", this.templateSubmenuIcon());\n      }\n      this.value = null;\n    } else {\n      if (this.submenu) {\n        this.submenu.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_EXPANDED);\n      }\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, \"menuitem\");\n      this.a?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_HASPOPUP);\n      icon?.remove();\n    }\n  }\n  /**\n   * @returns {boolean} true if this item is able to be selected\n   */\n  get isSelectable() {\n    return this.group?.select !== null;\n  }\n  /**\n   * Decorates the menu for selectability, adding/removing a checkmark\n   * @private\n   * @returns {void}\n   */\n  detectSelectability() {\n    const selectType = this.group?.select;\n    const check = this.container?.querySelector(\"span.check\");\n    if (this.isSelectable) {\n      this.container?.classList.add(selectType === \"multiple\" ? \"has-multi-checkmark\" : \"has-checkmark\");\n      this.container?.classList.remove(selectType === \"multiple\" ? \"has-checkmark\" : \"has-multi-checkmark\");\n      if (!check) {\n        this.a?.insertAdjacentHTML(\"afterbegin\", this.templateCheck());\n      }\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, selectType === \"multiple\" ? \"menuitemcheckbox\" : \"menuitemradio\");\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_CHECKED, this.selected ? \"true\" : \"false\");\n    } else {\n      this.container?.classList.remove(\"has-checkmark\", \"has-multi-checkmark\");\n      check?.remove();\n      this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ROLE, this.hasSubmenu ? \"button\" : \"menuitem\");\n      this.a?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_CHECKED);\n    }\n  }\n  /**\n   * @returns {boolean} true if this item is currently selected\n   */\n  get selected() {\n    return this.state.selected;\n  }\n  /**\n   * @param {boolean} val true if the item should be selected\n   */\n  set selected(val) {\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(val);\n    const duringEventName = trueVal ? \"selected\" : \"deselected\";\n    const beforeEventName = `before${duringEventName}`;\n    if (!this.triggerVetoableEvent(beforeEventName)) {\n      return;\n    }\n    if (this.state.selected !== trueVal) {\n      if (this.isSelectable) {\n        this.state.selected = trueVal;\n        if (trueVal) {\n          this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECTED, \"\");\n        } else {\n          this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SELECTED);\n        }\n        this.container?.classList[trueVal ? \"add\" : \"remove\"](\"selected\");\n        this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_CHECKED, trueVal ? \"true\" : \"false\");\n      }\n      if (trueVal || this.group?.select === \"multiple\" || this.toggleable) {\n        this.triggerEvent(duringEventName, this, {\n          bubbles: true,\n          detail: {\n            elem: this,\n            value: this.value\n          }\n        });\n      }\n    }\n    this.triggerEvent(\"pick\", this, {\n      bubbles: true,\n      detail: {\n        elem: this,\n        value: this.value,\n        selected: trueVal\n      }\n    });\n  }\n  /**\n   * @returns {void}\n   */\n  select() {\n    this.selected = true;\n  }\n  /**\n   * @returns {void}\n   */\n  deselect() {\n    this.selected = false;\n  }\n  /**\n   * @param {string | undefined} val representing the shortcut key text\n   */\n  set shortcutKeys(val) {\n    if (typeof val !== \"string\" || !val.length) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHORTCUT_KEYS);\n      this.state.shortcutKeys = void 0;\n      this.removeShortcuts();\n    } else {\n      this.state.shortcutKeys = val;\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SHORTCUT_KEYS, val);\n      this.appendShortcuts(val);\n    }\n  }\n  /**\n   * @returns {string | undefined} defined shortcut key text\n   */\n  get shortcutKeys() {\n    return this.shortcutKeyEl?.textContent;\n  }\n  /**\n   * @returns {HTMLSpanElement | undefined} reference to a span containing shortcut key text, if applicable\n   */\n  get shortcutKeyEl() {\n    const span = [...this.children].find((e) => e.matches('span[slot=\"shortcuts\"]'));\n    return span;\n  }\n  /**\n   * Check if an icon exists, and adds the icon if it's missing\n   * @param {string} shortcutText The icon name to check\n   * @private\n   */\n  appendShortcuts(shortcutText) {\n    this.container?.classList.add(\"has-shortcuts\");\n    const span = this.querySelector(`span[slot=\"shortcuts\"]`);\n    if (span) {\n      span.textContent = shortcutText;\n    } else {\n      this.insertAdjacentHTML(\"afterbegin\", this.templateShortcutKeys(shortcutText));\n    }\n  }\n  /**\n   * Check if an icon exists, and removes the icon if it's present\n   * @private\n   */\n  removeShortcuts() {\n    this.container?.classList.remove(\"has-shortcuts\");\n    const span = this.querySelector(`span[slot=\"shortcuts\"]`);\n    if (span) {\n      span.remove();\n    }\n  }\n  /**\n   * Passes a tabindex attribute from the custom element to the hyperlink\n   * @param {any} val [number|string] the tabindex value\n   * @returns {void}\n   */\n  set #tabIndex(val) {\n    const trueVal = Number(val);\n    if (!this.state)\n      this.state = {};\n    if (this.state.tabIndex !== trueVal) {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX);\n      if (Number.isNaN(trueVal) || trueVal < -1) {\n        this.state.tabIndex = 0;\n        this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX, \"0\");\n      } else {\n        this.state.tabIndex = trueVal;\n        this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABINDEX, `${trueVal}`);\n      }\n    }\n  }\n  /**\n   * @returns {any} [number] the current tabindex number for the hyperlink\n   */\n  get #tabIndex() {\n    return this.state?.tabIndex || 0;\n  }\n  #target = void 0;\n  /**\n   * @param {HTMLElement|undefined} element an element reference to use for triggering/responding to elements\n   */\n  set target(element) {\n    const currentTarget = this.target;\n    if (element !== currentTarget) {\n      if (element instanceof HTMLElement || element instanceof SVGElement) {\n        if (!element.isEqualNode(currentTarget)) {\n          this.#target = element;\n        }\n      } else if (element === null || element === void 0) {\n        this.#target = void 0;\n      }\n    }\n  }\n  /**\n   * @returns {HTMLElement|undefined} a reference to a target element, if applicable\n   */\n  get target() {\n    return this.#target;\n  }\n  /**\n   * @readonly\n   * @returns {string} a menu item's textContent stripped of any extraneous white space.\n   */\n  get text() {\n    const textNode = (n) => n.nodeType === Node.TEXT_NODE || n.name === \"ids-text\";\n    return [...this.childNodes].find((i) => textNode(i))?.textContent?.trim();\n  }\n  /**\n   * Set the value of the text align attribute\n   * @param {string} val start / center / end\n   * @memberof IdsMenuItem\n   */\n  set textAlign(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN, val);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN);\n    }\n  }\n  /**\n   * @readonly\n   * @returns {string} a menu item's textAlign attribute\n   */\n  get textAlign() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ALIGN);\n  }\n  /**\n   * @param {any} val the value for this menu item\n   */\n  set value(val) {\n    this.state.value = val;\n    if (!(0,_ids_menu_attributes__WEBPACK_IMPORTED_MODULE_2__.safeForAttribute)(val)) {\n      const shouldUpdate = this.shouldUpdate;\n      this.shouldUpdate = false;\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n      this.shouldUpdate = shouldUpdate;\n    }\n  }\n  /**\n   * @returns {any} the value of the menu item.\n   */\n  get value() {\n    return this.state.value;\n  }\n  /**\n   * Displays this menu item's submenu, if one is present.\n   * @returns {void}\n   */\n  showSubmenu() {\n    if (!this.hasSubmenu || this.hasSubmenu && !this.submenu?.hidden) {\n      return;\n    }\n    this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_EXPANDED, \"true\");\n    this.menu?.hideSubmenus(this);\n    this.submenu?.show();\n  }\n  /**\n   * Hides this menu item's submenu, if one is present.\n   * @returns {void}\n   */\n  hideSubmenu() {\n    if (!this.hasSubmenu || this.hasSubmenu && this.submenu?.hidden) {\n      return;\n    }\n    this.a?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.htmlAttributes.ARIA_EXPANDED, \"false\");\n    this.submenu?.hide();\n  }\n  /**\n   * Correctly focuses the menu item.  In this case, override the browser's default\n   * focus routine and force focusing to occur on the anchor.\n   * @returns {void}\n   */\n  focus() {\n    if (!this.hidden && !this.disabled) {\n      this.a?.focus();\n      this.menu?.highlightItem(this);\n    }\n  }\n  /**\n   * Set icon viewbox\n   * @param {string} value for icon viewbox\n   */\n  set viewbox(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VIEWBOX, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VIEWBOX);\n    }\n  }\n  /**\n   * Return the viewbox\n   * @returns {string} the viewbox\n   */\n  get viewbox() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VIEWBOX);\n  }\n  /**\n   * For selectable menu items they may be toggleable for on/off\n   * @param {boolean | string} value for icon viewbox\n   */\n  set toggleable(value) {\n    const isToggleable = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(value);\n    if (isToggleable) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOGGLEABLE, \"true\");\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOGGLEABLE);\n    }\n  }\n  /**\n   * Return the viewbox\n   * @returns {boolean} the viewbox\n   */\n  get toggleable() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_3__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TOGGLEABLE));\n  }\n};\nIdsMenuItem = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-menu-item\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_menu_item_scss__WEBPACK_IMPORTED_MODULE_9__[\"default\"])\n], IdsMenuItem);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-menu/ids-menu-item.ts\n");

/***/ }),

/***/ "./src/components/ids-separator/ids-separator.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-separator/ids-separator.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsSeparator)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_separator_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ids-separator.scss */ \"./src/components/ids-separator/ids-separator.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n  (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n      _core_ids_element__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n    )\n  )\n);\nlet IdsSeparator = class extends Base {\n  constructor() {\n    super();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL\n    ];\n  }\n  /**\n   * Inherited from `IdsColorVariantMixin`\n   * @returns {Array<string>} List of available color variants for this component\n   */\n  colorVariants = [\"alternate-formatter\"];\n  /**\n   * @returns {string} The components template\n   */\n  template() {\n    let tagName = \"div\";\n    if (this.parentElement?.tagName === \"IDS-MENU-GROUP\") {\n      tagName = \"li\";\n    }\n    return `<${tagName} part=\"separator\" class=\"ids-separator${this.vertical ? \" vertical\" : \"\"} \"></${tagName}>`;\n  }\n  /**\n   * Set the separator to be vertical\n   */\n  set vertical(val) {\n    const current = this.vertical;\n    const trueVal = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(val);\n    if (current !== trueVal) {\n      if (trueVal) {\n        this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL);\n        this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL, \"\");\n      } else {\n        this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL);\n        this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL);\n      }\n    }\n  }\n  get vertical() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VERTICAL));\n  }\n};\nIdsSeparator = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-separator\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_separator_scss__WEBPACK_IMPORTED_MODULE_7__[\"default\"])\n], IdsSeparator);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtc2VwYXJhdG9yL2lkcy1zZXBhcmF0b3IudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDVDtBQUNFO0FBRUY7QUFDRDtBQUNPO0FBQ1Y7QUFFSjtBQUVuQixNQUFNLE9BQU8sbUdBQW9CO0FBQXBCLEVBQ1gsbUZBQWE7QUFBYixJQUNFLHFGQUFjO0FBQWQsTUFDRSx5REFBVTtBQUFWLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7QUFhQSxJQUFxQixlQUFyQixjQUEwQyxLQUFLO0FBQUEsRUFDN0MsY0FBYztBQUNaLFVBQU07QUFBQSxFQUNSO0FBQUEsRUFFQSxvQkFBb0I7QUFDbEIsVUFBTSxrQkFBa0I7QUFBQSxFQUMxQjtBQUFBLEVBRUEsV0FBVyxhQUE0QjtBQUNyQyxXQUFPO0FBQUEsTUFDTCxHQUFHLE1BQU07QUFBQSxNQUNULHFFQUFtQjtBQUFSLElBQ2I7QUFBQSxFQUNGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxFQU1BLGdCQUErQixDQUFDLHFCQUFxQjtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS3JELFdBQW1CO0FBQ2pCLFFBQUksVUFBVTtBQUNkLFFBQUksS0FBSyxlQUFlLFlBQVksa0JBQWtCO0FBQ3BELGdCQUFVO0FBQUEsSUFDWjtBQUNBLFdBQU8sSUFBSSxnREFBZ0QsS0FBSyxXQUFXLGNBQWMsVUFBVTtBQUFBLEVBQ3JHO0FBQUE7QUFBQTtBQUFBO0FBQUEsRUFLQSxJQUFJLFNBQVMsS0FBYztBQUN6QixVQUFNLFVBQVUsS0FBSztBQUNyQixVQUFNLFVBQVUsc0ZBQVksQ0FBQyxHQUFHO0FBQ2hDLFFBQUksWUFBWSxTQUFTO0FBQ3ZCLFVBQUksU0FBUztBQUNYLGFBQUssV0FBVyxVQUFVLElBQUkscUVBQW1CO0FBQ2pELGFBQUssYUFBYSxxRUFBbUIsRUFBRSxFQUFFO0FBQUEsTUFDM0MsT0FBTztBQUNMLGFBQUssV0FBVyxVQUFVLE9BQU8scUVBQW1CO0FBQ3BELGFBQUssZ0JBQWdCLHFFQUFtQjtBQUFBLE1BQzFDO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxFQUVBLElBQUksV0FBb0I7QUFDdEIsV0FBTyxzRkFBWSxDQUFDLEtBQUssYUFBYSxxRUFBbUIsQ0FBQztBQUFBLEVBQzVEO0FBQ0Y7QUFyRHFCLGVBQXJCO0FBQUEsRUFGQyxtRUFBYSxDQUFDLGVBQWU7QUFBQSxFQUM3QiwwREFBSSxDQUFDLDJEQUFNO0FBQUEsR0FDUyIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLXNlcGFyYXRvci9pZHMtc2VwYXJhdG9yLnRzPzM3MGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VzdG9tRWxlbWVudCwgc2NzcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgc3RyaW5nVG9Cb29sIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcblxuaW1wb3J0IElkc0V2ZW50c01peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtZXZlbnRzLW1peGluL2lkcy1ldmVudHMtbWl4aW4nO1xuaW1wb3J0IElkc1RoZW1lTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy10aGVtZS1taXhpbi9pZHMtdGhlbWUtbWl4aW4nO1xuaW1wb3J0IElkc0NvbG9yVmFyaWFudE1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtY29sb3ItdmFyaWFudC1taXhpbi9pZHMtY29sb3ItdmFyaWFudC1taXhpbic7XG5pbXBvcnQgSWRzRWxlbWVudCBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICcuL2lkcy1zZXBhcmF0b3Iuc2Nzcyc7XG5cbmNvbnN0IEJhc2UgPSBJZHNDb2xvclZhcmlhbnRNaXhpbihcbiAgSWRzVGhlbWVNaXhpbihcbiAgICBJZHNFdmVudHNNaXhpbihcbiAgICAgIElkc0VsZW1lbnRcbiAgICApXG4gIClcbik7XG5cbi8qKlxuICogSURTIFNlcGFyYXRvciBDb21wb25lbnRcbiAqIEB0eXBlIHtJZHNTZXBhcmF0b3J9XG4gKiBAaW5oZXJpdHMgSWRzRWxlbWVudFxuICogQG1peGVzIElkc0NvbG9yVmFyaWFudE1peGluXG4gKiBAbWl4ZXMgSWRzRXZlbnRzTWl4aW5cbiAqIEBtaXhlcyBJZHNUaGVtZU1peGluXG4gKiBAcGFydCBzZXBhcmF0b3IgLSB0aGUgbWVudSBzZXBhcmF0b3IgZWxlbWVudFxuICovXG5AY3VzdG9tRWxlbWVudCgnaWRzLXNlcGFyYXRvcicpXG5Ac2NzcyhzdHlsZXMpXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJZHNTZXBhcmF0b3IgZXh0ZW5kcyBCYXNlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKTogQXJyYXk8c3RyaW5nPiB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLnN1cGVyLmF0dHJpYnV0ZXMsXG4gICAgICBhdHRyaWJ1dGVzLlZFUlRJQ0FMXG4gICAgXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBJbmhlcml0ZWQgZnJvbSBgSWRzQ29sb3JWYXJpYW50TWl4aW5gXG4gICAqIEByZXR1cm5zIHtBcnJheTxzdHJpbmc+fSBMaXN0IG9mIGF2YWlsYWJsZSBjb2xvciB2YXJpYW50cyBmb3IgdGhpcyBjb21wb25lbnRcbiAgICovXG4gIGNvbG9yVmFyaWFudHM6IEFycmF5PHN0cmluZz4gPSBbJ2FsdGVybmF0ZS1mb3JtYXR0ZXInXTtcblxuICAvKipcbiAgICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbXBvbmVudHMgdGVtcGxhdGVcbiAgICovXG4gIHRlbXBsYXRlKCk6IHN0cmluZyB7XG4gICAgbGV0IHRhZ05hbWUgPSAnZGl2JztcbiAgICBpZiAodGhpcy5wYXJlbnRFbGVtZW50Py50YWdOYW1lID09PSAnSURTLU1FTlUtR1JPVVAnKSB7XG4gICAgICB0YWdOYW1lID0gJ2xpJztcbiAgICB9XG4gICAgcmV0dXJuIGA8JHt0YWdOYW1lfSBwYXJ0PVwic2VwYXJhdG9yXCIgY2xhc3M9XCJpZHMtc2VwYXJhdG9yJHt0aGlzLnZlcnRpY2FsID8gJyB2ZXJ0aWNhbCcgOiAnJ30gXCI+PC8ke3RhZ05hbWV9PmA7XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBzZXBhcmF0b3IgdG8gYmUgdmVydGljYWxcbiAgICovXG4gIHNldCB2ZXJ0aWNhbCh2YWw6IGJvb2xlYW4pIHtcbiAgICBjb25zdCBjdXJyZW50ID0gdGhpcy52ZXJ0aWNhbDtcbiAgICBjb25zdCB0cnVlVmFsID0gc3RyaW5nVG9Cb29sKHZhbCk7XG4gICAgaWYgKGN1cnJlbnQgIT09IHRydWVWYWwpIHtcbiAgICAgIGlmICh0cnVlVmFsKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyPy5jbGFzc0xpc3QuYWRkKGF0dHJpYnV0ZXMuVkVSVElDQUwpO1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZFUlRJQ0FMLCAnJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbnRhaW5lcj8uY2xhc3NMaXN0LnJlbW92ZShhdHRyaWJ1dGVzLlZFUlRJQ0FMKTtcbiAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5WRVJUSUNBTCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZ2V0IHZlcnRpY2FsKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5WRVJUSUNBTCkpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-separator/ids-separator.ts\n");

/***/ })

}]);