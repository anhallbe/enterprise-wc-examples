"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-lookup_ids-lookup_ts"],{

/***/ "./src/components/ids-lookup/ids-lookup.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-lookup/ids-lookup.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsLookup)\n/* harmony export */ });\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin */ \"./src/mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-keyboard-mixin/ids-keyboard-mixin */ \"./src/mixins/ids-keyboard-mixin/ids-keyboard-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-tooltip-mixin/ids-tooltip-mixin */ \"./src/mixins/ids-tooltip-mixin/ids-tooltip-mixin.ts\");\n/* harmony import */ var _mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-field-height-mixin/ids-field-height-mixin */ \"./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\");\n/* harmony import */ var _mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-validation-mixin/ids-validation-input-mixin */ \"./src/mixins/ids-validation-mixin/ids-validation-input-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../mixins/ids-label-state-mixin/ids-label-state-parent-mixin */ \"./src/mixins/ids-label-state-mixin/ids-label-state-parent-mixin.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_field__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-field */ \"./src/components/ids-trigger-field/ids-trigger-field.ts\");\n/* harmony import */ var _ids_modal_ids_modal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ids-modal/ids-modal */ \"./src/components/ids-modal/ids-modal.ts\");\n/* harmony import */ var _ids_data_grid_ids_data_grid__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ids-data-grid/ids-data-grid */ \"./src/components/ids-data-grid/ids-data-grid.ts\");\n/* harmony import */ var _ids_lookup_scss__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./ids-lookup.scss */ \"./src/components/ids-lookup/ids-lookup.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Base = (0,_mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  (0,_mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(\n    (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n      (0,_mixins_ids_keyboard_mixin_ids_keyboard_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n        (0,_mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n          (0,_mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n            (0,_mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n              (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n                (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n                  _core_ids_element__WEBPACK_IMPORTED_MODULE_10__[\"default\"]\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\nlet IdsLookup = class extends Base {\n  triggerField;\n  triggerButton;\n  dataGrid;\n  modal;\n  listBox;\n  constructor() {\n    super();\n    this.state = {\n      ...this.state,\n      clearable: true,\n      dataGridSettings: { rowSelection: \"multiple\" },\n      value: \"\"\n    };\n    Object.defineProperty(this, \"title\", {\n      get: () => this.#title,\n      set: (value) => {\n        this.#title = value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  isFormComponent = true;\n  /**\n   * Invoked each time the custom element is appended into a document-connected element.\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.triggerField = this.shadowRoot?.querySelector(\"ids-trigger-field\");\n    this.triggerButton = this.shadowRoot?.querySelector('ids-trigger-button[part=\"trigger-lookup\"]');\n    this.dataGrid = this.shadowRoot?.querySelector(\"ids-data-grid\");\n    this.dataGrid?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.LIST_STYLE, \"true\");\n    this.modal = this.querySelector('[slot=\"lookup-modal\"]') || this.shadowRoot?.querySelector(\"ids-modal\");\n    if (this.modal) {\n      this.modal.target = this.triggerButton;\n      this.modal.triggerType = \"click\";\n    }\n    this.#handleEvents().#handleKeys();\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    this.dataGrid = void 0;\n    this.modal = void 0;\n    this.triggerField = void 0;\n    this.triggerButton = void 0;\n    this.state = {};\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.AUTOCOMPLETE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.MODE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.READONLY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABBABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE\n    ];\n  }\n  /**\n   * Create the Template for the contents\n   * @returns {string} The template\n   */\n  template() {\n    return `\n    <ids-trigger-field\n      label=\"${this.label}\"\n      part=\"trigger-field\"\n      value=\"${this.value}\"\n      ${this.autocomplete ? ` autocomplete search-field=\"${this.field}\"` : \"\"}\n      ${this.clearable ? ' clearable=\"true\"' : \"\"}\n      ${this.disabled ? ' disabled=\"true\"' : \"\"}\n      ${this.readonly ? ' readonly=\"true\"' : \"\"}\n      ${this.dirtyTracker ? ' dirty-tracker=\"true\"' : \"\"}\n      ${this.compact ? \" compact\" : \"\"}\n      ${this.size ? ` size=\"${this.size}\"` : \"\"}\n      ${this.fieldHeight ? ` field-height=\"${this.fieldHeight}\"` : \"\"}\n      ${this.validate ? ` validate=\"${this.validate}\"` : \"\"}\n      ${this.validate && this.validationEvents ? ` validation-events=\"${this.validationEvents}\"` : \"\"}>\n      <ids-trigger-button\n        slot=\"trigger-end\"\n        part=\"trigger-lookup\"\n        tabbable=\"${this.tabbable}\"\n        disabled=\"${this.disabled}\"\n        readonly=\"${this.readonly}\">\n        <ids-text audible=\"true\">LookupTriggerButton</ids-text>\n        <ids-icon icon=\"search-list\" part=\"icon\"></ids-icon>\n      </ids-trigger-button>\n    </ids-trigger-field>\n    <slot name=\"lookup-modal\">\n      <ids-modal id=\"lookup-modal\" aria-labelledby=\"lookup-modal-title\" part=\"modal\">\n        <ids-text slot=\"title\" font-size=\"24\" type=\"h2\" id=\"lookup-modal-title\">${this.title}</ids-text>\n        <ids-layout-grid class=\"data-grid-container\" auto=\"true\" gap=\"md\" no-margins=\"true\" min-col-width=\"600px\">\n          <ids-layout-grid-cell>\n            <ids-data-grid id=\"lookup-data-grid\" label=\"${this.label}\" part=\"data-grid\">\n            </ids-data-grid>\n          </ids-layout-grid-cell>\n        </ids-layout-grid>\n\n      <ids-modal-button slot=\"buttons\" id=\"modal-cancel-btn\" appearance=\"secondary\">\n        <span>Cancel</span>\n        </ids-modal-button>\n        <ids-modal-button slot=\"buttons\" id=\"modal-apply-btn\" appearance=\"primary\">\n          <span>Apply</span>\n        </ids-modal-button>\n      </ids-modal>\n    </slot>\n    `;\n  }\n  /**\n   * Set autocomplete attribute\n   * @param {string | boolean | null} value autocomplete value\n   */\n  set autocomplete(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(value);\n    if (val)\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.AUTOCOMPLETE, \"\");\n    else\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.AUTOCOMPLETE);\n  }\n  /**\n   * Get the autocomplete attribute\n   * @returns {boolean} autocomplete attribute value\n   */\n  get autocomplete() {\n    return this.hasAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.AUTOCOMPLETE);\n  }\n  /**\n   * Callback for dirty tracker setting change\n   * @param {boolean} value The changed value\n   * @returns {void}\n   */\n  onDirtyTrackerChange(value) {\n    if (value)\n      this.container?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DIRTY_TRACKER, value.toString());\n    else\n      this.container?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DIRTY_TRACKER);\n  }\n  /**\n   * Set the value of the dropdown using the value/id attribute if present\n   * @param {string} value The value/id to use\n   */\n  set value(value) {\n    if (value !== this.state.value) {\n      this.state.value = (value ?? \"\").toString();\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALUE, this.state.value);\n      if (this.triggerField) {\n        const tfValue = this.triggerField.value;\n        if (tfValue !== this.state.value) {\n          this.triggerField.value = this.state.value;\n          this.triggerField?.input?.dispatchEvent(new Event(\"change\"));\n        }\n      }\n      this.triggerEvent(\"change\", this, { detail: { elem: this, value: this.state.value } });\n    }\n  }\n  get value() {\n    return this.state.value;\n  }\n  onLabelChange() {\n    if (this.input)\n      this.input.label = this.label;\n  }\n  /**\n   * Push label-state to the container element\n   * @returns {void}\n   */\n  onLabelStateChange() {\n    if (this.input)\n      this.input.labelState = this.labelState;\n  }\n  onLabelRequiredChange() {\n    if (this.input)\n      this.input.labelRequired = this.labelRequired;\n  }\n  /**\n   * Sets the readonly state of the field\n   * @param {string|boolean} value string value from the readonly attribute\n   */\n  set readonly(value) {\n    const isReadonly = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(value);\n    if (!this.triggerField) {\n      return;\n    }\n    if (isReadonly) {\n      this.removeAttribute(\"disabled\");\n      this.triggerField.readonly = true;\n      this.setAttribute(\"readonly\", \"true\");\n      return;\n    }\n    this.triggerField.readonly = false;\n    this.removeAttribute(\"readonly\");\n  }\n  get readonly() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(this.getAttribute(\"readonly\")) || false;\n  }\n  /**\n   * Sets the disabled attribute\n   * @param {string|boolean} value string value from the disabled attribute\n   */\n  set disabled(value) {\n    const isDisabled = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(value);\n    if (!this.triggerField) {\n      return;\n    }\n    if (isDisabled) {\n      this.removeAttribute(\"readonly\");\n      this.triggerField.disabled = true;\n      this.setAttribute(\"disabled\", \"true\");\n      return;\n    }\n    this.triggerField.disabled = false;\n    this.removeAttribute(\"disabled\");\n  }\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(this.getAttribute(\"disabled\")) || false;\n  }\n  /**\n   * Set the trigger button to tabbable\n   * @param {boolean|string} value True of false depending if the trigger field is tabbable\n   */\n  set tabbable(value) {\n    const isTabbable = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(value);\n    if (!this.triggerField) {\n      return;\n    }\n    this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABBABLE, String(isTabbable));\n    this.triggerField.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABBABLE, String(isTabbable));\n  }\n  get tabbable() {\n    const attr = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABBABLE);\n    if (this.readonly || this.disabled) {\n      return false;\n    }\n    if (attr === null) {\n      return true;\n    }\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TABBABLE));\n  }\n  /**\n   * Set the columns array of the data grid\n   * @param {IdsDataGridColumn[] | undefined} value The array to use\n   */\n  set columns(value) {\n    if (this.dataGrid)\n      this.dataGrid.columns = value;\n  }\n  get columns() {\n    return this.dataGrid?.columns;\n  }\n  /**\n   * Set the data array of the data grid\n   * @param {Array<Record<string, any>>} value The array to use\n   */\n  set data(value) {\n    if (this.dataGrid)\n      this.dataGrid.data = value;\n    this.#syncSelectedRows();\n  }\n  get data() {\n    return this.dataGrid ? this.dataGrid.data : [];\n  }\n  /**\n   * Sync the selected rows in the dataGrid\n   * @private\n   * @param {string} value The value to be set\n   * @returns {void}\n   */\n  #syncSelectedRows(value = this.value) {\n    if (value === \"\") {\n      if (this.dataGrid?.selectedRows.length)\n        this.dataGrid.deSelectAllRows();\n      if (this.value !== value)\n        this.value = value;\n      return;\n    }\n    const findIndex = (d, v) => d.findIndex((r) => r[this.field] === v);\n    const values = value?.split(this.delimiter) || [];\n    let notFound = [];\n    values.forEach((v, i) => {\n      const dataIndex = findIndex(this.dataGrid?.data, v);\n      if (dataIndex > -1) {\n        if (findIndex(this.dataGrid?.selectedRows.map((d) => d.data), v) === -1) {\n          this.dataGrid?.selectRow(dataIndex);\n        }\n      } else {\n        notFound.push(i);\n      }\n    });\n    notFound.forEach((i) => values.splice(i, 1));\n    notFound = [];\n    if (this.dataGrid?.selectedRows && this.dataGrid?.selectedRows.length > values.length) {\n      this.dataGrid?.selectedRows.forEach((d) => {\n        if (!values.includes(d.data[this.field]))\n          notFound.push(d.index);\n      });\n    }\n    notFound.forEach((i) => this.dataGrid?.deSelectRow(i));\n    if (this.value !== value)\n      this.value = value;\n  }\n  /**\n   * Set any number of dataGrid settings\n   * @param {object} settings The settings to use\n   */\n  set dataGridSettings(settings) {\n    this.state.dataGridSettings = settings;\n    for (const [setting, settingValue] of Object.entries(settings)) {\n      this.dataGrid[setting] = settingValue;\n    }\n    if (this.dataGrid)\n      this.dataGrid.listStyle = true;\n  }\n  get dataGridSettings() {\n    return this.state.dataGridSettings;\n  }\n  /**\n   * Sets the validation check to use\n   * @param {string} value The `validate` attribute\n   */\n  set validate(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATE, value.toString());\n      this.triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATE, value.toString());\n      this.triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS, this.validationEvents);\n      this.triggerField?.handleValidation();\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATE);\n      this.triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATE);\n      this.triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS);\n      this.triggerField?.handleValidation();\n    }\n  }\n  get validate() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATE);\n  }\n  /**\n   * Set `validation-events` attribute\n   * @param {string} value The `validation-events` attribute\n   */\n  set validationEvents(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS, value.toString());\n      this.triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS);\n      this.triggerField?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS);\n    }\n  }\n  get validationEvents() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.VALIDATION_EVENTS) || \"change blur\";\n  }\n  /**\n   * Set the modal title\n   * @param {string} value The modal title attribute\n   */\n  set #title(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE, value);\n      const titleElem = this.modal?.querySelector('[slot=\"title\"]');\n      if (titleElem)\n        titleElem.innerText = value;\n      this.triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE, value);\n    }\n  }\n  get #title() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.TITLE) || `${this.label}`;\n  }\n  /**\n   * Set the field to use when populating the input\n   * @param {string} value The field name\n   */\n  set field(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD, value);\n    }\n  }\n  get field() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.FIELD) || \"id\";\n  }\n  /**\n   * Set the dropdown size\n   * @param {string} value The value\n   */\n  set size(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE);\n    }\n    if (this.triggerField)\n      this.triggerField.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE, this.size);\n  }\n  get size() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.SIZE) ?? \"md\";\n  }\n  /**\n   * Set the string delimiter on selection\n   * @param {string} value The field name\n   */\n  set delimiter(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DELIMITER, value);\n    }\n  }\n  get delimiter() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.DELIMITER) || \",\";\n  }\n  /**\n   * @returns {IdsTriggerField} Reference to the IdsTriggerField\n   */\n  get input() {\n    return this.container;\n  }\n  /**\n   * Sets the clearable x button\n   * @param {boolean|string} value If true will set to clearable\n   */\n  set clearable(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_12__.stringToBool)(value);\n    if (val !== this.state.clearable) {\n      this.state.clearable = val;\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE, String(val));\n      this.triggerField?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_0__.attributes.CLEARABLE, String(val));\n    }\n  }\n  get clearable() {\n    return this.state.clearable;\n  }\n  /**\n   * Push field-height/compact to the container element\n   * @param {string} val the new field height setting\n   */\n  onFieldHeightChange(val) {\n    if (val) {\n      const attr = val === \"compact\" ? { name: \"compact\", val: \"\" } : { name: \"field-height\", val };\n      this.triggerField?.setAttribute(attr.name, attr.val);\n    } else {\n      this.triggerField?.removeAttribute(\"compact\");\n      this.triggerField?.removeAttribute(\"field-height\");\n      this.listBox?.removeAttribute(\"compact\");\n    }\n  }\n  /**\n   * Set the value in the input for the selected row(s)\n   * @private\n   */\n  #setInputValue() {\n    this.value = this.dataGrid?.selectedRows.map((r) => r.data[this.field]).join(this.delimiter) || \"\";\n  }\n  /**\n   * Establish Internal Event Handlers\n   * @private\n   * @returns {object} The object for chaining.\n   */\n  #handleEvents() {\n    this.onEvent(\"click.lookup\", this.modal, (e) => {\n      const btnId = e.target?.getAttribute(\"id\");\n      if (btnId === \"modal-cancel-btn\") {\n        this.modal?.hide();\n        this.#syncSelectedRows();\n      }\n      if (btnId === \"modal-apply-btn\") {\n        this.modal?.hide();\n        this.#setInputValue();\n      }\n    });\n    this.onEvent(\"change.lookup\", this.triggerField, () => {\n      const tfValue = this.triggerField?.value;\n      let isSynced = tfValue !== this.value;\n      if (!isSynced) {\n        const selected = this.dataGrid?.selectedRows?.map((d) => d?.data?.[this.field]) || [];\n        const values = this.value?.split(this.delimiter) || [];\n        if (selected.length !== values.length)\n          isSynced = true;\n        if (!isSynced) {\n          for (let i = 0, l = values.length; i < l; i++) {\n            if (!selected.includes(values[i])) {\n              isSynced = true;\n              break;\n            }\n          }\n        }\n      }\n      if (isSynced)\n        this.#syncSelectedRows(tfValue);\n    });\n    this.modal?.addEventListener(\"beforeshow\", (e) => {\n      if (this.readonly || this.disabled) {\n        e.detail.response(false);\n      }\n      if (this.querySelectorAll('[slot=\"lookup-modal\"]').length === 1) {\n        return;\n      }\n      if (this.data?.length === 0 && this.columns?.length === 1 && this.columns[0].id === \"\") {\n        e.detail.response(false);\n      }\n    });\n    this.dataGrid?.addEventListener(\"rowselected\", (e) => {\n      this.triggerEvent(\"rowselected\", this, { detail: e.detail });\n    });\n    this.dataGrid?.addEventListener(\"rowdeselected\", (e) => {\n      this.triggerEvent(\"rowdeselected\", this, { detail: e.detail });\n    });\n    this.dataGrid?.addEventListener(\"selectionchanged\", (e) => {\n      this.triggerEvent(\"selectionchanged\", this, { detail: e.detail });\n    });\n    return this;\n  }\n  /**\n   * Establish Internal Keyboard shortcuts\n   * @private\n   * @returns {object} This API object for chaining\n   */\n  #handleKeys() {\n    this.listen([\"ArrowDown\"], this, () => {\n      this.modal?.show();\n    });\n    return this;\n  }\n};\nIdsLookup = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.customElement)(\"ids-lookup\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_1__.scss)(_ids_lookup_scss__WEBPACK_IMPORTED_MODULE_16__[\"default\"])\n], IdsLookup);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtbG9va3VwL2lkcy1sb29rdXAudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkI7QUFDUztBQUVIO0FBQ047QUFDRTtBQUNIO0FBQ0M7QUFDQztBQUNJO0FBQ0k7QUFDYjtBQUNjO0FBR1I7QUFFdEI7QUFDQTtBQUNBO0FBT1k7QUFFbkIsTUFBTSxPQUFPLG1HQUFvQjtBQUFwQixFQUNYLHVHQUF3QjtBQUF4QixJQUNFLHFGQUFjO0FBQWQsTUFDRSx5RkFBZ0I7QUFBaEIsUUFDRSxtR0FBdUI7QUFBdkIsVUFDRSxpR0FBbUI7QUFBbkIsWUFDRSx1RkFBZTtBQUFmLGNBQ0UsbUZBQWE7QUFBYixnQkFDRSxxRkFBYztBQUFkLGtCQUNFLDBEQUFVO0FBQVYsZ0JBQ0Y7QUFBQSxjQUNGO0FBQUEsWUFDRjtBQUFBLFVBQ0Y7QUFBQSxRQUNGO0FBQUEsTUFDRjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7QUFxQkEsSUFBcUIsWUFBckIsY0FBdUMsS0FBSztBQUFBLEVBQzFDO0FBQUEsRUFFQTtBQUFBLEVBRUE7QUFBQSxFQUVBO0FBQUEsRUFFQTtBQUFBLEVBRUEsY0FBYztBQUNaLFVBQU07QUFHTixTQUFLLFFBQVE7QUFBQSxNQUNYLEdBQUcsS0FBSztBQUFBLE1BQ1IsV0FBVztBQUFBLE1BQ1gsa0JBQWtCLEVBQUUsY0FBYyxXQUFXO0FBQUEsTUFDN0MsT0FBTztBQUFBLElBQ1Q7QUFHQSxXQUFPLGVBQWUsTUFBTSxTQUFTO0FBQUEsTUFDbkMsS0FBSyxNQUFNLEtBQUs7QUFBQSxNQUNoQixLQUFLLENBQUMsVUFBVTtBQUFFLGFBQUssU0FBUztBQUFBLE1BQU87QUFBQSxNQUN2QyxZQUFZO0FBQUEsTUFDWixjQUFjO0FBQUEsSUFDaEIsQ0FBQztBQUFBLEVBQ0g7QUFBQSxFQUVBLGtCQUFrQjtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBS2xCLG9CQUFvQjtBQUNsQixVQUFNLGtCQUFr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QU87QUFBQSxFQUNUO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEVBT0EsY0FBYztBQUNaLFNBQUssT0FBTyxDQUFDLFdBQVcsR0FBRyxNQUFNLE1BQU07QUFDckMsV0FBSyxPQUFPLEtBQUs7QUFBQSxJQUNuQixDQUFDO0FBQ0QsV0FBTztBQUFBLEVBQ1Q7QUFDRjtBQXRrQnFCLFlBQXJCO0FBQUEsRUFGQyxtRUFBYSxDQUFDLFlBQVk7QUFBQSxFQUMxQiwwREFBSSxDQUFDLHlEQUFNO0FBQUEsR0FDUyIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLWxvb2t1cC9pZHMtbG9va3VwLnRzPzExYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXR0cmlidXRlcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgY3VzdG9tRWxlbWVudCwgc2NzcyB9IGZyb20gJy4uLy4uL2NvcmUvaWRzLWRlY29yYXRvcnMnO1xuXG5pbXBvcnQgSWRzRGlydHlUcmFja2VyTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1kaXJ0eS10cmFja2VyLW1peGluL2lkcy1kaXJ0eS10cmFja2VyLW1peGluJztcbmltcG9ydCBJZHNFdmVudHNNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWV2ZW50cy1taXhpbi9pZHMtZXZlbnRzLW1peGluJztcbmltcG9ydCBJZHNLZXlib2FyZE1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMta2V5Ym9hcmQtbWl4aW4vaWRzLWtleWJvYXJkLW1peGluJztcbmltcG9ydCBJZHNUaGVtZU1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtdGhlbWUtbWl4aW4vaWRzLXRoZW1lLW1peGluJztcbmltcG9ydCBJZHNMb2NhbGVNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvaWRzLWxvY2FsZS1taXhpbi9pZHMtbG9jYWxlLW1peGluJztcbmltcG9ydCBJZHNUb29sdGlwTWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy10b29sdGlwLW1peGluL2lkcy10b29sdGlwLW1peGluJztcbmltcG9ydCBJZHNGaWVsZEhlaWdodE1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtZmllbGQtaGVpZ2h0LW1peGluL2lkcy1maWVsZC1oZWlnaHQtbWl4aW4nO1xuaW1wb3J0IElkc1ZhbGlkYXRpb25JbnB1dE1peGluIGZyb20gJy4uLy4uL21peGlucy9pZHMtdmFsaWRhdGlvbi1taXhpbi9pZHMtdmFsaWRhdGlvbi1pbnB1dC1taXhpbic7XG5pbXBvcnQgSWRzRWxlbWVudCBmcm9tICcuLi8uLi9jb3JlL2lkcy1lbGVtZW50JztcbmltcG9ydCBJZHNMYWJlbFN0YXRlUGFyZW50TWl4aW4gZnJvbSAnLi4vLi4vbWl4aW5zL2lkcy1sYWJlbC1zdGF0ZS1taXhpbi9pZHMtbGFiZWwtc3RhdGUtcGFyZW50LW1peGluJztcbmltcG9ydCB7IElkc1BvcHVwRWxlbWVudFJlZiB9IGZyb20gJy4uL2lkcy1wb3B1cC9pZHMtcG9wdXAtYXR0cmlidXRlcyc7XG5pbXBvcnQgeyBJZHNEYXRhR3JpZENvbHVtbiB9IGZyb20gJy4uL2lkcy1kYXRhLWdyaWQvaWRzLWRhdGEtZ3JpZC1jb2x1bW4nO1xuaW1wb3J0IHsgc3RyaW5nVG9Cb29sIH0gZnJvbSAnLi4vLi4vdXRpbHMvaWRzLXN0cmluZy11dGlscy9pZHMtc3RyaW5nLXV0aWxzJztcblxuaW1wb3J0ICcuLi9pZHMtdHJpZ2dlci1maWVsZC9pZHMtdHJpZ2dlci1maWVsZCc7XG5pbXBvcnQgJy4uL2lkcy1tb2RhbC9pZHMtbW9kYWwnO1xuaW1wb3J0ICcuLi9pZHMtZGF0YS1ncmlkL2lkcy1kYXRhLWdyaWQnO1xuXG5pbXBvcnQgdHlwZSBJZHNUcmlnZ2VyRmllbGQgZnJvbSAnLi4vaWRzLXRyaWdnZXItZmllbGQvaWRzLXRyaWdnZXItZmllbGQnO1xuaW1wb3J0IHR5cGUgSWRzVHJpZ2dlckJ1dHRvbiBmcm9tICcuLi9pZHMtdHJpZ2dlci1maWVsZC9pZHMtdHJpZ2dlci1idXR0b24nO1xuaW1wb3J0IHR5cGUgSWRzRGF0YUdyaWQgZnJvbSAnLi4vaWRzLWRhdGEtZ3JpZC9pZHMtZGF0YS1ncmlkJztcbmltcG9ydCB0eXBlIElkc01vZGFsIGZyb20gJy4uL2lkcy1tb2RhbC9pZHMtbW9kYWwnO1xuaW1wb3J0IHR5cGUgSWRzVGV4dCBmcm9tICcuLi9pZHMtdGV4dC9pZHMtdGV4dCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vaWRzLWxvb2t1cC5zY3NzJztcblxuY29uc3QgQmFzZSA9IElkc0RpcnR5VHJhY2tlck1peGluKFxuICBJZHNMYWJlbFN0YXRlUGFyZW50TWl4aW4oXG4gICAgSWRzTG9jYWxlTWl4aW4oXG4gICAgICBJZHNLZXlib2FyZE1peGluKFxuICAgICAgICBJZHNWYWxpZGF0aW9uSW5wdXRNaXhpbihcbiAgICAgICAgICBJZHNGaWVsZEhlaWdodE1peGluKFxuICAgICAgICAgICAgSWRzVG9vbHRpcE1peGluKFxuICAgICAgICAgICAgICBJZHNUaGVtZU1peGluKFxuICAgICAgICAgICAgICAgIElkc0V2ZW50c01peGluKFxuICAgICAgICAgICAgICAgICAgSWRzRWxlbWVudFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKVxuICAgICAgICAgIClcbiAgICAgICAgKVxuICAgICAgKVxuICAgIClcbiAgKVxuKTtcblxuLyoqXG4gKiBJRFMgTG9va3VwIENvbXBvbmVudFxuICogQHR5cGUge0lkc0xvb2t1cH1cbiAqIEBtaXhlcyBJZHNEaXJ0eVRyYWNrZXJNaXhpblxuICogQG1peGVzIElkc0V2ZW50c01peGluXG4gKiBAbWl4ZXMgSWRzS2V5Ym9hcmRNaXhpblxuICogQG1peGVzIElkc0xhYmVsU3RhdGVQYXJlbnRNaXhpblxuICogQG1peGVzIElkc0xvY2FsZU1peGluXG4gKiBAbWl4ZXMgSWRzVGhlbWVNaXhpblxuICogQG1peGVzIElkc1Rvb2x0aXBNaXhpblxuICogQHBhcnQgdHJpZ2dlci1maWVsZCAtIHRoZSB0cmlnZ2VyIGNvbnRhaW5lclxuICogQHBhcnQgaW5wdXQgLSB0aGUgaW5wdXQgZWxlbWVudFxuICogQHBhcnQgdHJpZ2dlci1idXR0b24gLSB0aGUgdHJpZ2dlciBidXR0b25cbiAqIEBwYXJ0IGljb24gLSB0aGUgaWNvbiBpbiB0aGUgdHJpZ2dlciBidXR0b25cbiAqIEBwYXJ0IG1vZGFsIC0gdGhlIG1vZGFsIGRpYWxvZyBjb250YWluZXJcbiAqIEBwYXJ0IGRhdGEtZ3JpZCAtIHRoZSBkYXRhR3JpZCBlbGVtZW50XG4gKi9cbkBjdXN0b21FbGVtZW50KCdpZHMtbG9va3VwJylcbkBzY3NzKHN0eWxlcylcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElkc0xvb2t1cCBleHRlbmRzIEJhc2Uge1xuICB0cmlnZ2VyRmllbGQ/OiBJZHNUcmlnZ2VyRmllbGQgfCBudWxsO1xuXG4gIHRyaWdnZXJCdXR0b24/OiBJZHNUcmlnZ2VyQnV0dG9uIHwgbnVsbDtcblxuICBkYXRhR3JpZD86IElkc0RhdGFHcmlkIHwgbnVsbDtcblxuICBtb2RhbD86IElkc01vZGFsIHwgbnVsbDtcblxuICBsaXN0Qm94PzogYW55O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICAvLyBTZXR1cCBzb21lIGRlZmF1bHRzXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIC4uLnRoaXMuc3RhdGUsXG4gICAgICBjbGVhcmFibGU6IHRydWUsXG4gICAgICBkYXRhR3JpZFNldHRpbmdzOiB7IHJvd1NlbGVjdGlvbjogJ211bHRpcGxlJyB9LFxuICAgICAgdmFsdWU6ICcnXG4gICAgfTtcblxuICAgIC8vIE92ZXJyaWRlIGdsb2JhbCBodG1sIHRpdGxlXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICd0aXRsZScsIHtcbiAgICAgIGdldDogKCkgPT4gdGhpcy4jdGl0bGUsXG4gICAgICBzZXQ6ICh2YWx1ZSkgPT4geyB0aGlzLiN0aXRsZSA9IHZhbHVlOyB9LFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgaXNGb3JtQ29tcG9uZW50ID0gdHJ1ZTtcblxuICAvKipcbiAgICogSW52b2tlZCBlYWNoIHRpbWUgdGhlIGN1c3RvbSBlbGVtZW50IGlzIGFwcGVuZGVkIGludG8gYSBkb2N1bWVudC1jb25uZWN0ZWQgZWxlbWVudC5cbiAgICovXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICB0aGlzLnRyaWdnZXJGaWVsZCA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignaWRzLXRyaWdnZXItZmllbGQnKTtcbiAgICB0aGlzLnRyaWdnZXJCdXR0b24gPSB0aGlzLnNoYWRvd1Jvb3Q/LnF1ZXJ5U2VsZWN0b3IoJ2lkcy10cmlnZ2VyLWJ1dHRvbltwYXJ0PVwidHJpZ2dlci1sb29rdXBcIl0nKTtcblxuICAgIC8vIFNldHVwIEF0dGFjaGVkIERhdGFncmlkXG4gICAgdGhpcy5kYXRhR3JpZCA9IHRoaXMuc2hhZG93Um9vdD8ucXVlcnlTZWxlY3RvcignaWRzLWRhdGEtZ3JpZCcpO1xuICAgIHRoaXMuZGF0YUdyaWQ/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkxJU1RfU1RZTEUsICd0cnVlJyk7XG5cbiAgICAvLyBMaW5rIHRoZSBNb2RhbCB0byBpdHMgdHJpZ2dlciBidXR0b24gKHNldHMgdXAgY2xpY2svZm9jdXMgZXZlbnRzKVxuICAgIHRoaXMubW9kYWwgPSB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ1tzbG90PVwibG9va3VwLW1vZGFsXCJdJykgfHwgdGhpcy5zaGFkb3dSb290Py5xdWVyeVNlbGVjdG9yKCdpZHMtbW9kYWwnKTtcbiAgICBpZiAodGhpcy5tb2RhbCkge1xuICAgICAgdGhpcy5tb2RhbC50YXJnZXQgPSB0aGlzLnRyaWdnZXJCdXR0b24gYXMgSWRzUG9wdXBFbGVtZW50UmVmO1xuICAgICAgdGhpcy5tb2RhbC50cmlnZ2VyVHlwZSA9ICdjbGljayc7XG4gICAgfVxuXG4gICAgdGhpc1xuICAgICAgLiNoYW5kbGVFdmVudHMoKVxuICAgICAgLiNoYW5kbGVLZXlzKCk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpOiB2b2lkIHtcbiAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaz8uKCk7XG5cbiAgICB0aGlzLmRhdGFHcmlkID0gdW5kZWZpbmVkO1xuICAgIHRoaXMubW9kYWwgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy50cmlnZ2VyRmllbGQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy50cmlnZ2VyQnV0dG9uID0gdW5kZWZpbmVkO1xuICAgIHRoaXMuc3RhdGUgPSB7fTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIGF0dHJpYnV0ZXMgd2UgaGFuZGxlIGFzIGdldHRlcnMvc2V0dGVyc1xuICAgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBhdHRyaWJ1dGVzIGluIGFuIGFycmF5XG4gICAqL1xuICBzdGF0aWMgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIC4uLnN1cGVyLmF0dHJpYnV0ZXMsXG4gICAgICBhdHRyaWJ1dGVzLkFVVE9DT01QTEVURSxcbiAgICAgIGF0dHJpYnV0ZXMuQ0xFQVJBQkxFLFxuICAgICAgYXR0cmlidXRlcy5ESVNBQkxFRCxcbiAgICAgIGF0dHJpYnV0ZXMuRklFTEQsXG4gICAgICBhdHRyaWJ1dGVzLk1PREUsXG4gICAgICBhdHRyaWJ1dGVzLlJFQURPTkxZLFxuICAgICAgYXR0cmlidXRlcy5TSVpFLFxuICAgICAgYXR0cmlidXRlcy5UQUJCQUJMRSxcbiAgICAgIGF0dHJpYnV0ZXMuVElUTEUsXG4gICAgICBhdHRyaWJ1dGVzLlZBTFVFXG4gICAgXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDcmVhdGUgdGhlIFRlbXBsYXRlIGZvciB0aGUgY29udGVudHNcbiAgICogQHJldHVybnMge3N0cmluZ30gVGhlIHRlbXBsYXRlXG4gICAqL1xuICB0ZW1wbGF0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgXG4gICAgPGlkcy10cmlnZ2VyLWZpZWxkXG4gICAgICBsYWJlbD1cIiR7dGhpcy5sYWJlbH1cIlxuICAgICAgcGFydD1cInRyaWdnZXItZmllbGRcIlxuICAgICAgdmFsdWU9XCIke3RoaXMudmFsdWV9XCJcbiAgICAgICR7dGhpcy5hdXRvY29tcGxldGUgPyBgIGF1dG9jb21wbGV0ZSBzZWFyY2gtZmllbGQ9XCIke3RoaXMuZmllbGR9XCJgIDogJyd9XG4gICAgICAke3RoaXMuY2xlYXJhYmxlID8gJyBjbGVhcmFibGU9XCJ0cnVlXCInIDogJyd9XG4gICAgICAke3RoaXMuZGlzYWJsZWQgPyAnIGRpc2FibGVkPVwidHJ1ZVwiJyA6ICcnfVxuICAgICAgJHt0aGlzLnJlYWRvbmx5ID8gJyByZWFkb25seT1cInRydWVcIicgOiAnJ31cbiAgICAgICR7dGhpcy5kaXJ0eVRyYWNrZXIgPyAnIGRpcnR5LXRyYWNrZXI9XCJ0cnVlXCInIDogJyd9XG4gICAgICAke3RoaXMuY29tcGFjdCA/ICcgY29tcGFjdCcgOiAnJ31cbiAgICAgICR7dGhpcy5zaXplID8gYCBzaXplPVwiJHt0aGlzLnNpemV9XCJgIDogJyd9XG4gICAgICAke3RoaXMuZmllbGRIZWlnaHQgPyBgIGZpZWxkLWhlaWdodD1cIiR7dGhpcy5maWVsZEhlaWdodH1cImAgOiAnJ31cbiAgICAgICR7dGhpcy52YWxpZGF0ZSA/IGAgdmFsaWRhdGU9XCIke3RoaXMudmFsaWRhdGV9XCJgIDogJyd9XG4gICAgICAke3RoaXMudmFsaWRhdGUgJiYgdGhpcy52YWxpZGF0aW9uRXZlbnRzID8gYCB2YWxpZGF0aW9uLWV2ZW50cz1cIiR7dGhpcy52YWxpZGF0aW9uRXZlbnRzfVwiYCA6ICcnfT5cbiAgICAgIDxpZHMtdHJpZ2dlci1idXR0b25cbiAgICAgICAgc2xvdD1cInRyaWdnZXItZW5kXCJcbiAgICAgICAgcGFydD1cInRyaWdnZXItbG9va3VwXCJcbiAgICAgICAgdGFiYmFibGU9XCIke3RoaXMudGFiYmFibGV9XCJcbiAgICAgICAgZGlzYWJsZWQ9XCIke3RoaXMuZGlzYWJsZWR9XCJcbiAgICAgICAgcmVhZG9ubHk9XCIke3RoaXMucmVhZG9ubHl9XCI+XG4gICAgICAgIDxpZHMtdGV4dCBhdWRpYmxlPVwidHJ1ZVwiPkxvb2t1cFRyaWdnZXJCdXR0b248L2lkcy10ZXh0PlxuICAgICAgICA8aWRzLWljb24gaWNvbj1cInNlYXJjaC1saXN0XCIgcGFydD1cImljb25cIj48L2lkcy1pY29uPlxuICAgICAgPC9pZHMtdHJpZ2dlci1idXR0b24+XG4gICAgPC9pZHMtdHJpZ2dlci1maWVsZD5cbiAgICA8c2xvdCBuYW1lPVwibG9va3VwLW1vZGFsXCI+XG4gICAgICA8aWRzLW1vZGFsIGlkPVwibG9va3VwLW1vZGFsXCIgYXJpYS1sYWJlbGxlZGJ5PVwibG9va3VwLW1vZGFsLXRpdGxlXCIgcGFydD1cIm1vZGFsXCI+XG4gICAgICAgIDxpZHMtdGV4dCBzbG90PVwidGl0bGVcIiBmb250LXNpemU9XCIyNFwiIHR5cGU9XCJoMlwiIGlkPVwibG9va3VwLW1vZGFsLXRpdGxlXCI+JHt0aGlzLnRpdGxlfTwvaWRzLXRleHQ+XG4gICAgICAgIDxpZHMtbGF5b3V0LWdyaWQgY2xhc3M9XCJkYXRhLWdyaWQtY29udGFpbmVyXCIgYXV0bz1cInRydWVcIiBnYXA9XCJtZFwiIG5vLW1hcmdpbnM9XCJ0cnVlXCIgbWluLWNvbC13aWR0aD1cIjYwMHB4XCI+XG4gICAgICAgICAgPGlkcy1sYXlvdXQtZ3JpZC1jZWxsPlxuICAgICAgICAgICAgPGlkcy1kYXRhLWdyaWQgaWQ9XCJsb29rdXAtZGF0YS1ncmlkXCIgbGFiZWw9XCIke3RoaXMubGFiZWx9XCIgcGFydD1cImRhdGEtZ3JpZFwiPlxuICAgICAgICAgICAgPC9pZHMtZGF0YS1ncmlkPlxuICAgICAgICAgIDwvaWRzLWxheW91dC1ncmlkLWNlbGw+XG4gICAgICAgIDwvaWRzLWxheW91dC1ncmlkPlxuXG4gICAgICA8aWRzLW1vZGFsLWJ1dHRvbiBzbG90PVwiYnV0dG9uc1wiIGlkPVwibW9kYWwtY2FuY2VsLWJ0blwiIGFwcGVhcmFuY2U9XCJzZWNvbmRhcnlcIj5cbiAgICAgICAgPHNwYW4+Q2FuY2VsPC9zcGFuPlxuICAgICAgICA8L2lkcy1tb2RhbC1idXR0b24+XG4gICAgICAgIDxpZHMtbW9kYWwtYnV0dG9uIHNsb3Q9XCJidXR0b25zXCIgaWQ9XCJtb2RhbC1hcHBseS1idG5cIiBhcHBlYXJhbmNlPVwicHJpbWFyeVwiPlxuICAgICAgICAgIDxzcGFuPkFwcGx5PC9zcGFuPlxuICAgICAgICA8L2lkcy1tb2RhbC1idXR0b24+XG4gICAgICA8L2lkcy1tb2RhbD5cbiAgICA8L3Nsb3Q+XG4gICAgYDtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgYXV0b2NvbXBsZXRlIGF0dHJpYnV0ZVxuICAgKiBAcGFyYW0ge3N0cmluZyB8IGJvb2xlYW4gfCBudWxsfSB2YWx1ZSBhdXRvY29tcGxldGUgdmFsdWVcbiAgICovXG4gIHNldCBhdXRvY29tcGxldGUodmFsdWU6IHN0cmluZyB8IGJvb2xlYW4gfCBudWxsKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsKSB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkFVVE9DT01QTEVURSwgJycpO1xuICAgIGVsc2UgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5BVVRPQ09NUExFVEUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgYXV0b2NvbXBsZXRlIGF0dHJpYnV0ZVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gYXV0b2NvbXBsZXRlIGF0dHJpYnV0ZSB2YWx1ZVxuICAgKi9cbiAgZ2V0IGF1dG9jb21wbGV0ZSgpOiBib29sZWFuIHwgbnVsbCB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKGF0dHJpYnV0ZXMuQVVUT0NPTVBMRVRFKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxsYmFjayBmb3IgZGlydHkgdHJhY2tlciBzZXR0aW5nIGNoYW5nZVxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHZhbHVlIFRoZSBjaGFuZ2VkIHZhbHVlXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgb25EaXJ0eVRyYWNrZXJDaGFuZ2UodmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAodmFsdWUpIHRoaXMuY29udGFpbmVyPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVJUWV9UUkFDS0VSLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICBlbHNlIHRoaXMuY29udGFpbmVyPy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5ESVJUWV9UUkFDS0VSKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHZhbHVlIG9mIHRoZSBkcm9wZG93biB1c2luZyB0aGUgdmFsdWUvaWQgYXR0cmlidXRlIGlmIHByZXNlbnRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZS9pZCB0byB1c2VcbiAgICovXG4gIHNldCB2YWx1ZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlICE9PSB0aGlzLnN0YXRlLnZhbHVlKSB7XG4gICAgICB0aGlzLnN0YXRlLnZhbHVlID0gKHZhbHVlID8/ICcnKS50b1N0cmluZygpO1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxVRSwgdGhpcy5zdGF0ZS52YWx1ZSk7XG5cbiAgICAgIC8vIFVwZGF0ZSB0cmlnZ2VyIGZpZWxkIHZhbHVlXG4gICAgICBpZiAodGhpcy50cmlnZ2VyRmllbGQpIHtcbiAgICAgICAgY29uc3QgdGZWYWx1ZSA9IHRoaXMudHJpZ2dlckZpZWxkLnZhbHVlO1xuICAgICAgICBpZiAodGZWYWx1ZSAhPT0gdGhpcy5zdGF0ZS52YWx1ZSkge1xuICAgICAgICAgIHRoaXMudHJpZ2dlckZpZWxkLnZhbHVlID0gdGhpcy5zdGF0ZS52YWx1ZTtcbiAgICAgICAgICB0aGlzLnRyaWdnZXJGaWVsZD8uaW5wdXQ/LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnKSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gU2VuZCB0aGUgY2hhbmdlIGV2ZW50XG4gICAgICB0aGlzLnRyaWdnZXJFdmVudCgnY2hhbmdlJywgdGhpcywgeyBkZXRhaWw6IHsgZWxlbTogdGhpcywgdmFsdWU6IHRoaXMuc3RhdGUudmFsdWUgfSB9KTtcbiAgICB9XG4gIH1cblxuICBnZXQgdmFsdWUoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuc3RhdGUudmFsdWU7IH1cblxuICBvbkxhYmVsQ2hhbmdlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlucHV0KSB0aGlzLmlucHV0LmxhYmVsID0gdGhpcy5sYWJlbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBQdXNoIGxhYmVsLXN0YXRlIHRvIHRoZSBjb250YWluZXIgZWxlbWVudFxuICAgKiBAcmV0dXJucyB7dm9pZH1cbiAgICovXG4gIG9uTGFiZWxTdGF0ZUNoYW5nZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5pbnB1dCkgdGhpcy5pbnB1dC5sYWJlbFN0YXRlID0gdGhpcy5sYWJlbFN0YXRlO1xuICB9XG5cbiAgb25MYWJlbFJlcXVpcmVkQ2hhbmdlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmlucHV0KSB0aGlzLmlucHV0LmxhYmVsUmVxdWlyZWQgPSB0aGlzLmxhYmVsUmVxdWlyZWQ7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgcmVhZG9ubHkgc3RhdGUgb2YgdGhlIGZpZWxkXG4gICAqIEBwYXJhbSB7c3RyaW5nfGJvb2xlYW59IHZhbHVlIHN0cmluZyB2YWx1ZSBmcm9tIHRoZSByZWFkb25seSBhdHRyaWJ1dGVcbiAgICovXG4gIHNldCByZWFkb25seSh2YWx1ZTogc3RyaW5nIHwgYm9vbGVhbikge1xuICAgIGNvbnN0IGlzUmVhZG9ubHkgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmICghdGhpcy50cmlnZ2VyRmllbGQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNSZWFkb25seSkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgICB0aGlzLnRyaWdnZXJGaWVsZC5yZWFkb25seSA9IHRydWU7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgncmVhZG9ubHknLCAndHJ1ZScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMudHJpZ2dlckZpZWxkLnJlYWRvbmx5ID0gZmFsc2U7XG4gICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ3JlYWRvbmx5Jyk7XG4gIH1cblxuICBnZXQgcmVhZG9ubHkoKTogc3RyaW5nIHwgYm9vbGVhbiB7XG4gICAgcmV0dXJuIHN0cmluZ1RvQm9vbCh0aGlzLmdldEF0dHJpYnV0ZSgncmVhZG9ubHknKSkgfHwgZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgZGlzYWJsZWQgYXR0cmlidXRlXG4gICAqIEBwYXJhbSB7c3RyaW5nfGJvb2xlYW59IHZhbHVlIHN0cmluZyB2YWx1ZSBmcm9tIHRoZSBkaXNhYmxlZCBhdHRyaWJ1dGVcbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZTogc3RyaW5nIHwgYm9vbGVhbikge1xuICAgIGNvbnN0IGlzRGlzYWJsZWQgPSBzdHJpbmdUb0Jvb2wodmFsdWUpO1xuICAgIGlmICghdGhpcy50cmlnZ2VyRmllbGQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNhYmxlZCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ3JlYWRvbmx5Jyk7XG5cbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy50cmlnZ2VyRmllbGQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpOiBzdHJpbmcgfCBib29sZWFuIHtcbiAgICByZXR1cm4gc3RyaW5nVG9Cb29sKHRoaXMuZ2V0QXR0cmlidXRlKCdkaXNhYmxlZCcpKSB8fCBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIHRyaWdnZXIgYnV0dG9uIHRvIHRhYmJhYmxlXG4gICAqIEBwYXJhbSB7Ym9vbGVhbnxzdHJpbmd9IHZhbHVlIFRydWUgb2YgZmFsc2UgZGVwZW5kaW5nIGlmIHRoZSB0cmlnZ2VyIGZpZWxkIGlzIHRhYmJhYmxlXG4gICAqL1xuICBzZXQgdGFiYmFibGUodmFsdWU6IHN0cmluZyB8IGJvb2xlYW4pIHtcbiAgICBjb25zdCBpc1RhYmJhYmxlID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAoIXRoaXMudHJpZ2dlckZpZWxkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJCQUJMRSwgU3RyaW5nKGlzVGFiYmFibGUpKTtcbiAgICB0aGlzLnRyaWdnZXJGaWVsZC5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJCQUJMRSwgU3RyaW5nKGlzVGFiYmFibGUpKTtcbiAgfVxuXG4gIGdldCB0YWJiYWJsZSgpOiBzdHJpbmcgfCBib29sZWFuIHtcbiAgICBjb25zdCBhdHRyID0gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJCQUJMRSk7XG4gICAgaWYgKHRoaXMucmVhZG9ubHkgfHwgdGhpcy5kaXNhYmxlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYXR0ciA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBzdHJpbmdUb0Jvb2wodGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5UQUJCQUJMRSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgY29sdW1ucyBhcnJheSBvZiB0aGUgZGF0YSBncmlkXG4gICAqIEBwYXJhbSB7SWRzRGF0YUdyaWRDb2x1bW5bXSB8IHVuZGVmaW5lZH0gdmFsdWUgVGhlIGFycmF5IHRvIHVzZVxuICAgKi9cbiAgc2V0IGNvbHVtbnModmFsdWU6IElkc0RhdGFHcmlkQ29sdW1uW10gfCB1bmRlZmluZWQpIHtcbiAgICBpZiAodGhpcy5kYXRhR3JpZCkgdGhpcy5kYXRhR3JpZC5jb2x1bW5zID0gdmFsdWU7XG4gIH1cblxuICBnZXQgY29sdW1ucygpOiBhbnlbXSB8IHVuZGVmaW5lZCB7IHJldHVybiB0aGlzLmRhdGFHcmlkPy5jb2x1bW5zOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgZGF0YSBhcnJheSBvZiB0aGUgZGF0YSBncmlkXG4gICAqIEBwYXJhbSB7QXJyYXk8UmVjb3JkPHN0cmluZywgYW55Pj59IHZhbHVlIFRoZSBhcnJheSB0byB1c2VcbiAgICovXG4gIHNldCBkYXRhKHZhbHVlOiBBcnJheTxSZWNvcmQ8c3RyaW5nLCBhbnk+Pikge1xuICAgIGlmICh0aGlzLmRhdGFHcmlkKSB0aGlzLmRhdGFHcmlkLmRhdGEgPSB2YWx1ZTtcbiAgICB0aGlzLiNzeW5jU2VsZWN0ZWRSb3dzKCk7XG4gIH1cblxuICBnZXQgZGF0YSgpOiBBcnJheTxSZWNvcmQ8c3RyaW5nLCBhbnk+PiB7IHJldHVybiB0aGlzLmRhdGFHcmlkID8gdGhpcy5kYXRhR3JpZC5kYXRhIDogW107IH1cblxuICAvKipcbiAgICogU3luYyB0aGUgc2VsZWN0ZWQgcm93cyBpbiB0aGUgZGF0YUdyaWRcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZSB0byBiZSBzZXRcbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICAjc3luY1NlbGVjdGVkUm93cyh2YWx1ZTogc3RyaW5nID0gdGhpcy52YWx1ZSk6IHZvaWQge1xuICAgIC8vIERlc2VsZWN0IGFsbCByb3dzLCBpZiBnaXZlbiB2YWx1ZSBpcyBlbXB0eVxuICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgIGlmICh0aGlzLmRhdGFHcmlkPy5zZWxlY3RlZFJvd3MubGVuZ3RoKSB0aGlzLmRhdGFHcmlkLmRlU2VsZWN0QWxsUm93cygpO1xuICAgICAgaWYgKHRoaXMudmFsdWUgIT09IHZhbHVlKSB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gU2VsZWN0IHRoZSByb3dzLCBpZiBub3Qgc2VsZWN0ZWQgYWxyZWFkeSBmb3IgZ2l2ZW4gdmFsdWUgc3BsaXQgd2l0aCBkZWxpbWl0ZXJcbiAgICBjb25zdCBmaW5kSW5kZXggPSAoZDogYW55LCB2OiBzdHJpbmcpID0+IChkLmZpbmRJbmRleCgocjogYW55KSA9PiByW3RoaXMuZmllbGRdID09PSB2KSk7XG4gICAgY29uc3QgdmFsdWVzID0gdmFsdWU/LnNwbGl0KHRoaXMuZGVsaW1pdGVyKSB8fCBbXTtcbiAgICBsZXQgbm90Rm91bmQ6IG51bWJlcltdID0gW107XG4gICAgdmFsdWVzLmZvckVhY2goKHY6IHN0cmluZywgaTogbnVtYmVyKSA9PiB7XG4gICAgICBjb25zdCBkYXRhSW5kZXggPSBmaW5kSW5kZXgodGhpcy5kYXRhR3JpZD8uZGF0YSwgdik7XG4gICAgICBpZiAoZGF0YUluZGV4ID4gLTEpIHtcbiAgICAgICAgaWYgKGZpbmRJbmRleCh0aGlzLmRhdGFHcmlkPy5zZWxlY3RlZFJvd3MubWFwKChkOiBhbnkpID0+IGQuZGF0YSksIHYpID09PSAtMSkge1xuICAgICAgICAgIHRoaXMuZGF0YUdyaWQ/LnNlbGVjdFJvdyhkYXRhSW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub3RGb3VuZC5wdXNoKGkpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIG5vdEZvdW5kLmZvckVhY2goKGk6IG51bWJlcikgPT4gdmFsdWVzLnNwbGljZShpLCAxKSk7XG5cbiAgICAvLyBEZXNlbGVjdCByb3dzLCBpZiBhbnkgZXh0cmEgcHJldmlvdXNseSBzZWxlY3RlZCBpbiBncmlkXG4gICAgbm90Rm91bmQgPSBbXTtcbiAgICBpZiAodGhpcy5kYXRhR3JpZD8uc2VsZWN0ZWRSb3dzICYmIHRoaXMuZGF0YUdyaWQ/LnNlbGVjdGVkUm93cy5sZW5ndGggPiB2YWx1ZXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmRhdGFHcmlkPy5zZWxlY3RlZFJvd3MuZm9yRWFjaCgoZDogYW55KSA9PiB7XG4gICAgICAgIGlmICghdmFsdWVzLmluY2x1ZGVzKGQuZGF0YVt0aGlzLmZpZWxkXSkpIG5vdEZvdW5kLnB1c2goZC5pbmRleCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgbm90Rm91bmQuZm9yRWFjaCgoaTogbnVtYmVyKSA9PiB0aGlzLmRhdGFHcmlkPy5kZVNlbGVjdFJvdyhpKSk7XG5cbiAgICAvLyBVcGRhdGUgdGhlIHZhbHVlXG4gICAgaWYgKHRoaXMudmFsdWUgIT09IHZhbHVlKSB0aGlzLnZhbHVlID0gdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogU2V0IGFueSBudW1iZXIgb2YgZGF0YUdyaWQgc2V0dGluZ3NcbiAgICogQHBhcmFtIHtvYmplY3R9IHNldHRpbmdzIFRoZSBzZXR0aW5ncyB0byB1c2VcbiAgICovXG4gIHNldCBkYXRhR3JpZFNldHRpbmdzKHNldHRpbmdzOiBhbnkpIHtcbiAgICB0aGlzLnN0YXRlLmRhdGFHcmlkU2V0dGluZ3MgPSBzZXR0aW5ncztcblxuICAgIC8vIEFwcGx5IHRoZSBzZXR0aW5ncyB0byB0aGUgZ3JpZFxuICAgIGZvciAoY29uc3QgW3NldHRpbmcsIHNldHRpbmdWYWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoc2V0dGluZ3MpKSB7XG4gICAgICAodGhpcy5kYXRhR3JpZCBhcyBhbnkpW3NldHRpbmddID0gc2V0dGluZ1ZhbHVlO1xuICAgIH1cbiAgICBpZiAodGhpcy5kYXRhR3JpZCkgdGhpcy5kYXRhR3JpZC5saXN0U3R5bGUgPSB0cnVlO1xuICB9XG5cbiAgZ2V0IGRhdGFHcmlkU2V0dGluZ3MoKTogYW55IHsgcmV0dXJuIHRoaXMuc3RhdGUuZGF0YUdyaWRTZXR0aW5nczsgfVxuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSB2YWxpZGF0aW9uIGNoZWNrIHRvIHVzZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVGhlIGB2YWxpZGF0ZWAgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgdmFsaWRhdGUodmFsdWU6IHN0cmluZyB8IG51bGwpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMSURBVEUsIHZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgdGhpcy50cmlnZ2VyRmllbGQ/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTElEQVRFLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxJREFUSU9OX0VWRU5UUywgdGhpcy52YWxpZGF0aW9uRXZlbnRzKTtcbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkPy5oYW5kbGVWYWxpZGF0aW9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMSURBVEUpO1xuICAgICAgdGhpcy50cmlnZ2VyRmllbGQ/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTElEQVRFKTtcbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkPy5yZW1vdmVBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxJREFUSU9OX0VWRU5UUyk7XG4gICAgICB0aGlzLnRyaWdnZXJGaWVsZD8uaGFuZGxlVmFsaWRhdGlvbigpO1xuICAgIH1cbiAgfVxuXG4gIGdldCB2YWxpZGF0ZSgpOiBzdHJpbmcgfCBudWxsIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMSURBVEUpOyB9XG5cbiAgLyoqXG4gICAqIFNldCBgdmFsaWRhdGlvbi1ldmVudHNgIGF0dHJpYnV0ZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgVGhlIGB2YWxpZGF0aW9uLWV2ZW50c2AgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgdmFsaWRhdGlvbkV2ZW50cyh2YWx1ZTogc3RyaW5nKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTElEQVRJT05fRVZFTlRTLCB2YWx1ZS50b1N0cmluZygpKTtcbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxJREFUSU9OX0VWRU5UUywgdmFsdWUudG9TdHJpbmcoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlKGF0dHJpYnV0ZXMuVkFMSURBVElPTl9FVkVOVFMpO1xuICAgICAgdGhpcy50cmlnZ2VyRmllbGQ/LnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlZBTElEQVRJT05fRVZFTlRTKTtcbiAgICB9XG4gIH1cblxuICBnZXQgdmFsaWRhdGlvbkV2ZW50cygpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5WQUxJREFUSU9OX0VWRU5UUykgfHwgJ2NoYW5nZSBibHVyJzsgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIG1vZGFsIHRpdGxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgbW9kYWwgdGl0bGUgYXR0cmlidXRlXG4gICAqL1xuICBzZXQgI3RpdGxlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVElUTEUsIHZhbHVlKTtcbiAgICAgIGNvbnN0IHRpdGxlRWxlbSA9IHRoaXMubW9kYWw/LnF1ZXJ5U2VsZWN0b3I8SWRzVGV4dD4oJ1tzbG90PVwidGl0bGVcIl0nKTtcbiAgICAgIGlmICh0aXRsZUVsZW0pIHRpdGxlRWxlbS5pbm5lclRleHQgPSB2YWx1ZTtcbiAgICAgIHRoaXMudHJpZ2dlckZpZWxkPy5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5USVRMRSwgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIGdldCAjdGl0bGUoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuVElUTEUpIHx8IGAke3RoaXMubGFiZWx9YDsgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIGZpZWxkIHRvIHVzZSB3aGVuIHBvcHVsYXRpbmcgdGhlIGlucHV0XG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgZmllbGQgbmFtZVxuICAgKi9cbiAgc2V0IGZpZWxkKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRklFTEQsIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICBnZXQgZmllbGQoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuRklFTEQpIHx8ICdpZCc7IH1cblxuICAvKipcbiAgICogU2V0IHRoZSBkcm9wZG93biBzaXplXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZSBUaGUgdmFsdWVcbiAgICovXG4gIHNldCBzaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuU0laRSwgdmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNJWkUpO1xuICAgIH1cbiAgICBpZiAodGhpcy50cmlnZ2VyRmllbGQpIHRoaXMudHJpZ2dlckZpZWxkLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLlNJWkUsIHRoaXMuc2l6ZSk7XG4gIH1cblxuICBnZXQgc2l6ZSgpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5TSVpFKSA/PyAnbWQnOyB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgc3RyaW5nIGRlbGltaXRlciBvbiBzZWxlY3Rpb25cbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSBmaWVsZCBuYW1lXG4gICAqL1xuICBzZXQgZGVsaW1pdGVyKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZXMuREVMSU1JVEVSLCB2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IGRlbGltaXRlcigpOiBzdHJpbmcgeyByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlcy5ERUxJTUlURVIpIHx8ICcsJzsgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJucyB7SWRzVHJpZ2dlckZpZWxkfSBSZWZlcmVuY2UgdG8gdGhlIElkc1RyaWdnZXJGaWVsZFxuICAgKi9cbiAgZ2V0IGlucHV0KCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRhaW5lciBhcyBJZHNUcmlnZ2VyRmllbGQ7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB0aGUgY2xlYXJhYmxlIHggYnV0dG9uXG4gICAqIEBwYXJhbSB7Ym9vbGVhbnxzdHJpbmd9IHZhbHVlIElmIHRydWUgd2lsbCBzZXQgdG8gY2xlYXJhYmxlXG4gICAqL1xuICBzZXQgY2xlYXJhYmxlKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XG4gICAgY29uc3QgdmFsID0gc3RyaW5nVG9Cb29sKHZhbHVlKTtcbiAgICBpZiAodmFsICE9PSB0aGlzLnN0YXRlLmNsZWFyYWJsZSkge1xuICAgICAgdGhpcy5zdGF0ZS5jbGVhcmFibGUgPSB2YWw7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNMRUFSQUJMRSwgU3RyaW5nKHZhbCkpO1xuICAgICAgdGhpcy50cmlnZ2VyRmllbGQ/LnNldEF0dHJpYnV0ZShhdHRyaWJ1dGVzLkNMRUFSQUJMRSwgU3RyaW5nKHZhbCkpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBjbGVhcmFibGUoKTogYm9vbGVhbiB7IHJldHVybiB0aGlzLnN0YXRlLmNsZWFyYWJsZTsgfVxuXG4gIC8qKlxuICAgKiBQdXNoIGZpZWxkLWhlaWdodC9jb21wYWN0IHRvIHRoZSBjb250YWluZXIgZWxlbWVudFxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsIHRoZSBuZXcgZmllbGQgaGVpZ2h0IHNldHRpbmdcbiAgICovXG4gIG9uRmllbGRIZWlnaHRDaGFuZ2UodmFsOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsKSB7XG4gICAgICBjb25zdCBhdHRyID0gdmFsID09PSAnY29tcGFjdCcgPyB7IG5hbWU6ICdjb21wYWN0JywgdmFsOiAnJyB9IDogeyBuYW1lOiAnZmllbGQtaGVpZ2h0JywgdmFsIH07XG4gICAgICB0aGlzLnRyaWdnZXJGaWVsZD8uc2V0QXR0cmlidXRlKGF0dHIubmFtZSwgYXR0ci52YWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRyaWdnZXJGaWVsZD8ucmVtb3ZlQXR0cmlidXRlKCdjb21wYWN0Jyk7XG4gICAgICB0aGlzLnRyaWdnZXJGaWVsZD8ucmVtb3ZlQXR0cmlidXRlKCdmaWVsZC1oZWlnaHQnKTtcbiAgICAgIHRoaXMubGlzdEJveD8ucmVtb3ZlQXR0cmlidXRlKCdjb21wYWN0Jyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgdmFsdWUgaW4gdGhlIGlucHV0IGZvciB0aGUgc2VsZWN0ZWQgcm93KHMpXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICAjc2V0SW5wdXRWYWx1ZSgpOiB2b2lkIHtcbiAgICB0aGlzLnZhbHVlID0gdGhpcy5kYXRhR3JpZD8uc2VsZWN0ZWRSb3dzLm1hcCgocjogYW55KSA9PiByLmRhdGFbdGhpcy5maWVsZF0pLmpvaW4odGhpcy5kZWxpbWl0ZXIpIHx8ICcnO1xuICB9XG5cbiAgLyoqXG4gICAqIEVzdGFibGlzaCBJbnRlcm5hbCBFdmVudCBIYW5kbGVyc1xuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGUgb2JqZWN0IGZvciBjaGFpbmluZy5cbiAgICovXG4gICNoYW5kbGVFdmVudHMoKSB7XG4gICAgdGhpcy5vbkV2ZW50KCdjbGljay5sb29rdXAnLCB0aGlzLm1vZGFsLCAoZTogYW55KSA9PiB7XG4gICAgICBjb25zdCBidG5JZCA9IGUudGFyZ2V0Py5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG5cbiAgICAgIC8vIENhbmNlbFxuICAgICAgaWYgKGJ0bklkID09PSAnbW9kYWwtY2FuY2VsLWJ0bicpIHtcbiAgICAgICAgdGhpcy5tb2RhbD8uaGlkZSgpO1xuICAgICAgICB0aGlzLiNzeW5jU2VsZWN0ZWRSb3dzKCk7XG4gICAgICB9XG5cbiAgICAgIC8vIEFwcGx5XG4gICAgICBpZiAoYnRuSWQgPT09ICdtb2RhbC1hcHBseS1idG4nKSB7XG4gICAgICAgIHRoaXMubW9kYWw/LmhpZGUoKTtcbiAgICAgICAgdGhpcy4jc2V0SW5wdXRWYWx1ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5vbkV2ZW50KCdjaGFuZ2UubG9va3VwJywgdGhpcy50cmlnZ2VyRmllbGQsICgpID0+IHtcbiAgICAgIGNvbnN0IHRmVmFsdWUgPSB0aGlzLnRyaWdnZXJGaWVsZD8udmFsdWU7XG4gICAgICBsZXQgaXNTeW5jZWQgPSB0ZlZhbHVlICE9PSB0aGlzLnZhbHVlO1xuICAgICAgaWYgKCFpc1N5bmNlZCkge1xuICAgICAgICBjb25zdCBzZWxlY3RlZCA9IHRoaXMuZGF0YUdyaWQ/LnNlbGVjdGVkUm93cz8ubWFwKChkOiBhbnkpID0+IGQ/LmRhdGE/Llt0aGlzLmZpZWxkXSkgfHwgW107XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMudmFsdWU/LnNwbGl0KHRoaXMuZGVsaW1pdGVyKSB8fCBbXTtcbiAgICAgICAgaWYgKHNlbGVjdGVkLmxlbmd0aCAhPT0gdmFsdWVzLmxlbmd0aCkgaXNTeW5jZWQgPSB0cnVlO1xuICAgICAgICBpZiAoIWlzU3luY2VkKSB7XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIXNlbGVjdGVkLmluY2x1ZGVzKHZhbHVlc1tpXSkpIHtcbiAgICAgICAgICAgICAgaXNTeW5jZWQgPSB0cnVlO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChpc1N5bmNlZCkgdGhpcy4jc3luY1NlbGVjdGVkUm93cyh0ZlZhbHVlKTtcbiAgICB9KTtcblxuICAgIHRoaXMubW9kYWw/LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXNob3cnLCAoKGU6IEN1c3RvbUV2ZW50KSA9PiB7XG4gICAgICAvLyBJbiB0aGUgY2FzZSBvZiByZWFkb25seS9kaXNhYmxlZCBvciBubyBkYXRhIGRvIG5vdCBzaG93IHRoZSBtb2RhbFxuICAgICAgaWYgKHRoaXMucmVhZG9ubHkgfHwgdGhpcy5kaXNhYmxlZCkge1xuICAgICAgICBlLmRldGFpbC5yZXNwb25zZShmYWxzZSk7XG4gICAgICB9XG4gICAgICAvLyBTaG93IGFsd2F5cyBmb3IgY3VzdG9tIG1vZGFsc1xuICAgICAgaWYgKHRoaXMucXVlcnlTZWxlY3RvckFsbCgnW3Nsb3Q9XCJsb29rdXAtbW9kYWxcIl0nKS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gSW4gdGhlIGNhc2Ugb2Ygbm8gZGF0YSBkbyBub3Qgc2hvdyB0aGUgbW9kYWxcbiAgICAgIGlmICh0aGlzLmRhdGE/Lmxlbmd0aCA9PT0gMCAmJiB0aGlzLmNvbHVtbnM/Lmxlbmd0aCA9PT0gMSAmJiAodGhpcy5jb2x1bW5zWzBdIGFzIGFueSkuaWQgPT09ICcnKSB7XG4gICAgICAgIGUuZGV0YWlsLnJlc3BvbnNlKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9KSBhcyBFdmVudExpc3RlbmVyKTtcblxuICAgIC8vIFByb3BhZ2F0ZSBhIGZldyBldmVudHMgdG8gdGhlIHBhcmVudFxuICAgIHRoaXMuZGF0YUdyaWQ/LmFkZEV2ZW50TGlzdGVuZXIoJ3Jvd3NlbGVjdGVkJywgKChlOiBDdXN0b21FdmVudCkgPT4ge1xuICAgICAgdGhpcy50cmlnZ2VyRXZlbnQoJ3Jvd3NlbGVjdGVkJywgdGhpcywgeyBkZXRhaWw6IGUuZGV0YWlsIH0pO1xuICAgIH0pIGFzIEV2ZW50TGlzdGVuZXIpO1xuXG4gICAgdGhpcy5kYXRhR3JpZD8uYWRkRXZlbnRMaXN0ZW5lcigncm93ZGVzZWxlY3RlZCcsICgoZTogQ3VzdG9tRXZlbnQpID0+IHtcbiAgICAgIHRoaXMudHJpZ2dlckV2ZW50KCdyb3dkZXNlbGVjdGVkJywgdGhpcywgeyBkZXRhaWw6IGUuZGV0YWlsIH0pO1xuICAgIH0pIGFzIEV2ZW50TGlzdGVuZXIpO1xuXG4gICAgdGhpcy5kYXRhR3JpZD8uYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0aW9uY2hhbmdlZCcsICgoZTogQ3VzdG9tRXZlbnQpID0+IHtcbiAgICAgIHRoaXMudHJpZ2dlckV2ZW50KCdzZWxlY3Rpb25jaGFuZ2VkJywgdGhpcywgeyBkZXRhaWw6IGUuZGV0YWlsIH0pO1xuICAgIH0pIGFzIEV2ZW50TGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogRXN0YWJsaXNoIEludGVybmFsIEtleWJvYXJkIHNob3J0Y3V0c1xuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBUaGlzIEFQSSBvYmplY3QgZm9yIGNoYWluaW5nXG4gICAqL1xuICAjaGFuZGxlS2V5cygpIHtcbiAgICB0aGlzLmxpc3RlbihbJ0Fycm93RG93biddLCB0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLm1vZGFsPy5zaG93KCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/ids-lookup/ids-lookup.ts\n");

/***/ }),

/***/ "./src/components/ids-lookup/ids-lookup.scss":
/*!***************************************************!*\
  !*** ./src/components/ids-lookup/ids-lookup.scss ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Lookup Component */ /* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.data-grid-container {\n  overflow: auto;\n}\n\nids-trigger-field::part(clearable-button) {\n  margin-inline-end: 0px;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-lookup/ids-lookup.scss\n");

/***/ })

}]);