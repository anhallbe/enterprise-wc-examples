"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-upload_ids-upload_ts"],{

/***/ "./src/components/ids-upload/ids-upload.ts":
/*!*************************************************!*\
  !*** ./src/components/ids-upload/ids-upload.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsUpload)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../mixins/ids-label-state-mixin/ids-label-state-parent-mixin */ \"./src/mixins/ids-label-state-mixin/ids-label-state-parent-mixin.ts\");\n/* harmony import */ var _mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../mixins/ids-field-height-mixin/ids-field-height-mixin */ \"./src/mixins/ids-field-height-mixin/ids-field-height-mixin.ts\");\n/* harmony import */ var _mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../mixins/ids-color-variant-mixin/ids-color-variant-mixin */ \"./src/mixins/ids-color-variant-mixin/ids-color-variant-mixin.ts\");\n/* harmony import */ var _mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../mixins/ids-tooltip-mixin/ids-tooltip-mixin */ \"./src/mixins/ids-tooltip-mixin/ids-tooltip-mixin.ts\");\n/* harmony import */ var _mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin */ \"./src/mixins/ids-dirty-tracker-mixin/ids-dirty-tracker-mixin.ts\");\n/* harmony import */ var _mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../mixins/ids-events-mixin/ids-events-mixin */ \"./src/mixins/ids-events-mixin/ids-events-mixin.ts\");\n/* harmony import */ var _mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../mixins/ids-locale-mixin/ids-locale-mixin */ \"./src/mixins/ids-locale-mixin/ids-locale-mixin.ts\");\n/* harmony import */ var _mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../mixins/ids-theme-mixin/ids-theme-mixin */ \"./src/mixins/ids-theme-mixin/ids-theme-mixin.ts\");\n/* harmony import */ var _mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../mixins/ids-validation-mixin/ids-validation-input-mixin */ \"./src/mixins/ids-validation-mixin/ids-validation-input-mixin.ts\");\n/* harmony import */ var _core_ids_element__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/ids-element */ \"./src/core/ids-element.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_field__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-field */ \"./src/components/ids-trigger-field/ids-trigger-field.ts\");\n/* harmony import */ var _ids_trigger_field_ids_trigger_button__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../ids-trigger-field/ids-trigger-button */ \"./src/components/ids-trigger-field/ids-trigger-button.ts\");\n/* harmony import */ var _ids_text_ids_text__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../ids-text/ids-text */ \"./src/components/ids-text/ids-text.ts\");\n/* harmony import */ var _ids_icon_ids_icon__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ids-icon/ids-icon */ \"./src/components/ids-icon/ids-icon.ts\");\n/* harmony import */ var _ids_upload_scss__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./ids-upload.scss */ \"./src/components/ids-upload/ids-upload.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ID = \"ids-upload-id\";\nconst Base = (0,_mixins_ids_theme_mixin_ids_theme_mixin__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\n  (0,_mixins_ids_label_state_mixin_ids_label_state_parent_mixin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    (0,_mixins_ids_dirty_tracker_mixin_ids_dirty_tracker_mixin__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(\n      (0,_mixins_ids_locale_mixin_ids_locale_mixin__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(\n        (0,_mixins_ids_field_height_mixin_ids_field_height_mixin__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n          (0,_mixins_ids_validation_mixin_ids_validation_input_mixin__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(\n            (0,_mixins_ids_color_variant_mixin_ids_color_variant_mixin__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(\n              (0,_mixins_ids_tooltip_mixin_ids_tooltip_mixin__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(\n                (0,_mixins_ids_events_mixin_ids_events_mixin__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\n                  _core_ids_element__WEBPACK_IMPORTED_MODULE_12__[\"default\"]\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  )\n);\nlet IdsUpload = class extends Base {\n  constructor() {\n    super();\n  }\n  isFormComponent = true;\n  isFilePickerOpened = false;\n  trigger;\n  fileInput;\n  files;\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_FILETYPE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_REQUIRED,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ELLIPSIS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_LABEL,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE\n    ];\n  }\n  /**\n   * List of available color variants for this component\n   * @returns {Array<string>}\n   */\n  colorVariants = [\"alternate-formatter\"];\n  /**\n   * Push color variant to the trigger-field element\n   * @returns {void}\n   */\n  onColorVariantRefresh() {\n    this.textInput.colorVariant = this.colorVariant;\n  }\n  onLabelChange() {\n    if (this.textInput)\n      this.textInput.label = this.label;\n  }\n  /**\n   * Push label-state to the trigger-field element\n   * @returns {void}\n   */\n  onLabelStateChange() {\n    this.textInput.labelState = this.labelState;\n  }\n  onLabelRequiredChange() {\n    if (this.textInput)\n      this.textInput.labelRequired = this.labelRequired;\n  }\n  /**\n   * Push field-height/compact to the trigger-field element\n   * @param {string} val the new field height setting\n   */\n  onFieldHeightChange(val) {\n    if (val) {\n      const attr = val === \"compact\" ? { name: \"compact\", val: \"\" } : { name: \"field-height\", val };\n      this.textInput.setAttribute(attr.name, attr.val);\n    } else {\n      this.textInput.removeAttribute(\"compact\");\n      this.textInput.removeAttribute(\"field-height\");\n    }\n  }\n  /**\n   * Custom Element `connectedCallback` implementation\n   * @returns {void}\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.trigger = this.shadowRoot?.querySelector(\".trigger\");\n    this.fileInput = this.shadowRoot?.querySelector(`#${ID}`);\n    this.files = this.fileInput?.files;\n    this.#attachEventHandlers();\n  }\n  /**\n   * Inner template contents\n   * @returns {string} The template\n   */\n  template() {\n    const trueVal = (v) => (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(v);\n    const accept = this.accept ? ` accept=\"${this.accept}\"` : \"\";\n    const dirtyTracker = trueVal(this.dirtyTracker) ? ` dirty-tracker=\"${this.dirtyTracker}\"` : \"\";\n    const disabled = trueVal(this.disabled) ? ` disabled=\"${this.disabled}\"` : \"\";\n    const readonlyBG = trueVal(this.readonly) ? \"\" : \" readonly-background\";\n    const textEllipsis = trueVal(this.textEllipsis) ? ' text-ellipsis=\"true\"' : \"\";\n    const label = this.label ? ` label=\"${this.label}\"` : \"\";\n    const placeholder = this.placeholder ? ` placeholder=\"${this.placeholder}\"` : \"\";\n    const multiple = trueVal(this.multiple) ? ` multiple=\"multiple\"` : \"\";\n    const readonlyBtn = trueVal(this.readonly) ? ` readonly=\"true\"` : \"\";\n    const clearableForced = ` clearable-forced=\"${this.hasAccess}\"`;\n    const size = this.size ? ` size=\"${this.size}\"` : \"\";\n    const triggerLabel = this.triggerLabel || this.triggerLabelDefault;\n    const labelFiletype = this.labelFiletype || this.labelFiletypeDefault;\n    const validate = this.validate ? ` validate=\"${this.validate}\"` : \"\";\n    const validationEvents = ` validation-events=\"${this.validationEvents || this.validationEventsDefault}\"`;\n    const value = this.value ? ` value=\"${this.value}\"` : \"\";\n    const colorVariant = this.colorVariant ? ` color-variant=\"${this.colorVariant}\"` : \"\";\n    const fieldHeight = this.fieldHeight ? ` field-height=\"${this.fieldHeight}\"` : \"\";\n    const labelState = this.labelState ? ` label-state=\"${this.labelState}\"` : \"\";\n    const compact = this.compact ? \" compact\" : \"\";\n    const noMargins = this.noMargins ? \" no-margins\" : \"\";\n    return `\n      <div class=\"ids-upload\" part=\"container\">\n        <label for=\"${ID}\" class=\"ids-upload-filetype-label\" aria-hidden=\"true\" tabindex=\"-1\">\n          <ids-text audible=\"true\" class=\"label-filetype\" part=\"label\">${labelFiletype}</ids-text>\n        </label>\n        <input id=\"${ID}\" type=\"file\" class=\"ids-upload-filetype\" aria-hidden=\"true\" tabindex=\"-1\"${accept}${multiple}${value} />\n        <ids-trigger-field\n          readonly=\"true\"\n          ${readonlyBG}\n          ${colorVariant}${fieldHeight}${compact}${noMargins}${labelState}\n          ${clearableForced}${dirtyTracker}${disabled}${label}${placeholder}${size}${validate}${validationEvents}${textEllipsis}${value}\n          css-class=\"ids-upload\"\n          part=\"input\"\n        >\n          <ids-trigger-button slot=\"trigger-end\" part=\"button\" class=\"trigger\"${disabled}${readonlyBtn}>\n            <ids-text audible=\"true\" class=\"trigger-label\">${triggerLabel}</ids-text>\n            <ids-icon icon=\"folder\"></ids-icon>\n          </ids-trigger-button>\n        </ids-trigger-field>\n      </div>`;\n  }\n  /**\n   * Callback for dirty tracker setting change\n   * @param {boolean} value The changed value\n   * @returns {void}\n   */\n  onDirtyTrackerChange(value) {\n    if (this.textInput)\n      this.textInput.dirtyTracker = value;\n  }\n  get input() {\n    return this.container?.querySelector(\"ids-trigger-field\");\n  }\n  /**\n   * Clear the value\n   * @returns {void}\n   */\n  clear() {\n    if (this.hasAccess) {\n      this.value = \"\";\n    }\n  }\n  /**\n   * Open file picker window\n   * @returns {void}\n   */\n  open() {\n    if (this.hasAccess) {\n      this.isFilePickerOpened = true;\n      this.fileInput?.click();\n    }\n  }\n  /**\n   * Dispatch change event\n   * @private\n   * @param {object} e Actual event\n   * @returns {void}\n   */\n  dispatchChangeEvent(e) {\n    this.triggerEvent(\"change\", this, {\n      detail: {\n        files: this.fileInput?.files,\n        textValue: this.value,\n        elem: this,\n        nativeEvent: e\n      }\n    });\n  }\n  /**\n   * Handle window focus event, track file picker window cancel button\n   * @private\n   * @returns {void}\n   */\n  handleWindowFocusEvent() {\n    this.onEvent(\"focus\", window, () => {\n      if (this.isFilePickerOpened) {\n        this.isFilePickerOpened = false;\n        setTimeout(() => {\n          const files = this.fileInput?.files;\n          const eventName = `files${files?.length ? \"select\" : \"cancel\"}`;\n          this.triggerEvent(eventName, this.fileInput, {\n            detail: { files, elem: this }\n          });\n        }, 20);\n      }\n    });\n  }\n  /**\n   * Handle fileInput change event\n   * @private\n   * @returns {void}\n   */\n  handleFileInputChangeEvent() {\n    this.onEvent(\"change\", this.fileInput, (e) => {\n      const files = this.fileInput?.files;\n      this.value = [].slice.call(files).map((f) => f.name).join(\", \");\n      this.dispatchChangeEvent(e);\n    });\n  }\n  /**\n   * Handle fileInput filescancel event\n   * @private\n   * @returns {void}\n   */\n  handleFileInputCancelEvent() {\n    this.onEvent(\"filescancel\", this.fileInput, () => {\n      this.textInput.input?.dispatchEvent(new Event(\"blur\", { bubbles: true }));\n    });\n  }\n  /**\n   * Handle drag-drop event\n   * @private\n   * @returns {void}\n   */\n  handleTextInputDragDrop() {\n    if (this.hasAccess) {\n      this.onEvent(\"dragenter\", this.textInput, () => {\n        this.fileInput?.style.setProperty(\"z-index\", \"1\");\n      });\n      const events = [\"dragleave\", \"dragend\", \"drop\"];\n      events.forEach((eventName) => {\n        this.onEvent(eventName, this.textInput, () => {\n          setTimeout(() => {\n            this.fileInput?.style.setProperty(\"z-index\", \"\");\n          }, 1);\n        });\n      });\n    }\n  }\n  /**\n   * Handle keydown event\n   * @private\n   * @returns {void}\n   */\n  handleTextInputKeydown() {\n    this.onEvent(\"keydown\", this.textInput, (e) => {\n      const allow = [\"Backspace\", \"Enter\", \"Space\"];\n      const key = e.code;\n      const isClearBtn = e.path?.filter((p) => p?.classList?.contains(\"btn-clear\")).length > 0;\n      if (allow.indexOf(key) > -1 && !isClearBtn) {\n        if (key === \"Backspace\") {\n          this.clear();\n          this.dispatchChangeEvent(e);\n        } else {\n          this.open();\n        }\n        e.preventDefault();\n      }\n    });\n  }\n  /**\n   * Handle trigger click event\n   * @private\n   * @returns {void}\n   */\n  handleTriggerClickEvent() {\n    this.onEvent(\"click\", this.trigger, () => {\n      this.open();\n    });\n  }\n  /**\n   * Handle input cleared event\n   * @private\n   * @returns {void}\n   */\n  handleInputClearedEvent() {\n    this.onEvent(\"cleared\", this.textInput, (e) => {\n      this.clear();\n      this.dispatchChangeEvent(e);\n    });\n  }\n  /**\n   * Handle events\n   * @private\n   * @returns {void}\n   */\n  #attachEventHandlers() {\n    this.handleWindowFocusEvent();\n    this.handleFileInputChangeEvent();\n    this.handleFileInputCancelEvent();\n    this.handleTextInputDragDrop();\n    this.handleTextInputKeydown();\n    this.handleTriggerClickEvent();\n    this.handleInputClearedEvent();\n  }\n  /**\n   * Get trigger field element as textInput\n   * @returns {any} The textInput element\n   */\n  get textInput() {\n    return this.shadowRoot?.querySelector(\"ids-trigger-field\");\n  }\n  /**\n   * Default label for filetype\n   * @private\n   * @returns {string} default label value\n   */\n  get labelFiletypeDefault() {\n    const instructions = \", Press Enter to Browse for files\";\n    return `${this.label || \"\"}${instructions}`;\n  }\n  /**\n   * Default label for trigger button\n   * @private\n   * @returns {string} default label value\n   */\n  get triggerLabelDefault() {\n    return `trigger button for ${this.label || \"fileupload\"}`;\n  }\n  /**\n   * Default validation events\n   * @private\n   * @returns {string} default validation events value\n   */\n  get validationEventsDefault() {\n    return `blur change`;\n  }\n  /**\n   * Has access to use, if not disabled or readonly\n   * @private\n   * @returns {boolean} true, if not disabled or readonly\n   */\n  get hasAccess() {\n    const trueVal = (v) => (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(v);\n    return !(trueVal(this.disabled) || trueVal(this.readonly));\n  }\n  /**\n   * Set `accept` attribute\n   * @param {string | null} value `accept` attribute\n   */\n  set accept(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT, value);\n      this.fileInput?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT);\n      this.fileInput?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT);\n    }\n  }\n  get accept() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ACCEPT);\n  }\n  /**\n   * Set `disabled` attribute\n   * @param {boolean|string} value If true will set `disabled` attribute\n   */\n  set disabled(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED, val.toString());\n      if (this.textInput)\n        this.textInput.disabled = true;\n      if (this.trigger)\n        this.trigger.disabled = true;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED);\n      if (this.textInput) {\n        this.textInput.disabled = false;\n        this.textInput.readonly = this.readonly;\n      }\n      if (this.trigger)\n        this.trigger.disabled = false;\n    }\n  }\n  get disabled() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.DISABLED));\n  }\n  /**\n   * Set the label for filetype\n   * @param {string | null} value The label for filetype\n   */\n  set labelFiletype(value) {\n    const labelEL = this.shadowRoot?.querySelector(\".label-filetype\");\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_FILETYPE, value);\n      if (labelEL)\n        labelEL.textContent = value;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_FILETYPE);\n      if (labelEL)\n        labelEL.textContent = this.labelFiletypeDefault;\n    }\n  }\n  get labelFiletype() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.LABEL_FILETYPE);\n  }\n  /**\n   * Set the `multiple` attribute for filetype\n   * @param {boolean|string} value of the `multiple` property\n   */\n  set multiple(value) {\n    this.fileInput = this.shadowRoot?.querySelector(`#${ID}`);\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE, val.toString());\n      this.fileInput?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE, \"multiple\");\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE);\n    this.fileInput?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE);\n  }\n  get multiple() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.MULTIPLE));\n  }\n  /**\n   * Sets the no margins attribute\n   * @param {boolean} value The value for no margins attribute\n   */\n  set noMargins(value) {\n    if (typeof value === \"boolean\" || typeof value === \"string\") {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n    }\n    this.textInput.noMargins = this.noMargins;\n  }\n  get noMargins() {\n    const value = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.NO_MARGINS);\n    return value !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value) : false;\n  }\n  /**\n   * Set the text ellipsis for input text\n   * @param {boolean|string} value The value\n   */\n  set textEllipsis(value) {\n    if (typeof value === \"boolean\" || typeof value === \"string\") {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ELLIPSIS, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ELLIPSIS);\n    }\n    this.textInput.textEllipsis = this.textEllipsis;\n  }\n  get textEllipsis() {\n    const value = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TEXT_ELLIPSIS);\n    return value !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value) : true;\n  }\n  /**\n   * Set the `placeholder` of input\n   * @param {string | null} value of the `placeholder` property\n   */\n  set placeholder(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER, value);\n      this.textInput.placeholder = value;\n      return;\n    }\n    this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n    this.textInput.placeholder = null;\n  }\n  get placeholder() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.PLACEHOLDER);\n  }\n  /**\n   * Set the `readonly` of input\n   * @param {boolean|string} value If true will set `readonly` attribute\n   */\n  set readonly(value) {\n    const val = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value);\n    if (this.textInput && !this.textInput?.readonly) {\n      this.textInput.readonly = true;\n    }\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY, val.toString());\n      this.container?.classList.add(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      if (this.textInput)\n        this.textInput.readonlyBackground = false;\n      if (this.trigger)\n        this.trigger.readonly = true;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      this.container?.classList.remove(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY);\n      if (this.textInput)\n        this.textInput.readonlyBackground = true;\n      if (this.trigger)\n        this.trigger.readonly = false;\n    }\n  }\n  get readonly() {\n    return (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.READONLY));\n  }\n  /**\n   * Set the size of input\n   * @param {string} value [xs, sm, mm, md, lg, full]\n   */\n  set size(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, value);\n      this.textInput?.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE, value);\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n      this.textInput?.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n    }\n  }\n  get size() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.SIZE);\n  }\n  /**\n   * Set if the upload is tabbable\n   * @param {boolean|string} value True of false depending if the upload is tabbable\n   */\n  set tabbable(value) {\n    if (typeof value === \"boolean\" || typeof value === \"string\") {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE, value.toString());\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n    }\n    this.textInput.tabbable = this.tabbable;\n  }\n  get tabbable() {\n    const value = this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TABBABLE);\n    return value !== null ? (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToBool)(value) : false;\n  }\n  /**\n   * Set the label for trigger button\n   * @param {string | null} value The label for trigger button\n   */\n  set triggerLabel(value) {\n    const labelEL = this.shadowRoot?.querySelector(\".trigger-label\");\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_LABEL, value);\n      if (labelEL)\n        labelEL.textContent = value;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_LABEL);\n      if (labelEL)\n        labelEL.textContent = this.triggerLabelDefault;\n    }\n  }\n  get triggerLabel() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.TRIGGER_LABEL);\n  }\n  /**\n   * Set `validate` attribute\n   * @param {string | null} value The `validate` attribute\n   */\n  set validate(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE, value);\n      if (this.textInput)\n        this.textInput.validate = value;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n      if (this.textInput)\n        this.textInput.validate = null;\n    }\n  }\n  get validate() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATE);\n  }\n  /**\n   * Sets which events to fire validation on\n   * @param {string} value The `validation-events` attribute\n   */\n  set validationEvents(value) {\n    if (value) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS, value);\n      if (this.textInput)\n        this.textInput.validationEvents = value;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n      if (this.textInput)\n        this.textInput.validationEvents = this.validationEventsDefault;\n    }\n  }\n  get validationEvents() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALIDATION_EVENTS);\n  }\n  /**\n   * Set the `value` for text input and file input\n   * @param {string} val the value property\n   */\n  set value(val) {\n    if (val) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE, val);\n      if (this.textInput)\n        this.textInput.value = val;\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n      if (this.fileInput)\n        this.fileInput.value = \"\";\n      if (this.textInput)\n        this.textInput.value = \"\";\n    }\n    if (this.files)\n      this.files = this.fileInput?.files;\n  }\n  get value() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.VALUE);\n  }\n};\nIdsUpload = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-upload\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_upload_scss__WEBPACK_IMPORTED_MODULE_17__[\"default\"])\n], IdsUpload);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-upload/ids-upload.ts\n");

/***/ }),

/***/ "./src/components/ids-upload/ids-upload.scss":
/*!***************************************************!*\
  !*** ./src/components/ids-upload/ids-upload.scss ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.ids-upload {\n  position: relative;\n}\n.ids-upload .ids-upload-filetype {\n  font-size: 24px;\n  opacity: 0;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: -webkit-fill-available;\n  z-index: -1;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9pZHMtdXBsb2FkL2lkcy11cGxvYWQuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFJQTtBQ0ZBO0VBQ0U7O0FBRUE7RUFDRTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvcmUvaWRzLWJhc2Uuc2Nzcz8xYmYyIiwid2VicGFjazovL2lkcy1lbnRlcnByaXNlLXdjLy4vc3JjL2NvbXBvbmVudHMvaWRzLXVwbG9hZC9pZHMtdXBsb2FkLnNjc3M/ZjgyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTYXNzIHNjc3Mgc3R5bGVzLiBLZWVwIEJhc2UgdmVyeSBzbWFsbCAqL1xuQGltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL2lkcy1pZGVudGl0eS9kaXN0L3RoZW1lLW5ldy90b2tlbnMvd2ViL3RoZW1lLW5ldy1taXhpbnMnO1xuQGltcG9ydCAnLi4vbWl4aW5zL3Nhc3MvaWRzLWdlbmVyYWwtbWl4aW5zJztcblxuLyogR2xvYmFsIHZhcmlhYmxlcyAobWlnaHQgd2FudCB0aGVzZSB0byBiZWNvbWUgdG9rZW5zKSAqL1xuJGJyZWFrcG9pbnQteHhsOiAxNDQwcHg7XG4kYnJlYWtwb2ludC14bDogMTI4MHB4O1xuJGJyZWFrcG9pbnQtbGc6IDEwMjRweDtcbiRicmVha3BvaW50LW1kOiA4NDBweDtcbiRicmVha3BvaW50LXNtOiA2MDBweDtcbiRicmVha3BvaW50LXhzOiAzNjBweDtcblxuJHRyYW5zaXRpb24tbGVuZ3RoOiAyMDBtcztcbiR0cmFuc2l0aW9uLWVhc2U6IGN1YmljLWJlemllcigwLjQsIDAsIDAuNiwgMSk7XG5cbi8vIEZpZWxkIFNpemVzXG4kaW5wdXQtc2l6ZS14czogNzVweDtcbiRpbnB1dC1zaXplLXNtOiAxNTBweDtcbiRpbnB1dC1zaXplLW1tOiAyMjVweDtcbiRpbnB1dC1zaXplLW1kOiAzMDBweDtcbiRpbnB1dC1zaXplLWxnOiA0MDBweDtcbiRpbnB1dC1zaXplLWZ1bGw6IDEwMCU7XG5cbi8vIEZpZWxkIEhlaWdodHNcbiRpbnB1dC1maWVsZC1oZWlnaHQteHM6IDI4cHg7XG4kaW5wdXQtZmllbGQtaGVpZ2h0LXNtOiAzMHB4O1xuJGlucHV0LWZpZWxkLWhlaWdodC1tZDogMzhweDtcbiRpbnB1dC1maWVsZC1oZWlnaHQtbGc6IDQ4cHg7XG5cbi8vIFNvbWV0aW1lcyB3ZSBuZWVkIHRvIFwiZmFkZVwiIHdoaXRlIGludG8gdHJhbnNwYXJlbmN5LCBzbyB3ZSBuZWVkIGFcbi8vIGNvbXBsZXRlbHktdHJhbnNwYXJlbnQgXCJ3aGl0ZVwiIGNvbG9yIHRvIHVzZSBhcyBvbmUgZW5kIG9mIGEgZ3JhZGllbnQuXG4kdHJhbnNwYXJlbnQtd2hpdGU6IHJnYmEoMjU1IDI1NSAyNTUgLyAwKTtcbiIsIkBpbXBvcnQgJy4uLy4uL2NvcmUvaWRzLWJhc2UnO1xuXG4uaWRzLXVwbG9hZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAuaWRzLXVwbG9hZC1maWxldHlwZSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB3aWR0aDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsgLy8gc3R5bGVsaW50LWRpc2FibGUtbGluZVxuICAgIHotaW5kZXg6IC0xO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ids-upload/ids-upload.scss\n");

/***/ })

}]);