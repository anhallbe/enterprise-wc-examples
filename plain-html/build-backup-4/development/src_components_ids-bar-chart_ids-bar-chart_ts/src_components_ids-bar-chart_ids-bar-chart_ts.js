"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkids_enterprise_wc"] = self["webpackChunkids_enterprise_wc"] || []).push([["src_components_ids-bar-chart_ids-bar-chart_ts"],{

/***/ "./src/components/ids-bar-chart/ids-bar-chart.ts":
/*!*******************************************************!*\
  !*** ./src/components/ids-bar-chart/ids-bar-chart.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdsBarChart)\n/* harmony export */ });\n/* harmony import */ var _core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/ids-decorators */ \"./src/core/ids-decorators.ts\");\n/* harmony import */ var _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/ids-attributes */ \"./src/core/ids-attributes.ts\");\n/* harmony import */ var _utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/ids-string-utils/ids-string-utils */ \"./src/utils/ids-string-utils/ids-string-utils.ts\");\n/* harmony import */ var _ids_axis_chart_ids_axis_chart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ids-axis-chart/ids-axis-chart */ \"./src/components/ids-axis-chart/ids-axis-chart.ts\");\n/* harmony import */ var _ids_bar_chart_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ids-bar-chart.scss */ \"./src/components/ids-bar-chart/ids-bar-chart.scss\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\n\n\n\n\n\nlet IdsBarChart = class extends _ids_axis_chart_ids_axis_chart__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n  constructor() {\n    super();\n    this.DEFAULT_SELECTABLE = false;\n  }\n  /**\n   * Return the attributes we handle as getters/setters\n   * @returns {Array} The attributes in an array\n   */\n  static get attributes() {\n    return [\n      ...super.attributes,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.BAR_PERCENTAGE,\n      _core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CATEGORY_PERCENTAGE\n    ];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n  }\n  /**\n   * Callback for after connected.\n   * @returns {void}\n   */\n  afterConnectedCallback() {\n    this.#adjustVerticalLines();\n    this.#preSelected();\n    this.attachTooltipEvents();\n  }\n  /**\n   * Callback for after calculate.\n   * @returns {void}\n   */\n  afterCalculateCallback() {\n    this.#setIsGrouped();\n  }\n  /**\n   * Return the chart data for the internal svg\n   * @private\n   * @returns {object} The markers and areas and lines\n   */\n  chartTemplate() {\n    const ariaLabel = `${!this.stacked ? this.data[0]?.name : \"\"}`;\n    return `<g class=\"bars\" role=\"list\" aria-label=\"${ariaLabel}\">\n      ${this.#bars()}\n    </g>`;\n  }\n  /**\n   * Set initially selected\n   * @private\n   * @returns {void}\n   */\n  #preSelected() {\n    if (!this.initialized || !this.selectable || !this.data?.length || !this.selectionElements?.length)\n      return;\n    const isValid = (n) => typeof n === \"number\" && n > -1;\n    const removeSelectedInData = () => {\n      this.data.forEach((g) => {\n        delete g.selected;\n        g.data?.forEach((n) => {\n          delete n?.selected;\n        });\n      });\n    };\n    const gIndex = this.data.findIndex((n) => n.selected);\n    if (isValid(gIndex)) {\n      removeSelectedInData();\n      this.data[gIndex].data?.forEach((n) => {\n        n.selected = true;\n      });\n      this.selectionElements.forEach((el) => {\n        if (el.getAttribute(\"group-index\") === `${gIndex}`)\n          el.setAttribute(\"selected\", \"\");\n        else\n          el.classList.add(\"not-selected\");\n      });\n      return;\n    }\n    let index;\n    for (let i = 0, l = this.data.length; i < l; i++) {\n      index = this.data[i].data?.findIndex((n) => n.selected);\n      if (isValid(index))\n        break;\n    }\n    if (isValid(index)) {\n      removeSelectedInData();\n      this.data.forEach((g) => {\n        const d = g?.data?.[index];\n        if (d)\n          d.selected = true;\n      });\n      this.selectionElements.forEach((el) => {\n        if (el.getAttribute(\"index\") === `${index}`)\n          el.setAttribute(\"selected\", \"\");\n        else\n          el.classList.add(\"not-selected\");\n      });\n    }\n  }\n  /**\n   * Get currently selected\n   * @returns {IdsBarChartSelected} selected.\n   */\n  getSelected() {\n    const selected = this.selectionElements.filter((el) => el.hasAttribute(\"selected\"));\n    if (!selected.length)\n      return {};\n    const groupIndex = selected[0].getAttribute(\"group-index\");\n    const isGroup = !selected.some((el) => el.getAttribute(\"group-index\") !== groupIndex);\n    if (isGroup) {\n      const data2 = this.data[groupIndex];\n      return { bars: selected, data: data2, groupIndex };\n    }\n    const data = [];\n    const indexes = selected.map((el) => {\n      const g = el.getAttribute(\"group-index\");\n      const i = el.getAttribute(\"index\");\n      const d = this.data[g].data[i];\n      if (d)\n        data.push(d);\n      return { group: g, index: i };\n    });\n    return { bars: selected, data, indexes };\n  }\n  /**\n   * Set selected by give indexes\n   * @param {IdsBarChartSelectedBy} opt The in comeing options\n   * @returns {void}\n   */\n  setSelected(opt) {\n    if (!this.initialized || !this.selectable || !this.data?.length || !this.selectionElements?.length)\n      return;\n    const gIndex = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(opt.groupIndex);\n    const index = (0,_utils_ids_string_utils_ids_string_utils__WEBPACK_IMPORTED_MODULE_2__.stringToNumber)(opt.index);\n    if (Number.isNaN(gIndex))\n      return;\n    if (Number.isNaN(index))\n      this.setSelection(gIndex, true);\n    else {\n      const idx = this.selectionElements.findIndex(\n        (el) => el.getAttribute(\"group-index\") === `${gIndex}` && el.getAttribute(\"index\") === `${index}`\n      );\n      if (typeof idx === \"number\" && idx > -1)\n        this.setSelection(idx);\n    }\n  }\n  /**\n   * Set the selection for given index\n   * @private\n   * @param {number|string} index The index value\n   * @param {boolean} isLegendClick True if legend clicked\n   * @returns {boolean} False, if veto.\n   */\n  setSelection(index, isLegendClick) {\n    if (Number.isNaN(index) || !this.selectionElements?.[0])\n      return false;\n    const extract = (cb) => this.selectionElements.filter((a) => cb(a));\n    const bars = { selected: extract((el) => el.hasAttribute(\"selected\")) };\n    if (isLegendClick) {\n      bars.target = extract((el) => el.getAttribute(\"group-index\") === `${index}`);\n      bars.inverse = extract((el) => el.getAttribute(\"group-index\") !== `${index}`);\n    } else {\n      const idx = this.selectionElements?.[index]?.getAttribute(\"index\");\n      bars.target = extract((el) => el.getAttribute(\"index\") === `${idx}`);\n      bars.inverse = extract((el) => el.getAttribute(\"index\") !== `${idx}`);\n    }\n    let isGroup = false;\n    const args = (list) => {\n      const groupIndex = list[0].getAttribute(\"group-index\");\n      isGroup = !list.some((el) => el.getAttribute(\"group-index\") !== groupIndex);\n      if (isGroup) {\n        const data2 = this.data[groupIndex];\n        return { bars: list, data: data2, groupIndex };\n      }\n      const data = [];\n      const indexes = list.map((el) => {\n        const g = el.getAttribute(\"group-index\");\n        const i = el.getAttribute(\"index\");\n        const d = this.data[g].data[i];\n        if (d)\n          data.push(d);\n        return { group: g, index: i };\n      });\n      return { bars: list, data, indexes };\n    };\n    const deselect = () => {\n      const argsSelected = args(bars.selected);\n      if (!this.triggerVetoableEvent(\"beforedeselected\", argsSelected)) {\n        return false;\n      }\n      const unmarkSelected = (n) => {\n        delete n.selected;\n      };\n      if (isGroup)\n        unmarkSelected(argsSelected.data);\n      else\n        argsSelected.data.forEach((n) => unmarkSelected(n));\n      this.selectionElements.forEach((el) => el.classList.remove(\"not-selected\"));\n      bars.selected.forEach((el) => el.removeAttribute(\"selected\"));\n      this.triggerEvent(\"deselected\", this, { bubbles: true, detail: { elem: this, ...argsSelected } });\n      return true;\n    };\n    if (bars.selected.length) {\n      const targetSelected = !bars.target.some((el) => !el.hasAttribute(\"selected\"));\n      if (targetSelected)\n        return deselect();\n      if (!deselect())\n        return false;\n    }\n    const argsTarget = args(bars.target);\n    if (!this.triggerVetoableEvent(\"beforeselected\", argsTarget)) {\n      return false;\n    }\n    const markSelected = (n) => {\n      n.selected = true;\n    };\n    if (isGroup)\n      markSelected(argsTarget.data);\n    else\n      argsTarget.data.forEach((n) => markSelected(n));\n    bars.target.forEach((el) => el.setAttribute(\"selected\", \"\"));\n    bars.inverse.forEach((el) => el.classList.add(\"not-selected\"));\n    this.triggerEvent(\"selected\", this, { bubbles: true, detail: { elem: this, ...argsTarget } });\n    return true;\n  }\n  /**\n   * Return chart elements that get selection\n   * @returns {Array<SVGElement>} The elements\n   */\n  get selectionElements() {\n    if (!this.selectable)\n      return [];\n    return [...this.container?.querySelectorAll(\"rect.bar\") ?? []];\n  }\n  /**\n   * Return the elements that get tooltip events\n   * @returns {Array<string>} The elements\n   */\n  tooltipElements() {\n    return [...this.container?.querySelectorAll(\"rect.bar\") ?? []];\n  }\n  /**\n   * Adjust the lines to display category sections\n   * @private\n   */\n  #adjustVerticalLines() {\n    if (this.horizontal)\n      return;\n    const lineSection = this.shadowRoot?.querySelector(\".vertical-lines\");\n    if (lineSection) {\n      const lines = lineSection.querySelectorAll(\"line\");\n      lines.forEach((line2, index) => {\n        if (index === 0) {\n          return;\n        }\n        line2.setAttribute(\"x1\", String(this.sectionWidths.at(index)?.left));\n        line2.setAttribute(\"x2\", String(this.sectionWidths.at(index)?.left));\n      });\n      const left = this.sectionWidths.at(-1)?.left;\n      const line = `<line x1=\"${left}\" x2=\"${left}\" y1=\"${lines[0].getAttribute(\"y1\")}\" y2=\"${lines[0].getAttribute(\"y2\")}\"/>`;\n      lineSection.insertAdjacentHTML(\"beforeend\", line);\n    }\n  }\n  /**\n   * Generate the svg markup for the area paths\n   * @returns {string} The area markup\n   * @private\n   */\n  #bars() {\n    if (this.horizontal)\n      return this.#horizontalBars();\n    let barHTML = \"\";\n    const runningHeight = [];\n    const groupCount = this.groupCount;\n    const isGrouped = this.isGrouped;\n    const sectionWidth = this.sectionWidth;\n    const categoryWidth = this.categoryPercentage * sectionWidth;\n    const barGap = 1;\n    let barWidth = isGrouped ? (categoryWidth - groupCount * barGap) / groupCount : categoryWidth;\n    barWidth *= this.barPercentage;\n    this.markerData.points?.forEach((pointGroup, groupIndex) => {\n      pointGroup.forEach((point, index) => {\n        let left;\n        if (isGrouped) {\n          left = this.sectionWidths[index].left + (sectionWidth - categoryWidth) / 2 + (categoryWidth - barWidth * groupCount) / 2;\n          left += barWidth * groupIndex + groupIndex * barGap;\n        } else {\n          left = this.sectionWidths[index].left + (sectionWidth - categoryWidth) / 2 + (categoryWidth - barWidth) / 2;\n        }\n        const bottom = this.markerData.gridBottom;\n        const height = bottom - point.top;\n        const pattern = this.data[groupIndex]?.pattern ? ` fill=\"url(#${this.data[groupIndex]?.pattern})\"` : \"\";\n        const label = this.data[0]?.data[index]?.name;\n        let top = point.top;\n        if (this.stacked) {\n          top = groupIndex > 0 ? top - runningHeight[index] : top;\n          runningHeight[index] = (runningHeight[index] || 0) + height;\n        }\n        barHTML += `<g role=\"listitem\">\n          <text class=\"audible\" x=\"${left}\" y=\"${this.markerData.gridBottom}\">${label} ${point.value}</text>\n          <rect class=\"bar color-${groupIndex + 1}\" aria-hidden=\"true\" group-index=\"${groupIndex}\" index=\"${index}\" width=\"${barWidth}\" height=\"${height}\" x=\"${left}\" y=\"${top}\"${pattern}>\n            <animate attributeName=\"height\" from=\"0\" to=\"${height}\" ${this.animated ? this.cubicBezier : this.cubicBezier.replace(\"0.8s\", \"0.01s\")}></animate>\n            <animate attributeName=\"y\" from=\"${bottom}\" to=\"${top}\" ${this.animated ? this.cubicBezier : this.cubicBezier.replace(\"0.8s\", \"0.01s\")}></animate>\n          </rect></g>`;\n      });\n    });\n    return barHTML;\n  }\n  /**\n   * Generate the svg markup for the horizontal bars.\n   * @private\n   * @returns {string} The markup\n   */\n  #horizontalBars() {\n    let barHTML = \"\";\n    const runningWidth = [];\n    const groupCount = this.groupCount;\n    const isGrouped = this.isGrouped;\n    const sectionHeight = this.sectionHeight;\n    const categoryHeight = this.categoryPercentage * sectionHeight;\n    const barGap = 1;\n    let barHeight = isGrouped ? (categoryHeight - groupCount * barGap) / groupCount : categoryHeight;\n    barHeight *= this.barPercentage;\n    this.markerData.points?.forEach((pointGroup, groupIndex) => {\n      pointGroup.forEach((point, index) => {\n        let top;\n        if (isGrouped) {\n          top = this.sectionHeights[index].top + (sectionHeight - categoryHeight) / 2 + (categoryHeight - barHeight * groupCount) / 2;\n          top += barHeight * groupIndex + groupIndex * barGap;\n        } else {\n          top = this.sectionHeights[index].top + (sectionHeight - categoryHeight) / 2 + (categoryHeight - barHeight) / 2;\n        }\n        let x = this.markerData.gridLeft - this.margins.leftInner - this.margins.rightInner;\n        const startEdge = x;\n        const right = this.markerData.gridRight;\n        const width = right - point.left;\n        const pattern = this.data[groupIndex]?.pattern ? ` fill=\"url(#${this.data[groupIndex]?.pattern})\"` : \"\";\n        const label = this.data[0]?.data[index]?.name;\n        if (this.stacked) {\n          x = groupIndex > 0 ? runningWidth[index] : x;\n          runningWidth[index] = (runningWidth[index] || x) + width;\n        }\n        barHTML += `<g role=\"listitem\">\n          <text class=\"audible\" x=\"${x}\" y=\"${this.markerData.gridBottom}\">${label} ${point.value}</text>\n          <rect class=\"bar color-${groupIndex + 1}\" aria-hidden=\"true\" group-index=\"${groupIndex}\" index=\"${index}\" width=\"${width}\" height=\"${barHeight}\" x=\"${x}\" y=\"${top}\"${pattern}>\n            <animate attributeName=\"x\" from=\"${startEdge}\" to=\"${x}\" ${this.animated ? this.cubicBezier : this.cubicBezier.replace(\"0.8s\", \"0.01s\")}></animate>\n            <animate attributeName=\"width\" from=\"0\" to=\"${width}\" ${this.animated ? this.cubicBezier : this.cubicBezier.replace(\"0.8s\", \"0.01s\")}></animate>\n          </rect></g>`;\n      });\n    });\n    return barHTML;\n  }\n  /**\n   * Number of groups count\n   * @returns {number} count of groups\n   */\n  get groupCount() {\n    return this.markerData?.groupCount || 1;\n  }\n  /**\n   * Set if chart type as grouped\n   * @returns {void}\n   */\n  #setIsGrouped() {\n    this.isGrouped = !this.stacked && this.groupCount > 1;\n  }\n  /**\n   * Check if given value is between zero to one.\n   * @param {number} value The number value to check (0-1)\n   * @returns {boolean} true, if value is between zero to one\n   */\n  #isBetweenZeroToOne(value) {\n    return !Number.isNaN(value) && value > 0 && value <= 1;\n  }\n  /**\n   * Adjust the default for the x labels\n   * @returns {number} value The value to use (in pixels)\n   */\n  get alignXLabels() {\n    return this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.ALIGN_X_LABELS) || \"middle\";\n  }\n  /**\n   * Percent (0-1) of the available width each bar should be within the category width.\n   * 1.0 will take the whole category width and put the bars right next to each other.\n   * if `isGrouped` this value, will use as whole group percentage.\n   * @param {number} value Percent (0-1)\n   */\n  set barPercentage(value) {\n    if (this.#isBetweenZeroToOne(Number(value))) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.BAR_PERCENTAGE, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.BAR_PERCENTAGE);\n    }\n    this.redraw();\n  }\n  get barPercentage() {\n    const value = Number(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.BAR_PERCENTAGE));\n    if (this.#isBetweenZeroToOne(value))\n      return value;\n    return this.isGrouped ? 0.7 : 0.5;\n  }\n  /**\n   * Percent (0-1) of the available width each category (group) section.\n   * @param {number} value Percent (0-1)\n   */\n  set categoryPercentage(value) {\n    if (this.#isBetweenZeroToOne(Number(value))) {\n      this.setAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CATEGORY_PERCENTAGE, String(value));\n    } else {\n      this.removeAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CATEGORY_PERCENTAGE);\n    }\n    this.redraw();\n  }\n  get categoryPercentage() {\n    const value = Number(this.getAttribute(_core_ids_attributes__WEBPACK_IMPORTED_MODULE_1__.attributes.CATEGORY_PERCENTAGE));\n    if (this.#isBetweenZeroToOne(value))\n      return value;\n    return 0.9;\n  }\n};\nIdsBarChart = __decorateClass([\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.customElement)(\"ids-bar-chart\"),\n  (0,_core_ids_decorators__WEBPACK_IMPORTED_MODULE_0__.scss)(_ids_bar_chart_scss__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n], IdsBarChart);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-bar-chart/ids-bar-chart.ts\n");

/***/ }),

/***/ "./src/components/ids-bar-chart/ids-bar-chart.scss":
/*!*********************************************************!*\
  !*** ./src/components/ids-bar-chart/ids-bar-chart.scss ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n        const styles = `/* Ids Line Chart Component */ /* Ids Line Chart Component */ /* Sass scss styles. Keep Base very small */\n/* Global variables (might want these to become tokens) */\n.chart-legend {\n  display: flex;\n  padding-inline-start: 8px;\n  flex-direction: row;\n  margin-top: -4px;\n  justify-content: flex-start;\n  width: inherit;\n}\n.chart-legend a {\n  display: flex;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n  font-size: 14px;\n  color: var(--ids-color-palette-slate-60);\n  padding-inline-start: 8px;\n  padding-inline-end: 8px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  align-items: center;\n  border: 1px solid transparent;\n  text-decoration: none;\n}\n.chart-legend a:focus {\n  outline: 0;\n  border-color: var(--ids-color-palette-azure-60);\n  box-shadow: 0 0 4px 3px rgba(54, 138, 192, 0.3);\n}\n.chart-legend .swatch {\n  display: inline-flex;\n  margin-inline-end: 8px;\n  height: 12px;\n  width: 12px;\n}\n.chart-legend .swatch.color-1 {\n  background-color: var(--ids-chart-color-1);\n}\n.chart-legend .swatch.color-2 {\n  background-color: var(--ids-chart-color-2);\n}\n.chart-legend .swatch.color-3 {\n  background-color: var(--ids-chart-color-3);\n}\n.chart-legend .swatch.color-4 {\n  background-color: var(--ids-chart-color-4);\n}\n.chart-legend .swatch.color-5 {\n  background-color: var(--ids-chart-color-5);\n}\n.chart-legend .swatch.color-6 {\n  background-color: var(--ids-chart-color-6);\n}\n.chart-legend .swatch.color-7 {\n  background-color: var(--ids-chart-color-7);\n}\n.chart-legend .swatch.color-8 {\n  background-color: var(--ids-chart-color-8);\n}\n.chart-legend .swatch.color-9 {\n  background-color: var(--ids-chart-color-9);\n}\n.chart-legend .swatch.color-10 {\n  background-color: var(--ids-chart-color-10);\n}\n.chart-legend .swatch.color-11 {\n  background-color: var(--ids-chart-color-11);\n}\n.chart-legend .swatch.color-12 {\n  background-color: var(--ids-chart-color-12);\n}\n.chart-legend .swatch.color-13 {\n  background-color: var(--ids-chart-color-13);\n}\n.chart-legend .swatch.color-14 {\n  background-color: var(--ids-chart-color-14);\n}\n.chart-legend .swatch.color-15 {\n  background-color: var(--ids-chart-color-15);\n}\n.chart-legend .swatch.color-16 {\n  background-color: var(--ids-chart-color-16);\n}\n.chart-legend .swatch.color-17 {\n  background-color: var(--ids-chart-color-17);\n}\n.chart-legend .swatch.color-18 {\n  background-color: var(--ids-chart-color-18);\n}\n.chart-legend .swatch.color-19 {\n  background-color: var(--ids-chart-color-19);\n}\n.chart-legend .swatch.color-20 {\n  background-color: var(--ids-chart-color-20);\n}\n.chart-legend .swatch.color-21 {\n  background-color: var(--ids-chart-color-21);\n}\n\n.ids-chart-container {\n  display: flex;\n  flex-direction: column;\n}\n.ids-chart-container.legend-top {\n  margin-bottom: 8px;\n  flex-direction: column-reverse;\n}\n.ids-chart-container.legend-top .chart-legend {\n  margin-inline-start: 0;\n  justify-content: end;\n}\n.ids-chart-container.legend-right, .ids-chart-container.legend-left {\n  flex-direction: row;\n}\n.ids-chart-container.legend-right .chart-legend, .ids-chart-container.legend-left .chart-legend {\n  margin-inline-start: 0;\n  flex-direction: column;\n  justify-content: center;\n}\n.ids-chart-container.legend-right .chart-legend a, .ids-chart-container.legend-left .chart-legend a {\n  margin-bottom: 8px;\n  width: max-content;\n}\n.ids-chart-container.legend-left {\n  flex-direction: row-reverse;\n}\n\n:host([mode=dark]) .chart-legend a {\n  color: var(--ids-color-palette-slate-10);\n}\n\n:root {\n  --ids-chart-color-1: var(--ids-color-palette-azure-80);\n  --ids-chart-color-2: var(--ids-color-palette-turquoise-40);\n  --ids-chart-color-3: var(--ids-color-palette-amethyst-60);\n  --ids-chart-color-4: var(--ids-color-palette-slate-40);\n  --ids-chart-color-5: var(--ids-color-palette-slate-40);\n  --ids-chart-color-6: var(--ids-color-palette-amber-30);\n  --ids-chart-color-7: var(--ids-color-palette-amber-70);\n  --ids-chart-color-8: var(--ids-color-palette-emerald-80);\n  --ids-chart-color-9: var(--ids-color-palette-azure-30);\n  --ids-chart-color-10: var(--ids-color-palette-ruby-80);\n  --ids-chart-color-11: var(--ids-color-palette-slate-20);\n  --ids-chart-color-12: var(--ids-color-palette-turquoise-60);\n  --ids-chart-color-13: var(--ids-color-palette-amber-90);\n  --ids-chart-color-14: var(--ids-color-palette-amethyst-30);\n  --ids-chart-color-15: var(--ids-color-palette-azure-60);\n  --ids-chart-color-16: var(--ids-color-palette-ruby-30);\n  --ids-chart-color-17: var(--ids-color-palette-amethyst-80);\n  --ids-chart-color-18: var(--ids-color-palette-emerald-30);\n  --ids-chart-color-19: var(--ids-color-palette-turquoise-80);\n  --ids-chart-color-20: var(--ids-color-palette-slate-60);\n  --ids-chart-color-21: var(--ids-color-palette-ruby-40);\n}\n\n.ids-axis-chart {\n  border-color: var(--ids-color-palette-slate-10);\n  display: flex;\n}\n.ids-axis-chart.hidden {\n  display: none;\n}\n.ids-axis-chart .grid {\n  shape-rendering: crispedges;\n  stroke: var(--ids-color-palette-slate-20);\n  stroke-width: 1;\n  stroke-dasharray: 2 2;\n}\n.ids-axis-chart .grid.horizontal-lines line:last-child {\n  stroke: var(--ids-color-palette-slate-70);\n  stroke-dasharray: none;\n}\n.ids-axis-chart .grid.hidden {\n  stroke-width: 0;\n}\n.ids-axis-chart.horizontal .grid.horizontal-lines line:last-child {\n  stroke: inherit;\n  stroke-dasharray: inherit;\n}\n.ids-axis-chart.horizontal .grid.vertical-lines line:first-child {\n  stroke: var(--ids-color-palette-slate-70);\n  stroke-dasharray: none;\n}\n.ids-axis-chart g[tabindex=\"0\"]:focus {\n  outline: 2px dashed var(--ids-color-palette-azure-60);\n}\n.ids-axis-chart .labels {\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: source sans pro, helvetica, arial, sans-serif;\n}\n.ids-axis-chart .labels text {\n  fill: var(--ids-color-palette-slate-60);\n}\n.ids-axis-chart .labels.x-labels {\n  text-anchor: middle;\n}\n.ids-axis-chart .labels.y-labels {\n  text-anchor: end;\n}\n.ids-axis-chart .labels.axis-labels text {\n  font-weight: 700;\n  text-anchor: middle;\n}\n.ids-axis-chart .audible {\n  opacity: 0;\n}\n\n.ids-chart-container.selectable .audible {\n  font-size: 1px;\n}\n\nids-empty-message:not([hidden]),\n::slotted(ids-empty-message:not([hidden])) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\nids-empty-message:not([hidden])[hidden],\n::slotted(ids-empty-message:not([hidden]))[hidden] {\n  display: none;\n}\n\n.tooltip-center {\n  margin-top: 4px;\n  margin-bottom: 4px;\n  text-align: center;\n}\n\n.tooltip.chart-legend {\n  margin-bottom: 8px;\n  flex-direction: column;\n  padding: 0;\n}\n.tooltip.chart-legend .swatch {\n  margin-inline-start: 4px;\n  margin-inline-end: 4px;\n  padding: 0;\n}\n\n.tooltip-row span {\n  padding-inline-start: 2px;\n  padding-inline-end: 4px;\n}\n\n.ids-axis-chart[mode=dark] .grid,\n.ids-chart-container[mode=dark] .grid {\n  stroke: var(--ids-color-palette-slate-40);\n}\n.ids-axis-chart[mode=dark] .grid.horizontal-lines line:last-child,\n.ids-chart-container[mode=dark] .grid.horizontal-lines line:last-child {\n  stroke: var(--ids-color-palette-slate-30);\n}\n.ids-axis-chart[mode=dark] .labels text,\n.ids-chart-container[mode=dark] .labels text {\n  fill: var(--ids-color-palette-slate-10);\n}\n\n.ids-axis-chart[mode=contrast] .grid,\n.ids-chart-container[mode=contrast] .grid {\n  stroke: var(--ids-color-palette-slate-80);\n}\n.ids-axis-chart[mode=contrast] .grid.horizontal-lines line:last-child,\n.ids-chart-container[mode=contrast] .grid.horizontal-lines line:last-child {\n  stroke: var(--ids-color-palette-slate-100);\n}\n.ids-axis-chart[mode=contrast] .labels text,\n.ids-chart-container[mode=contrast] .labels text {\n  fill: var(--ids-color-palette-slate-100);\n}\n\n:host([dir=rtl]) .ids-axis-chart {\n  transform: scale(-1, 1);\n}\n:host([dir=rtl]) .ids-axis-chart:not(.horizontal) .labels.y-labels text {\n  transform: scale(-1, 1) translate(var(--ids-axis-chart-ylabels-x, -45px), 0);\n}\n:host([dir=rtl]) .labels.x-labels {\n  transform: scale(-1, 1);\n  transform-origin: unset;\n}\n\n.ids-axis-chart .bars .bar {\n  outline: none;\n}\n.ids-axis-chart .bars rect.color-1:not([fill]) {\n  fill: var(--ids-chart-color-1);\n}\n.ids-axis-chart .bars rect.color-2:not([fill]) {\n  fill: var(--ids-chart-color-2);\n}\n.ids-axis-chart .bars rect.color-3:not([fill]) {\n  fill: var(--ids-chart-color-3);\n}\n.ids-axis-chart .bars rect.color-4:not([fill]) {\n  fill: var(--ids-chart-color-4);\n}\n.ids-axis-chart .bars rect.color-5:not([fill]) {\n  fill: var(--ids-chart-color-5);\n}\n.ids-axis-chart .bars rect.color-6:not([fill]) {\n  fill: var(--ids-chart-color-6);\n}\n.ids-axis-chart .bars rect.color-7:not([fill]) {\n  fill: var(--ids-chart-color-7);\n}\n.ids-axis-chart .bars rect.color-8:not([fill]) {\n  fill: var(--ids-chart-color-8);\n}\n.ids-axis-chart .bars rect.color-9:not([fill]) {\n  fill: var(--ids-chart-color-9);\n}\n.ids-axis-chart .bars rect.color-10:not([fill]) {\n  fill: var(--ids-chart-color-10);\n}\n.ids-axis-chart .bars rect.color-11:not([fill]) {\n  fill: var(--ids-chart-color-11);\n}\n.ids-axis-chart .bars rect.color-12:not([fill]) {\n  fill: var(--ids-chart-color-12);\n}\n.ids-axis-chart .bars rect.color-13:not([fill]) {\n  fill: var(--ids-chart-color-13);\n}\n.ids-axis-chart .bars rect.color-14:not([fill]) {\n  fill: var(--ids-chart-color-14);\n}\n.ids-axis-chart .bars rect.color-15:not([fill]) {\n  fill: var(--ids-chart-color-15);\n}\n.ids-axis-chart .bars rect.color-16:not([fill]) {\n  fill: var(--ids-chart-color-16);\n}\n.ids-axis-chart .bars rect.color-17:not([fill]) {\n  fill: var(--ids-chart-color-17);\n}\n.ids-axis-chart .bars rect.color-18:not([fill]) {\n  fill: var(--ids-chart-color-18);\n}\n.ids-axis-chart .bars rect.color-19:not([fill]) {\n  fill: var(--ids-chart-color-19);\n}\n.ids-axis-chart .bars rect.color-20:not([fill]) {\n  fill: var(--ids-chart-color-20);\n}\n.ids-axis-chart .bars rect.color-21:not([fill]) {\n  fill: var(--ids-chart-color-21);\n}\n\n.ids-chart-container.selectable .ids-axis-chart .bars .bar {\n  cursor: pointer;\n}\n.ids-chart-container.selectable .ids-axis-chart .bars .bar[selected] {\n  opacity: 1;\n}\n.ids-chart-container.selectable .ids-axis-chart .bars .bar.not-selected {\n  opacity: 0.5;\n}`;\n        /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (styles);\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/ids-bar-chart/ids-bar-chart.scss\n");

/***/ })

}]);